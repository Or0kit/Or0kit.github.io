{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"驱动开发\" category",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E9%87%8D%E8%BD%BD/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E9%87%8D%E8%BD%BD/",
            "title": "驱动开发-内核重载",
            "date_published": "2022-03-30T02:18:07.000Z",
            "content_html": "<h1 id=\"重载内核解决什么问题\"><a class=\"anchor\" href=\"#重载内核解决什么问题\">#</a> 重载内核解决什么问题？</h1>\n<p>内核中的很多函数被层层 HOOK，重载一份内核可以绕过这些 HOOK。</p>\n<h1 id=\"重载内核的步骤\"><a class=\"anchor\" href=\"#重载内核的步骤\">#</a> 重载内核的步骤</h1>\n<p>&lt;1&gt; 申请内存，按内存对齐展开</p>\n<p>&lt;2&gt; 根据重定位表修复全局变量</p>\n<p>&lt;3&gt; 修复 IAT 表</p>\n<p>这些都是 PE 的知识，这样内核文件在高 2G 内存中就又加载了一份。</p>\n<p>但如何让操作系统走我们新内核文件的函数呢？</p>\n<p>&lt;1&gt; 找到新加载的内核的系统服务表，并且填充</p>\n<p>&lt;2&gt; Hook KiFastCallEntry 让系统调用走我们的系统服务表。</p>\n<p>KiFastCallEntry 中有一行汇编指令是查找系统服务表。</p>\n<h1 id=\"重载内核的弊端\"><a class=\"anchor\" href=\"#重载内核的弊端\">#</a> 重载内核的弊端</h1>\n<p>&lt;1&gt; 改动太大，即使抹去 PE 指纹也无法完全隐形。</p>\n<p>&lt;2&gt; 最好的办法不是重载内核，而是需要什么函数自己来实现。</p>\n<h1 id=\"代码实现重载xp的内核\"><a class=\"anchor\" href=\"#代码实现重载xp的内核\">#</a> 代码实现重载 xp 的内核。</h1>\n<p>使用内核函数操作文件、内存。</p>\n<p>写的时候网上冲浪发现了一篇博客：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMucGVkaXkuY29tL3RocmVhZC0yNTM0MjUuaHRt\">https://bbs.pediy.com/thread-253425.htm</span>，这个博主说了一些关于重定位的事情：</p>\n<p><strong>关键难点是重定位，由于我们自己重载的新内核没有执行 DriverEntry, 数据都没有初始化，所以在重定位的时候凡是指向数据的地址都要重定位到老内核，是代码的地址就正常重定位到新内核。</strong></p>\n<p>重载后可能会不稳定，导致蓝屏。</p>\n<h2 id=\"第一步内核文件的全路径\"><a class=\"anchor\" href=\"#第一步内核文件的全路径\">#</a> 第一步：内核文件的全路径</h2>\n<p>遍历内核模块，找到内核文件。</p>\n<p><strong>这里我遇到了一个问题没有解决不了。</strong></p>\n<p>通过内核模块遍历获取内核文件的全路径，发现前面没根路径，于是就把根路径添加上了，一直调用  <code>ZwCreateFile</code>  失败。<br />\n先贴在这里了。</p>\n<p>信息如下:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>我是驱动，我运行了 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\\??\\C:\\WINDOWS\\system32\\ntkrnlpa.exe </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>打开文件失败</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>0 </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>C0000033 </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>0</pre></td></tr></table></figure><p>一直报  <code>C0000033</code>   <code>STATUS_OBJECT_NAME_INVALID</code>  错误，好像是路径有问题？</p>\n<p>于是我直接把路径写死了不这样获取了。</p>\n<h2 id=\"第二步-修复重定位表和iat\"><a class=\"anchor\" href=\"#第二步-修复重定位表和iat\">#</a> 第二步： 修复重定位表和 IAT</h2>\n<p>下面就要修复重定位表和 IAT 了。</p>\n<p>修复重定位表这里我也学着看雪的那个博主的判断一下要修复的地址是否在可执行的节中，如果不在则不管这个地址了，让其仍然去老内核中。</p>\n<p><strong>后来实验的时候发现这样判断不行，好多节都有可执行的属性，于是我就只修复.text 中的数据了。</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOLEAN <span class=\"token function\">AddressIsExecuteable</span><span class=\"token punctuation\">(</span>IN ULONG pAddress<span class=\"token punctuation\">,</span> IN PIMAGE_SECTION_HEADER pSectionHeader<span class=\"token punctuation\">,</span> IN ULONG ulSectionNum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tBOOLEAN bFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 循环判断数据在哪个节中</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> ulSectionNum<span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">// 节的起始和结束位置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tULONG Begin <span class=\"token operator\">=</span> pSectionHeader<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tULONG End <span class=\"token operator\">=</span> pSectionHeader<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress <span class=\"token operator\">+</span> pSectionHeader<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Misc<span class=\"token punctuation\">.</span>VirtualSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"pSectionHeader:[%X]\\t\\n\", pSectionHeader);</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"Begin:[%X]\\t\\n\", Begin);</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"End:[%X]\\t\\n\", End);</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"pSectionHeader[t].Characteristics:[%X]\\t\\n\", pSectionHeader[t].Characteristics);</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">//__asm int 3;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// 判断</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pAddress <span class=\"token operator\">>=</span> Begin <span class=\"token operator\">&amp;&amp;</span> pAddress <span class=\"token operator\">&lt;=</span> End<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token comment\">// 只修复 .text 节区</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>pSectionHeader<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> <span class=\"token string\">\".text\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//DbgPrint(\"pSectionHeader[t].Name:[%s]\\t\\n\", pSectionHeader[t].Name);</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//__asm int 3;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token comment\">// bFlag = ((pSectionHeader[t].Characteristics &amp; 0x20000020) == 0x20000020) ? TRUE : FALSE;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> bFlag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pAddress:[%X] not in the section \\t\\n\", pAddress);</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">return</span> bFlag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"修复重定位表\"><a class=\"anchor\" href=\"#修复重定位表\">#</a> 修复重定位表</h3>\n<blockquote>\n<p><strong>这里我碰到了一个坑，我在用  <code>LDR_DATA_TABLE_ENTRY</code>  结构体中的遍历内核文件时，也顺便把其中记录的内核加载基址，也获取了一下，我以为这个就是内核文件的 ImageBase，可是并不是，内核在启动的时候加载基址也是变化的。内核文件的 ImageBase 也是 0x400000。重定位时需要注意！</strong></p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">RepairRelocation</span><span class=\"token punctuation\">(</span>IN OUT PVOID pKernelImageBuffer<span class=\"token punctuation\">,</span> IN ULONG KernelBase<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_TYPE</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tUSHORT Offset <span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tUSHORT Type <span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>TypeOffset<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PTypeOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// PE 头 查找重定位表</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pKernelImageBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIMAGE_NT_HEADERS pNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pNtHeader <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>IMAGE_SIZEOF_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token function\">IMAGE_FIRST_SECTION</span><span class=\"token punctuation\">(</span>pNtHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tPIMAGE_BASE_RELOCATION pReloc <span class=\"token operator\">=</span> pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_BASERELOC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pDosHeader<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// ULONG Items = 0, Items1 = 0, Items2 = 0;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">//  遍历重定位表，并对目标代码进行重定位</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pReloc<span class=\"token operator\">-></span>SizeOfBlock <span class=\"token operator\">&amp;&amp;</span> pReloc<span class=\"token operator\">-></span>VirtualAddress<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token comment\">// 重定位项数目</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tULONG ulCount <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pReloc<span class=\"token operator\">-></span>SizeOfBlock <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token comment\">// 需要定位数据的起始 RVA</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tULONG ulRva <span class=\"token operator\">=</span> pReloc<span class=\"token operator\">-></span>VirtualAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token comment\">// 解析需要重定位的项数</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tPTypeOffset pRelocationArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PTypeOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pReloc <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> ulCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pRelocationArray<span class=\"token operator\">-></span>Type <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 需要重定位的数据 RVA = VirtualAddress + TypeOffset 低 12 位</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 获取要修改的地址的 RVA</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\tULONG RepairAddrOffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ulRva <span class=\"token operator\">+</span> pRelocationArray<span class=\"token operator\">-></span>Offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\tPULONG pRepairAddr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>RepairAddrOffset <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 判断要修复的地址是否在</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">AddressIsExecuteable</span><span class=\"token punctuation\">(</span>RepairAddrOffset<span class=\"token punctuation\">,</span> pSectionHeader<span class=\"token punctuation\">,</span> pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t\t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 修正需要重定位项的在新内核中的值</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t\t<span class=\"token operator\">*</span>pRepairAddr <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer <span class=\"token operator\">-</span> pOptionHeader<span class=\"token operator\">-></span>ImageBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//Items++;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//Items1++;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 不需要修复的值。 什么都不做就行。</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//DbgPrint(\"FixAddress to Old Kernel:[%X]\\t\\n\", *pRepairAddr);</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t\t\t<span class=\"token operator\">*</span>pRepairAddr <span class=\"token operator\">+=</span> KernelBase <span class=\"token operator\">-</span> pOptionHeader<span class=\"token operator\">-></span>ImageBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//Items++;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//Items2++;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\tpRelocationArray<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\tpReloc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_BASE_RELOCATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pReloc <span class=\"token operator\">+</span> pReloc<span class=\"token operator\">-></span>SizeOfBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"Items: [%X],Items1: [%X], Items2: [%X]\\t\\n\", Items, Items1, Items2);</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"修复iat\"><a class=\"anchor\" href=\"#修复iat\">#</a> 修复 IAT</h3>\n<p>在内核中获取模块基址，还是通过  <code>LDR_DATA_TABLE_ENTRY</code>  结构体遍历获取，这里我直接搬运了一位大佬的代码，设计的太好了。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">union</span> OD_OR_NAME</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tCHAR<span class=\"token operator\">*</span> Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tUSHORT Od<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span>EXP_FUN_NAME<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//API 导出模式</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">enum</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tNameFlag <span class=\"token operator\">=</span> <span class=\"token number\">0x1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tOrderFlag <span class=\"token operator\">=</span> <span class=\"token number\">0x2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span>EXP_FUN_MODE<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">GetFunAddrOfModule</span><span class=\"token punctuation\">(</span>IN PVOID pModule<span class=\"token punctuation\">,</span> IN EXP_FUN_NAME unFuntionName<span class=\"token punctuation\">,</span> IN EXP_FUN_MODE eMode<span class=\"token punctuation\">,</span> OUT PULONG FuncAddress<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">//__asm int 3;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// PE 查找导出表</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pModule<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pDosHeader:%X\\t\\n\", pDosHeader);</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPIMAGE_NT_HEADERS pNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pNtHeader:%X\\t\\n\", pNtHeader);</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pNtHeader <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pFileHeader:%X\\t\\n\", pFileHeader);</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>IMAGE_SIZEOF_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pOptionHeader:%X\\t\\n\", pOptionHeader);</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPIMAGE_DATA_DIRECTORY pDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DATA_DIRECTORY<span class=\"token punctuation\">)</span>pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pDirectory:%X\\t\\n\", pDirectory);</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPIMAGE_EXPORT_DIRECTORY pExportTabel <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_EXPORT_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule <span class=\"token operator\">+</span> pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_EXPORT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pExportTabel:%X\\t\\n\", pExportTabel);</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token comment\">//__asm int 3;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tPULONG dwNameTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>pExportTabel<span class=\"token operator\">-></span>AddressOfNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tPUSHORT wOrdinalsTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUSHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>pExportTabel<span class=\"token operator\">-></span>AddressOfNameOrdinals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tPULONG dwAddressTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>pExportTabel<span class=\"token operator\">-></span>AddressOfFunctions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>eMode <span class=\"token operator\">==</span> NameFlag<span class=\"token punctuation\">)</span><span class=\"token comment\">// 按名称导出</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportTabel<span class=\"token operator\">-></span>NumberOfNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\tCHAR<span class=\"token operator\">*</span> cImportName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CHAR<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule <span class=\"token operator\">+</span> dwNameTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>cImportName<span class=\"token punctuation\">,</span> unFuntionName<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token operator\">*</span>FuncAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule <span class=\"token operator\">+</span> dwAddressTable<span class=\"token punctuation\">[</span>wOrdinalsTable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token comment\">// 按序号导出</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token operator\">*</span>FuncAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pModule <span class=\"token operator\">+</span> dwAddressTable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>unFuntionName<span class=\"token punctuation\">.</span>Od<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>pExportTabel<span class=\"token operator\">-></span>Base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>FuncAddress <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">RepairIAT</span><span class=\"token punctuation\">(</span>IN PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> IN OUT PVOID pKernelImageBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// PE 头 定位大导入表  IAT 表</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pKernelImageBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPIMAGE_NT_HEADERS pNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER pOptionHeader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>pNtHeader<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPIMAGE_IMPORT_DESCRIPTOR pImportTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 遍历 INT 表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pImportTable<span class=\"token operator\">-></span>OriginalFirstThunk <span class=\"token operator\">||</span> pImportTable<span class=\"token operator\">-></span>FirstThunk<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\">// 在里面定义，变量的值每次都会重新设置为空</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">// 模块基址</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tPVOID pModuleBase <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">// 模块名字</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tCHAR szName<span class=\"token punctuation\">[</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tANSI_STRING asName <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tUNICODE_STRING usName <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token comment\">// 获取模块名，由模块名字获取模块基址</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tPCHAR MdName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PCHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pImportTable<span class=\"token operator\">-></span>Name <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>szName<span class=\"token punctuation\">,</span> MdName<span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>MdName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token function\">RtlInitAnsiString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>asName<span class=\"token punctuation\">,</span> szName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">RtlAnsiStringToUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>asName<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RtlAnsiStringToUnicodeString failed!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"usName:%ws\\t\\n\", usName.Buffer);</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token comment\">// 获取模块基址</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">GetModuleBase</span><span class=\"token punctuation\">(</span>pDriver<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>usName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pModuleBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token function\">RtlFreeUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GetModuleBase failed!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> pModuleBase<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token function\">RtlFreeUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ModuleBase = 0 !\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token comment\">// 修复 IAT 表</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\tPIMAGE_THUNK_DATA32 pThunkData <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_THUNK_DATA32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer <span class=\"token operator\">+</span> pImportTable<span class=\"token operator\">-></span>FirstThunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>pThunkData<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\tEXP_FUN_NAME emFunName <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\tULONG dwProcAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t<span class=\"token comment\">//__asm int 3;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t<span class=\"token comment\">// IMAGE_THUNK_DATA32 是一个 4 字节数据</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t<span class=\"token comment\">// 如果最高位是 1，那么除去最高位就是导出序号</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t<span class=\"token comment\">// 如果最高位是 0，那么这个值是 RVA 指向 IMAGE_IMPORT_BY_NAME</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>pThunkData<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t\temFunName<span class=\"token punctuation\">.</span>Od <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>pThunkData<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x7FFFFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">GetFunAddrOfModule</span><span class=\"token punctuation\">(</span>pModuleBase<span class=\"token punctuation\">,</span> emFunName<span class=\"token punctuation\">,</span> OrderFlag<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwProcAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">RtlFreeUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1 GetFunAddrOfModule failed !\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//DbgPrint(\"1 dwProcAddress:%X\\t\\n\", dwProcAddress);</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>pThunkData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> dwProcAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t\t\tPIMAGE_IMPORT_BY_NAME pIBN <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_IMPORT_BY_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>pThunkData<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 按名字导入</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t\temFunName<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> pIBN<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">GetFunAddrOfModule</span><span class=\"token punctuation\">(</span>pModuleBase<span class=\"token punctuation\">,</span> emFunName<span class=\"token punctuation\">,</span> NameFlag<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwProcAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">RtlFreeUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2 GetFunAddrOfModule failed !\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//DbgPrint(\"2 dwProcAddress:%X\\t\\n\", dwProcAddress);</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>pThunkData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> dwProcAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\tpThunkData<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\tpImportTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pImportTable <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"第三步让操作系统走我们新内核文件的函数\"><a class=\"anchor\" href=\"#第三步让操作系统走我们新内核文件的函数\">#</a> 第三步：让操作系统走我们新内核文件的函数</h2>\n<p>初始化新加载的内核的系统服务表</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PKSYSTEM_SERVICE_TABLE <span class=\"token function\">InitNewSSDT</span><span class=\"token punctuation\">(</span>IN PVOID pKernelImageBuffer<span class=\"token punctuation\">,</span> IN ULONG uKernelOldBase<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 新内核地址 - 老内核地址，得到相对偏移</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tULONG uNewKernelInc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer <span class=\"token operator\">-</span> uKernelOldBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"KeServiceDescriptorTable: [%X]\\r\\n\", KeServiceDescriptorTable);</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pKernelImageBuffer: [%X]\\r\\n\", pKernelImageBuffer);</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"uKernelOldBase: [%X]\\r\\n\", uKernelOldBase);</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"uNewKernelInc: [%X]\\r\\n\", uNewKernelInc);</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// __asm int 3;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 老内核的 ssdt 指针加上相对偏移，得到新内核的 ssdt 指针</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPKSYSTEM_SERVICE_TABLE pNewSSDT <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PKSYSTEM_SERVICE_TABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>KeServiceDescriptorTable <span class=\"token operator\">+</span> uNewKernelInc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">MmIsAddressValid</span><span class=\"token punctuation\">(</span>pNewSSDT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pNewSSDT is unaviable!\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 修正新的 SSDT 成员</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">// 函数地址表</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tpNewSSDT<span class=\"token operator\">-></span>ServiceTableBase <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>KeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTableBase<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> uKernelOldBase <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">// 依次遍历修改</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>ULONG uIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> uIndex <span class=\"token operator\">&lt;</span> KeServiceDescriptorTable<span class=\"token operator\">-></span>NumberOfServices<span class=\"token punctuation\">;</span> uIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token comment\">// 函数地址再加上相对加载地址，得到新的的 ssdt 函数地址</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tpNewSSDT<span class=\"token operator\">-></span>ServiceTableBase<span class=\"token punctuation\">[</span>uIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> uNewKernelInc<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">MmIsAddressValid</span><span class=\"token punctuation\">(</span>pNewSSDT<span class=\"token operator\">-></span>ServiceTableBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pNewSSDT->ServiceTableBase: %X\\r\\n\"</span><span class=\"token punctuation\">,</span> pNewSSDT<span class=\"token operator\">-></span>ServiceTableBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token comment\">// 函数数量</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tpNewSSDT<span class=\"token operator\">-></span>NumberOfServices <span class=\"token operator\">=</span> KeServiceDescriptorTable<span class=\"token operator\">-></span>NumberOfServices<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// 计算相对函数参数地址表的偏移</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tULONG uOffset2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>KeServiceDescriptorTable<span class=\"token operator\">-></span>ParamTableBase <span class=\"token operator\">-</span> uKernelOldBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token comment\">// 函数参数表</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tpNewSSDT<span class=\"token operator\">-></span>ParamTableBase <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pKernelImageBuffer <span class=\"token operator\">+</span> uOffset2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pNewSSDT->ServiceTableBase: %X\\r\\n\", pNewSSDT->ServiceTableBase);</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pNewSSDT->NumberOfServices: %X\\r\\n\", pNewSSDT->NumberOfServices);</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"pNewSSDT->ParamTableBase: %X\\r\\n\", pNewSSDT->ParamTableBase);</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">//__asm int 3;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">return</span> pNewSSDT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Hook KiFastCallEntry 让系统调用走我们的系统服务表。</p>\n<p>代码懒得放了，附上 Github 的链接： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09yMGtpdC9YcEtlcm5lbE92ZXJsb2Fk\">https://github.com/Or0kit/XpKernelOverload</span></p>\n<h2 id=\"验证是否成功\"><a class=\"anchor\" href=\"#验证是否成功\">#</a> 验证是否成功</h2>\n<p>我在  <code>SSDTFilter</code>  函数中下了断点，并且验证了是否是  <code>NtOpenProcess</code>  函数</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>可以发现已经过滤了其他函数，我们只让这个函数走我们新内核中的代码。</p>\n<p><strong>一定得注意，不同的 Windows 它们 SSDT 中的函数的序号是不一样的！在 XP sp3 中  <code>NtOpenProcess</code>  是 0x7A。</strong></p>\n<p>然后我们在 Windbg 中找到我们内核的  <code>NtOpenProcess</code>  函数的地址，然后给这个函数下断点，以此验证是否执行到新内核中：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>如图，已经断下来了！</p>\n<p>接下来我们在验证一下是否能过所有 Hook:</p>\n<p>我这里先加载了一个 Hook 了  <code>NtOpenProcess</code>  的驱动，其作用是一直打印  <code>NtOpenProcess</code>  的参数：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>然后我们加载重载内核的代码（我在其中下了断点）,</p>\n<p>先看一下 Hook  <code>NtOpenProcess</code>  的代码：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>这是断下来时打印的信息：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>很明显当调用号是 0x7A 时 系统回去执行我们的 HOOK 函数。</p>\n<p>但是我们重载了内核后，就可以过滤掉这些 HOOK 了！</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>接着验证一下 OpenProcess 函数的正常使用：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>我用 OD 附加了记事本，用 StudyPE+ 载入了进程中的记事本文件，均正常！</p>\n<p>至此内核重载完成。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMucGVkaXkuY29tL3RocmVhZC0yNTM0MjUuaHRt\">https://bbs.pediy.com/thread-253425.htm</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3doYXRkYXkvYXJ0aWNsZS9kZXRhaWxzLzE0MTYwODc1\">https://blog.csdn.net/whatday/article/details/14160875</span></p>\n",
            "tags": [
                "内核重载"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E9%9A%90%E8%97%8F%E9%A9%B1%E5%8A%A8/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E9%9A%90%E8%97%8F%E9%A9%B1%E5%8A%A8/",
            "title": "驱动开发-隐藏驱动",
            "date_published": "2021-12-06T14:13:08.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>编写一个 0 环断链的驱动代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 遍历内核模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tLIST_ENTRY InLoadOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tLIST_ENTRY InMemoryOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tLIST_ENTRY InInitializationOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPVOID DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPVOID EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tUINT32 SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tUNICODE_STRING FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tUNICODE_STRING BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tUINT32 Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tUINT16 LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tUINT16 TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tLIST_ENTRY HashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tPVOID SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tUINT32 CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tUINT32 TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tPVOID LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tPVOID EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tPVOID PatchInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdtePre<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteCur<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteNex<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tpLdteCur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pdriver<span class=\"token operator\">-></span>DriverSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tpLdtePre <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tpLdteNex <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tpLdtePre<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tpLdteNex<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Blink <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可是在 PCHunter32 中依然可以查得到。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>这是为什么呢？<br />\n这时我们就要去分析驱动是如何加载的了，在代码中下个断点，在 windbg 中查看堆栈，因为堆栈中有先前调用的函数的返回地址。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd&gt; k</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> # ChildEBP RetAddr  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>00 ba503c84 805823af DriverHidden!DriverEntry+0xf [F:\\Text_Files\\Driver\\DriverHidden\\main.c @ 34] </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>01 ba503d54 805824bf nt!IopLoadDriver+0x66d</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>02 ba503d7c 80539923 nt!IopLoadUnloadDriver+0x45</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>03 ba503dac 805d0fee nt!ExpWorkerThread+0xef</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>04 ba503ddc 8054720e nt!PspSystemThreadStartup+0x34</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>05 00000000 00000000 nt!KiThreadStartup+0x16</pre></td></tr></table></figure><p>发现驱动运行前，系统调用了  <code>IopLoadDriver</code>  函数。</p>\n<h1 id=\"逆向分析ioploaddriver函数\"><a class=\"anchor\" href=\"#逆向分析ioploaddriver函数\">#</a> 逆向分析 IopLoadDriver 函数</h1>\n<p>在 IDA 中逆向分析一下此函数，发现此函数的流程非常复杂：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p><code>F5</code>  一下</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __stdcall <span class=\"token function\">IopLoadDriver</span><span class=\"token punctuation\">(</span>HANDLE KeyHandle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  NTSTATUS v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span>v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span>v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  PVOID v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> v10<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> v11<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span>v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  PIMAGE_NT_HEADERS v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  ULONG v15<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span>v16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  PVOID v17<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">int</span> v18<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">int</span> v19<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  _DWORD <span class=\"token operator\">*</span>v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>__stdcall <span class=\"token operator\">*</span>v21<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">int</span> v22<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-B4h] BYREF</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">int</span> v23<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+10h] [ebp-B0h]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_UNICODE_STRING</span> <span class=\"token operator\">*</span>v24<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+14h] [ebp-ACh]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">int</span> v25<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+18h] [ebp-A8h]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">int</span> v26<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+1Ch] [ebp-A4h]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">int</span> v27<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+20h] [ebp-A0h]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  ULONG v28<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+24h] [ebp-9Ch] BYREF</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  PVOID v29<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+28h] [ebp-98h] BYREF</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  PVOID v30<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+2Ch] [ebp-94h]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  PVOID Object<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+30h] [ebp-90h] BYREF</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_UNICODE_STRING</span> v32<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+34h] [ebp-8Ch] BYREF</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_UNICODE_STRING</span> DestinationString<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+3Ch] [ebp-84h] BYREF</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  PVOID P<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+44h] [ebp-7Ch] BYREF</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  ULONG ResultLength<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+48h] [ebp-78h] BYREF</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  HANDLE Handle<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+4Ch] [ebp-74h]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  PVOID BaseAddress<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+50h] [ebp-70h] BYREF</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  HANDLE v38<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+54h] [ebp-6Ch] BYREF</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">int</span> v39<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+58h] [ebp-68h] BYREF</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  PVOID v40<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+5Ch] [ebp-64h]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  ULONG ReturnLength<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+60h] [ebp-60h] BYREF</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_UNICODE_STRING</span> Destination<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+64h] [ebp-5Ch] BYREF</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  NTSTATUS v43<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+6Ch] [ebp-54h]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">int</span> KeyValueInformation<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+70h] [ebp-50h] BYREF</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  v29 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>a4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>a4 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  Handle <span class=\"token operator\">=</span> KeyHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  v30 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  v39 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  v40 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  v32<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  Destination<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  v4 <span class=\"token operator\">=</span> <span class=\"token function\">NtQueryKey</span><span class=\"token punctuation\">(</span>KeyHandle<span class=\"token punctuation\">,</span> KeyBasicInformation<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ResultLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v4 <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">2147483643</span> <span class=\"token operator\">&amp;&amp;</span> v4 <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741789</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    v43 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741472</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>LABEL_82<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">goto</span> LABEL_22<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> ResultLength <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20206F49u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  v30 <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v5 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>LABEL_60<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    v43 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741670</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">goto</span> LABEL_82<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  v43 <span class=\"token operator\">=</span> <span class=\"token function\">NtQueryKey</span><span class=\"token punctuation\">(</span>Handle<span class=\"token punctuation\">,</span> KeyBasicInformation<span class=\"token punctuation\">,</span> v5<span class=\"token punctuation\">,</span> ResultLength<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ResultLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    Destination<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    Destination<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token operator\">=</span> Destination<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    Destination<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> v5 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    v6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>PagedPool<span class=\"token punctuation\">,</span> Destination<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20206F49u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    v40 <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>v39<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Destination<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>v39<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Destination<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      <span class=\"token function\">qmemcpy</span><span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">,</span> Destination<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> Destination<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v40 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>v39 <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token function\">RtlAppendUnicodeToString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>off_4A9CE2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> a2 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> InitSafeBootMode <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>DestinationString<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>word_4A9CEE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>KeyValueInformation<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4Cu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">NtQueryValueKey</span><span class=\"token punctuation\">(</span>Handle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>DestinationString<span class=\"token punctuation\">,</span> KeyValuePartialInformation<span class=\"token punctuation\">,</span> KeyValueInformation<span class=\"token punctuation\">,</span> <span class=\"token number\">0x4Cu</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v28<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>          <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>DestinationString<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">=</span> <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>KeyValueInformation<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>              DestinationString<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token operator\">=</span> <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>KeyValueInformation<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>              DestinationString<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>KeyValueInformation<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>              <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span><span class=\"token function\">IopSafebootDriverLoad</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>DestinationString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span><span class=\"token function\">IopSafebootDriverLoad</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SAFEBOOT: skipping device = %wZ(%wZ)\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>DestinationString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">xHalReferenceHandler</span><span class=\"token punctuation\">(</span>KeyValueInformation<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v22<span class=\"token punctuation\">,</span> v23<span class=\"token punctuation\">,</span> v24<span class=\"token punctuation\">,</span> v25<span class=\"token punctuation\">,</span> v26<span class=\"token punctuation\">,</span> v27<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token function\">ExAcquireResourceSharedLite</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PsLoadedModuleResource<span class=\"token punctuation\">,</span> <span class=\"token number\">1u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> PsLoadedModuleList<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>i <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>PsLoadedModuleList<span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">RtlEqualString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> STRING <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> STRING <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1u</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        v43 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741554</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PsLoadedModuleResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        Destination<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_21<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PsLoadedModuleResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    v43 <span class=\"token operator\">=</span> <span class=\"token function\">IopBuildFullDriverPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v39<span class=\"token punctuation\">,</span> Handle<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      Destination<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    v43 <span class=\"token operator\">=</span> <span class=\"token function\">IopGetDriverNameFromKeyNode</span><span class=\"token punctuation\">(</span>Handle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>      v24 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>v32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>      v22 <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>      v23 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>      v25 <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>      v26 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>      v27 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>      v10 <span class=\"token operator\">=</span> <span class=\"token function\">MmLoadSystemImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>P<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>BaseAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>      v43 <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v10 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v10 <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741554</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>          v43 <span class=\"token operator\">=</span> <span class=\"token function\">ObOpenObjectByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v22<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>IoDriverObjectType<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v38<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741772</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>              v43 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073740914</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>LABEL_80<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>              <span class=\"token keyword\">goto</span> LABEL_21<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            <span class=\"token keyword\">goto</span> LABEL_81<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>          <span class=\"token function\">LOBYTE</span><span class=\"token punctuation\">(</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">KeGetCurrentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>PreviousMode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>          v43 <span class=\"token operator\">=</span> <span class=\"token function\">ObReferenceObjectByHandle</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>                  v38<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                  IoDriverObjectType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>                  <span class=\"token punctuation\">(</span>KPROCESSOR_MODE<span class=\"token punctuation\">)</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                  <span class=\"token operator\">&amp;</span>Object<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>                  <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>          <span class=\"token function\">NtClose</span><span class=\"token punctuation\">(</span>v38<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            v43 <span class=\"token operator\">=</span> <span class=\"token function\">IopResurrectDriver</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>            <span class=\"token function\">ObfDereferenceObject</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>LABEL_55<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>      <span class=\"token function\">RtlImageNtHeader</span><span class=\"token punctuation\">(</span>BaseAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>      v43 <span class=\"token operator\">=</span> <span class=\"token function\">IopPrepareDriverLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v39<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>Handle<span class=\"token punctuation\">,</span> BaseAddress<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token function\">MmUnloadSystemImage</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_55<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>      <span class=\"token function\">LOBYTE</span><span class=\"token punctuation\">(</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">KeGetCurrentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>PreviousMode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>      v11 <span class=\"token operator\">=</span> <span class=\"token function\">ObCreateObject</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>              <span class=\"token punctuation\">(</span>KPROCESSOR_MODE<span class=\"token punctuation\">)</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>              <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>IoDriverObjectType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>              <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v22<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>              <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>              <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>              <span class=\"token number\">196</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>              <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>              <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>              <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>      v12 <span class=\"token operator\">=</span> DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>      v43 <span class=\"token operator\">=</span> v11<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v11 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_55<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>      <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v12 <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">84</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v12 <span class=\"token operator\">+</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v12<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> ReturnLength <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ReturnLength <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>ReturnLength <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v12<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> ReturnLength <span class=\"token operator\">+</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IopInvalidDeviceRequest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>      <span class=\"token operator\">*</span>v12 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>      v12<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">168</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>      v13 <span class=\"token operator\">=</span> <span class=\"token function\">RtlImageNtHeader</span><span class=\"token punctuation\">(</span>BaseAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>      v14 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>BaseAddress <span class=\"token operator\">+</span> v13<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>AddressOfEntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>v13<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>DllCharacteristics <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x2000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v12 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|=</span> <span class=\"token number\">2u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v12 <span class=\"token operator\">+</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v14<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v12 <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> P<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v12 <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> BaseAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v12 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v13<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>      v43 <span class=\"token operator\">=</span> <span class=\"token function\">ObInsertObject</span><span class=\"token punctuation\">(</span>v12<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v38<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_55<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>      <span class=\"token function\">ObReferenceObjectByHandle</span><span class=\"token punctuation\">(</span>v38<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> IoDriverObjectType<span class=\"token punctuation\">,</span> <span class=\"token function\">KeGetCurrentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>PreviousMode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v28<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>      v15 <span class=\"token operator\">=</span> v28<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>      DestinationString<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v28<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>      <span class=\"token function\">NtClose</span><span class=\"token punctuation\">(</span>v38<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>CmRegistryMachineHardwareDescriptionSystemName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>      v16 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>PagedPool<span class=\"token punctuation\">,</span> v32<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">,</span> <span class=\"token number\">0x20206F49u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v16<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v16 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v32<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v32<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>        <span class=\"token function\">qmemcpy</span><span class=\"token punctuation\">(</span>v16<span class=\"token punctuation\">,</span> v32<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> v32<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>        v15 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>      v17 <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20206F49u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>      Object <span class=\"token operator\">=</span> v17<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v17 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>        <span class=\"token function\">ObMakeTemporaryObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>        <span class=\"token function\">ObfDereferenceObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_60<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>      v43 <span class=\"token operator\">=</span> <span class=\"token function\">NtQueryObject</span><span class=\"token punctuation\">(</span>Handle<span class=\"token punctuation\">,</span> ObjectNameInformation<span class=\"token punctuation\">,</span> v17<span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000u</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ReturnLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>        <span class=\"token function\">ObMakeTemporaryObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>        <span class=\"token function\">ObfDereferenceObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>        <span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v40 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>v39<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20206F49u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>        v18 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v18 <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>          <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v18 <span class=\"token operator\">+</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>v39<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>          <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_WORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v39<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>          <span class=\"token function\">qmemcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v40<span class=\"token punctuation\">,</span> <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>v39<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>          v15 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>DestinationString<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>      v19 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>__stdcall <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">,</span> PVOID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">44</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>      v43 <span class=\"token operator\">=</span> v19<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>      <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v29 <span class=\"token operator\">=</span> v19<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v19 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>        v43 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073740955</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> ReturnLength <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ReturnLength <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>ReturnLength <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>        v20 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> ReturnLength <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token operator\">*</span>v20 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>          <span class=\"token operator\">*</span>v20 <span class=\"token operator\">=</span> IopInvalidDeviceRequest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>      <span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>LABEL_78<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>        <span class=\"token function\">ObMakeTemporaryObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>        <span class=\"token function\">ObfDereferenceObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span><span class=\"token function\">IopIsLegacyDriver</span><span class=\"token punctuation\">(</span>v15<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>        v43 <span class=\"token operator\">=</span> <span class=\"token function\">IopPnpDriverStarted</span><span class=\"token punctuation\">(</span>v15<span class=\"token punctuation\">,</span> Handle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v39<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>          <span class=\"token keyword\">goto</span> LABEL_79<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>        v21 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>__stdcall <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">52</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v21 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>          <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|=</span> <span class=\"token number\">1u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>          <span class=\"token function\">v21</span><span class=\"token punctuation\">(</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>          <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_78<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>LABEL_79<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>      <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Destination<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>      <span class=\"token function\">MmFreeDriverInitialization</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v15 <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>      <span class=\"token function\">IopReadyDeviceObjects</span><span class=\"token punctuation\">(</span>v15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>LABEL_81<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741554</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>    <span class=\"token keyword\">goto</span> LABEL_82<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>LABEL_21<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>  <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>LABEL_22<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v32<span class=\"token punctuation\">.</span>Buffer <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>    <span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>v32<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v30 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>    <span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>v30<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v40 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>    <span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>v40<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> Destination<span class=\"token punctuation\">.</span>Buffer <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>    <span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>Destination<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v43 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> v43 <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741218</span> <span class=\"token operator\">&amp;&amp;</span> v43 <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1073741554</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>    <span class=\"token function\">IopDriverLoadingFailed</span><span class=\"token punctuation\">(</span>Handle<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">IopGetRegistryValue</span><span class=\"token punctuation\">(</span>Handle<span class=\"token punctuation\">,</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v29<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>      v8 <span class=\"token operator\">=</span> v29<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v29 <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>        <span class=\"token function\">CmBootLastKnownGood</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v29 <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v29 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>      <span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>  <span class=\"token function\">ObCloseHandle</span><span class=\"token punctuation\">(</span>Handle<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">xHalReferenceHandler</span><span class=\"token punctuation\">(</span>KeyValueInformation<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v22<span class=\"token punctuation\">,</span> v23<span class=\"token punctuation\">,</span> v24<span class=\"token punctuation\">,</span> v25<span class=\"token punctuation\">,</span> v26<span class=\"token punctuation\">,</span> v27<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>对于如此复杂的内核函数，我们可以参考 WRK 源码进行分析，分析发现其实和 WRK 的源码几乎是一样的</p>\n<p>WRK 中  <code>IopLoadDriver</code>  源码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">IopLoadDriver</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN  HANDLE      KeyHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    IN  BOOLEAN     CheckForSafeBoot<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    IN  BOOLEAN     IsFilter<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    OUT NTSTATUS   <span class=\"token operator\">*</span>DriverEntryStatus</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/*++</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Routine Description:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    This routine is invoked to load a device or file system driver, either</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    during system initialization, or dynamically while the system is running.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Arguments:</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    KeyHandle - Supplies a handle to the driver service node in the registry</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        that describes the driver to be loaded.</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    IsFilter - TRUE if the driver is a WDM filter, FALSE otherwise.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    CheckForSafeBoot - If TRUE, the driver will be loaded only if it belongs</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                       to the list of safe mode OK binaries.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    DriverEntryStatus - Receives status returned by DriverEntry(...)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Return Value:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    The function value is the final status of the load operation. If</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    STATUS_FAILED_DRIVER_ENTRY is returned, the driver's return value</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    is stored in DriverEntryStatus.</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Notes:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    Note that this routine closes the KeyHandle before returning.</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>--*/</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    NTSTATUS status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    PLIST_ENTRY nextEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    PKLDR_DATA_TABLE_ENTRY driverEntry<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    PKEY_BASIC_INFORMATION keyBasicInformation <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    ULONG keyBasicLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    UNICODE_STRING baseName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    UNICODE_STRING serviceName <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    OBJECT_ATTRIBUTES objectAttributes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    PVOID sectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    UNICODE_STRING driverName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    PDRIVER_OBJECT driverObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    PIMAGE_NT_HEADERS ntHeaders<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    PVOID imageBaseAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    ULONG_PTR entryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    HANDLE driverHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    ULONG i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    POBJECT_NAME_INFORMATION registryPath<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">DBG</span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    LARGE_INTEGER stime<span class=\"token punctuation\">,</span> etime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    ULONG dtime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token function\">PAGED_CODE</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    driverName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWSTR<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token operator\">*</span>DriverEntryStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    baseName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">// Begin by formulating the name of the driver image file to be loaded.</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">// Note that this is used to determine whether or not the driver has</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">// already been loaded by the OS loader, not necessarily in actually</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\">// loading the driver image, since the node can override that name.</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">NtQueryKey</span><span class=\"token punctuation\">(</span> KeyHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                         KeyBasicInformation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                         <span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                         <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                         <span class=\"token operator\">&amp;</span>keyBasicLength <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_BUFFER_OVERFLOW <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        status <span class=\"token operator\">!=</span> STATUS_BUFFER_TOO_SMALL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        status <span class=\"token operator\">=</span> STATUS_ILL_FORMED_SERVICE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    keyBasicInformation <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePool</span><span class=\"token punctuation\">(</span> NonPagedPool<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                                          keyBasicLength <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>keyBasicInformation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        status <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">NtQueryKey</span><span class=\"token punctuation\">(</span> KeyHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                         KeyBasicInformation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                         keyBasicInformation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                         keyBasicLength<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                         <span class=\"token operator\">&amp;</span>keyBasicLength <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token comment\">// Create a Unicode string descriptor which forms the name of the</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token comment\">// driver.</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    baseName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>USHORT<span class=\"token punctuation\">)</span> keyBasicInformation<span class=\"token operator\">-></span>NameLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    baseName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>USHORT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>baseName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    baseName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>keyBasicInformation<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    serviceName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePool</span><span class=\"token punctuation\">(</span>PagedPool<span class=\"token punctuation\">,</span> baseName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>UNICODE_NULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        serviceName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">=</span> baseName<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        serviceName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token operator\">=</span> serviceName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>UNICODE_NULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token function\">RtlCopyMemory</span><span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> baseName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> baseName<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        serviceName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">[</span>serviceName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> UNICODE_NULL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        status <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token function\">RtlAppendUnicodeToString</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> L<span class=\"token string\">\".SYS\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token comment\">// Log the file name</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span>HEADLESS_LOG_LOADING_FILENAME<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CheckForSafeBoot <span class=\"token operator\">&amp;&amp;</span> InitSafeBootMode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        BOOLEAN GroupIsGood <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        UNICODE_STRING string<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        PKEY_VALUE_PARTIAL_INFORMATION keyValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        UCHAR nameBuffer<span class=\"token punctuation\">[</span><span class=\"token function\">FIELD_OFFSET</span><span class=\"token punctuation\">(</span>KEY_VALUE_PARTIAL_INFORMATION<span class=\"token punctuation\">,</span> Data<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        ULONG length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>string<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Group\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        keyValue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PKEY_VALUE_PARTIAL_INFORMATION<span class=\"token punctuation\">)</span>nameBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token function\">RtlZeroMemory</span><span class=\"token punctuation\">(</span>nameBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nameBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        status <span class=\"token operator\">=</span> <span class=\"token function\">NtQueryValueKey</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            KeyHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token operator\">&amp;</span>string<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            KeyValuePartialInformation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            keyValue<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>            <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nameBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token operator\">&amp;</span>length</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            string<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>USHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>keyValue<span class=\"token operator\">-></span>DataLength <span class=\"token operator\">-</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            string<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            string<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWSTR<span class=\"token punctuation\">)</span>keyValue<span class=\"token operator\">-></span>Data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IopSafebootDriverLoad</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>                GroupIsGood <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>GroupIsGood <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">IopSafebootDriverLoad</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            <span class=\"token comment\">// don't load the driver</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>            <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SAFEBOOT: skipping device = %wZ(%wZ)\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>            <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span>HEADLESS_LOG_LOAD_SUCCESSFUL<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>            <span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token comment\">// See if this driver has already been loaded by the boot loader.</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>    <span class=\"token comment\">// No need to do KeEnterCriticalRegion as this is called</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token comment\">// from system process only.</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token function\">ExAcquireResourceSharedLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>PsLoadedModuleResource<span class=\"token punctuation\">,</span> TRUE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    nextEntry <span class=\"token operator\">=</span> PsLoadedModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>nextEntry <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>PsLoadedModuleList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>        <span class=\"token comment\">// Look at the next boot driver in the list.</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>        driverEntry <span class=\"token operator\">=</span> <span class=\"token function\">CONTAINING_RECORD</span><span class=\"token punctuation\">(</span> nextEntry<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>                                         KLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>                                         InLoadOrderLinks <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token comment\">// If this is not the kernel image (ntoskrnl) and not the HAL (hal),</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token comment\">// then this is a driver, so initialize it.</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">RtlEqualUnicodeString</span><span class=\"token punctuation\">(</span>  <span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>                             <span class=\"token operator\">&amp;</span>driverEntry<span class=\"token operator\">-></span>FullDllName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>                            TRUE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>            status <span class=\"token operator\">=</span> STATUS_IMAGE_ALREADY_LOADED<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>            <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>PsLoadedModuleResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>            baseName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>            <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>        nextEntry <span class=\"token operator\">=</span> nextEntry<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>PsLoadedModuleResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>    <span class=\"token comment\">// This driver has not already been loaded by the OS loader.  Form the</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    <span class=\"token comment\">// full path name for this driver.</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">IopBuildFullDriverPath</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>serviceName<span class=\"token punctuation\">,</span> KeyHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>        baseName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>    <span class=\"token comment\">// Now get the name of the driver object.</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">IopGetDriverNameFromKeyNode</span><span class=\"token punctuation\">(</span> KeyHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>                                          <span class=\"token operator\">&amp;</span>driverName <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>    <span class=\"token function\">InitializeObjectAttributes</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>objectAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>                                <span class=\"token operator\">&amp;</span>driverName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>                                OBJ_PERMANENT<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>                                <span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>                                <span class=\"token punctuation\">(</span>PSECURITY_DESCRIPTOR<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>    <span class=\"token comment\">// Load the driver image into memory.  If this fails partway through</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>    <span class=\"token comment\">// the operation, then it will automatically be unloaded.</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>    <span class=\"token comment\">// No need to do KeEnterCriticalRegion here as this is only</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>    <span class=\"token comment\">// called from system process</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>    <span class=\"token function\">ExAcquireResourceExclusiveLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource<span class=\"token punctuation\">,</span> TRUE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">MmLoadSystemImage</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>                                <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>                                <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>                                <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>                                <span class=\"token operator\">&amp;</span>sectionPointer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>                                <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>imageBaseAddress <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre></pre></td></tr><tr><td data-num=\"264\"></td><td><pre></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>        <span class=\"token comment\">// If the image was not already loaded then exit.</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_IMAGE_ALREADY_LOADED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre></pre></td></tr><tr><td data-num=\"271\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token function\">defined</span><span class=\"token punctuation\">(</span>_WIN64<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>            <span class=\"token comment\">// If this is a driver meant for another architecture, then block this driver</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>            <span class=\"token comment\">// and continue with loading the rest of the drivers stack.</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IopCheckIfNotNativeDriver</span> <span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> TRUE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"279\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IsFilter <span class=\"token operator\">!=</span> FALSE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>                    status <span class=\"token operator\">=</span> STATUS_DRIVER_BLOCKED<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>                    status <span class=\"token operator\">=</span> STATUS_DRIVER_BLOCKED_CRITICAL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">DBG</span></span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>                <span class=\"token function\">DbgPrint</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"IopLoadDriver - Blocking driver %ws (32-bit) - Status = %lx\\n\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"286\"></td><td><pre>                          baseName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>                <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>                <span class=\"token comment\">// Log an event to the eventlog</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>                <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>                <span class=\"token function\">IopLogBlockedDriverEvent</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> STATUS_INCOMPATIBLE_DRIVER_BLOCKED<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre></pre></td></tr><tr><td data-num=\"297\"></td><td><pre></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>            <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>            <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>        <span class=\"token comment\">// Open the driver object.</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>        status <span class=\"token operator\">=</span> <span class=\"token function\">ObOpenObjectByName</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>objectAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>                                     IoDriverObjectType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>                                     KernelMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>                                     <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>                                     <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>                                     <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>                                     <span class=\"token operator\">&amp;</span>driverHandle <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre></pre></td></tr><tr><td data-num=\"316\"></td><td><pre></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>            <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> STATUS_OBJECT_NAME_NOT_FOUND<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>                <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>                <span class=\"token comment\">// Adjust the exit code so that we can distinguish drivers that</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>                <span class=\"token comment\">// aren't present from drivers that are present but have had</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>                <span class=\"token comment\">// their driver objects made temporary.</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>                <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>                status <span class=\"token operator\">=</span> STATUS_DRIVER_FAILED_PRIOR_UNLOAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>            <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>        <span class=\"token comment\">// Reference the handle and obtain a pointer to the driver object so that</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>        <span class=\"token comment\">// the handle can be deleted without the object going away.</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>        status <span class=\"token operator\">=</span> <span class=\"token function\">ObReferenceObjectByHandle</span><span class=\"token punctuation\">(</span> driverHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>                                            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>                                            IoDriverObjectType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>                                            <span class=\"token function\">KeGetPreviousMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>                                            <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>driverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>                                            <span class=\"token punctuation\">(</span>POBJECT_HANDLE_INFORMATION<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>        <span class=\"token function\">NtClose</span><span class=\"token punctuation\">(</span> driverHandle <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>            <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>            <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre></pre></td></tr><tr><td data-num=\"354\"></td><td><pre></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>        status <span class=\"token operator\">=</span> <span class=\"token function\">IopResurrectDriver</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>        <span class=\"token comment\">// Regardless of the status the driver object should be dereferenced.</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>        <span class=\"token comment\">// if the unload has already run then driver is almost gone. If</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>        <span class=\"token comment\">// the driver has been resurrected then the I/O system still has its</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>        <span class=\"token comment\">// original reference.</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>        <span class=\"token function\">ObDereferenceObject</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>        <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>        <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>        ntHeaders <span class=\"token operator\">=</span> <span class=\"token function\">RtlImageNtHeader</span><span class=\"token punctuation\">(</span> imageBaseAddress <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>        <span class=\"token comment\">// Check should this driver be loaded.  If yes, the enum subkey</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>        <span class=\"token comment\">// of the service will be prepared.</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>        status <span class=\"token operator\">=</span> <span class=\"token function\">IopPrepareDriverLoading</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>serviceName<span class=\"token punctuation\">,</span> KeyHandle<span class=\"token punctuation\">,</span> imageBaseAddress<span class=\"token punctuation\">,</span> IsFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>            <span class=\"token function\">MmUnloadSystemImage</span><span class=\"token punctuation\">(</span>sectionPointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>            <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>            <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>            <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre></pre></td></tr><tr><td data-num=\"387\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>    <span class=\"token comment\">// The driver image has now been loaded into memory.  Create the driver</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>    <span class=\"token comment\">// object that represents this image.</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">ObCreateObject</span><span class=\"token punctuation\">(</span> <span class=\"token function\">KeGetPreviousMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>                             IoDriverObjectType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>                             <span class=\"token operator\">&amp;</span>objectAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>                             KernelMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre>                             <span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>                             <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span> DRIVER_OBJECT <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span> <span class=\"token punctuation\">(</span> DRIVER_EXTENSION <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>                             <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>                             <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>                             <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>        <span class=\"token function\">MmUnloadSystemImage</span><span class=\"token punctuation\">(</span>sectionPointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>        <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>        <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    <span class=\"token comment\">// Initialize this driver object and insert it into the object table.</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>    <span class=\"token function\">RtlZeroMemory</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span> DRIVER_OBJECT <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span> <span class=\"token punctuation\">(</span> DRIVER_EXTENSION<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>DriverExtension <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDRIVER_EXTENSION<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>driverObject <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>DriverObject <span class=\"token operator\">=</span> driverObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> IRP_MJ_MAXIMUM_FUNCTION<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>        driverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IopInvalidDeviceRequest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>Type <span class=\"token operator\">=</span> IO_TYPE_DRIVER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>Size <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span> DRIVER_OBJECT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>    ntHeaders <span class=\"token operator\">=</span> <span class=\"token function\">RtlImageNtHeader</span><span class=\"token punctuation\">(</span> imageBaseAddress <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>    entryPoint <span class=\"token operator\">=</span> ntHeaders<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>AddressOfEntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>    entryPoint <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>ULONG_PTR<span class=\"token punctuation\">)</span> imageBaseAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>ntHeaders<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>DllCharacteristics <span class=\"token operator\">&amp;</span> IMAGE_DLLCHARACTERISTICS_WDM_DRIVER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>        driverObject<span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DRVO_LEGACY_DRIVER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>DriverInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDRIVER_INITIALIZE<span class=\"token punctuation\">)</span> entryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>DriverSection <span class=\"token operator\">=</span> sectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>DriverStart <span class=\"token operator\">=</span> imageBaseAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>DriverSize <span class=\"token operator\">=</span> ntHeaders<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">ObInsertObject</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>                             <span class=\"token punctuation\">(</span>PACCESS_STATE<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>                             FILE_READ_DATA<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>                             <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>                             <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>                             <span class=\"token operator\">&amp;</span>driverHandle <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>    <span class=\"token function\">ExReleaseResourceLite</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>IopDriverLoadResource <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre></pre></td></tr><tr><td data-num=\"443\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre>        <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>    <span class=\"token comment\">// Reference the handle and obtain a pointer to the driver object so that</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>    <span class=\"token comment\">// the handle can be deleted without the object going away.</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">ObReferenceObjectByHandle</span><span class=\"token punctuation\">(</span> driverHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>                                        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>                                        IoDriverObjectType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>                                        <span class=\"token function\">KeGetPreviousMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>                                        <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>driverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre>                                        <span class=\"token punctuation\">(</span>POBJECT_HANDLE_INFORMATION<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre></pre></td></tr><tr><td data-num=\"460\"></td><td><pre>    <span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>    <span class=\"token function\">NtClose</span><span class=\"token punctuation\">(</span> driverHandle <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre></pre></td></tr><tr><td data-num=\"464\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre>    <span class=\"token comment\">// Load the Registry information in the appropriate fields of the device</span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>    <span class=\"token comment\">// object.</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre></pre></td></tr><tr><td data-num=\"469\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>HardwareDatabase <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"470\"></td><td><pre>        <span class=\"token operator\">&amp;</span>CmRegistryMachineHardwareDescriptionSystemName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"471\"></td><td><pre></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>    <span class=\"token comment\">// Store the name of the device driver in the driver object so that it</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre>    <span class=\"token comment\">// can be easily found by the error log thread.</span></pre></td></tr><tr><td data-num=\"475\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"476\"></td><td><pre></pre></td></tr><tr><td data-num=\"477\"></td><td><pre>    driverObject<span class=\"token operator\">-></span>DriverName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePool</span><span class=\"token punctuation\">(</span> PagedPool<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"478\"></td><td><pre>                                                      driverName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"479\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>driverObject<span class=\"token operator\">-></span>DriverName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"480\"></td><td><pre>        driverObject<span class=\"token operator\">-></span>DriverName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token operator\">=</span> driverName<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"481\"></td><td><pre>        driverObject<span class=\"token operator\">-></span>DriverName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">=</span> driverName<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"482\"></td><td><pre></pre></td></tr><tr><td data-num=\"483\"></td><td><pre>        <span class=\"token function\">RtlCopyMemory</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token operator\">-></span>DriverName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>                       driverName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>                       driverName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"487\"></td><td><pre></pre></td></tr><tr><td data-num=\"488\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>    <span class=\"token comment\">// Query the name of the registry path for this driver so that it can</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre>    <span class=\"token comment\">// be passed to the driver.</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>    registryPath <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePool</span><span class=\"token punctuation\">(</span> NonPagedPool<span class=\"token punctuation\">,</span> PAGE_SIZE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"494\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>registryPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"495\"></td><td><pre>        <span class=\"token function\">ObMakeTemporaryObject</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre>        <span class=\"token function\">ObDereferenceObject</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre>        status <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre></pre></td></tr><tr><td data-num=\"501\"></td><td><pre>    status <span class=\"token operator\">=</span> <span class=\"token function\">NtQueryObject</span><span class=\"token punctuation\">(</span> KeyHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"502\"></td><td><pre>                            ObjectNameInformation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>                            registryPath<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre>                            PAGE_SIZE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"505\"></td><td><pre>                            <span class=\"token operator\">&amp;</span>i <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>        <span class=\"token function\">ObMakeTemporaryObject</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>        <span class=\"token function\">ObDereferenceObject</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre>        <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span> registryPath <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>        <span class=\"token keyword\">goto</span> IopLoadExit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"511\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"512\"></td><td><pre></pre></td></tr><tr><td data-num=\"513\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">DBG</span></span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre>    <span class=\"token function\">KeQuerySystemTime</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"516\"></td><td><pre></pre></td></tr><tr><td data-num=\"517\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre>    <span class=\"token comment\">// Store the service key name of the device driver in the driver object</span></pre></td></tr><tr><td data-num=\"519\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"520\"></td><td><pre></pre></td></tr><tr><td data-num=\"521\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"522\"></td><td><pre>        driverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>ServiceKeyName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre>            <span class=\"token function\">ExAllocatePool</span><span class=\"token punctuation\">(</span> NonPagedPool<span class=\"token punctuation\">,</span> serviceName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"524\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>driverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>ServiceKeyName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>            driverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>ServiceKeyName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token operator\">=</span> serviceName<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"526\"></td><td><pre>            driverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>ServiceKeyName<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">=</span> serviceName<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre></pre></td></tr><tr><td data-num=\"528\"></td><td><pre>            <span class=\"token function\">RtlCopyMemory</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>ServiceKeyName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"529\"></td><td><pre>                           serviceName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"530\"></td><td><pre>                           serviceName<span class=\"token punctuation\">.</span>MaximumLength <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"531\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"532\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"533\"></td><td><pre></pre></td></tr><tr><td data-num=\"534\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre>    <span class=\"token comment\">// Now invoke the driver's initialization routine to initialize itself.</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"537\"></td><td><pre></pre></td></tr><tr><td data-num=\"538\"></td><td><pre>    status <span class=\"token operator\">=</span> driverObject<span class=\"token operator\">-></span><span class=\"token function\">DriverInit</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>registryPath<span class=\"token operator\">-></span>Name <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"539\"></td><td><pre></pre></td></tr><tr><td data-num=\"540\"></td><td><pre>    <span class=\"token operator\">*</span>DriverEntryStatus <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"541\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"542\"></td><td><pre></pre></td></tr><tr><td data-num=\"543\"></td><td><pre>        status <span class=\"token operator\">=</span> STATUS_FAILED_DRIVER_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"544\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"545\"></td><td><pre></pre></td></tr><tr><td data-num=\"546\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">DBG</span></span></pre></td></tr><tr><td data-num=\"547\"></td><td><pre></pre></td></tr><tr><td data-num=\"548\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"549\"></td><td><pre>    <span class=\"token comment\">// If DriverInit took longer than 5 seconds, print a message.</span></pre></td></tr><tr><td data-num=\"550\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"551\"></td><td><pre></pre></td></tr><tr><td data-num=\"552\"></td><td><pre>    <span class=\"token function\">KeQuerySystemTime</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>etime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"553\"></td><td><pre>    dtime  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>etime<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">-</span> stime<span class=\"token punctuation\">.</span>QuadPart<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"554\"></td><td><pre></pre></td></tr><tr><td data-num=\"555\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dtime <span class=\"token operator\">></span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"556\"></td><td><pre>        <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"IOLOAD: Driver %wZ took %d.%ds to %s\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"557\"></td><td><pre>            <span class=\"token operator\">&amp;</span>driverName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"558\"></td><td><pre>            dtime<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"559\"></td><td><pre>            dtime<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"560\"></td><td><pre>            <span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"initialize\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"fail initialization\"</span></pre></td></tr><tr><td data-num=\"561\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"562\"></td><td><pre></pre></td></tr><tr><td data-num=\"563\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"564\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"565\"></td><td><pre></pre></td></tr><tr><td data-num=\"566\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"567\"></td><td><pre>    <span class=\"token comment\">// Workaround for broken NT 4.0 3D labs driver</span></pre></td></tr><tr><td data-num=\"568\"></td><td><pre>    <span class=\"token comment\">// They zero out some function table entries by mistake.</span></pre></td></tr><tr><td data-num=\"569\"></td><td><pre></pre></td></tr><tr><td data-num=\"570\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> IRP_MJ_MAXIMUM_FUNCTION<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"571\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>driverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"572\"></td><td><pre>            <span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>driverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"573\"></td><td><pre>            driverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IopInvalidDeviceRequest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"574\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"575\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"576\"></td><td><pre></pre></td></tr><tr><td data-num=\"577\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"578\"></td><td><pre>    <span class=\"token comment\">// If DriverInit doesn't work, then simply unload the image and mark the driver</span></pre></td></tr><tr><td data-num=\"579\"></td><td><pre>    <span class=\"token comment\">// object as temporary.  This will cause everything to be deleted.</span></pre></td></tr><tr><td data-num=\"580\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"581\"></td><td><pre></pre></td></tr><tr><td data-num=\"582\"></td><td><pre>    <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span> registryPath <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"583\"></td><td><pre></pre></td></tr><tr><td data-num=\"584\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"585\"></td><td><pre>    <span class=\"token comment\">// If we load the driver because we think it is a legacy driver and</span></pre></td></tr><tr><td data-num=\"586\"></td><td><pre>    <span class=\"token comment\">// it does not create any device object in its DriverEntry.  We will</span></pre></td></tr><tr><td data-num=\"587\"></td><td><pre>    <span class=\"token comment\">// unload this driver.</span></pre></td></tr><tr><td data-num=\"588\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"589\"></td><td><pre></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">IopIsLegacyDriver</span><span class=\"token punctuation\">(</span>driverObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"591\"></td><td><pre></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>        status <span class=\"token operator\">=</span> <span class=\"token function\">IopPnpDriverStarted</span><span class=\"token punctuation\">(</span>driverObject<span class=\"token punctuation\">,</span> KeyHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>serviceName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"593\"></td><td><pre></pre></td></tr><tr><td data-num=\"594\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"595\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>driverObject<span class=\"token operator\">-></span>DriverUnload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"596\"></td><td><pre>                driverObject<span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DRVO_UNLOAD_INVOKED<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"597\"></td><td><pre>                driverObject<span class=\"token operator\">-></span><span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>driverObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"598\"></td><td><pre>                <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"599\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"600\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">DBG</span></span></pre></td></tr><tr><td data-num=\"601\"></td><td><pre>                <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IopLoadDriver: A PnP driver %wZ does not support DriverUnload routine.\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>driverName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"602\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"603\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"604\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"605\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"606\"></td><td><pre></pre></td></tr><tr><td data-num=\"607\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"608\"></td><td><pre>        <span class=\"token function\">ObMakeTemporaryObject</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"609\"></td><td><pre>        <span class=\"token function\">ObDereferenceObject</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"610\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"611\"></td><td><pre></pre></td></tr><tr><td data-num=\"612\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"613\"></td><td><pre>        <span class=\"token comment\">// Free the memory occupied by the driver's initialization routines.</span></pre></td></tr><tr><td data-num=\"614\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"615\"></td><td><pre></pre></td></tr><tr><td data-num=\"616\"></td><td><pre>        <span class=\"token function\">IopBootLog</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"617\"></td><td><pre>        <span class=\"token function\">MmFreeDriverInitialization</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token operator\">-></span>DriverSection <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"618\"></td><td><pre>        <span class=\"token function\">IopReadyDeviceObjects</span><span class=\"token punctuation\">(</span> driverObject <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"619\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"620\"></td><td><pre></pre></td></tr><tr><td data-num=\"621\"></td><td><pre>IopLoadExit<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"622\"></td><td><pre></pre></td></tr><tr><td data-num=\"623\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> STATUS_IMAGE_ALREADY_LOADED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"624\"></td><td><pre>        <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span>HEADLESS_LOG_LOAD_SUCCESSFUL<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"625\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"626\"></td><td><pre>        <span class=\"token function\">HeadlessKernelAddLogEntry</span><span class=\"token punctuation\">(</span>HEADLESS_LOG_LOAD_FAILED<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"627\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"628\"></td><td><pre></pre></td></tr><tr><td data-num=\"629\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"630\"></td><td><pre>    <span class=\"token comment\">// Free any pool that was allocated by this routine that has not yet</span></pre></td></tr><tr><td data-num=\"631\"></td><td><pre>    <span class=\"token comment\">// been freed.</span></pre></td></tr><tr><td data-num=\"632\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"633\"></td><td><pre></pre></td></tr><tr><td data-num=\"634\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>driverName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"635\"></td><td><pre>        <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span> driverName<span class=\"token punctuation\">.</span>Buffer <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"636\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"637\"></td><td><pre></pre></td></tr><tr><td data-num=\"638\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keyBasicInformation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"639\"></td><td><pre>        <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span> keyBasicInformation <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"640\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"641\"></td><td><pre></pre></td></tr><tr><td data-num=\"642\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"643\"></td><td><pre>        <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>serviceName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"644\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"645\"></td><td><pre></pre></td></tr><tr><td data-num=\"646\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>baseName<span class=\"token punctuation\">.</span>Buffer <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"647\"></td><td><pre>        <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>baseName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"648\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"649\"></td><td><pre></pre></td></tr><tr><td data-num=\"650\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"651\"></td><td><pre>    <span class=\"token comment\">// If this routine is about to return a failure, then let the Configuration</span></pre></td></tr><tr><td data-num=\"652\"></td><td><pre>    <span class=\"token comment\">// Manager know about it.  But, if STATUS_PLUGPLAY_NO_DEVICE, the device was</span></pre></td></tr><tr><td data-num=\"653\"></td><td><pre>    <span class=\"token comment\">// disabled by hardware profile.  In this case we don't need to report it.</span></pre></td></tr><tr><td data-num=\"654\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"655\"></td><td><pre></pre></td></tr><tr><td data-num=\"656\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> status <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_PLUGPLAY_NO_DEVICE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"657\"></td><td><pre></pre></td></tr><tr><td data-num=\"658\"></td><td><pre>        NTSTATUS lStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"659\"></td><td><pre>        PULONG errorControl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"660\"></td><td><pre>        PKEY_VALUE_FULL_INFORMATION keyValueInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"661\"></td><td><pre></pre></td></tr><tr><td data-num=\"662\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_IMAGE_ALREADY_LOADED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"663\"></td><td><pre></pre></td></tr><tr><td data-num=\"664\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"665\"></td><td><pre>            <span class=\"token comment\">// If driver was loaded, do not call IopDriverLoadingFailed to change</span></pre></td></tr><tr><td data-num=\"666\"></td><td><pre>            <span class=\"token comment\">// the driver loading status.  Because, obviously, the driver is</span></pre></td></tr><tr><td data-num=\"667\"></td><td><pre>            <span class=\"token comment\">// running.</span></pre></td></tr><tr><td data-num=\"668\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"669\"></td><td><pre></pre></td></tr><tr><td data-num=\"670\"></td><td><pre>            <span class=\"token function\">IopDriverLoadingFailed</span><span class=\"token punctuation\">(</span>KeyHandle<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"671\"></td><td><pre>            lStatus <span class=\"token operator\">=</span> <span class=\"token function\">IopGetRegistryValue</span><span class=\"token punctuation\">(</span> KeyHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"672\"></td><td><pre>                                           L<span class=\"token string\">\"ErrorControl\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"673\"></td><td><pre>                                           <span class=\"token operator\">&amp;</span>keyValueInformation <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"674\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> lStatus <span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>keyValueInformation<span class=\"token operator\">-></span>DataLength<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"675\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span> lStatus <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"676\"></td><td><pre>                    <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span> keyValueInformation <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"677\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"678\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"679\"></td><td><pre>                errorControl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span> keyValueInformation <span class=\"token operator\">+</span> keyValueInformation<span class=\"token operator\">-></span>DataOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"680\"></td><td><pre>                <span class=\"token function\">CmBootLastKnownGood</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span>errorControl <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"681\"></td><td><pre>                <span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span> keyValueInformation <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"682\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"683\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"684\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"685\"></td><td><pre></pre></td></tr><tr><td data-num=\"686\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"687\"></td><td><pre>    <span class=\"token comment\">// Close the caller's handle and return the final status from the load</span></pre></td></tr><tr><td data-num=\"688\"></td><td><pre>    <span class=\"token comment\">// operation.</span></pre></td></tr><tr><td data-num=\"689\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"690\"></td><td><pre></pre></td></tr><tr><td data-num=\"691\"></td><td><pre>    <span class=\"token function\">ObCloseHandle</span><span class=\"token punctuation\">(</span> KeyHandle <span class=\"token punctuation\">,</span> KernelMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"692\"></td><td><pre>    <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"693\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>其中这个链表就是我们在 0 环的断的链表，链表由操作系统填充。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>前期是读取注册表获取驱动信息，然后申请资源然后在  <code>PsLoadedModuleList</code>  这个全局变量插入一个驱动对象。</p>\n<p>接着向下分析，看到有驱动对象相关的操作：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driverObject<span class=\"token operator\">-></span>DriverExtension <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDRIVER_EXTENSION<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>driverObject <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>driverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>DriverObject <span class=\"token operator\">=</span> driverObject<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>不知道为什么使驱动对象加 1，使驱动扩展节的第一个驱动对象指向自己</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>接着就是一系列的赋值操作，其中有一个驱动初始化的函数，里面有驱动的入口函数：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driverObject<span class=\"token operator\">-></span>DriverInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDRIVER_INITIALIZE<span class=\"token punctuation\">)</span> entryPoint<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>可以发现是 PE 映像。</p>\n<p>下面是给节区赋值：</p>\n<p><code>driverObject-&gt;DriverSection = sectionPointer;</code></p>\n<p><code>sectionPointer</code>  这样被赋值了</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>status <span class=\"token operator\">=</span> <span class=\"token function\">MmLoadSystemImage</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>baseName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                                <span class=\"token operator\">&amp;</span>sectionPointer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>imageBaseAddress <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>跟一下  <code>MmLoadSystemImage</code>  这个函数:</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">MmLoadSystemImage</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN PUNICODE_STRING ImageFileName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    IN PUNICODE_STRING NamePrefix OPTIONAL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    IN PUNICODE_STRING LoadedBaseName OPTIONAL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    IN ULONG LoadFlags<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    OUT PVOID <span class=\"token operator\">*</span>ImageHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    OUT PVOID <span class=\"token operator\">*</span>ImageBaseAddress</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>我们只看其对倒数第二个函数的操作：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">*</span>ImageHandle <span class=\"token operator\">=</span> DataTableEntry<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>发现有对其赋值的操作，查看  <code>DataTableEntry</code> :</p>\n<p>查看其声明  <code>PKLDR_DATA_TABLE_ENTRY DataTableEntry;</code></p>\n<p>查看类型：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_KLDR_DATA_TABLE_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    LIST_ENTRY InLoadOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    PVOID ExceptionTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ULONG ExceptionTableSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// ULONG padding on IA64</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    PVOID GpValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    PNON_PAGED_DEBUG_INFO NonPagedDebugInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    PVOID DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    PVOID EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    ULONG SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    UNICODE_STRING FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    UNICODE_STRING BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ULONG Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    USHORT LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    USHORT __Unused5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    PVOID SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    ULONG CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// ULONG padding on IA64</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    PVOID LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    PVOID PatchInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span> KLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PKLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>还是这个链表。</p>\n<p>接着向下分析：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>status <span class=\"token operator\">=</span> <span class=\"token function\">ObInsertObject</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                             <span class=\"token punctuation\">(</span>PACCESS_STATE<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                             FILE_READ_DATA<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                             <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                             <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                             <span class=\"token operator\">&amp;</span>driverHandle <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个函数的介绍是：这个例程在当前进程句柄表中插入一个对象。</p>\n<p>接着下面的函数是资源相关的，暂时不分析。</p>\n<p>接着又是测试  <code>ObReferenceObjectByHandle</code>  函数，</p>\n<p>WRK 中的函数介绍为：给定一个对象的句柄，这个例程返回一个指向具有适当引用计数的对象主体的指针。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>status <span class=\"token operator\">=</span> <span class=\"token function\">ObReferenceObjectByHandle</span><span class=\"token punctuation\">(</span> driverHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                    IoDriverObjectType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                    <span class=\"token function\">KeGetPreviousMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                                    <span class=\"token punctuation\">(</span>PVOID <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>driverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                    <span class=\"token punctuation\">(</span>POBJECT_HANDLE_INFORMATION<span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">NtClose</span><span class=\"token punctuation\">(</span> driverHandle <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>判读是否成功后就关闭句柄了。</p>\n<p>接着向下分析直到看到调用入口点了：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>status <span class=\"token operator\">=</span> driverObject<span class=\"token operator\">-></span><span class=\"token function\">DriverInit</span><span class=\"token punctuation\">(</span> driverObject<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>registryPath<span class=\"token operator\">-></span>Name <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">*</span>DriverEntryStatus <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  status <span class=\"token operator\">=</span> STATUS_FAILED_DRIVER_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>也就是说只要符合 PE 文件格式的，我们自己可以构造，就是用 mian 函数构造两个参数，分别接受这个两个对象，一样的可以贴到这个内核里面，通过服务注册，因为从上到下来看它并没用做什么校验。--- 火哥原话 …… 没听懂。</p>\n<p><strong>这里还有一个扩展知识</strong><br />\n调用  <code>DriverInit</code>  函数时有一个返回，如果不成功，还会把这个返回值给下一个函数，而下一个函数会把这个加载失败的驱动给去掉。而这种一次性的加载能干什么呢？<br />\n如果我们是想提权，直接在 DriverEntry 中构建一个调用门或者构建一个中断，然后把我们的函数拷贝到自己分配的一块内存，把 ShellCode 拷进去，这样我们驱动返回失败，驱动被摘除，只留下了一块内存（函数）了，基本就检测不到了。</p>\n<p><code>IopLoadExit</code>  后面都是释放了内存。</p>\n<p>如图：</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>系统已经自己抹去 PE 指纹了，初始化函数已经没了。</p>\n<p>操作系统并没有把驱动对象放到全局变量中保存，只是一个局部变量，唯一做得就是放到链表中保存，搞定这个链表就把驱动隐藏了。</p>\n<p>操作系统若不释放的话，谁都能找到这个驱动的入口的点了:</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>当操作系统抹去 PE 指纹后，就不是一个 PE 文件了，只是一块内存注入到了内核空间中（高 2G 上）。<br />\n所以在这里，所有的东西都被抹掉了，只能通过这个链表才能找的着，那我们如何在这里动手脚呢？</p>\n<p>还是需要看这两个结构体：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd<span class=\"token operator\">></span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token operator\">/</span>s pdriver</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_DRIVER_OBJECT</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x89d35f38</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x000</span> Type             <span class=\"token operator\">:</span> <span class=\"token number\">0</span>n4</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x002</span> Size             <span class=\"token operator\">:</span> <span class=\"token number\">0</span>n168</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x004</span> DeviceObject     <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x008</span> Flags            <span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x00c</span> DriverStart      <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a0000</span> Void</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x010</span> DriverSize       <span class=\"token operator\">:</span> <span class=\"token number\">0x6000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x014</span> DriverSection    <span class=\"token operator\">:</span> <span class=\"token number\">0x89e01618</span> Void</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x018</span> DriverExtension  <span class=\"token operator\">:</span> <span class=\"token number\">0x89d35fe0</span> _DRIVER_EXTENSION</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x01c</span> DriverName       <span class=\"token operator\">:</span> _UNICODE_STRING <span class=\"token string\">\"\\Driver\\DriverHidden111\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x024</span> HardwareDatabase <span class=\"token operator\">:</span> <span class=\"token number\">0x8067f260</span> _UNICODE_STRING <span class=\"token string\">\"\\REGISTRY\\MACHINE\\HARDWARE\\DESCRIPTION\\SYSTEM\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x028</span> FastIoDispatch   <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x02c</span> DriverInit       <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a4000</span>     <span class=\"token keyword\">long</span>  DriverHidden111<span class=\"token operator\">!</span>GsDriverEntry<span class=\"token operator\">+</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x030</span> DriverStartIo    <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x034</span> DriverUnload     <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x038</span> MajorFunction    <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token number\">0x804f55ce</span>     <span class=\"token keyword\">long</span>  nt<span class=\"token operator\">!</span>IopInvalidDeviceRequest<span class=\"token operator\">+</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>kd<span class=\"token operator\">></span> dt _LDR_DATA_TABLE_ENTRY <span class=\"token number\">0x89e01618</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>nt<span class=\"token operator\">!</span>_LDR_DATA_TABLE_ENTRY</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x000</span> InLoadOrderLinks <span class=\"token operator\">:</span> _LIST_ENTRY <span class=\"token punctuation\">[</span> <span class=\"token number\">0x8055e720</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8a1b5c30</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x008</span> InMemoryOrderLinks <span class=\"token operator\">:</span> _LIST_ENTRY <span class=\"token punctuation\">[</span> <span class=\"token number\">0xffffffff</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xffffffff</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x010</span> InInitializationOrderLinks <span class=\"token operator\">:</span> _LIST_ENTRY <span class=\"token punctuation\">[</span> <span class=\"token number\">0x12</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x0</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x018</span> DllBase          <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a0000</span> Void</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x01c</span> EntryPoint       <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a4000</span> Void</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x020</span> SizeOfImage      <span class=\"token operator\">:</span> <span class=\"token number\">0x6000</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x024</span> FullDllName      <span class=\"token operator\">:</span> _UNICODE_STRING <span class=\"token string\">\"\\??\\C:\\Documents and Settings\\Administrator\\桌面\\DriverHidden111.sys\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x02c</span> BaseDllName      <span class=\"token operator\">:</span> _UNICODE_STRING <span class=\"token string\">\"DriverHidden111.sys\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x034</span> Flags            <span class=\"token operator\">:</span> <span class=\"token number\">0x9104000</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x038</span> LoadCount        <span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x03a</span> TlsIndex         <span class=\"token operator\">:</span> <span class=\"token number\">0x2d</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x03c</span> HashLinks        <span class=\"token operator\">:</span> _LIST_ENTRY <span class=\"token punctuation\">[</span> <span class=\"token number\">0xffffffff</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xa576</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x03c</span> SectionPointer   <span class=\"token operator\">:</span> <span class=\"token number\">0xffffffff</span> Void</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x040</span> CheckSum         <span class=\"token operator\">:</span> <span class=\"token number\">0xa576</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x044</span> TimeDateStamp    <span class=\"token operator\">:</span> <span class=\"token number\">0xfffffffe</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x044</span> LoadedImports    <span class=\"token operator\">:</span> <span class=\"token number\">0xfffffffe</span> Void</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x048</span> EntryPointActivationContext <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x04c</span> PatchInformation <span class=\"token operator\">:</span> <span class=\"token number\">0x00720044</span> Void</pre></td></tr></table></figure><p>为了看着方便直接就简化了：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd<span class=\"token operator\">></span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token operator\">/</span>s pdriver</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">_DRIVER_OBJECT</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x89d35f38</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x000</span> Type             <span class=\"token operator\">:</span> <span class=\"token number\">0</span>n4</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x002</span> Size             <span class=\"token operator\">:</span> <span class=\"token number\">0</span>n168</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   ……</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x00c</span> DriverStart      <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a0000</span> Void</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x010</span> DriverSize       <span class=\"token operator\">:</span> <span class=\"token number\">0x6000</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x014</span> DriverSection    <span class=\"token operator\">:</span> <span class=\"token number\">0x89e01618</span> Void</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   ……</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x02c</span> DriverInit       <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a4000</span>     <span class=\"token keyword\">long</span>  DriverHidden111<span class=\"token operator\">!</span>GsDriverEntry<span class=\"token operator\">+</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   ……</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>kd<span class=\"token operator\">></span> dt _LDR_DATA_TABLE_ENTRY <span class=\"token number\">0x89e01618</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>nt<span class=\"token operator\">!</span>_LDR_DATA_TABLE_ENTRY</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  ……</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x018</span> DllBase          <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a0000</span> Void</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x01c</span> EntryPoint       <span class=\"token operator\">:</span> <span class=\"token number\">0xba4a4000</span> Void</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token operator\">+</span><span class=\"token number\">0x020</span> SizeOfImage      <span class=\"token operator\">:</span> <span class=\"token number\">0x6000</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  ……</pre></td></tr></table></figure><hr />\n<p>上面逆 IopLoadDriver 函数 主要得到的信息就是：驱动对象不是全局变量，在这个函数结束后就被释放了，唯一保存的地方就是  <code>_LDR_DATA_TABLE_ENTRY</code>  链表中，但为什么我们断链后 PCHunter 仍然能后发现我们的驱动呢？</p>\n<p>其实 PCHunter 并不是遍历链表找驱动，而是进行特征码扫描，去寻找驱动对象的特征，从而定位驱动对象这个结构体。</p>\n<p>PCHunter 是在哪里定位扫描的呢？</p>\n<p>不知道……</p>\n<hr />\n<p>有哪些特征码呢？</p>\n<p>根据  <code>_DRIVER_OBJECT</code>  结构体我们能发现一些固有的 “特征”，这些可以拿来作为特征码遍历内存。</p>\n<p>从结构体来看，加载完后暂时没用的可以作为特征的结构有如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CSHORT Type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CSHORT Size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PVOID DriverStart<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ULONG DriverSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>PVOID DriverSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PDRIVER_EXTENSION DriverExtension<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>UNICODE_STRING DriverName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PUNICODE_STRING HardwareDatabase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>PFAST_IO_DISPATCH FastIoDispatch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>PDRIVER_INITIALIZE DriverInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>PDRIVER_STARTIO DriverStartIo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>PDRIVER_UNLOAD DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其实只要抹掉  <code>DriverSection</code>  就行了，但保险起见可以都抹除了。</p>\n<h1 id=\"编写代码绕过pchunter\"><a class=\"anchor\" href=\"#编写代码绕过pchunter\">#</a> 编写代码绕过 PCHunter</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 遍历内核模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tLIST_ENTRY InLoadOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tLIST_ENTRY InMemoryOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tLIST_ENTRY InInitializationOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPVOID DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPVOID EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tULONG SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tUNICODE_STRING FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tUNICODE_STRING BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tULONG Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tUSHORT LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tUSHORT TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tLIST_ENTRY HashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\tPVOID SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tULONG CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tULONG TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\tPVOID LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">_ACTIVATION_CONTEXT</span><span class=\"token operator\">*</span> EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tPVOID PatchInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>HANDLE hThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>VOID <span class=\"token function\">ThreadRun</span><span class=\"token punctuation\">(</span>_In_ PVOID StartContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程开始执行！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tLARGE_INTEGER times<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\ttimes<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token function\">KeDelayExecutionThread</span><span class=\"token punctuation\">(</span>KernelMode<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tPDRIVER_OBJECT pDriver <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDRIVER_OBJECT<span class=\"token punctuation\">)</span>StartContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverSection <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverStart <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverInit <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverStartIo <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>FastIoDispatch <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverExtension <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token function\">ZwClose</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程结束执行！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t__asm <span class=\"token keyword\">int</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdtePre<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteCur<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteNex<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\tpLdteCur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pdriver<span class=\"token operator\">-></span>DriverSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tpLdtePre <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\tpLdteNex <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tpLdtePre<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tpLdteNex<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Blink <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token function\">PsCreateSystemThread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>hThread<span class=\"token punctuation\">,</span> GENERIC_ALL<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> ThreadRun<span class=\"token punctuation\">,</span> pdriver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里有点不好的地方就是无法卸载此驱动，就算在  <code>UnloadDriver</code>  填写了恢复代码。具体详情需要分析  <code>IopUnloadDriver</code>   看它什么时候调用该函数。</p>\n<p>结果：</p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<p>经过火哥测试，在 win7 下也是可以隐藏的。</p>\n",
            "tags": [
                "隐藏驱动",
                "IopLoadDriver"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/",
            "title": "驱动开发-内核编程常用技巧",
            "date_published": "2021-12-06T14:12:04.000Z",
            "content_html": "<h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n",
            "tags": []
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-64%E4%BD%8D%E4%B8%8E32%E4%BD%8D%E5%86%85%E6%A0%B8%E5%BC%80%E5%8F%91%E5%B7%AE%E5%BC%82/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-64%E4%BD%8D%E4%B8%8E32%E4%BD%8D%E5%86%85%E6%A0%B8%E5%BC%80%E5%8F%91%E5%B7%AE%E5%BC%82/",
            "title": "驱动开发-64位与32位内核开发差异",
            "date_published": "2021-12-06T14:11:07.000Z",
            "content_html": "<h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n",
            "tags": []
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80plus/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80plus/",
            "title": "驱动开发-内核编程基础plus",
            "date_published": "2021-12-06T14:08:01.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>学习一下常用的驱动编程机制。</p>\n<h1 id=\"上下文环境\"><a class=\"anchor\" href=\"#上下文环境\">#</a> 上下文环境</h1>\n<p>应用层 EXE 有独立进程的概念。当这个 EXE 运行的时候，开发者可以很清楚地知道程序的定运行在哪一个线程中。对于内核驱动开发来说，进程的概念啊显得相当模糊，初学者往往不清楚自己的驱动代码具体运行在什么进程或线程中。</p>\n<p>这就是需要了解的上下文 (Context) 概念，上下文泛指 CPU 在执行代码时，该代码所处的环境与状态。通俗来讲，这些环境包括（不仅限）：当前代码所属线程、中断请求级别、CPU 寄存器各状态。</p>\n<p>这里可以做一个小实验，写代码验证一下。<br />\n写一个简单的驱动代码，测试驱动入口函数和驱动卸载函数在执行时是属于哪一个进程的，只要在这两个函数中调用  <code>PsGetCurrentProcessId</code>  函数获取当前进程 ID 就行。</p>\n<p>这里我就直接说结果了。</p>\n<p>无论是驱动入口函数还是驱动卸载函数，都隶属于进程 ID 为 4 的进程，也就是 SYSTEM 进程。</p>\n<p>SYSTEM 进程其实是操作系统虚拟出来的一个进程，代表系统内核。一般来说内核代码都处于 SYSTEM 进程空间中，但驱动对象（DRIVER_OBJECT）的派遣例程一般工作在发起请求的进程中。</p>\n<p><strong>地址空间</strong>，对 32 位系统来说，应用层程序有独立的 2GB 低地址虚拟内存空间，而高地址的 2GB 是内核共享的地址空间。<br />\n在 64 位 Windows 中，虚拟地址空间的理论大小为 2 的 64 次方字节，但实际使用的仅一小部分，范围从  <code>0x000`00000000</code>  至  <code>0x7FF`FFFFFFFF</code>  的 8TB 用于应用层空间，范围从  <code>0xFFFF0800`00000000</code>  至  <code>0xFFFFFFFF`FFFFFFFF</code>  的 248TB 用于内核空间。</p>\n<h1 id=\"中断请求级别\"><a class=\"anchor\" href=\"#中断请求级别\">#</a> 中断请求级别</h1>\n<h1 id=\"链表\"><a class=\"anchor\" href=\"#链表\">#</a> 链表</h1>\n<p>链表作为内核</p>\n<h1 id=\"自旋锁\"><a class=\"anchor\" href=\"#自旋锁\">#</a> 自旋锁</h1>\n<h1 id=\"注册表\"><a class=\"anchor\" href=\"#注册表\">#</a> 注册表</h1>\n<p>注册表是 Windows 系统中最重要的数据配置存储结构，存储着系统绝大部分的核心配置信息。注册表实际上也是一种文件。这些文件大多数存储在<strong>系统盘</strong> system32\\config 目录下。</p>\n<p>在资源管理器中我没有权限访问，懒得更改了，我在 cmd 中查看如下：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:\\Windows\\System32\\config&gt;dir</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>C:\\Windows\\System32\\config 的目录</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>2022&#x2F;05&#x2F;09  13:09    &lt;DIR&gt;          .</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>2022&#x2F;05&#x2F;09  13:09    &lt;DIR&gt;          ..</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>2022&#x2F;05&#x2F;06  00:57           524,288 BBI</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>2022&#x2F;01&#x2F;26  16:46            28,672 BCD-Template</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>2022&#x2F;05&#x2F;09  18:04        38,797,312 COMPONENTS</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>2022&#x2F;05&#x2F;06  00:57           786,432 DEFAULT</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>2022&#x2F;05&#x2F;09  17:31         8,118,272 DRIVERS</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>2022&#x2F;01&#x2F;26  18:14            32,768 ELAM</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>2022&#x2F;01&#x2F;26  16:37    &lt;DIR&gt;          Journal</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>2022&#x2F;01&#x2F;26  16:37    &lt;DIR&gt;          RegBack</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>2022&#x2F;05&#x2F;06  00:57           131,072 SAM</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>2022&#x2F;05&#x2F;06  00:57            65,536 SECURITY</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>2022&#x2F;05&#x2F;06  00:57       118,489,088 SOFTWARE</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>2022&#x2F;05&#x2F;06  00:57        24,903,680 SYSTEM</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>2022&#x2F;01&#x2F;26  16:37    &lt;DIR&gt;          systemprofile</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>2022&#x2F;01&#x2F;26  16:37    &lt;DIR&gt;          TxR</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>2022&#x2F;01&#x2F;26  16:40             8,192 userdiff</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>              11 个文件    191,885,312 字节</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>               6 个目录 50,612,371,456 可用字节</pre></td></tr></table></figure><p>可以看到  <code>SOFTWARE</code>  、  <code>SYSTEM</code>  、  <code>SAM</code>  、等文件，这些文件被以<strong>内存映射</strong>的方式映射到内核空间，然后以一种被称为 “HIVE&quot; 的方式组织起来、注册表 API 实际上操作的是这份 HIVE 内存数据，对 HIVE 数据的改动，最终会被回写到 config 目录下对应的文件中。</p>\n<p>如果只是想单纯的使用注册表做数据读取或存储，可以没有必要深入去研究内核对注册表的实现方式。</p>\n<h2 id=\"注册表的打开与关闭\"><a class=\"anchor\" href=\"#注册表的打开与关闭\">#</a> 注册表的打开与关闭</h2>\n<h2 id=\"注册表的修改\"><a class=\"anchor\" href=\"#注册表的修改\">#</a> 注册表的修改</h2>\n<h2 id=\"注册表的读取\"><a class=\"anchor\" href=\"#注册表的读取\">#</a> 注册表的读取</h2>\n<h2 id=\"作业\"><a class=\"anchor\" href=\"#作业\">#</a> 作业</h2>\n<h3 id=\"注册表实现驱动的自启\"><a class=\"anchor\" href=\"#注册表实现驱动的自启\">#</a> 注册表实现驱动的自启</h3>\n<p>驱动文件的转移</p>\n<h1 id=\"文件操作\"><a class=\"anchor\" href=\"#文件操作\">#</a> 文件操作</h1>\n<h2 id=\"文件的打开与关闭\"><a class=\"anchor\" href=\"#文件的打开与关闭\">#</a> 文件的打开与关闭</h2>\n<h2 id=\"文件的读写\"><a class=\"anchor\" href=\"#文件的读写\">#</a> 文件的读写</h2>\n<h2 id=\"文件的删除\"><a class=\"anchor\" href=\"#文件的删除\">#</a> 文件的删除</h2>\n<p>强行删除<br />\n文件的保护</p>\n<h2 id=\"作业-2\"><a class=\"anchor\" href=\"#作业-2\">#</a> 作业</h2>\n<p>在内核中实现文件的拷贝</p>\n<h1 id=\"线程与事件\"><a class=\"anchor\" href=\"#线程与事件\">#</a> 线程与事件</h1>\n<h2 id=\"使用系统线程\"><a class=\"anchor\" href=\"#使用系统线程\">#</a> 使用系统线程</h2>\n<h2 id=\"使用同步事件\"><a class=\"anchor\" href=\"#使用同步事件\">#</a> 使用同步事件</h2>\n",
            "tags": [
                "上下文环境",
                "中断请求级别",
                "链表",
                "自旋锁",
                "注册表",
                "地址空间",
                "文件操作",
                "线程与事件"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%9F%BA%E4%BA%8EVS+WDK%E7%9A%84%E9%A9%B1%E5%8A%A8%E8%B0%83%E8%AF%95/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%9F%BA%E4%BA%8EVS+WDK%E7%9A%84%E9%A9%B1%E5%8A%A8%E8%B0%83%E8%AF%95/",
            "title": "驱动开发-基于VS+WDK的驱动调试",
            "date_published": "2021-11-20T06:22:33.000Z",
            "content_html": "<h1 id=\"基于vs-wdk-的环境调试\"><a class=\"anchor\" href=\"#基于vs-wdk-的环境调试\">#</a> 基于 VS + WDK 的环境调试</h1>\n<p>物理机为 win10,Visual Studio 的办事本是 2019，配合 WDK10 版本。</p>\n<p>VMware 虚拟机内安装了一个 Win10 操作系统，虚拟机网卡使用 NAT 方式，具体情如下：</p>\n<blockquote>\n<p>调试机器：Windows10  IP：192.168.2.105<br />\n 被调试机器：Windows10  IP：192.168.252.135</p>\n</blockquote>\n<p>调试使用网络作为调试机器与被调试机器之间的连接方式，但是注意防火墙，为了避免不必要的麻烦建议关闭防火墙，或配置防火墙放行规则，不管怎样，要保持调试机器与被调试机器之间网络的畅通。</p>\n<h2 id=\"配置被调试机\"><a class=\"anchor\" href=\"#配置被调试机\">#</a> 配置被调试机</h2>\n<p>以管理员权限运行 <code>cmd</code> , 输入： <code>bcdedit/debug on</code>  命令。这个命令的作用是把被调试机器设置成调试模式。</p>\n<p>再输入： <code>bcdedit /dbgsettings net hostip:192.168.2.105 port:50011</code> 。</p>\n<p>这个命令的作用是使用网络进行调试的连接方式，  <code>hostip</code>  值调试机器的 IP，  <code>port</code>  标识使用的网络端口，建议范围是  <code>49152-65535</code> 。</p>\n<p>命令执行完后会显示一个  <code>Key</code> ，需要保存这个  <code>Key</code> ，用于后面调试机器的配置。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"配置调试机\"><a class=\"anchor\" href=\"#配置调试机\">#</a> 配置调试机</h2>\n<p>首先打开 VS，找到  <code>Configure Devices</code></p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>点击 <code>Add New Device</code>  弹出的配置对话框，在 “Dispaly name” 下面输入设备的名字，例如： “MyFirstDevice”；<br />\n在 “Device Type” 下面的下拉框中选择 “Computer”；我的 vs2019 版本中没有这个选项，忽略。<br />\n在 “Network host name” 下面输入被调试机器的 “hostname”，也可以输入 “IP”；<br />\n在最后一项 “Provisioning Options” 中，选择第二项 “Manually configure debuggers and do not  provision”，意思是说手动配置被调试机器的调试选项以及手动分发驱动文件。</p>\n<p>整体配置如下：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>完成后点击下一步。</p>\n<p>需要注意的是，如果被调试机器只有一个网卡，则最后一个 “bus Parameters” 可以不填，否则需要根据 PCI 规范，填入相应设备的总线号（Bus number）、设备号 (Device Number) 以及功能号（Function number），因为我的被调试机只有一块网卡，所以这个值留空。</p>\n<p>整体配置如下：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h1 id=\"进行调试\"><a class=\"anchor\" href=\"#进行调试\">#</a> 进行调试</h1>\n<p>开始调试前介绍两个断点函数</p>\n<p><code>KdBreakPoint()</code>  ：只对 Debug 版的驱动有效。<br />\n <code>DbgBreakPoint()</code> ： 对 Release 版的有效。</p>\n<p>驱动代码如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 卸载函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT driver<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"驱动程序停止运行了.\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我被加载了。\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">DbgBreakPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>首先编译生成 sys 文件，然后在 VS 的菜单中找到 “调试”--&gt;“附加到进程”，在弹出的对话框中，选择 “连接类型” 为 “Windows Kernel Mode Debugger”，“连接目标” 选择为刚才我们配置好的 “MyFirst Device”，在可用进程中选择 “Kernel”，如下所示：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>点击附加后 vs 中会出现一个 “Debugger Immediate Window” 界面，界面显示如图所示：</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>这表示当前调试使用网络连接的方式，正在等待被连接。接下来重启被调试机器，让被调试机器的调试配置生效。</p>\n<p>被调试机器在重启过程中，会主动连接设置的 50011 端口，连接建立好之后，可以在 “Debugger Immediate Window” 界面看到如下信息：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>最后把 sys 文件放入被调试机器中，运行加载该驱动，由于有断点所以会被断下，我们就可以 F10 单步调试了。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p>谭文 陈铭霖《Windows 内核编程》</p>\n",
            "tags": [
                "驱动调试"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E8%BF%87%E5%86%99%E6%8B%B7%E8%B4%9D/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E8%BF%87%E5%86%99%E6%8B%B7%E8%B4%9D/",
            "title": "驱动开发-过写拷贝",
            "date_published": "2021-10-29T08:15:32.000Z",
            "content_html": "<h1 id=\"要求\"><a class=\"anchor\" href=\"#要求\">#</a> 要求</h1>\n<ol>\n<li>自己写代码加载、卸载驱动</li>\n<li>段页的知识：绕过写拷贝。</li>\n</ol>\n<blockquote>\n<p>两个思路：<br />\n（1）、另外申请一个线性地址，映射到 MessageBoxA 的物理页，设置 PTE 的 R/W 属性，使其可读写。<br />\n（2）、修改 VAD 树，将写拷贝改为可读可写。</p>\n</blockquote>\n<ol start=\"3\">\n<li>R3R0 通信</li>\n<li>写 HOOK</li>\n<li>ShellCode</li>\n<li>ShellCode 放哪？</li>\n</ol>\n<p>在 ring3：<br />\n注册和卸载驱动<br />\n找到 User32，定位 Messagebox 函数地址，传给 0 环</p>\n<p>编写 shellcode 注入进 user32，对 Messagebox 进行 INLINE HOOK<br />\n 打印使用 Messagebox 的程序<br />\n在 ring0：</p>\n<p>与 3 环通信，并接受 Messagebox 的地址，修改其 PTE 与 PDE 的属性<br />\n修改完后给 3 环发送信息，告知 ring 3 可以开始 inline hook</p>\n<h1 id=\"驱动中设备扩展的使用\"><a class=\"anchor\" href=\"#驱动中设备扩展的使用\">#</a> 驱动中设备扩展的使用</h1>\n<p>驱动的设备对象中有一个字段是设备扩展<br />\n该设备扩展的大小是不固定的，依据在创建设备对象时给定的大小分配内存。</p>\n<p>详细参见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDkwODczL2FydGljbGUvZGV0YWlscy8xMDc1ODc5MTg=\">https://blog.csdn.net/qq_41490873/article/details/107587918</span></p>\n<h1 id=\"不使用-shellcode-注入\"><a class=\"anchor\" href=\"#不使用-shellcode-注入\">#</a> 不使用 ShellCode 注入</h1>\n<p>驱动编程<br />\n 0 环 - 3 环通信常规方式（设备读写）<br />\n修改 PTE 过写拷贝<br />\n调用门提权（有一套 API 实现以系统权限调用用户程序里的裸函数，支持传参）<br />\n中断门 HOOK<br />\n 设备扩展内存<br />\n双端链表模拟队列</p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA5MzEzMjM3\">https://blog.csdn.net/Kwansy/article/details/109313237</span></p>\n<h1 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h1>\n<p>github:&lt;&gt;</p>\n",
            "tags": []
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E2%80%94%E4%BD%BF%E7%94%A8SCM%E5%8A%A0%E8%BD%BD%E9%A9%B1%E5%8A%A8/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E2%80%94%E4%BD%BF%E7%94%A8SCM%E5%8A%A0%E8%BD%BD%E9%A9%B1%E5%8A%A8/",
            "title": "驱动开发—使用SCM加载驱动",
            "date_published": "2021-10-12T02:59:22.000Z",
            "content_html": "<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>Windows 系统加载驱动的方法有很多，其中最正确的方法就是使用 SCM（Server Control manager，服务控制管理器）来完成此操作。<br />\n使用 SCM 记载驱动是需要我们注意两点：</p>\n<ul>\n<li>SCM 会操作注册表</li>\n<li>SCM 加载驱动是不可分页的</li>\n</ul>\n<p>这个机制会使驱动的回调函数、IRP 处理函数与其他重要代码不会被页换出，而总是驻留在内存中，以此来保证这个驱动不会因为这些原因导致 BsoD。</p>\n<h1 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h1>\n<p>接下来用代码来演示如何加载和卸载一个驱动。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>VOID <span class=\"token function\">SCMLoadDriver</span><span class=\"token punctuation\">(</span>PUCHAR lpszDriverFullPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">//1. 使用 OpenSCManager 函数打开 SCM</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">//SCM 句柄</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tSC_HANDLE hSCM <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tPUCHAR lpszDriverName <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tDWORD dwRtn <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 获取驱动名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">_splitpath</span><span class=\"token punctuation\">(</span>lpszDriverFullPath<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> lpszDriverName<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\thSCM <span class=\"token operator\">=</span> <span class=\"token function\">OpenSCManager</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> SC_MANAGER_ALL_ACCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hSCM <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Error!\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"OpenSCManager fail!\"</span><span class=\"token punctuation\">,</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">CloseServiceHandle</span><span class=\"token punctuation\">(</span>hSCM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">//2. 使用 CreateService 函数利用 SCM 句柄创建一个服务</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">//NT 驱动服务句柄</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tSC_HANDLE hService <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\thService <span class=\"token operator\">=</span> <span class=\"token function\">CreateService</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\thSCM<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tlpszDriverName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tlpszDriverName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tSERVICE_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tSERVICE_KERNEL_DRIVER<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tSERVICE_DEMAND_START<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tSERVICE_ERROR_IGNORE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tlpszDriverFullPath<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hService <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tdwRtn <span class=\"token operator\">=</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Error!\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>L<span class=\"token string\">\"CreateeeeeeeService fail! ErrorCode:%d\"</span><span class=\"token punctuation\">,</span> dwRtn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token function\">CloseServiceHandle</span><span class=\"token punctuation\">(</span>hService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token function\">CloseServiceHandle</span><span class=\"token punctuation\">(</span>hSCM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token comment\">//3. 使用 StartService 函数启动我们刚刚创建的服务</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">StartService</span><span class=\"token punctuation\">(</span>hService<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\tdwRtn <span class=\"token operator\">=</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Error!\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>L<span class=\"token string\">\"StartService fail! ErrorCode:%d\"</span><span class=\"token punctuation\">,</span> dwRtn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token function\">CloseServiceHandle</span><span class=\"token punctuation\">(</span>hService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token function\">CloseServiceHandle</span><span class=\"token punctuation\">(</span>hSCM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "OpenSCManager",
                "CreateService"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-0%E7%8E%AF%E4%B8%8E3%E7%8E%AF%E7%9A%84%E9%80%9A%E4%BF%A1%EF%BC%88%E5%B8%B8%E8%A7%84%E6%96%B9%E6%B3%95%EF%BC%89/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-0%E7%8E%AF%E4%B8%8E3%E7%8E%AF%E7%9A%84%E9%80%9A%E4%BF%A1%EF%BC%88%E5%B8%B8%E8%A7%84%E6%96%B9%E6%B3%95%EF%BC%89/",
            "title": "驱动开发-0环与3环的通信（常规方法）",
            "date_published": "2021-09-24T15:54:24.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>非常规方法是 0 环  <code>INLINE HOOK</code></p>\n<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>驱动程序原本的目的是用来控制硬件，为了控制驱动运行，我们需要在 3 环向驱动发数据，所以我们需要有一种方法来建立 0 环到 3 环的通信。</p>\n<p>虽然驱动程序的目的是用来控制硬件的，但我们也可以用驱动做一些安全相关的事情，因为驱动运行在 0 环。</p>\n<p>本文介绍常规方式，也就是创建设备对象的方式。</p>\n<h2 id=\"设备对象\"><a class=\"anchor\" href=\"#设备对象\">#</a> 设备对象</h2>\n<ol>\n<li>我们在<strong>开发窗口程序</strong>的时候，消息被封装成一个结构体：<strong>MSG</strong></li>\n<li>在<strong>内核开发</strong>时，消息被封装成另外一个结构体：<strong>IRP（I/O Request Package）</strong></li>\n<li>在<strong>窗口程序</strong>中，能够接收消息的只能是<strong>窗口对象</strong></li>\n<li>在<strong>内核</strong>中，能够接收 IRP 消息的只能是<strong>设备对象</strong></li>\n</ol>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>可以发现 3 环窗口程序中的 MSG 结构体和窗口对象，与 0 环的设备对象和 IRP 结构体的关系很像。</p>\n<h2 id=\"创建设备对象\"><a class=\"anchor\" href=\"#创建设备对象\">#</a> 创建设备对象</h2>\n<p>调用 IoCreateDevice 函数创建设备对象，例如：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">IoCreateDevice</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    _In_  PDRIVER_OBJECT DriverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _In_  ULONG DeviceExtensionSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _In_opt_ PUNICODE_STRING DeviceName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _In_  DEVICE_TYPE DeviceType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _In_  ULONG DeviceCharacteristics<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _In_  BOOLEAN Exclusive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    PDEVICE_OBJECT <span class=\"token operator\">*</span>DeviceObject  <span class=\"token comment\">// 二级指针</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>参数说明</strong></p>\n<ul>\n<li>\n<p>DriverObject<br />\n 一个指向调用该函数的驱动程序对象。每一个驱动程序在它的 DriverEntry 过程里接收一个指向它的驱动程序对象.<br />\nWDM 功能和过滤驱动程序也在他们的 AddDevice 过程接受一个驱动程序对象的指针</p>\n</li>\n<li>\n<p>DeviceExtensionSize<br />\n 指定驱动程序为设备扩展对象而定义的结构体的大小。</p>\n</li>\n<li>\n<p>DeviceName<br />\n (可选的参数) 指向一个以零结尾的包含 Unicode 字符串的缓冲区，那是这个设备的名称，该字符串必须是一个完整的设备路径名.<br />\nWDM 功能驱动程序和过滤驱动程序它们的设备对象没有名字.</p>\n</li>\n</ul>\n<p>注意：如果设备名未提供 (即这个参数是 NULL),IoCreateDevice 创建的设备对象将不会有一个 DACL 与之相关联</p>\n<ul>\n<li>\n<p>DeviceType<br />\n 指定一个由一个系统定义的 FILE_DEVICE_XXX 常量，表明了这个设备的类型<br />\n (如 FILE_DEVICE_DISK,FILE_DEVICE_KEYBOARD 等), 或供应商定义的一种新型设备的类型</p>\n</li>\n<li>\n<p>DeviceCharacteristics<br />\n 指定一个或多个系统定义的常量，连接在一起，提供有关驱动程序的设备其他信息。对于可能的设备特征信息，<br />\n 见 <code>DEVICE_OBJECT</code>  结构体.</p>\n</li>\n<li>\n<p>Exclusive<br />\n 如果指定设备是独占的，大部分驱动程序设置这个值为 FALSE, 如果是独占的话设置为 TRUE，非独占设置为 FALSE.</p>\n</li>\n<li>\n<p>DeviceObject<br />\n 一个指向 DEVICE_OBJECT 结构体指针的指针，这是一个指针的指针，指向的指针用来接收 DEVICE_OBJECT 结构体的指针.</p>\n</li>\n</ul>\n<p><strong>返回值</strong></p>\n<p>IoCreateDevice 函数成功时返回 STATUS_SUCCESS, 失败时返回适当的 NTSTATUS 错误代码.<br />\n 这时这个函数返回值:　<br />\n <code>STATUS_INSUFFICIENT_RESOURCES</code> <br />\n <code>STATUS_OBJECT_NAME_EXISTS</code> <br />\n <code>STATUS_OBJECT_NAME_COLLISION</code></p>\n<p><strong>调用要求</strong></p>\n<blockquote>\n<p>包含文件:wdm.h,ntddk.h</p>\n</blockquote>\n<p><strong>扩展</strong></p>\n<p>通常设备对象都把自己的名字放到 / Device 目录中。在 Windows 2000 中，设备的名称有两个用途。第一个用途，设备命名后，其它内核模式部件可以通过调用 IoGetDeviceObjectPointer 函数找到该设备，找到设备对象后，就可以向该设备的驱动程序发送 IRP。</p>\n<p>另一个用途，允许应用程序打开命名设备的句柄，这样它们就可以向驱动程序发送 IRP。应用程序可以使用标准的 CreateFile API 打开命名设备句柄，然后用 ReadFile、WriteFile，和 DeviceIoControl 向驱动程序发出请求。应用程序打开设备句柄时使用 //./ 路径前缀而不是标准的 UNC (统一命名约定) 名称，如 C:/MYFILE.CPP 或 //FRED/C-Drive/HISFILE.CPP。在内部，I/O 管理器在执行名称搜索前自动把 //./ 转换成 /??/。为了把 /?? 目录中的名字与名字在其它目录 (例如，在 / Device 目录) 中的对象相连接，对象管理器实现了一种称为符号连接 (symbolic link) 的对象。IRP 就是应用程序调用驱动程序。</p>\n<h2 id=\"数据交互的方式\"><a class=\"anchor\" href=\"#数据交互的方式\">#</a> 数据交互的方式</h2>\n<p>设置交互数据的方式</p>\n<p><code>pDeviceObj-&gt;Flags |= DO_BUFFERED_IO;</code></p>\n<blockquote>\n<p>缓冲区方式读写 ( <code>DO_BUFFERED_IO</code> ) ：操作系统将应用程序提供缓冲区的数据复制到内核模式下的地址中。<br />\n优点：方便；缺点：效率低<br />\n适合数据量较小时使用</p>\n</blockquote>\n<blockquote>\n<p>直接方式读写 ( <code>DO_DIRECT_IO</code> )  ：操作系统会将用户模式下的缓冲区锁住。<br />\n然后操作系统将这段缓冲区在内核模式地址再次映射一遍。<br />\n这样，用户模式的缓冲区和内核模式的缓冲区指向的是同一区域的物理内存。<br />\n优点：效率高；缺点：单独占用物理页面，无法再进行其它操作（例如文件读写）<br />\n适合数据量较大时使用</p>\n</blockquote>\n<blockquote>\n<p>其他方式读写（在调用 IoCreateDevice 创建设备后对 pDevObj-&gt;Flags 即不设置 DO_BUFFERED_IO 也不设置 DO_DIRECT_IO 此时就是其他方式）：在使用其他方式读写设备时，派遣函数直接读写应用程序提供的缓冲区地址。<br />\n在驱动程序中，直接操作应用程序的缓冲区地址是很危险的。<br />\n只有驱动程序与应用程序运行在相同线程上下文的情况下，才能使用这种方式</p>\n</blockquote>\n<h2 id=\"符号链接\"><a class=\"anchor\" href=\"#符号链接\">#</a> 符号链接</h2>\n<p>特别说明:</p>\n<ol>\n<li>设备名称的作用是给内核对象用的，如果要在 Ring3 访问，必须要有符号链接。 其实就是一个别名，没有这个别名，在 Ring3 不可见。</li>\n<li>内核模式下，符号链接是以 <code>\\??\\</code>  开头的，如 C 盘就是 <code>\\??\\C:</code></li>\n<li>而在用户模式下，则是以 <code>\\\\.\\</code>  开头的，如 C 盘就是 <code>\\\\.\\C:</code></li>\n</ol>\n<h2 id=\"irp与派遣函数\"><a class=\"anchor\" href=\"#irp与派遣函数\">#</a> IRP 与派遣函数</h2>\n<p>描述：</p>\n<ol>\n<li>当对窗口对象传递消息时，窗口对象会根据我们所传入的消息类型执行对应的回调函数</li>\n<li>当调用 CreateFile 等函数时，操作系统会将它们封装成一个结构体，此时就可以传递给设备对象，设备对象根据 IRP 的类型调用对应的派遣函数</li>\n</ol>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"irp的类型\"><a class=\"anchor\" href=\"#irp的类型\">#</a> IRP 的类型</h2>\n<p>描述：当应用层通过 <code>CreateFile</code> ， <code>ReadFile</code> ， <code>WriteFile</code> ， <code>CloseHandle</code>  等函数对设备进行打开、读取、写入、关闭的时候，会使操作系统产生出 <code>IRP_MJ_CREATE</code> ， <code>IRP_MJ_READ</code> ， <code>IRP_MJ_WRITE</code> ， <code>IRP_MJ_CLOSE</code>  等不同的 IRP。</p>\n<p>其它类型的 IRP</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h2 id=\"派遣函数\"><a class=\"anchor\" href=\"#派遣函数\">#</a> 派遣函数</h2>\n<h3 id=\"派遣函数注册位置\"><a class=\"anchor\" href=\"#派遣函数注册位置\">#</a> 派遣函数注册位置</h3>\n<pre><code>kd&gt; dt _DRIVER_OBJECT\nnt!_DRIVER_OBJECT\n   +0x000 Type             : Int2B\n   +0x002 Size             : Int2B\n   +0x004 DeviceObject     : Ptr32 _DEVICE_OBJECT\n   +0x008 Flags            : Uint4B\n   +0x00c DriverStart      : Ptr32 Void\n   +0x010 DriverSize       : Uint4B\n....\n   +0x030 DriverStartIo    : Ptr32     void \n   +0x034 DriverUnload     : Ptr32     void \t\t//卸载函数\n   +0x038 MajorFunction    : [28] Ptr32     long \t//派遣函数\n</code></pre>\n<h3 id=\"注册派遣函数\"><a class=\"anchor\" href=\"#注册派遣函数\">#</a> 注册派遣函数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span> 。。。。<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 设置卸载函数   </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> 卸载函数<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 设置派遣函数   </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_CREATE<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_CLOSE<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_WRITE<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_READ<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_CLEANUP<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">5</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_SET_INFORMATION<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">6</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_DEVICE_CONTROL<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">7</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_SHUTDOWN<span class=\"token punctuation\">]</span> \t\t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    pDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_SYSTEM_CONTROL<span class=\"token punctuation\">]</span> \t<span class=\"token operator\">=</span> 派遣函数<span class=\"token number\">9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>IRP_MJ_MAXIMUM_FUNCTION   派遣函数的最大值</pre></td></tr></table></figure><h3 id=\"派遣函数的格式\"><a class=\"anchor\" href=\"#派遣函数的格式\">#</a> 派遣函数的格式</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 派遣函数的格式：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>NTSTATUS <span class=\"token function\">MyDispatchFunction</span><span class=\"token punctuation\">(</span>PDEVICE_OBJECT pDevObj<span class=\"token punctuation\">,</span> PIRP pIrp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 处理自己的业务...</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 设置返回状态</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//  getlasterror () 得到的就是这个值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//  返回给 3 环多少数据 没有填 0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">IoCompleteRequest</span><span class=\"token punctuation\">(</span>pIrp<span class=\"token punctuation\">,</span> IO_NO_INCREMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"实验\"><a class=\"anchor\" href=\"#实验\">#</a> 实验</h2>\n<h3 id=\"r0代码\"><a class=\"anchor\" href=\"#r0代码\">#</a> R0 代码</h3>\n<p>格式都是这样</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEVICE_NAME</span> <span class=\"token expression\">L</span><span class=\"token string\">\"\\\\Device\\\\MyDevice\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// Ring3 用 CreateFile 打开设备时，用 \"\\\\\\\\.\\\\MyTestDriver\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SYMBOLICLINK_NAME</span> <span class=\"token expression\">L</span><span class=\"token string\">\"\\\\??\\\\MyTestDriver\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 0-2047 是保留的  2048~4095</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">OPER1</span> <span class=\"token expression\"><span class=\"token function\">CTL_CODE</span><span class=\"token punctuation\">(</span>FILE_DEVICE_UNKNOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">,</span> METHOD_BUFFERED<span class=\"token punctuation\">,</span> FILE_ANY_ACCESS<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">OPER2</span> <span class=\"token expression\"><span class=\"token function\">CTL_CODE</span><span class=\"token punctuation\">(</span>FILE_DEVICE_UNKNOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0x900</span><span class=\"token punctuation\">,</span> METHOD_BUFFERED<span class=\"token punctuation\">,</span> FILE_ANY_ACCESS<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 卸载函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tUNICODE_STRING SymbolicLinkName <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"驱动程序停止运行了 . \\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 删除符号链接 删除设备</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>SymbolicLinkName<span class=\"token punctuation\">,</span> SYMBOLICLINK_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">IoDeleteSymbolicLink</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>SymbolicLinkName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span>pDriver<span class=\"token operator\">-></span>DeviceObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// IRP_MJ_CREATE 处理函数</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>NTSTATUS <span class=\"token function\">IrpCreateProc</span><span class=\"token punctuation\">(</span>PDEVICE_OBJECT pDevObj<span class=\"token punctuation\">,</span> PIRP pIrp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DispatchCreate ... \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 返回状态如果不设置 Ring3 返回的是失败</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">IoCompleteRequest</span><span class=\"token punctuation\">(</span>pIrp<span class=\"token punctuation\">,</span> IO_NO_INCREMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">// IRP_MJ_CLOSE 处理函数</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>NTSTATUS <span class=\"token function\">IrpCloseProc</span><span class=\"token punctuation\">(</span>PDEVICE_OBJECT pDevObj<span class=\"token punctuation\">,</span> PIRP pIrp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DispatchClose ... \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token function\">IoCompleteRequest</span><span class=\"token punctuation\">(</span>pIrp<span class=\"token punctuation\">,</span> IO_NO_INCREMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">// IRP_MJ_DEVICE_CONTROL 处理函数 用来处理与 Ring3 交互</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>NTSTATUS <span class=\"token function\">IrpDeviceControlProc</span><span class=\"token punctuation\">(</span>PDEVICE_OBJECT pDevObj<span class=\"token punctuation\">,</span> PIRP pIrp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> STATUS_INVALID_DEVICE_REQUEST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tPIO_STACK_LOCATION pIrpStack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tULONG uIoControlCode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tPVOID pIoBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tULONG uInLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tULONG uOutLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tULONG uRead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tULONG uWrite <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token comment\">// 设置临时变量的值</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tpIrpStack <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>pIrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token comment\">// 获取控制码</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tuIoControlCode <span class=\"token operator\">=</span> pIrpStack<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>DeviceIoControl<span class=\"token punctuation\">.</span>IoControlCode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token comment\">// 获取缓冲区地址 (输入和输出的缓冲区都是一个)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tpIoBuffer <span class=\"token operator\">=</span> pIrp<span class=\"token operator\">-></span>AssociatedIrp<span class=\"token punctuation\">.</span>SystemBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">// Ring3 发送数据的长度</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tuInLength <span class=\"token operator\">=</span> pIrpStack<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>DeviceIoControl<span class=\"token punctuation\">.</span>InputBufferLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token comment\">// Ring0 发送数据的长度</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tuOutLength <span class=\"token operator\">=</span> pIrpStack<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>DeviceIoControl<span class=\"token punctuation\">.</span>OutputBufferLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>uIoControlCode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token keyword\">case</span> OPER1<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IrpDeviceControlProc -> OPER1 ... \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token keyword\">case</span> OPER2<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IrpDeviceControlProc -> OPER2 接收字节数：%d \\n\"</span><span class=\"token punctuation\">,</span> uInLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IrpDeviceControlProc -> OPER2 输出字节数：%d \\n\"</span><span class=\"token punctuation\">,</span> uOutLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t<span class=\"token comment\">// Read From Buffer</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>uRead<span class=\"token punctuation\">,</span> pIoBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IrpDeviceControlProc -> OPER2 ... %x \\n\"</span><span class=\"token punctuation\">,</span> uRead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t<span class=\"token comment\">// Write To Buffer</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pIoBuffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>uWrite<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t<span class=\"token comment\">// Set Status</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token comment\">// 设置返回状态</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\tpIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token function\">IoCompleteRequest</span><span class=\"token punctuation\">(</span>pIrp<span class=\"token punctuation\">,</span> IO_NO_INCREMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\">// 入口函数 相当于 Main 函数</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\tULONG    uIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\tPDEVICE_OBJECT pDeviceObj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\tUNICODE_STRING Devicename<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\tUNICODE_STRING SymbolicLinkName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"驱动程序开始运行了 . \\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t<span class=\"token comment\">// 创建设备名称</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Devicename<span class=\"token punctuation\">,</span> DEVICE_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t<span class=\"token comment\">// 创建设备</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">IoCreateDevice</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\tpDriver<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>Devicename<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\tFILE_DEVICE_UNKNOWN<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\tFILE_DEVICE_SECURE_OPEN<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\tFALSE<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>pDeviceObj</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建设备失败! \\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token comment\">// 设置交互数据的方式</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\tpDeviceObj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_BUFFERED_IO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token comment\">// 创建符号链接名称</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>SymbolicLinkName<span class=\"token punctuation\">,</span> SYMBOLICLINK_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token comment\">// 创建符号链接</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">IoCreateSymbolicLink</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>SymbolicLinkName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>Devicename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建符号链接失败! \\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span>pDeviceObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token comment\">// 设置分发函数和卸载函数</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_CREATE<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IrpCreateProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_CLOSE<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IrpCloseProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_DEVICE_CONTROL<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> IrpDeviceControlProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"r3代码\"><a class=\"anchor\" href=\"#r3代码\">#</a> R3 代码</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_CRT_SECURE_NO_WARNINGS</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;winioctl.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IN_BUFFER_MAXLENGTH</span>  <span class=\"token expression\"><span class=\"token number\">0x10</span>\t</span><span class=\"token comment\">// 输入缓存最大长度</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">OUT_BUFFER_MAXLENGTH</span> <span class=\"token expression\"><span class=\"token number\">0x10</span>\t</span><span class=\"token comment\">// 输出缓存最大长度</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">OPER1</span> <span class=\"token expression\"><span class=\"token function\">CTL_CODE</span><span class=\"token punctuation\">(</span>FILE_DEVICE_UNKNOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0x800</span><span class=\"token punctuation\">,</span> METHOD_BUFFERED<span class=\"token punctuation\">,</span> FILE_ANY_ACCESS<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">OPER2</span> <span class=\"token expression\"><span class=\"token function\">CTL_CODE</span><span class=\"token punctuation\">(</span>FILE_DEVICE_UNKNOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0x900</span><span class=\"token punctuation\">,</span> METHOD_BUFFERED<span class=\"token punctuation\">,</span> FILE_ANY_ACCESS<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SYMBOLICLINK_NAME</span> <span class=\"token string\">\"\\\\\\\\.\\\\MyTestDriver\"</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>HANDLE g_hDevice<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 驱动句柄</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/***************************************************************************/</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 打开驱动服务句柄</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 打开三环链接名：\\\\\\\\.\\\\Driver</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/***************************************************************************/</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>BOOL <span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>PCHAR pLinkName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tTCHAR szBuffer<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token comment\">// 在 3 环获取驱动程序</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tg_hDevice <span class=\"token operator\">=</span> <span class=\"token function\">CreateFile</span><span class=\"token punctuation\">(</span>pLinkName<span class=\"token punctuation\">,</span> GENERIC_READ <span class=\"token operator\">|</span> GENERIC_WRITE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> OPEN_EXISTING<span class=\"token punctuation\">,</span> FILE_ATTRIBUTE_NORMAL<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tDWORD err <span class=\"token operator\">=</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>szBuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_hDevice <span class=\"token operator\">!=</span> INVALID_HANDLE_VALUE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">/***************************************************************************/</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">// 与驱动通信的函数</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">/***************************************************************************/</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>BOOL <span class=\"token function\">IoControl</span><span class=\"token punctuation\">(</span>DWORD dwIoCode<span class=\"token punctuation\">,</span> PVOID InBuff<span class=\"token punctuation\">,</span> DWORD InBuffLen<span class=\"token punctuation\">,</span> PVOID OutBuff<span class=\"token punctuation\">,</span> DWORD OutBuffLen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tDWORD dw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token comment\">// 驱动句柄 / 操作码 / 输入缓冲区地址 / 输入缓冲区长度 / 输出缓冲区地址 / 输出缓冲区长度 / 返回长度 / 指向 OVERLAPPED 此处为 NULL</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">DeviceIoControl</span><span class=\"token punctuation\">(</span>g_hDevice<span class=\"token punctuation\">,</span> dwIoCode<span class=\"token punctuation\">,</span> InBuff<span class=\"token punctuation\">,</span> InBuffLen<span class=\"token punctuation\">,</span> OutBuff<span class=\"token punctuation\">,</span> OutBuffLen<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dw<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tDWORD dwInBuffer <span class=\"token operator\">=</span> <span class=\"token number\">0x11223344</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tTCHAR szOutBuffer<span class=\"token punctuation\">[</span>OUT_BUFFER_MAXLENGTH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token comment\">//1. 通过符号链接，打开设备</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>SYMBOLICLINK_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token comment\">//2. 测试通信</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token function\">IoControl</span><span class=\"token punctuation\">(</span>OPER2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwInBuffer<span class=\"token punctuation\">,</span> IN_BUFFER_MAXLENGTH<span class=\"token punctuation\">,</span> szOutBuffer<span class=\"token punctuation\">,</span> OUT_BUFFER_MAXLENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> szOutBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">//3. 关闭设备</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>g_hDevice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMDM1MTk0Nzg=\">https://blog.csdn.net/qq_41988448/article/details/103519478</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA5MTcwMTI5\">https://blog.csdn.net/Kwansy/article/details/109170129</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueHVlYnV5dWFuLmNvbS84Mzg0OTkuaHRtbA==\">https://www.xuebuyuan.com/838499.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9Jb0NyZWF0ZURldmljZSUyOCUyOS8zMDcxNTM2\">https://baike.baidu.com/item/IoCreateDevice()/3071536</span></p>\n",
            "tags": [
                "0环与3环的通信（常规方法）"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97/",
            "title": "驱动开发-内核空间和内核模块",
            "date_published": "2021-09-24T15:53:44.000Z",
            "content_html": "<h1 id=\"内核空间\"><a class=\"anchor\" href=\"#内核空间\">#</a> 内核空间</h1>\n<p>每个进程的低 2G 都是独立的，它们所对应的物理页都是不一样的，而高 2G 所对应的物理页都是相同的。</p>\n<p>概念图:</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"实验验证\"><a class=\"anchor\" href=\"#实验验证\">#</a> 实验验证</h2>\n<p>写一个驱动程序定义一个全局变量，在不同进程中查看。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ULONG g_Value <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>g_Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /><br />\n<img data-src=\"image003.png\" alt=\"\" /></p>\n<h1 id=\"内核模块\"><a class=\"anchor\" href=\"#内核模块\">#</a> 内核模块</h1>\n<p>硬件的种类繁多，不可能做一个兼容所有硬件的内核，因此，微软提供规定的接口格式，让硬件驱动人员按照规定的格式编写 “驱动程序”<br />\n 这些驱动程序每一个都是一个模块，称为 “内核模块”，可以加载到内核中，并遵守 PE 结构。但本质上讲，任意一个.sys 文件与内核文件没有区别<br />\n不管是我们自己编写的 .sys 文件，还是 Windows 自带的内核文件（如 ntoskrnl.exe），它们在内核中的地位是相同的，都是内核模块中的其中一个</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h1 id=\"驱动对象\"><a class=\"anchor\" href=\"#驱动对象\">#</a> 驱动对象</h1>\n<h2 id=\"_driver_object结构体\"><a class=\"anchor\" href=\"#_driver_object结构体\">#</a>  <code>_DRIVER_OBJECT</code>  结构体</h2>\n<pre><code>kd&gt; dt _DRIVER_OBJECT\nnt!_DRIVER_OBJECT\n  +0x000 Type             : Int2B\n  +0x002 Size             : Int2B\n  +0x004 DeviceObject     : Ptr32 _DEVICE_OBJECT\n  +0x008 Flags            : Uint4B\n  +0x00c DriverStart      : Ptr32 Void\n  +0x010 DriverSize       : Uint4B\n  +0x014 DriverSection    : Ptr32 Void\n  +0x018 DriverExtension  : Ptr32 _DRIVER_EXTENSION\n  +0x01c DriverName       : _UNICODE_STRING\n  +0x024 HardwareDatabase : Ptr32 _UNICODE_STRING\n  +0x028 FastIoDispatch   : Ptr32 _FAST_IO_DISPATCH\n  +0x02c DriverInit       : Ptr32     long \n  +0x030 DriverStartIo    : Ptr32     void \n  +0x034 DriverUnload     : Ptr32     void \n  +0x038 MajorFunction    : [28] Ptr32     long \n</code></pre>\n<p>其中对我们来说比较重要的结构:<br />\n <code>DriverStart：</code> 驱动模块在内核中的地址<br />\n <code>DriverSize：</code> 驱动模块在内核中的大小<br />\n <code>DriverName：</code> 驱动模块在内核中的名字<br />\n <code>DriverSection：</code> 指向  <code>_LDR_DATA_TABLE_ENTRY</code>  结构体</p>\n<h2 id=\"_ldr_data_table_entry-结构体\"><a class=\"anchor\" href=\"#_ldr_data_table_entry-结构体\">#</a>  <code>_LDR_DATA_TABLE_ENTRY</code>  结构体</h2>\n<p>描述：包含了当前内核模块的具体信息，以及其它内核模块的双向链表。</p>\n<pre><code>kd&gt; dt _LDR_DATA_TABLE_ENTRY\nnt!_LDR_DATA_TABLE_ENTRY\n  +0x000 InLoadOrderLinks : _LIST_ENTRY\n  +0x008 InMemoryOrderLinks : _LIST_ENTRY\n  +0x010 InInitializationOrderLinks : _LIST_ENTRY\n  +0x018 DllBase          : Ptr32 Void\n  +0x01c EntryPoint       : Ptr32 Void\n  +0x020 SizeOfImage      : Uint4B\n  +0x024 FullDllName      : _UNICODE_STRING\n  +0x02c BaseDllName      : _UNICODE_STRING\n  +0x034 Flags            : Uint4B\n  +0x038 LoadCount        : Uint2B\n  +0x03a TlsIndex         : Uint2B\n  +0x03c HashLinks        : _LIST_ENTRY\n  +0x03c SectionPointer   : Ptr32 Void\n  +0x040 CheckSum         : Uint4B\n  +0x044 TimeDateStamp    : Uint4B\n  +0x044 LoadedImports    : Ptr32 Void\n  +0x048 EntryPointActivationContext : Ptr32 Void\n  +0x04c PatchInformation : Ptr32 Void\n</code></pre>\n<p>和 3 环有点区别，在 0 环中  <code>InMemoryOrderLinks</code>  和  <code>InInitializationOrderLinks</code>  是没用的，只需要关注第一个链表  <code>InLoadOrderLinks</code> 。</p>\n<p><code>_LIST_ENTRY</code>  这个结构体存了两个地址，指向前一个节点和下一个节点。</p>\n<pre><code>kd&gt; dt _LIST_ENTRY\nntdll!_LIST_ENTRY\n  +0x000 Flink            : Ptr32 _LIST_ENTRY\n  +0x004 Blink            : Ptr32 _LIST_ENTRY\n</code></pre>\n<p>比较重要的结构:<br />\n <code>InLoadOrderLinks：</code> 双向链表，包含所有内核模块<br />\n <code>DllBase：</code> 当前内核模块起始地址<br />\n <code>SizeOfImage：</code> 当前内核模块的大小<br />\n <code>FullDllName：</code> 当前内核模块的完整路径<br />\n <code>BaseDllName：</code> 当前内核模块的模块名</p>\n<h2 id=\"遍历内核模块\"><a class=\"anchor\" href=\"#遍历内核模块\">#</a> 遍历内核模块</h2>\n<p>我们可以发现，我们可以由一个内核模块遍历处所有的内核模块。</p>\n<p>通过这个  <code>InLoadOrderLinks</code> ，我们可以遍历整个高 2G 的模块了。 <code>InLoadOrderLinks.Flink</code>  指向的就是下一个  <code>_LDR_DATA_TABLE_ENTRY</code> 。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 遍历内核模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tLIST_ENTRY InLoadOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tLIST_ENTRY InMemoryOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tLIST_ENTRY InInitializationOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPVOID DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPVOID EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tUINT32 SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tUNICODE_STRING FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tUNICODE_STRING BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tUINT32 Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tUINT16 LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tUINT16 TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tLIST_ENTRY HashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tPVOID SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tUINT32 CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tUINT32 TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tPVOID LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tPVOID EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tPVOID PatchInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteHead<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 内核模块链表头</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteCur<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 遍历指针</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tpLdteHead <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pdriver<span class=\"token operator\">-></span>DriverSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tpLdteCur <span class=\"token operator\">=</span> pLdteHead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DllBase: %p, SizeOfImage: %08X %wZ\\n\"</span><span class=\"token punctuation\">,</span> pLdteCur<span class=\"token operator\">-></span>DllBase<span class=\"token punctuation\">,</span> pLdteCur<span class=\"token operator\">-></span>SizeOfImage<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pLdteCur<span class=\"token operator\">-></span>FullDllName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tpLdteCur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pLdteHead <span class=\"token operator\">!=</span> pLdteCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h1 id=\"定位未导出函数pspterminateprocess\"><a class=\"anchor\" href=\"#定位未导出函数pspterminateprocess\">#</a> 定位未导出函数 PspTerminateProcess</h1>\n<p>我们想找未导出函数  <code>PspTerminateProcess</code> ，用来杀进程的。学习以下几种方法。</p>\n<h2 id=\"windbgpdb\"><a class=\"anchor\" href=\"#windbgpdb\">#</a> windbg+pdb</h2>\n<p>在有内核 PDB 的情况下，用 windbg 可以直接找到该函数：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd<span class=\"token operator\">></span>  u PspTerminateProcess l2e</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token number\">805</span>d3482 <span class=\"token number\">8</span>bff            mov     edi<span class=\"token punctuation\">,</span>edi</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token number\">805</span>d3484 <span class=\"token number\">55</span>              push    ebp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token number\">805</span>d3485 <span class=\"token number\">8</span>bec            mov     ebp<span class=\"token punctuation\">,</span>esp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token number\">805</span>d3487 <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token number\">805</span>d3488 <span class=\"token number\">64</span>a124010000    mov     eax<span class=\"token punctuation\">,</span>dword ptr fs<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">00000124</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token number\">805</span>d348e <span class=\"token number\">8</span>b7508          mov     esi<span class=\"token punctuation\">,</span>dword ptr <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token number\">805</span>d3491 <span class=\"token number\">3</span>b7044          cmp     esi<span class=\"token punctuation\">,</span>dword ptr <span class=\"token punctuation\">[</span>eax<span class=\"token operator\">+</span><span class=\"token number\">44</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token number\">805</span>d3494 <span class=\"token number\">7507</span>            jne     nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x1b</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d349d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token number\">805</span>d3496 b80d0000c0      mov     eax<span class=\"token punctuation\">,</span><span class=\"token number\">0</span>C000000Dh</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token number\">805</span>d349b eb5a            jmp     nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x75</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34f7<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token number\">805</span>d349d <span class=\"token number\">57</span>              push    edi</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token number\">805</span>d349e <span class=\"token number\">8</span>dbe48020000    lea     edi<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">248</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token number\">805</span>d34a4 f6470120        test    byte ptr <span class=\"token punctuation\">[</span>edi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span>h</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token number\">805</span>d34a8 <span class=\"token number\">7412</span>            je      nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x3a</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34bc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token number\">805</span>d34aa <span class=\"token number\">8</span>d8674010000    lea     eax<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">174</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token number\">805</span>d34b0 <span class=\"token number\">50</span>              push    eax</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token number\">805</span>d34b1 <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token number\">805</span>d34b2 <span class=\"token number\">6854345</span>d80      push    offset nt<span class=\"token operator\">!</span>NtTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x14c</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d3454<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token number\">805</span>d34b7 e8f2eeffff      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PspCatchCriticalBreak</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d23ae<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token number\">805</span>d34bc <span class=\"token number\">6</span>a08            push    <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token number\">805</span>d34be <span class=\"token number\">58</span>              pop     eax</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token number\">805</span>d34bf f00907          lock or dword ptr <span class=\"token punctuation\">[</span>edi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token number\">805</span>d34c2 <span class=\"token number\">6</span>a00            push    <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token number\">805</span>d34c4 <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token number\">805</span>d34c5 e8ca560000      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PsGetNextProcessThread</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d8b94<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token number\">805</span>d34ca <span class=\"token number\">8</span>bf8            mov     edi<span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token number\">805</span>d34cc <span class=\"token number\">85ff</span>            test    edi<span class=\"token punctuation\">,</span>edi</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token number\">805</span>d34ce <span class=\"token number\">741</span>e            je      nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x6c</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34ee<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token number\">805</span>d34d0 ff750c          push    dword ptr <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span><span class=\"token number\">0</span>Ch<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token number\">805</span>d34d3 <span class=\"token number\">57</span>              push    edi</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token number\">805</span>d34d4 e807fdffff      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PspTerminateThreadByPointer</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d31e0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token number\">805</span>d34d9 <span class=\"token number\">57</span>              push    edi</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token number\">805</span>d34da <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token number\">805</span>d34db e8b4560000      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PsGetNextProcessThread</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d8b94<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token number\">805</span>d34e0 <span class=\"token number\">8</span>bf8            mov     edi<span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token number\">805</span>d34e2 <span class=\"token number\">85ff</span>            test    edi<span class=\"token punctuation\">,</span>edi</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token number\">805</span>d34e4 <span class=\"token number\">75</span>ea            jne     nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x4e</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34d0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token number\">805</span>d34e6 <span class=\"token number\">3986</span>bc000000    cmp     dword ptr <span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">0</span>BCh<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token number\">805</span>d34ec <span class=\"token number\">7406</span>            je      nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x72</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34f4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token number\">805</span>d34ee <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token number\">805</span>d34ef e86e05ffff      call    nt<span class=\"token operator\">!</span><span class=\"token function\">ObClearProcessHandleTable</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>c3a62<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token number\">805</span>d34f4 <span class=\"token number\">33</span>c0            xor     eax<span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token number\">805</span>d34f6 <span class=\"token number\">5f</span>              pop     edi</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token number\">805</span>d34f7 <span class=\"token number\">5</span>e              pop     esi</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token number\">805</span>d34f8 <span class=\"token number\">5</span>d              pop     ebp</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token number\">805</span>d34f9 c20800          ret     <span class=\"token number\">8</span></pre></td></tr></table></figure><p>805d3482 就是函数头，然而这个值由于重定位，可能会变的，所以我们就要用其他办法，确保每次都能找到这个函数。</p>\n<h2 id=\"通过已导出函数\"><a class=\"anchor\" href=\"#通过已导出函数\">#</a> 通过已导出函数</h2>\n<p>第二种办法是根据已导出函数找未导出函数，在驱动里找已导出函数使用的函数是  <code>MmGetSystemRoutineAddress</code>  。我们通过 IDA 交叉引用，并没有找到调用 PspTerminateProcess 的导出函数。</p>\n<h2 id=\"模块基址偏移\"><a class=\"anchor\" href=\"#模块基址偏移\">#</a> 模块基址 + 偏移</h2>\n<p>虽然模块基址会变，但是函数相对基址的偏移是不变的，通过这个规律也可以找到想要的函数。<br />\nPspTerminateProcess 相对内核基址的偏移 = 8062f050 - 804D8000 = 157050<br />\n 只要找到内核基址，加上 0x157050 就是 PspTerminateProcess 的地址。</p>\n<h2 id=\"特征码匹配最常用\"><a class=\"anchor\" href=\"#特征码匹配最常用\">#</a> 特征码匹配（最常用）</h2>\n<p>特征码提取时，<strong>要避免使用全局变量等和重定位有关的指令</strong>，也要<strong>避免提取这种所有函数都有的指令</strong>。</p>\n<pre><code>805d3482 8bff            mov     edi,edi\n805d3484 55              push    ebp\n805d3485 8bec            mov     ebp,esp\n805d3487 56              push    esi\n</code></pre>\n<p>我是跳着提取特征码的:</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 函数 PspTerminateProcess 开头对应的硬编码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x8b55ff8b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X0C 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x3b08758b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X22 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x200147f6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X48 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0xff85f88b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X6A 个字节后对应的硬编码</span></pre></td></tr></table></figure><p>代码如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntifs.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FristOffset</span>\t\t<span class=\"token expression\"><span class=\"token number\">0x0</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SecondOffset</span>\t<span class=\"token expression\"><span class=\"token number\">0x0C</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ThirdOffset</span>\t\t<span class=\"token expression\"><span class=\"token number\">0x22</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FourthOffset</span>\t<span class=\"token expression\"><span class=\"token number\">0x48</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FifthOffset</span>\t\t<span class=\"token expression\"><span class=\"token number\">0x6A</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tLIST_ENTRY InLoadOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tLIST_ENTRY InMemoryOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tLIST_ENTRY InInitializationOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPVOID DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPVOID EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tUINT32 SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tUNICODE_STRING FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tUNICODE_STRING BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tUINT32 Flages<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tUINT16 LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tUINT16 TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tLIST_ENTRY HashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tPVOID SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tUINT32 CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tUINT32 TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tPVOID LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tPVOID EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tPVOID PatchInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span>LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 定义 PspTerminateProcess 函数指针</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">NTSTATUS</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>_PspTerminateProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>PEPROCESS pEprocess<span class=\"token punctuation\">,</span> NTSTATUS ExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>_PspTerminateProcess PspTerminateProcess <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我停止加载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 获取内核基址，大小</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>VOID <span class=\"token function\">GetKernelBase</span><span class=\"token punctuation\">(</span>IN PDRIVER_OBJECT driver<span class=\"token punctuation\">,</span> OUT PVOID<span class=\"token operator\">*</span> pKrnlBase<span class=\"token punctuation\">,</span> OUT PUINT32 uKrnlImageSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteHead<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 内核模块链表头</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteCur<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 遍历指针</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tUNICODE_STRING usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> usDllNameNtkrnlpa<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 内核模块名</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token comment\">// 两种分页模式下的内核模块</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"ntoskrnl.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usDllNameNtkrnlpa<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"ntkrnlpa.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tpLdteHead <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>driver<span class=\"token operator\">-></span>DriverSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tpLdteCur <span class=\"token operator\">=</span> pLdteHead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token function\">RtlCompareUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pLdteCur<span class=\"token operator\">-></span>BaseDllName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t\t<span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token function\">RtlCompareUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pLdteCur<span class=\"token operator\">-></span>BaseDllName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span>pKrnlBase <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span>uKrnlImageSize <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\tpLdteCur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pLdteHead <span class=\"token operator\">!=</span> pLdteCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>PVOID <span class=\"token function\">GetUndocumentFunctionAddress</span><span class=\"token punctuation\">(</span>PUCHAR pStartAddress<span class=\"token punctuation\">,</span> PUINT32 pShellcode<span class=\"token punctuation\">,</span> UINT32 maxSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token class-name\">size_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tPUCHAR Tmp <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tpStartAddress <span class=\"token operator\">+=</span> <span class=\"token number\">0xFB000</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 从内核基址 0x804d8000 到这个函数的位置 0x805d3482 需要循环遍历 0xFB482 (1029250) 次，此举是为了节约时间……</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">MmIsAddressValid</span><span class=\"token punctuation\">(</span>pStartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pStartAddress地址不合法，或者地址指向内存不可读！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"地址合法，开始查找...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maxSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\tTmp <span class=\"token operator\">=</span> pStartAddress <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>FristOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>SecondOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>ThirdOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>FourthOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>FifthOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"i=%d\\n\", i);</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token comment\">//UINT32 S1 = *(PUINT32)&amp;Tmp[FristOffset],</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token comment\">//\tS2 = *(PUINT32)&amp;Tmp[SecondOffset],</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t<span class=\"token comment\">//\tS3 = *(PUINT32)&amp;Tmp[ThirdOffset],</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t<span class=\"token comment\">//\tS4 = *(PUINT32)&amp;Tmp[FourthOffset],</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t<span class=\"token comment\">//\tS5 = *(PUINT32)&amp;Tmp[FifthOffset];</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"S1=%08X\\tS2=%08X\\tS3=%08X\\tS4=%08X\\tS5=%08X\\n\", S1, S2, S3, S4, S5);</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t<span class=\"token comment\">//if (</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S1 == pShellcode[0])</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S2 == pShellcode[1])</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S3 == pShellcode[2])</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S4 == pShellcode[3])</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S5 == pShellcode[4])</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t<span class=\"token comment\">//\t)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> Tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我加载了！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token comment\">// 内核基址</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\tPVOID pKrnlBase\t\t\t<span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t<span class=\"token comment\">// 内核基址的大小</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\tUINT32 uKrnlImageSize\t<span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token comment\">// 申请一块内存，我只是为了方便传递参数</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\tPUINT32 pShellCode\t\t<span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ShellCode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token comment\">// 函数 PspTerminateProcess 开头对应的硬编码</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\tpShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x8b55ff8b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X0C 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\tpShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x3b08758b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X22 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x200147f6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X48 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0xff85f88b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X6A 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\t    <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0xe8560674</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t<span class=\"token comment\">// 获取内核基址和大小</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t<span class=\"token function\">GetKernelBase</span><span class=\"token punctuation\">(</span>pdriver<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pKrnlBase<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>uKrnlImageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t<span class=\"token comment\">// 遍历内核内存定位未导出函数</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t PVOID p <span class=\"token operator\">=</span> <span class=\"token function\">GetUndocumentFunctionAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>pKrnlBase<span class=\"token punctuation\">,</span> pShellCode<span class=\"token punctuation\">,</span> uKrnlImageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功找到函数首地址：%x\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始尝试调用函数...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t <span class=\"token comment\">/****** 调用 PspTerminateProcess (IN PEPROCESS Process, IN NTSTATUS ExitStatus) 函数 ******/</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t PEPROCESS hProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t <span class=\"token function\">PsLookupProcessByProcessId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t PspTerminateProcess <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_PspTerminateProcess<span class=\"token punctuation\">)</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t <span class=\"token function\">PspTerminateProcess</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t <span class=\"token comment\">/****** 调用 PspTerminateProcess (IN PEPROCESS Process, IN NTSTATUS ExitStatus) 函数 ******/</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"函数调用结束.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查找失败！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t <span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>编程的过程中碰到不少非常离谱的事情，简直称得上玄学！编译执行了好几遍都蓝屏，于是就去问别人，问了一堆人都说没问题，调试了半个小时，还是原来的代码又重新编译执行了一遍竟然可以运行了？？？？？？</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA5MTQ1MTEw\">https://blog.csdn.net/Kwansy/article/details/109145110</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMDM1MTQwMDc=\">https://blog.csdn.net/qq_41988448/article/details/103514007</span></p>\n",
            "tags": [
                "内核空间",
                "内核模块",
                "遍历内核模块",
                "定位未导出函数PspTiminateProcess"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/",
            "title": "驱动开发-内核编程基础",
            "date_published": "2021-09-03T14:52:35.000Z",
            "content_html": "<h1 id=\"未文档化函数-未导出函数\"><a class=\"anchor\" href=\"#未文档化函数-未导出函数\">#</a> 未文档化函数、未导出函数</h1>\n<p>未文档化就是 WDK 文档里搜不到，但是在导出表里的函数，要使用这种函数可以使用 GetProcAddress 函数获取函数地址；</p>\n<p>未导出函数就是不在导出表的函数，可以通过<strong>特征码</strong>搜索或者<strong>解析内核 PDB</strong> 的方式找到函数地址，通过函数指针调用。</p>\n<h1 id=\"wdk数据类型\"><a class=\"anchor\" href=\"#wdk数据类型\">#</a> WDK 数据类型</h1>\n<p>WDK 数据类型在 ntdef.h 中定义，下面列举部分，注意，并没有 UINT</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> UCHAR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> USHORT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> ULONG<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"ntstatus-返回值\"><a class=\"anchor\" href=\"#ntstatus-返回值\">#</a> NTSTATUS 返回值</h1>\n<p>很多内核函数的返回值都是 NTSTATUS，这是一个 4 字节整型。<br />\n例如：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>STATUS_SUCCESS\t\t<span class=\"token number\">0x00000000</span>\t成功</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>STATUS_INVALID_PARAMETER\t<span class=\"token number\">0xC000000D</span>\t参数无效</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>STATUS_BUFFER_OVERFLOW\t<span class=\"token number\">0x80000005</span>\t缓冲区长度不够</pre></td></tr></table></figure><h1 id=\"内核异常处理\"><a class=\"anchor\" href=\"#内核异常处理\">#</a> 内核异常处理</h1>\n<p>在内核中，一个小小的错误就可能导致蓝屏，比如：读写一个无效的内存地址。为了让自己的内核程序更加健壮，强烈建议大家在编写内核程序时，使用异常处。<br />\nWindows 提供了结构化异常处理机制，一般的编译器都是支持的，如下：</p>\n<pre><code>__try&#123;\n\t//可能出错的代码\n&#125;\n__except(filter_value) &#123;\n\t//出错时要执行的代码\n&#125;\n</code></pre>\n<p>出现异常时，可根据 filter_value 的值来决定程序该如果执行，当 filter_value 的值为：<br />\n <code>EXCEPTION_EXECUTE_HANDLER(1)</code> ，代码进入 except 块<br />\n <code>EXCEPTION_CONTINUE_SEARCH(0)</code> ，不处理异常，由上一层调用函数处理<br />\n <code>EXCEPTION_CONTINUE_EXECUTION(-1)</code> ，回去继续执行错误处的代码</p>\n<p>在火哥的视频中，火哥说加了这玩意该蓝屏还是蓝屏…… 试了试确实……。</p>\n<p>演示代码：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pReg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t__try</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tPULONG ptr <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token operator\">*</span>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">__except</span> <span class=\"token punctuation\">(</span>EXCEPTION_EXECUTE_HANDLER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"非法访问内存.\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h1 id=\"常用的内核内存函数\"><a class=\"anchor\" href=\"#常用的内核内存函数\">#</a> 常用的内核内存函数</h1>\n<table>\n<thead>\n<tr>\n<th>C 语言</th>\n<th>内核</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>malloc</td>\n<td>ExAllocatePool</td>\n</tr>\n<tr>\n<td>memset</td>\n<td>RtlFillMemory</td>\n</tr>\n<tr>\n<td>memcpy</td>\n<td>RtlMoveMemory</td>\n</tr>\n<tr>\n<td>free</td>\n<td>ExFreePool</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"内核字符串及常用字符串函数\"><a class=\"anchor\" href=\"#内核字符串及常用字符串函数\">#</a> 内核字符串及常用字符串函数</h1>\n<p>为了提高安全性，内核中的字符串不再是字符串首地址指针作为开始，0 作为结尾，而是采用了以下两个结构体：</p>\n<p><strong>ANSI_STRING 字符串：</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_STRING</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    USHORT Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    USHORT MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    PCHAR Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span>STRING<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>UNICODE_STRING 字符串：</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_UNICODE_STRING</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    USHORT Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    USHORT MaxmumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    PWSTR Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> UNICODE_STRING<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>下面的表格列出了常用的字符串函数：</p>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>ANSI_STRING 字符串</th>\n<th>UNICODE_STRING 字符串</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>创建</td>\n<td>RtlInitAnsiString</td>\n<td>RtlInitUnicodeString</td>\n</tr>\n<tr>\n<td>复制</td>\n<td>RtlCopyString</td>\n<td>RtlCopyUnicodeString</td>\n</tr>\n<tr>\n<td>比较</td>\n<td>RtlCompareString</td>\n<td>RtlCompareUnicoodeString</td>\n</tr>\n<tr>\n<td>转换</td>\n<td>RtlAnsiStringToUnicodeString</td>\n<td>RtlUnicodeStringToAnsiString</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"课后练习\"><a class=\"anchor\" href=\"#课后练习\">#</a> 课后练习</h1>\n<ol>\n<li>\n<p>申请一块内存，并在内存中存储 GDT、IDT 的所有数据。然后在 debugview 中显示出来，最后释放内存。</p>\n</li>\n<li>\n<p>编写代码，实现如下功能：</p>\n</li>\n</ol>\n<blockquote>\n<p>初始化一个字符串（）<br />\n拷贝一个字符串<br />\n比较两个字符串是否相等<br />\n ANSI_STRING 与 UNICODE_STRING 字符串相互转换</p>\n</blockquote>\n<h2 id=\"第1题\"><a class=\"anchor\" href=\"#第1题\">#</a> 第 1 题</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ntdef.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 卸载函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"驱动程序停止运行了.\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 入口函数，相当于 main</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tUCHAR GDT<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> IDT<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tULONG GDTAddr<span class=\"token punctuation\">,</span> IDTAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tUSHORT GDTLen<span class=\"token punctuation\">,</span> IDTLen<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tPULONG pbuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tULONG i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tsgdt GDT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tsidt IDT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tGDTAddr <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>GDT<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">//GDTAddr = *(PULONG)(GDT+2);</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tGDTLen <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUSHORT<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>GDT<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tIDTAddr <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>IDT<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tIDTLen <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUSHORT<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>IDT<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GDTAddr:%#010X,GDTLen:%#06X\\n\"</span><span class=\"token punctuation\">,</span> GDTAddr<span class=\"token punctuation\">,</span> GDTLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IDTAddr:%#010X,IDTLen:%#06X\\n\"</span><span class=\"token punctuation\">,</span> IDTAddr<span class=\"token punctuation\">,</span> IDTLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tpbuffer <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> GDTLen<span class=\"token punctuation\">,</span> <span class=\"token string\">\"MemGdt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"申请内存失败1\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token function\">RtlMoveMemory</span><span class=\"token punctuation\">(</span>pbuffer<span class=\"token punctuation\">,</span> GDTAddr<span class=\"token punctuation\">,</span> GDTLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"在新开辟的内存%p中打印GDT\\n\"</span><span class=\"token punctuation\">,</span> pbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> GDTLen<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%08X %08X %08X %08X %08X\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\tpbuffer <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>pbuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"MemGdt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tpbuffer <span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> IDTLen<span class=\"token punctuation\">,</span> <span class=\"token string\">\"MemIdt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"申请内存失败2\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token function\">RtlMoveMemory</span><span class=\"token punctuation\">(</span>pbuffer<span class=\"token punctuation\">,</span> GDTAddr<span class=\"token punctuation\">,</span> GDTLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"在新开辟的内存%p中打印IDT\\n\"</span><span class=\"token punctuation\">,</span> pbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> GDTLen<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%08X %08X %08X %08X %08X\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\tpbuffer <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pbuffer <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>pbuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"MemGdt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"第2题\"><a class=\"anchor\" href=\"#第2题\">#</a> 第 2 题</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ntdef.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"驱动程序停止运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pReg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tANSI_STRING AnsiString1<span class=\"token punctuation\">,</span> AnsiString2<span class=\"token punctuation\">,</span> AnsiString3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tUNICODE_STRING UnicodeString1<span class=\"token punctuation\">,</span> UnicodeString2<span class=\"token punctuation\">,</span> UnicodeString3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tCHAR Buf1<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Buf2<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tWCHAR wcBuf1<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> wcBuf2<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 初始化字符串</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">RtlInitAnsiString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>AnsiString1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"This is AnsiString1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>UnicodeString1<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"This is UnicodeString1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">RtlInitEmptyAnsiString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>AnsiString2<span class=\"token punctuation\">,</span> Buf1<span class=\"token punctuation\">,</span> <span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">RtlInitEmptyAnsiString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>AnsiString3<span class=\"token punctuation\">,</span> Buf2<span class=\"token punctuation\">,</span> <span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token function\">RtlInitEmptyUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>UnicodeString2<span class=\"token punctuation\">,</span> wcBuf1<span class=\"token punctuation\">,</span> <span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">RtlInitEmptyUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>UnicodeString3<span class=\"token punctuation\">,</span> wcBuf2<span class=\"token punctuation\">,</span> <span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印AnsiString1。 Buffer:%s Length:%d MaximumLength:%d\\n\"</span><span class=\"token punctuation\">,</span> AnsiString1<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> AnsiString1<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> AnsiString1<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印UnicodeString1。 \\nBuffer:%ws \\nLength:%d \\nMaximumLength:%d\\n\"</span><span class=\"token punctuation\">,</span> UnicodeString1<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> UnicodeString1<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> UnicodeString1<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 拷贝字符串</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">RtlCopyString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>AnsiString2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AnsiString1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">RtlCopyUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>UnicodeString2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>UnicodeString1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印AnsiString2。Buffer:%s Length:%d MaximumLength:%d\\n\"</span><span class=\"token punctuation\">,</span> AnsiString2<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> AnsiString2<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> AnsiString2<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印UnicodeString2。\\nBuffer:%ws \\nLength：%d \\nMaximumLength:%d\\n\"</span><span class=\"token punctuation\">,</span> UnicodeString2<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> UnicodeString2<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> UnicodeString2<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// 比较字符串</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">RtlCompareString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>AnsiString1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AnsiString2<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AnsiString1与AnsiString2相等\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AnsiString1与AnsiString2不相等\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">RtlCompareUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>UnicodeString1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>UnicodeString2<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UnicodeString1与UnicodeString2相等\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UnicodeString1与UnicodeString2不相等\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token comment\">// 转化字符串</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token function\">RtlAnsiStringToUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>UnicodeString3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>AnsiString1<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token function\">RtlUnicodeStringToAnsiString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>AnsiString3<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span> UnicodeString1<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印AnsiString3。Buffer:%s Length:%d MaximumLength:%d\\n\"</span><span class=\"token punctuation\">,</span> AnsiString3<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> AnsiString3<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> AnsiString3<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印UnicodeString3。\\nBuffer:%ws \\nLength：%d \\nMaximumLength:%d\\n\"</span><span class=\"token punctuation\">,</span> UnicodeString3<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">,</span> UnicodeString3<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">,</span> UnicodeString3<span class=\"token punctuation\">.</span>MaximumLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image003.png\" alt=\"\" /></p>\n",
            "tags": [
                "内核编程基础",
                "ANSI_STRING",
                "UNICODE_STRING",
                "内核内存"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E8%B0%83%E8%AF%95%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E8%B0%83%E8%AF%95%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F/",
            "title": "驱动开发-调试驱动程序",
            "date_published": "2021-09-03T14:52:10.000Z",
            "content_html": "<h1 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pReg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tmov ecx<span class=\"token punctuation\">,</span> ecx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>多了一个源代码窗口。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n",
            "tags": [
                "调试驱动程序"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F/",
            "title": "驱动开发-第一个驱动程序",
            "date_published": "2021-09-03T14:52:00.000Z",
            "content_html": "<h1 id=\"配置vs2019wdk10\"><a class=\"anchor\" href=\"#配置vs2019wdk10\">#</a> 配置 VS2019+WDK10</h1>\n<p>参见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ4OTk1NjExL2FydGljbGUvZGV0YWlscy8xMTIxOTU0OTc=\">https://blog.csdn.net/m0_48995611/article/details/112195497</span></p>\n<h1 id=\"编写代码\"><a class=\"anchor\" href=\"#编写代码\">#</a> 编写代码</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pReg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意用 release 版。<br />\nDbgView 设置</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>结果：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n",
            "tags": [
                "配置VS2019+WDK10",
                "第一个驱动程序"
            ]
        }
    ]
}