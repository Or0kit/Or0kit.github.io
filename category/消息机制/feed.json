{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"消息机制\" category",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-05%E5%86%85%E6%A0%B8%E5%9B%9E%E8%B0%83%E6%9C%BA%E5%88%B6/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-05%E5%86%85%E6%A0%B8%E5%9B%9E%E8%B0%83%E6%9C%BA%E5%88%B6/",
            "title": "消息机制-05内核回调机制",
            "date_published": "2022-04-25T07:17:22.000Z",
            "content_html": "<h1 id=\"pass\"><a class=\"anchor\" href=\"#pass\">#</a> Pass</h1>\n<p>过段事件再总结</p>\n",
            "tags": []
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-04%E6%B6%88%E6%81%AF%E7%9A%84%E5%88%86%E5%8F%91/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-04%E6%B6%88%E6%81%AF%E7%9A%84%E5%88%86%E5%8F%91/",
            "title": "消息机制-04消息的分发",
            "date_published": "2022-04-22T07:17:15.000Z",
            "content_html": "<h1 id=\"pass\"><a class=\"anchor\" href=\"#pass\">#</a> Pass</h1>\n<p>过段事件再总结</p>\n",
            "tags": []
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-03%E6%B6%88%E6%81%AF%E7%9A%84%E6%8E%A5%E6%94%B6/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-03%E6%B6%88%E6%81%AF%E7%9A%84%E6%8E%A5%E6%94%B6/",
            "title": "消息机制-03消息的接收",
            "date_published": "2022-04-22T07:17:12.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>在前面我们分析了：</p>\n<p>一个 GUI 线程有一个消息队列</p>\n<p>普通线程\tGUI 线程\t <code>THREAD.W32THREAD</code> \t <code>THREADINFO</code>         消息队列</p>\n<p>一个线程可以有多个窗口，所有窗口共享一个消息队列</p>\n<p><code>WND</code>      // 窗口结构<br />\n <code>PTHREADINFO pti</code>                // 所属线程<br />\n <code>WNDPROC_PWND  lpfnWndProc</code> ;  \t// 窗口过程 (窗口回调函数)</p>\n<h1 id=\"窗口程序的创建\"><a class=\"anchor\" href=\"#窗口程序的创建\">#</a> 窗口程序的创建</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 声明回调函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    HWND hwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    UINT uMsg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    LPARAM lParam</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> WINAPI <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span>HINSTANCE hInstance<span class=\"token punctuation\">,</span> HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span> LPSTR lpCmdLine<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nCmdShow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 保存 GetLastError 的返回值</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    TCHAR szOutBuff<span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 创建窗口类</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    WNDCLASSEX mywnd        <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>cbSize            <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WNDCLASSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>style             <span class=\"token operator\">=</span> CS_HREDRAW <span class=\"token operator\">|</span> CS_VREDRAW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 窗口类名</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    TCHAR wndname<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>         <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>lpszClassName     <span class=\"token operator\">=</span> wndname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 回调函数</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>lpfnWndProc       <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 标志该窗口所在实例</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>hInstance         <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">// 设置画刷</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>hbrBackground     <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span><span class=\"token function\">GetStockObject</span><span class=\"token punctuation\">(</span>WHITE_BRUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 注册窗口类</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">RegisterClassEx</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mywnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">// 创建窗口</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    HWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        wndname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My First Window!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        WS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">// 判断是否创建成功</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        TCHAR str<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"CreateWindow Error!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">// 显示窗口</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\">// 消息循环</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    MSG msg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    BOOL bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token comment\">// 我们的窗口回调.</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bRet <span class=\"token operator\">=</span> <span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bRet <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token comment\">// handle the error and possibly exit</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %d\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 键盘消息转换为小写.</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 分发消息。将我们的消息传递给我们的回调函数处理 重要函数。此消息会将 Windows 的消息。发送给我们 定义窗口类的时候给的回调函数。这样我们就可以根据消息执行我们代码了.</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token comment\">//   我们的窗口回调</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    HWND hWnd<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    UINT message<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    LPARAM lParam</pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_CREATE<span class=\"token operator\">:</span>                             </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token comment\">// 当窗口开始绘制的时候</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_PAINT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        PAINTSTRUCT ps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        RECT rect<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        HDC hdc <span class=\"token operator\">=</span> <span class=\"token function\">BeginPaint</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token function\">GetClientRect</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token function\">DrawText</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            hdc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello window!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            DT_SINGLELINE <span class=\"token operator\">|</span> DT_CENTER <span class=\"token operator\">|</span> DT_VCENTER</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token function\">EndPaint</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token comment\">// 打印</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_CHAR<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        TCHAR szOutBuffer<span class=\"token punctuation\">[</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szOutBuffer<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"%c\\n\"</span><span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>szOutBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_DESTROY<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token function\">PostQuitMessage</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>我们要创建一个简单的窗口就要有这么多的步骤，为什么要这么写呢？</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>我们在 3 环写主要是向 0 环传递这些信心，以便在 0 环创建一个窗口的结构体。</p>\n<p>我们看到的只是一个窗口，看不到的是在内核中那些结构体，因为调用了 GUI 函数，此时我们也是一个 GUI 线程了，有消息队列了，接着向后面看，有一个循环不停的取往消息队列中取消息，然后加工、分发消息。</p>\n<p>很多人只知道代码要这样写，并不清楚为什么这样写，就是不了解在 0 环做了什么事情，消息机制绝大部分的实现就是在 0 环做的，如果不了解消息机制在 0 环做了什么事情，就不会知道 3 环的代码为什么要这样写。</p>\n<p>接下来我们了解消息循环。</p>\n<h1 id=\"消息循环\"><a class=\"anchor\" href=\"#消息循环\">#</a> 消息循环</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MSG msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// 从消息队列中取出消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 加工消息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 分发消息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用 SendMessage 与 PostMessage 发送的消息位于同一组队列中吗？</p>\n<p>不同类型的消息被置于不同队列。(这如何在 Windows 中实现的？)</p>\n<h2 id=\"消息的接收\"><a class=\"anchor\" href=\"#消息的接收\">#</a> 消息的接收</h2>\n<p><code>GetMessage</code></p>\n<p>描述：从消息队列中取出消息</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL WINAPI <span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tLPMSG lpMsg<span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 返回从队列中取出的消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tHWND hWnd<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 过滤条件一：窗口句柄</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tUINT wMsgFilterMin<span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 过滤条件二：最小值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tUINT wMsgFilterMax\t<span class=\"token comment\">// 过滤条件三：最大值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>主要功能：循环判断是否存在属于该窗口的消息，若存在，则将消息存储到 MSG 指定的结构中，并将消息从列表中删除。</p>\n<p><code>GetMessage --&gt; NtUserGetMessage --&gt; xxxGetMessage（这是一个宏，也就是 xxxInternalGetMessage 函数） --&gt; xxxRealInternalGetMessage</code></p>\n<p>注意：事实上，GetMessage 还做了一件很重要的事情，即在接收消息时，将 SentMessagesListHead 中的消息进行处理</p>\n<p>有关消息发送，可以通过  <code>SendMessage</code>  或者  <code>PostMessage</code>  进行发送，它们有所不同，前者是同步的，后者是异步的，我们可以做一个实验验证:</p>\n",
            "tags": [
                "窗口程序的创建",
                "消息循环"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-02%E7%AA%97%E5%8F%A3%E4%B8%8E%E7%BA%BF%E7%A8%8B/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-02%E7%AA%97%E5%8F%A3%E4%B8%8E%E7%BA%BF%E7%A8%8B/",
            "title": "消息机制-02窗口与线程",
            "date_published": "2022-04-21T07:17:09.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>在上一节中我们弄清楚了消息队列与线程的关系：</p>\n<p><strong>一个 GUI 线程对应着一个消息队列</strong></p>\n<p>本节要解决的问题：</p>\n<p>1、消息从哪里来？</p>\n<p>2、消息到哪里去？</p>\n<p>3、谁来做这些事情？</p>\n<h1 id=\"消息从哪里来\"><a class=\"anchor\" href=\"#消息从哪里来\">#</a> 消息从哪里来？</h1>\n<p>首先我们编写一个简单的窗口程序：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN HWND hwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN UINT uMsg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tIN WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tIN LPARAM lParam</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> uMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tHINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tHINSTANCE hPrevInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tLPSTR lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">int</span> nShowCmd</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 窗口的类名</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tTCHAR className<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"My First Window\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 创建一个自己的窗口</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tWNDCLASS wndclass <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span>COLOR_MENU<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpfnWndProc <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> className<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">// 注册</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">RegisterClass</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wndclass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// 创建窗口</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tclassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tWS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token number\">600</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\thInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hwnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">// 显示窗口</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token comment\">// 消息循环</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tMSG msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后用 VC6 自带的工具 Spy++ 捕捉消息。</p>\n<p>按以下步骤捕获消息：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>如图我们动一下鼠标键盘就会 产生许多消息。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>接下来用代码演示，程序发送消息：</p>\n<p>一个进程执行以下代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN HWND hwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN UINT uMsg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tIN WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tIN LPARAM lParam</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>uMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">0x401</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">MessageBoxA</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"接收到消息\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"新消息\"</span><span class=\"token punctuation\">,</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> uMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tHINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tHINSTANCE hPrevInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tLPSTR lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">int</span> nShowCmd</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 窗口的类名</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tTCHAR className<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"My First Window\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 创建一个自己的窗口</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tWNDCLASS wndclass <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span>COLOR_MENU<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpfnWndProc <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> className<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// 注册</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">RegisterClass</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wndclass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token comment\">// 创建窗口</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tclassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tWS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token number\">600</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\thInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hwnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">// 显示窗口</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token comment\">// 消息循环</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tMSG msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>另一个进程执行以下代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">FindWindow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My First Window\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> <span class=\"token number\">0x401</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h1 id=\"消息到哪里去了\"><a class=\"anchor\" href=\"#消息到哪里去了\">#</a> 消息到哪里去了</h1>\n<p><strong>最终去这个消息所对应的那个线程的消息队列。</strong></p>\n<ol>\n<li>当我们使用鼠标某个窗口进行点击与滑动时，都会产生一个消息，消息会进入当前窗口对应线程的消息队列中</li>\n<li>当我们编写程序时，并不会去特地启动两个线程去监控鼠标和键盘，w32k.sys 负责了这个事情</li>\n</ol>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>以下内容参考自 ReactOS 源码：</p>\n<blockquote>\n<p>当初始化  <code>win32k.sys</code>  这个模块时，会调用一个叫做  <code>InitInputImpl</code>  的函数<br />\n这个函数会启动两个线程，分别用来监控鼠标和键盘，这两个线程都是 0 环的线程<br />\n平时我们的电脑遭遇 “死机” 时，常常是屏幕动不了，鼠标还能动，这正式由于鼠标是有一个独立的线程在监控它的行动</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//FROM ReactOS v3.12</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">InitInputImpl</span><span class=\"token punctuation\">(</span>VOID<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   Status <span class=\"token operator\">=</span> <span class=\"token function\">PsCreateSystemThread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>RawInputThreadHandle<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 监控鼠标</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                 THREAD_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                 <span class=\"token operator\">&amp;</span>RawInputThreadId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                 RawInputThreadMain<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">DPRINT1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win32K: Failed to create raw thread.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   Status <span class=\"token operator\">=</span> <span class=\"token function\">PsCreateSystemThread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>KeyboardThreadHandle<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 监控键盘</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                 THREAD_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                 <span class=\"token operator\">&amp;</span>KeyboardThreadId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                                 KeyboardThreadMain<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token function\">DPRINT1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win32K: Failed to create keyboard thread.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我在 xp 源码中并未找到。。</p>\n<h1 id=\"如何通过窗口找到消息队列\"><a class=\"anchor\" href=\"#如何通过窗口找到消息队列\">#</a> 如何通过窗口找到消息队列</h1>\n<p>如下图： 我们发现有十几个窗口，当我们在一个窗口上点击的时候，负责鼠标消息的这个线程是如何知道我们点击的是哪一个窗口呢？<br />\n换句话说就是，它是如何通过这个窗口找到对应的线程的呢？</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>我们想解决这些问题，首先要明白窗口是谁画的，窗口在哪里？</p>\n<h2 id=\"窗口是谁画的\"><a class=\"anchor\" href=\"#窗口是谁画的\">#</a> 窗口是谁画的？</h2>\n<p>分析：  <code>CreateWindow</code></p>\n<p>当调用 CreateWindow 时，该函数实际上是一个宏，其 CreateWindowA 实际对应 CreateWindowExA 函数，CreateWindowW 对应 CreateWindowExW 函数。</p>\n<p>在 VS 中查看：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">CreateWindowA</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token expression\"><span class=\"token function\">CreateWindowExA</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">CreateWindowW</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token expression\"><span class=\"token function\">CreateWindowExW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">UNICODE</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CreateWindow</span>  <span class=\"token expression\">CreateWindowW</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CreateWindow</span>  <span class=\"token expression\">CreateWindowA</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// !UNICODE</span></span></pre></td></tr></table></figure><p>在 IDA 中查看:</p>\n<p>发现不管是  <code>CreateWindowExA</code>  还是  <code>CreateWindowExW</code>  都是直接调用了  <code>__CreateWindowEx</code></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>text:77D2E4A9 ; HWND __stdcall CreateWindowExA(DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.text:77D2E4A9                 public _CreateWindowExA@48</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>.text:77D2E4A9 _CreateWindowExA@48 proc near           ; CODE XREF: DefMDIChildProcWorker(x,x,x,x,x)-3EA↓p</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.text:77D2E4A9                                         ; CreateMDIWindowA(x,x,x,x,x,x,x,x,x,x)+27↓p ...</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.text:77D2E4A9</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>.text:77D2E4A9 dwExStyle       &#x3D; dword ptr  8</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>.text:77D2E4A9 lpClassName     &#x3D; dword ptr  0Ch</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>.text:77D2E4A9 lpWindowName    &#x3D; dword ptr  10h</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>.text:77D2E4A9 dwStyle         &#x3D; dword ptr  14h</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>.text:77D2E4A9 X               &#x3D; dword ptr  18h</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>.text:77D2E4A9 Y               &#x3D; dword ptr  1Ch</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>.text:77D2E4A9 nWidth          &#x3D; dword ptr  20h</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>.text:77D2E4A9 nHeight         &#x3D; dword ptr  24h</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>.text:77D2E4A9 hWndParent      &#x3D; dword ptr  28h</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>.text:77D2E4A9 hMenu           &#x3D; dword ptr  2Ch</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>.text:77D2E4A9 hInstance       &#x3D; dword ptr  30h</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>.text:77D2E4A9 lpParam         &#x3D; dword ptr  34h</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>.text:77D2E4A9</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>.text:77D2E4A9                 mov     edi, edi</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>.text:77D2E4AB                 push    ebp</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>.text:77D2E4AC                 mov     ebp, esp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>.text:77D2E4AE                 push    40000001h       ; int</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>.text:77D2E4B3                 push    [ebp+lpParam]   ; int</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>.text:77D2E4B6                 push    [ebp+hInstance] ; int</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>.text:77D2E4B9                 push    [ebp+hMenu]     ; int</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>.text:77D2E4BC                 push    [ebp+hWndParent] ; int</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>.text:77D2E4BF                 push    [ebp+nHeight]   ; int</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>.text:77D2E4C2                 push    [ebp+nWidth]    ; int</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>.text:77D2E4C5                 push    [ebp+Y]         ; int</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>.text:77D2E4C8                 push    [ebp+X]         ; int</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>.text:77D2E4CB                 push    [ebp+dwStyle]   ; int</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>.text:77D2E4CE                 push    [ebp+lpWindowName] ; String</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>.text:77D2E4D1                 push    [ebp+lpClassName] ; MultiByteString</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>.text:77D2E4D4                 push    [ebp+dwExStyle] ; char</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>.text:77D2E4D7                 call    __CreateWindowEx@52 ; _CreateWindowEx(x,x,x,x,x,x,x,x,x,x,x,x,x)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>.text:77D2E4DC                 pop     ebp</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>.text:77D2E4DD                 retn    30h ; &#39;0&#39;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>.text:77D2E4DD _CreateWindowExA@48 endp</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>.text:77D2D0A3 ; HWND __stdcall CreateWindowExW(DWORD dwExStyle, LPCWSTR lpClassName, LPCWSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.text:77D2D0A3                 public _CreateWindowExW@48</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>.text:77D2D0A3 _CreateWindowExW@48 proc near           ; CODE XREF: DefMDIChildProcWorker(x,x,x,x,x):loc_77D30688↓p</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.text:77D2D0A3                                         ; CreateMDIWindowW(x,x,x,x,x,x,x,x,x,x)+27↓p ...</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.text:77D2D0A3</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>.text:77D2D0A3 dwExStyle       &#x3D; dword ptr  8</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>.text:77D2D0A3 lpClassName     &#x3D; dword ptr  0Ch</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>.text:77D2D0A3 lpWindowName    &#x3D; dword ptr  10h</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>.text:77D2D0A3 dwStyle         &#x3D; dword ptr  14h</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>.text:77D2D0A3 X               &#x3D; dword ptr  18h</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>.text:77D2D0A3 Y               &#x3D; dword ptr  1Ch</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>.text:77D2D0A3 nWidth          &#x3D; dword ptr  20h</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>.text:77D2D0A3 nHeight         &#x3D; dword ptr  24h</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>.text:77D2D0A3 hWndParent      &#x3D; dword ptr  28h</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>.text:77D2D0A3 hMenu           &#x3D; dword ptr  2Ch</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>.text:77D2D0A3 hInstance       &#x3D; dword ptr  30h</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>.text:77D2D0A3 lpParam         &#x3D; dword ptr  34h</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>.text:77D2D0A3</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>.text:77D2D0A3                 mov     edi, edi</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>.text:77D2D0A5                 push    ebp</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>.text:77D2D0A6                 mov     ebp, esp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>.text:77D2D0A8                 push    40000000h       ; int</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>.text:77D2D0AD                 push    [ebp+lpParam]   ; int</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>.text:77D2D0B0                 push    [ebp+hInstance] ; int</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>.text:77D2D0B3                 push    [ebp+hMenu]     ; int</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>.text:77D2D0B6                 push    [ebp+hWndParent] ; int</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>.text:77D2D0B9                 push    [ebp+nHeight]   ; int</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>.text:77D2D0BC                 push    [ebp+nWidth]    ; int</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>.text:77D2D0BF                 push    [ebp+Y]         ; int</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>.text:77D2D0C2                 push    [ebp+X]         ; int</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>.text:77D2D0C5                 push    [ebp+dwStyle]   ; int</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>.text:77D2D0C8                 push    [ebp+lpWindowName] ; String</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>.text:77D2D0CB                 push    [ebp+lpClassName] ; MultiByteString</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>.text:77D2D0CE                 push    [ebp+dwExStyle] ; char</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>.text:77D2D0D1                 call    __CreateWindowEx@52 ; _CreateWindowEx(x,x,x,x,x,x,x,x,x,x,x,x,x)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>.text:77D2D0D6                 pop     ebp</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>.text:77D2D0D7                 retn    30h ; &#39;0&#39;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>.text:77D2D0D7 _CreateWindowExW@48 endp</pre></td></tr></table></figure><p>查看  <code>__CreateWindowEx</code> :</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>发现其主要调用了  <code>VerNtUserCreateWindowEx</code></p>\n<p>接着查看：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>发现其主要调用了  <code>NtUserCreateWindowEx</code></p>\n<p>查看  <code>NtUserCreateWindowEx</code>  发现其通过系统调用进 0 环了</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>.text:77D2E37D ; __stdcall NtUserCreateWindowEx(x, x, x, x, x, x, x, x, x, x, x, x, x, x, x)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.text:77D2E37D _NtUserCreateWindowEx@60 proc near      ; CODE XREF: VerNtUserCreateWindowEx(x,x,x,x,x,x,x,x,x,x,x,x,x)+158↑p</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>.text:77D2E37D                 mov     eax, 1157h</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.text:77D2E382                 mov     edx, 7FFE0300h</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.text:77D2E387                 call    dword ptr [edx]</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>.text:77D2E389                 retn    3Ch ; &#39;&lt;&#39;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>.text:77D2E389 _NtUserCreateWindowEx@60 endp</pre></td></tr></table></figure><p>所以窗口是 0 环画的。</p>\n<h2 id=\"窗口对象\"><a class=\"anchor\" href=\"#窗口对象\">#</a> 窗口对象</h2>\n<p>窗口在内核同样也有一个对应的结构。</p>\n<p>通过分析 XP 的源码观察  <code>CreateWindow</code>  窗口的创建过程，发现其涉及了好多结构体。</p>\n<p>以下是我在 XP 源码中的发现：<br />\n从此函数开始：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PTHREADINFO <span class=\"token function\">PtiCurrent</span><span class=\"token punctuation\">(</span>VOID<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">ConnectIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>PTHREADINFO<span class=\"token punctuation\">)</span><span class=\"token function\">NtCurrentTebShared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Win32ThreadInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagTHREADINFO</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    W32THREAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//***************************************** begin: USER specific fields</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    PTL             ptl<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// Listhead for thread lock list</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    PPROCESSINFO    ppi<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// process info struct for this thread</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    PQ              pq<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// keyboard and mouse input queue</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    PKL             spklActive<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// active keyboard layout for this thread</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    PCLIENTTHREADINFO pcti<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Info that must be visible from client</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    PDESKTOP        rpdesk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    PDESKTOPINFO    pDeskInfo<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// Desktop info visible to client</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    PCLIENTINFO     pClientInfo<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Client info stored in TEB</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    DWORD           TIF_flags<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// TIF_ flags go here.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    PUNICODE_STRING pstrAppName<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Application module name.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    PSMS            psmsSent<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Most recent SMS this thread has sent</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    PSMS            psmsCurrent<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Received SMS this thread is currently processing</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    PSMS            psmsReceiveList<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// SMSs to be processed</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    LONG            timeLast<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Time and ID of last message</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    ULONG_PTR       idLast<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">int</span>             exitCode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    HDESK           hdesk<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// Desktop handle</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">int</span>             cPaintsReady<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    UINT            cTimersReady<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    PMENUSTATE      pMenuState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        PTDB            ptdb<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Win16Task Schedule data for WOW thread</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        PWINDOWSTATION  pwinsta<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Window station for SYSTEM thread</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    PSVR_INSTANCE_INFO psiiList<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// thread DDEML instance list</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    DWORD           dwExpWinVer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    DWORD           dwCompatFlags<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// The Win 3.1 Compat flags</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    DWORD           dwCompatFlags2<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// new DWORD to extend compat flags for NT5+ features</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    PQ              pqAttach<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// calculation variabled used in</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                                        <span class=\"token comment\">// zzzAttachThreadInput()</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    PTHREADINFO     ptiSibling<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// pointer to sibling thread info</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    PMOVESIZEDATA   pmsd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    DWORD           fsHooks<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// WHF_ Flags for which hooks are installed</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    PHOOK           sphkCurrent<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Hook this thread is currently processing</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    PSBTRACK        pSBTrack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    HANDLE          hEventQueueClient<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    PKEVENT         pEventQueueServer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    LIST_ENTRY      PtiLink<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Link to other threads on desktop</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">int</span>             iCursorLevel<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// keep track of each thread's level</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    POINT           ptLast<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Position of last message</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    PWND            spwndDefaultIme<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Default IME Window for this thread</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    PIMC            spDefaultImc<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Default input context for this thread</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    HKL             hklPrev<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Previous active keyboard layout</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">int</span>             cEnterCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    MLIST           mlPost<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// posted message list.</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    USHORT          fsChangeBitsRemoved<span class=\"token punctuation\">;</span><span class=\"token comment\">// Bits removed during PeekMessage</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    WCHAR           wchInjected<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// character from last VK_PACKET</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    DWORD           fsReserveKeys<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Keys that must be sent to the active</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                                        <span class=\"token comment\">// active console window.</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    PKEVENT        <span class=\"token operator\">*</span>apEvent<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Wait array for xxxPollAndWaitForSingleObject</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    ACCESS_MASK     amdesk<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Granted desktop access</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    UINT            cWindows<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Number of windows owned by this thread</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    UINT            cVisWindows<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Number of visible windows on this thread</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    PHOOK           aphkStart<span class=\"token punctuation\">[</span>CWINHOOKS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Hooks registered for this thread</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    CLIENTTHREADINFO  cti<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// Use this when no desktop is available</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">GENERIC_INPUT</span></span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    HANDLE          hPrevHidData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">DBG</span></span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    UINT            cNestedCalls<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span> THREADINFO<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中  <code>W32THREAD</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// This is the header shared info for W32 threads.  It is followed by the</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// NtUser per thread information.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_W32THREAD</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    PETHREAD        pEThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ULONG           RefCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    PTL             ptlW32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    KERNEL_PVOID    pgdiDcattr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    KERNEL_PVOID    pgdiBrushAttr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    KERNEL_PVOID    pUMPDObjs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    KERNEL_PVOID    pUMPDHeap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    ULONG           dwEngAcquireCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    KERNEL_PVOID    pSemTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    KERNEL_PVOID    pUMPDObj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token function\">defined</span><span class=\"token punctuation\">(</span>_WIN64<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    KERNEL_PVOID    pProxyPort<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    KERNEL_PVOID    pClientID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span> W32THREAD<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> KPTR_MODIFIER PW32THREAD<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Extended structures for message thunking.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_CREATESTRUCTEX</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    CREATESTRUCT cs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    LARGE_STRING strName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    LARGE_STRING strClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CREATESTRUCTEX<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PCREATESTRUCTEX<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* WM_CREATE/WM_NCCREATE lParam struct */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagCREATESTRUCT</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> FAR<span class=\"token operator\">*</span> lpCreateParams<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    HINSTANCE hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    HMENU     hMenu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    HWND      hwndParent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span>       cy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span>       cx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span>       y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span>       x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    LONG      style<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    LPCSTR    lpszName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    LPCSTR    lpszClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    DWORD     dwExStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CREATESTRUCT<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>通过分析  <code>xxxCreateWindowEx</code>  函数，最终发现窗口实例结构：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * sizeof(THROBJHEAD) must be equal to sizeof(PROCOBJHEAD)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * This is to make sure that DESKHEAD fields are always at the same offset.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_THROBJHEAD</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    HEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    PTHREADINFO pti<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span> THROBJHEAD<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> KPTR_MODIFIER PTHROBJHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_THRDESKHEAD</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    THROBJHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    DESKHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span> THRDESKHEAD<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PTHRDESKHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagWND</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    THRDESKHEAD   head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    WW<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// WOW-USER common fields. Defined in wowuserp.h</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token comment\">// The presence of \"state\" at the start of this structure is</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token comment\">// assumed by the STATEOFFSET macro.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    PWND                 spwndNext<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Handle to the next window</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    PWND                 spwndPrev<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Handle to the previous window</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    PWND                 spwndParent<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Backpointer to the parent window.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    PWND                 spwndChild<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Handle to child</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    PWND                 spwndOwner<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Popup window owner field</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    RECT                 rcWindow<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Window outer rectangle</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    RECT                 rcClient<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Client rectangle</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    WNDPROC_PWND         lpfnWndProc<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Can be WOW address or standard address</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    PCLS                 pcls<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// Pointer to window class</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    KHRGN                hrgnUpdate<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Accumulated paint region</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    PPROPLIST            ppropList<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Pointer to property list</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    PSBINFO              pSBInfo<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Words used for scrolling</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    PMENU                spmenuSys<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Handle to system menu</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    PMENU                spmenu<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Menu handle or ID</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    KHRGN                hrgnClip<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Clipping region for this window</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    LARGE_UNICODE_STRING strName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">int</span>                  cbwndExtra<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Extra bytes in window</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    PWND                 spwndLastActive<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Last active in owner/ownee list</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    KHIMC                hImc<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// Associated input context handle</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    KERNEL_ULONG_PTR     dwUserData<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Reserved for random application data</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_ACTIVATION_CONTEXT</span>  <span class=\"token operator\">*</span> KPTR_MODIFIER pActCtx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">LAME_BUTTON</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    KERNEL_PVOID    pStackTrace<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Creation stack trace; used by lame</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                                       <span class=\"token comment\">// button.</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// LAME_BUTTON</span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span> WND<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个就是窗口在内核对应的结构体</p>\n<h2 id=\"消息进入窗口消息队列的过程\"><a class=\"anchor\" href=\"#消息进入窗口消息队列的过程\">#</a> 消息进入窗口消息队列的过程</h2>\n<ol>\n<li>当使用鼠标在某个窗口上点击时，鼠标监控线程检测到点击的窗口对象</li>\n<li>根据窗口对象成员，找到窗口对应线程</li>\n<li>将消息放入该线程的消息队列中</li>\n</ol>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<ol>\n<li>窗口在 0 环创建</li>\n<li>窗口句柄是全局的</li>\n<li>一个线程可以使用多个窗口，但每个窗口只能属于一个线程</li>\n</ol>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMTI4Mjc4MjI=\">https://blog.csdn.net/qq_41988448/article/details/112827822</span></p>\n",
            "tags": [
                "消息队列与线程"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-01%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%9C%A8%E5%93%AA/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-01%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%9C%A8%E5%93%AA/",
            "title": "消息机制-01消息队列在哪",
            "date_published": "2022-04-20T07:17:06.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>接触过编程的人，或多或少用到过消息机制，但大多数人（包括我自己）只是知道相关 API 的基本用法，却不知道它是如何实现的</p>\n<p>从本章起，我们将带着以下几个问题一起来学习消息机制：</p>\n<ol>\n<li>什么是窗口句柄？在哪里？有什么用？</li>\n<li>什么是消息？什么是消息队列？消息队列在哪？</li>\n<li>什么是窗口过程？窗口过程是谁调用的？没有消息循环窗口过程会执行吗？</li>\n<li>为什么要有 w32k.sys 这个模块？</li>\n<li>为什么只有使用图形界面的程序才可以访问 KeServiceDescriptorTableShadow?</li>\n<li>界面 &quot;卡死&quot; 的时候为什么鼠标还可以动？</li>\n</ol>\n<h1 id=\"画一个简单的窗口\"><a class=\"anchor\" href=\"#画一个简单的窗口\">#</a> 画一个简单的窗口</h1>\n<p>从设计层面理解 Windows 的消息机制是怎么来的。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_WIN32_WINNT</span> <span class=\"token expression\"><span class=\"token number\">0x500</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_Color</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tDWORD r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tDWORD g<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tDWORD b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span>Color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_WindowClass</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tDWORD x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tDWORD y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tDWORD width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tDWORD height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tColor color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span>WindowClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 按照 WindowClass 的参数，将 hdc 中的数据打印到指定设备</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PaintWindows</span><span class=\"token punctuation\">(</span>HDC hdc<span class=\"token punctuation\">,</span> WindowClass <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tHBRUSH hBrush<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\thBrush <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span><span class=\"token function\">GetStockObject</span><span class=\"token punctuation\">(</span>DC_BRUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">SelectObject</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> hBrush<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 画刷</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">SetDCBrushColor</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> <span class=\"token function\">RGB</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">MoveToEx</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>x<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>y<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">LineTo</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>x<span class=\"token operator\">+</span>p<span class=\"token operator\">-></span>width<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">LineTo</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>x<span class=\"token operator\">+</span>p<span class=\"token operator\">-></span>width<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>y<span class=\"token operator\">+</span>p<span class=\"token operator\">-></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token function\">LineTo</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>x<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>y<span class=\"token operator\">+</span>p<span class=\"token operator\">-></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">LineTo</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>x<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>x<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>y<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>width<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>height<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">DeleteObject</span><span class=\"token punctuation\">(</span>hBrush<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">char</span> cMessage<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 消息</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tHWND hwnd<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 画在哪</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tHDC hdc<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 显卡缓存</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// 设置窗口参数，长宽高之类的</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tWindowClass wClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\twClass<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\twClass<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\twClass<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token number\">800</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\twClass<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token number\">0xEF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">0xDE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">// 画在哪</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\thwnd <span class=\"token operator\">=</span> <span class=\"token function\">GetDesktopWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token comment\">//hwnd = FindWindow(\"dbgviewClass\", NULL);</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token comment\">// 获取 DC 设备句柄：可以把 DC 理解成显卡缓存</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\thdc <span class=\"token operator\">=</span> <span class=\"token function\">GetWindowDC</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token comment\">// 画窗口</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t<span class=\"token function\">PaintWindows</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\tcMessage <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>cMessage<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'a'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">+=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">+=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">+=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'b'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">-=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">-=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\twClass<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">-=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>我们发现我们画的这个傻瓜窗口：</p>\n<ol>\n<li>被其它窗口覆盖后就消失了</li>\n<li>只能接收键盘发送的消息</li>\n</ol>\n<p>那么如何使窗口能够接收所有消息呢？</p>\n<p>答案：将所有消息放入一块内存中，这块内存被称之为 “消息队列”</p>\n<h1 id=\"消息队列\"><a class=\"anchor\" href=\"#消息队列\">#</a> 消息队列</h1>\n<p>描述：本质上是一种数据结构，当对象接收到消息时，将接收到的所有消息放入消息队列中，等待对象进行处理<br />\n规则：先进先出</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"消息队列在哪\"><a class=\"anchor\" href=\"#消息队列在哪\">#</a> 消息队列在哪？</h2>\n<p>我们假设把消息队列放到用户空间，那么就要有一个专用进程去把这些消息放到各个进程的消息队列中，这就涉及了跨进程通信的问题，因为是这个专用进程负责监听消息，它首先能得到这些消息，然后在分发给其他进程的消息队列，这样的话就会有大量的时间花费在跨进程通信上，Windows 并没有采用这种解决方案，Linux 采用的是这种解决方案。</p>\n<p>在 Linux 中：专用进程</p>\n<ol>\n<li>使用专用进程捕获所有消息</li>\n<li>判断消息所属进程，进行分发，将消息分配到目标进程的消息队列中</li>\n</ol>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p><strong>微软的解决方案：GUI 线程</strong></p>\n<p>注意 GUI 和 GDI 的区别。</p>\n<p>&lt;1&gt; 当线程刚创建的时候，都是普通线程：<br />\n <code>Thread.ServiceTable-&gt; KeServiceDescriptorTable</code></p>\n<p>&lt;2&gt; 当线程第一次调用  <code>Win32k.sys</code>  时，会调用一个函数：  <code>PsConvertToGuiThread</code></p>\n<p>主要做几件事：<br />\na. 扩充内核栈，必须换成 64KB 的大内核栈，因为普通内核栈只有 12KB 大小。<br />\nb. 创建一个包含消息队列的结构体，并挂到 KTHREAD 上。<br />\nc.  <code>Thread.ServiceTable-&gt; KeServiceDescriptorTableShadow</code> <br />\nd. 把需要的内存数据映射到本进程空间</p>\n<p>Windows 把消息队列存到了 0 环。</p>\n<h2 id=\"如何查找消息队列\"><a class=\"anchor\" href=\"#如何查找消息队列\">#</a> 如何查找消息队列</h2>\n<p>////////<strong> 那么在内核中可以借此判断线程是窗口程序还是控制台程序呢？</strong><br />\n在  <code>KTHREAD</code>  中有一个成员  <code>+0x130 Win32Thread      : Ptr32 Void</code> ，若当前程序使用了图形界面相关的 API，这个成员就指向一个结构体 <code>THREADINFO</code> ，其成员 <code>PQ  pq;</code>  包含了当前线程的消息队列。</p>\n<p>以下是我在 XP 源码中的发现：<br />\n从此函数开始：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PTHREADINFO <span class=\"token function\">PtiCurrent</span><span class=\"token punctuation\">(</span>VOID<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">ConnectIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>PTHREADINFO<span class=\"token punctuation\">)</span><span class=\"token function\">NtCurrentTebShared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Win32ThreadInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagTHREADINFO</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    W32THREAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//***************************************** begin: USER specific fields</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    PTL             ptl<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// Listhead for thread lock list</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    PPROCESSINFO    ppi<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// process info struct for this thread</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    PQ              pq<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// keyboard and mouse input queue</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>……</pre></td></tr></table></figure><p>下面是结构体 <code>Q</code>  或者说 <code>tagQ</code>  的结构：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Structure definition for messages as they exist on a Q. Same as MSG</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * structure except for the link-pointer and flags at the end.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagQMSG</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    PQMSG           pqmsgNext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    PQMSG           pqmsgPrev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    MSG             msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    LONG_PTR        ExtraInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    DWORD           dwQEvent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    PTHREADINFO     pti<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span> QMSG<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagMLIST</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    PQMSG pqmsgRead<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// next message to be read. This is a FIFO queue</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    PQMSG pqmsgWriteLast<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// last message  added to the queue. Used mainly for coalescing</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    DWORD cMsgs<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Count of messages. Used for optimizations and to enforce a max.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span> MLIST<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PMLIST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * Message Queue structure.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * Note, if you need to add a WORD sized value,</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * do so after xbtnDblClk.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagQ</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    MLIST       mlInput<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// raw mouse and key message list.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    PTHREADINFO ptiSysLock<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// Thread currently allowed to process input</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    ULONG_PTR    idSysLock<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// Last message removed or to be removed before unlocking</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    ULONG_PTR    idSysPeek<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// Last message peeked</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    PTHREADINFO ptiMouse<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Last thread to get mouse msg.</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    PTHREADINFO ptiKeyboard<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    PWND        spwndCapture<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    PWND        spwndFocus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    PWND        spwndActive<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    PWND        spwndActivePrev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    UINT        codeCapture<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// type of captue. See *_CAP* defines in this file</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    UINT        msgDblClk<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// last mouse down message removed</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    WORD        xbtnDblClk<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// last xbutton down</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    DWORD       timeDblClk<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// max time for next button down to be taken as double click</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    HWND        hwndDblClk<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// window that got last button down</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    POINT       ptDblClk<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// last button down position. See SYSMET(C?DOUBLECLK)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    BYTE        afKeyRecentDown<span class=\"token punctuation\">[</span>CBKEYSTATERECENTDOWN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    BYTE        afKeyState<span class=\"token punctuation\">[</span>CBKEYSTATE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    CARET       caret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    PCURSOR     spcurCurrent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">int</span>         iCursorLevel<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// show/hide count. &lt; 0 if the cursor is not visible</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    DWORD       QF_flags<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// QF_ flags go here</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    USHORT      cThreads<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Count of threads using this queue</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    USHORT      cLockCount<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// Count of threads that don't want this queue freed</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    UINT        msgJournal<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// See SetJournalTimer. Journal message to be delivered when timer goes off</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    LONG_PTR    ExtraInfo<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// Extra info for last qmsg read. See GetMessageExtraInfo</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span> Q<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>&lt;1&gt; 消息队列存储在 0 环，通过 KTHREAD.Win32Thread 可以找到</p>\n<p>&lt;2&gt; 并不是所有线程都要消息队列，只有 GUI 线程才有消息队列</p>\n<p>&lt;3&gt; 一个 GUI 线程对应 1 个消息队列</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p>滴水课件</p>\n",
            "tags": [
                "消息队列",
                "PsConvertToGuiThread",
                "win32k.sys",
                "GUI线程"
            ]
        }
    ]
}