{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"win32\" category",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win32%E9%A1%B9%E7%9B%AE-%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E7%9B%91%E6%8E%A7%E5%99%A8/",
            "url": "https://or0kit.github.io/Bin/Win32/Win32%E9%A1%B9%E7%9B%AE-%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E7%9B%91%E6%8E%A7%E5%99%A8/",
            "title": "Win32项目-函数调用监控器",
            "date_published": "2022-04-12T06:39:16.000Z",
            "content_html": "<h1 id=\"项目要求\"><a class=\"anchor\" href=\"#项目要求\">#</a> 项目要求</h1>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>1、使用内存写入的方式，实现模块隐藏.</p>\n<p>2、IAT 表中有的 API 使用 IAT Hook 实现  不在 IAT 表的使用 Inline Hook 实现</p>\n<p>3、将监控的 API 参数写入到文件中</p>\n<p>4、进程间通信方式自己选择，有创新最好</p>\n<p>5、所有的 HOOK 能够正常卸载，不能导致进程意外结束.</p>\n<h2 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<p>有一段时间没有用 Win32 实现 GUI 了，顺便复习一下。</p>\n<h3 id=\"创建监控程序的对话框\"><a class=\"anchor\" href=\"#创建监控程序的对话框\">#</a> 创建监控程序的对话框</h3>\n<p>在  <code>WinMain</code>  中添加创建对话框代码并画一个界面：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建 Dialog 对话框</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DialogBox</span><span class=\"token punctuation\">(</span>hInstance<span class=\"token punctuation\">,</span> <span class=\"token function\">MAKEINTRESOURCE</span><span class=\"token punctuation\">(</span>IDD_DIALOG_MAIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> DialogProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>在对话框的处理函数中添加各个按钮的相应代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL CALLBACK <span class=\"token function\">DialogProc</span><span class=\"token punctuation\">(</span>HWND hwndDlg<span class=\"token punctuation\">,</span> UINT uMsg<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>uMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_CLOSE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token function\">EndDialog</span><span class=\"token punctuation\">(</span>hwndDlg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_COMMAND<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_INJECT<span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_INJECT\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_LOG<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_LOG\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_MBox1<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_MBox1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_MBox2<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_MBox2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_CFile1<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_CFile1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_CFile2<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_CFile2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_Opro1<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_Opro1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_Opro2<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_Opro2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_Add1<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_Add1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_Add2<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"IDC_Add2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我这里就先用  <code>MessAgeBox</code>  代替了。后面再实现各个按钮的相应代码。<br />\n接下来编写理想化的被监控程序。</p>\n<h3 id=\"编写被监控的程序\"><a class=\"anchor\" href=\"#编写被监控的程序\">#</a> 编写被监控的程序</h3>\n<p>这个我就直接使用 MFC 编写了，大致界面如下：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>接下来实现其功能。</p>\n<h4 id=\"显示自己的pid\"><a class=\"anchor\" href=\"#显示自己的pid\">#</a> 显示自己的 Pid</h4>\n<p>添加一个函数，在对话框初始化的时候调用。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMonitoredProgramDlg</span><span class=\"token operator\">::</span><span class=\"token function\">ShowPid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此处添加实现代码.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t <span class=\"token comment\">// 获取进程自身的 PID</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tHANDLE hSnapshot <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>INVALID_HANDLE_VALUE <span class=\"token operator\">==</span> hSnapshot<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPROCESSENTRY32 pi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tpi<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 第一次使用必须初始化成员</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bRet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">_tcscmp</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MonitoredProgram.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pi<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tCString Pid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\tPid<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pi<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token operator\">::</span><span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_PID<span class=\"token punctuation\">,</span> Pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tbRet <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截图：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h4 id=\"实现调用messageboxw功能\"><a class=\"anchor\" href=\"#实现调用messageboxw功能\">#</a> 实现调用 MessageBoxW 功能</h4>\n<p>添加按钮的处理函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMonitoredProgramDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedButton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 获取 标题和文本 编辑框内容 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tCString CTitle<span class=\"token punctuation\">,</span> CText<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_Title<span class=\"token punctuation\">,</span> CTitle<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_Text<span class=\"token punctuation\">,</span> CText<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 调用 MessageBoxW</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">MessageBoxW</span><span class=\"token punctuation\">(</span>CText<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CTitle<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截图：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h4 id=\"实现调用createfilew功能\"><a class=\"anchor\" href=\"#实现调用createfilew功能\">#</a> 实现调用 CreateFileW 功能</h4>\n<p>添加按钮的处理函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMonitoredProgramDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 获取路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tCString CPath<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_Path<span class=\"token punctuation\">,</span> CPath<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">CreateFileW</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tCPath<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tGENERIC_READ <span class=\"token operator\">|</span> GENERIC_WRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tOPEN_ALWAYS<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 始终创建一个新文件</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tFILE_ATTRIBUTE_NORMAL<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文件最常用的默认值</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截图：</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<h4 id=\"实现调用openprocess功能\"><a class=\"anchor\" href=\"#实现调用openprocess功能\">#</a> 实现调用 OpenProcess 功能</h4>\n<p>要打开另一个进程的句柄并获得完全访问权限，必须启用 SeDebugPrivilege 权限，所以就随便一个权限了。</p>\n<p>添加按钮的处理函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMonitoredProgramDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tHANDLE hProcess <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 获取目标进程 PID</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tCString CPid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_TPid<span class=\"token punctuation\">,</span> CPid<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\thProcess <span class=\"token operator\">=</span> <span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_QUERY_LIMITED_INFORMATION<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token function\">_ttoi</span><span class=\"token punctuation\">(</span>CPid<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截图：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<h4 id=\"实现调用add函数功能\"><a class=\"anchor\" href=\"#实现调用add函数功能\">#</a> 实现调用 Add 函数功能</h4>\n<p>添加 Add 函数并添加获取 Add 函数地址的函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token class-name\">CMonitoredProgramDlg</span><span class=\"token operator\">::</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 故意定义一个局部变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMonitoredProgramDlg</span><span class=\"token operator\">::</span><span class=\"token function\">ShowFuncAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tCString FuncAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tFuncAddress<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%X\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>CMonitoredProgramDlg<span class=\"token operator\">::</span>Add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_FuncAddress<span class=\"token punctuation\">,</span> FuncAddress<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>添加按钮的处理函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMonitoredProgramDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedCalc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 获取 加数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tCString CAdd1<span class=\"token punctuation\">,</span> CAdd2<span class=\"token punctuation\">,</span> CResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_ADD1<span class=\"token punctuation\">,</span> CAdd1<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_ADD2<span class=\"token punctuation\">,</span> CAdd2<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCResult<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token function\">_ttoi</span><span class=\"token punctuation\">(</span>CAdd1<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_ttoi</span><span class=\"token punctuation\">(</span>CAdd2<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token operator\">::</span><span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_Result<span class=\"token punctuation\">,</span> CResult<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截图：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<p>至此，被监控程序已经写完了。</p>\n<p>开始编写监控程序。</p>\n<h3 id=\"实现监控程序的功能\"><a class=\"anchor\" href=\"#实现监控程序的功能\">#</a> 实现监控程序的功能</h3>\n<p>如何实现监控程序是一个问题。</p>\n<p>如何与被注入到目标进程的模块通信是一个问题，我打算用共享内存进行通信，并为共享内存定义结构：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_Communication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 函数地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tDWORD definedAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 安装 / 卸载 Hook</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">struct</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token comment\">// 安装 / 卸载 Hook MessageBoxW</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tBOOL bHookMsgW <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token comment\">// 安装 / 卸载 Hook CreateFileW</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tBOOL bHookCfw <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">// 安装 / 卸载 Hook OpenProcess</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tBOOL bOp <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\">// 安装 / 卸载 Hook 自定义函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tBOOL bDefined <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>isHook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 远程调用函数</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">struct</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tBOOL bCallMsgW <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tBOOL bCallCfw <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tBOOL bCallOp <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tBOOL bCallDefined <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>isCall<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span>Communication<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>PCommunication<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>首先在监控程序中申请一块  <code>_Communication</code>  大小的共享内存，并初始化它，这一步，在注入的函数中实现。</p>\n<p>先设计监控端的下发命令的操控代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">HookMessageBoxW</span><span class=\"token punctuation\">(</span>HWND hwndDlg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 变化按钮</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 静态变量只初始化一次</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL isHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 获取按钮句柄</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tHWND hButton <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>hwndDlg<span class=\"token punctuation\">,</span> IDC_MBox1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHook<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token comment\">// 利用共享内存通信，通知 dll 去卸载 Hook  MessageBoxW</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bHookMsgW <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\">// 已经卸载 Hook</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 利用共享内存通信，通知 dll 去卸载 Hook  MessageBoxW</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bHookMsgW <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token comment\">// Hook 已开启</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关闭监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>BOOL <span class=\"token function\">HookCreateFileW</span><span class=\"token punctuation\">(</span>HWND hwndDlg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// 变化按钮</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token comment\">// 静态变量只初始化一次</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL isHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token comment\">// 获取按钮句柄</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tHWND hButton <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>hwndDlg<span class=\"token punctuation\">,</span> IDC_CFile1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHook<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bHookCfw <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token comment\">// 已经卸载 Hook</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bHookCfw <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token comment\">// 开始 Hook</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关闭监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>BOOL <span class=\"token function\">HookOpenProcess</span><span class=\"token punctuation\">(</span>HWND hwndDlg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token comment\">// 变化按钮</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">// 静态变量只初始化一次</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL isHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token comment\">// 获取按钮句柄</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tHWND hButton <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>hwndDlg<span class=\"token punctuation\">,</span> IDC_Opro1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHook<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bOp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t<span class=\"token comment\">// 已经卸载 Hook</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bOp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token comment\">// 开始 Hook</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关闭监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>BOOL <span class=\"token function\">HookAdd</span><span class=\"token punctuation\">(</span>HWND hwndDlg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t<span class=\"token comment\">// 变化按钮</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token comment\">// 静态变量只初始化一次</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL isHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token comment\">// 获取按钮句柄</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\tHWND hButton <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>hwndDlg<span class=\"token punctuation\">,</span> IDC_Add1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHook<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bDefined <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t<span class=\"token comment\">// 已经卸载 Hook</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\tpCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bDefined <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token comment\">// 开始 Hook</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\tisHook <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t<span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>hButton<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关闭监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>BOOL <span class=\"token function\">RemoteCallMessageBoxW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t<span class=\"token comment\">// 通信</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallMsgW <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>BOOL <span class=\"token function\">RemoteCallCreateFileW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallCfw <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>BOOL <span class=\"token function\">RemoteCallOpenProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallOp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>BOOL <span class=\"token function\">RemoteCallAdd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallDefined <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这是监控端下发 Hook 和 远程调用命令的实现。</p>\n<p>然后接着搞实现内存注入模块了，涉及了 PE 操作，这个之前写过的，顺便复习一下了。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">MemoryInject</span><span class=\"token punctuation\">(</span>DWORD dwPid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPVOID pDllFileBuffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> pDllImageBuffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 读取 DLL，</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tDWORD dwFileBufferSize <span class=\"token operator\">=</span> <span class=\"token function\">FileToMemory</span><span class=\"token punctuation\">(</span>DllName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pDllFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 拉伸为内存中的状态，并获取其内存中的大小</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tDWORD dwSizeOfImage <span class=\"token operator\">=</span> <span class=\"token function\">FileBufferToImageBuffer</span><span class=\"token punctuation\">(</span>pDllFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pDllImageBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 解析 PE 信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pDllImageBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPIMAGE_FILE_HEADER pPEHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pPEHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 在被监控的进程中申请 dll 内存状态大小的内存空间</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tHANDLE hProcess <span class=\"token operator\">=</span> <span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_ALL_ACCESS<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> dwPid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tLPVOID pRemoteImageBase <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAllocEx</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> dwSizeOfImage<span class=\"token punctuation\">,</span> MEM_COMMIT<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> pRemoteImageBase<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">//printf (\"在目标进程申请内存失败，错误码: % d\\n\", GetLastError ());</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 修复 IAT</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">RepairIAT</span><span class=\"token punctuation\">(</span>pDllImageBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// 修复重定位表</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">SetNewImageBase</span><span class=\"token punctuation\">(</span>pDllImageBuffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pRemoteImageBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">// 写入到被监控的进程中</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> pRemoteImageBase<span class=\"token punctuation\">,</span> pDllImageBuffer<span class=\"token punctuation\">,</span> dwSizeOfImage<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// 计算 dll 执行的 OEP</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tDWORD dwOEP <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pRemoteImageBase <span class=\"token operator\">+</span> pOptionHeader<span class=\"token operator\">-></span>AddressOfEntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token comment\">// 创建远程线程，执行入口代码</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token function\">CreateRemoteThread</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>dwOEP<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后就开始在 dll 中编写最核心的功能了。</p>\n<h3 id=\"编写dll\"><a class=\"anchor\" href=\"#编写dll\">#</a> 编写 dll</h3>\n<p>因为我们在监控端里要创建远程线程去执行 dll 的入口函数，为了更好控制 dll 的入口函数，我们更改一下入口，在 dllmain 中这样写：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">comment</span><span class=\"token punctuation\">(</span>linker<span class=\"token punctuation\">,</span> </span><span class=\"token string\">\"/entry:\\\"Or0kit\\\"\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">// 指定程序入口函数为 Or0kit ()</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">//TODO</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">Or0kit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t__asm sub esp<span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 提升堆栈，提高容错性。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t__asm add esp<span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t__asm retn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>初始化 Start 函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">//TODO</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 首先初始化共享内存</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tg_hFileMap <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span>INVALID_HANDLE_VALUE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> PAGE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MapSize<span class=\"token punctuation\">,</span> MapName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_hFileMap <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建共享内存失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建共享内存失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tpCommMemory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PCommunication<span class=\"token punctuation\">)</span><span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span>g_hFileMap<span class=\"token punctuation\">,</span> FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MapSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MapViewOfFile 失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MapViewOfFile 失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>g_hFileMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token comment\">// Hook MessageBoxW</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bHookMsgW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经 Hook</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// Hook</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经卸载 hook</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// unload hook</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token comment\">// Hook CreateFileW</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bHookCfw<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经 Hook</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// Hook</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经卸载 hook</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// unload hook</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token comment\">// Hook OpenProcess</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bOp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经 Hook</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// Hook</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经卸载 hook</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// unload hook</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token comment\">// Hook Add</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isHook<span class=\"token punctuation\">.</span>bDefined<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经 Hook</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// Hook</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t<span class=\"token comment\">// 判断是否已经卸载 hook</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// unload hook</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t<span class=\"token comment\">// 远程调用</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallMsgW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t<span class=\"token comment\">// 调用后把标志位置零</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallMsgW <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallCfw<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t<span class=\"token comment\">// 调用后把标志位置零</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallCfw <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallOp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t<span class=\"token comment\">// 调用后把标志位置零</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallOp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallDefined<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token comment\">// 调用后把标志位置零</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\tpCommMemory<span class=\"token operator\">-></span>isCall<span class=\"token punctuation\">.</span>bCallDefined <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以我现在的水平，只能这样写了。</p>\n<p>接下来就是实现 IAT HOOK 和 INLINE HOOK。</p>\n<p>这个之前也有过练习，复习一下。</p>\n<pre><code class=\"language-cpp\">\n</code></pre>\n",
            "tags": [
                "IAT HOOK",
                "INLINE HOOK",
                "进程监控",
                "模块隐藏",
                "进程通信"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/C++%E5%A3%B3%E7%BC%96%E5%86%99/",
            "url": "https://or0kit.github.io/Bin/Win32/C++%E5%A3%B3%E7%BC%96%E5%86%99/",
            "title": "C++壳编写",
            "date_published": "2022-04-04T11:54:19.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>因为有之前编写滴水教程中的加壳项目的经验，想要深入了解一下加壳。</p>\n<p>并且之前看了任晓珲前辈的《黑客免杀攻防》一书，想借鉴其第十一章的编写 C++ 壳的思路，设计一个自己的 C++ 壳。</p>\n<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>以我目前对壳的了解，壳无非就是对 PE 结构进行各种操作，并且不影响其原本的功能。</p>\n<p>了解 UPX 壳和 ASP 壳</p>\n<h2 id=\"编写-c-壳\"><a class=\"anchor\" href=\"#编写-c-壳\">#</a> 编写 C++ 壳</h2>\n<p>预处理</p>\n<ol>\n<li>读取目标文件并确定文件体积</li>\n<li>读取代码段的相关信息</li>\n<li>将代码段属性修改为可读、可写、可执行</li>\n<li>对代码段进行简单的异或加密处理。</li>\n</ol>\n<p>植入 Stub</p>\n<ol>\n<li>读取保存在资源中的 Stub 部分，并计算其体积；</li>\n<li>依据此体积添加区段；</li>\n<li>将 Stub 复制到新区段中，对 Stub 进行重定位等一系列操作处理；</li>\n<li>修改入口到 Stub 处，并将原入口点传递给 Stub，留以备用。</li>\n</ol>\n<p>Stub 执行</p>\n<ol>\n<li>读取被加密区域的起始及结束偏移；</li>\n<li>使用异或算法解密相关区域的代码；</li>\n<li>弹出对话框提示相关信息（演示效果）</li>\n<li>根据保存下的原 OEP 信息，执行原程序。</li>\n</ol>\n<p>这是《黑客免杀攻防》一书中编写的一个简单的 C++ 壳的加壳思路，对于被加壳文件来说改变了其 OEP 的位置，使其指向了新增的区段中的 Stub 代码，由 Stub 进行一些列的解密操作，然后再执行原程序的 OEP。</p>\n<p>其中编写用编写 dll 的方式生成 Stub 部分，并且完全控制它的</p>\n<h1 id=\"结果\"><a class=\"anchor\" href=\"#结果\">#</a> 结果</h1>\n<p>一一实现以上功能。代码放在 github 了：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09yMGtpdC9PcjBwYWNrQmFzZQ==\">https://github.com/Or0kit/Or0packBase</span></p>\n",
            "tags": [
                "加壳",
                "脱壳",
                "C++壳"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/WinAPI-%E8%BF%9B%E7%A8%8B%E9%81%8D%E5%8E%86%E4%B8%8E%E6%A8%A1%E5%9D%97%E9%81%8D%E5%8E%86/",
            "url": "https://or0kit.github.io/Bin/Win32/WinAPI-%E8%BF%9B%E7%A8%8B%E9%81%8D%E5%8E%86%E4%B8%8E%E6%A8%A1%E5%9D%97%E9%81%8D%E5%8E%86/",
            "title": "WinAPI-进程遍历与模块遍历",
            "date_published": "2021-11-16T08:49:31.000Z",
            "content_html": "<h1 id=\"createtoolhelp32snapshot函数tlhelp32h\"><a class=\"anchor\" href=\"#createtoolhelp32snapshot函数tlhelp32h\">#</a> CreateToolhelp32Snapshot 函数 (tlhelp32.h)</h1>\n<p>CreateToolhelp32Snapshot 可以通过获取进程信息为指定的进程、进程使用的堆 [HEAP]、模块 [MODULE]、线程建立一个快照。说到底，可以获取系统中正在运行的进程信息，线程信息等。</p>\n<h2 id=\"函数原型\"><a class=\"anchor\" href=\"#函数原型\">#</a> 函数原型</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HANDLE WINAPI <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    DWORD dwFlags<span class=\"token punctuation\">,</span>             <span class=\"token comment\">// 用来指定 “快照” 中需要返回的对象，可以是 TH32CS_SNAPPROCESS 等</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD th32ProcessID        <span class=\"token comment\">// 一个进程 ID 号，用来指定要获取哪一个进程的快照，当获取系统进程列表或获取 当前进程快照时可以设为 0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"参数详解\"><a class=\"anchor\" href=\"#参数详解\">#</a> 参数详解</h2>\n<h3 id=\"dwflags\"><a class=\"anchor\" href=\"#dwflags\">#</a> dwFlags</h3>\n<p>要包括在快照中的系统部分。此参数可以是以下一个或多个值。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TH32CS_INHERIT 0x80000000</td>\n<td style=\"text-align:left\">表示快照句柄是可继承的。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TH32CS_SNAPALL</td>\n<td style=\"text-align:left\">包括系统中的所有进程和线程，以及 th32ProcessID 中指定的进程的堆和模块。等效于使用 OR 运算指定组合的 TH32CS_SNAPHEAPLIST，TH32CS_SNAPMODULE，TH32CS_SNAPPROCESS 和 TH32CS_SNAPTHREAD 值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TH32CS_SNAPHEAPLIST 0x00000001</td>\n<td style=\"text-align:left\">包括快照中 th32ProcessID 指定的进程的所有堆。要枚举堆，请参阅 Heap32ListFirst。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TH32CS_SNAPMODULE 0x00000008</td>\n<td style=\"text-align:left\">包括快照中 th32ProcessID 指定的进程的所有模块。要枚举模块，请参阅 Module32First。如果函数失败并返回 ERROR_BAD_LENGTH，请重试该函数直到成功。64 位 Windows：在 32 位进程中使用此标志包括 th32ProcessID 指定的进程的 32 位模块，而在 64 位进程中使用该进程包括 64 位模块。要包括来自 64 位进程的 th32ProcessID 指定的进程的 32 位模块，请使用 TH32CS_SNAPMODULE32 标志。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TH32CS_SNAPMODULE32 0x00000010</td>\n<td style=\"text-align:left\">包括从 64 位进程调用时快照中的 th32ProcessID 指定的进程的所有 32 位模块。该标志可以与 TH32CS_SNAPMODULE 或 TH32CS_SNAPALL 组合使用。如果函数失败并返回 ERROR_BAD_LENGTH，请重试该函数直到成功。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TH32CS_SNAPPROCESS 0x00000002</td>\n<td style=\"text-align:left\">包括快照中系统的所有进程。要枚举进程，请参阅 Process32First。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TH32CS_SNAPTHREAD 0x00000004</td>\n<td style=\"text-align:left\">包括快照中系统的所有线程。要枚举线程，请参阅 Thread32First。要标识属于特定进程的线程，在枚举线程时将其进程标识符与 THREADENTRY32 结构的 th32OwnerProcessID 成员进行比较。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"th32processid\"><a class=\"anchor\" href=\"#th32processid\">#</a> th32ProcessID</h3>\n<p>要包括在快照中的进程的进程标识符。<br />\n此参数可以为零以指示当前进程。<br />\n当指定  <code>TH32CS_SNAPHEAPLIST</code> ， <code>TH32CS_SNAPMODULE</code> ， <code>TH32CS_SNAPMODULE32</code>  或  <code>TH32CS_SNAPALL</code>  值时，使用此参数。否则，它将被忽略，并且所有进程都包括在快照中。<br />\n如果指定的进程是空闲进程或其中一个 CSRSS 进程，则此函数将失败，并且最后一个错误代码为  <code>ERROR_ACCESS_DENIED</code> ，因为它们的访问限制会阻止用户级代码打开它们。</p>\n<p>如果指定的进程是 64 位进程，并且调用程序是 32 位进程，则此函数失败，最后一个错误代码为  <code>ERROR_PARTIAL_COPY</code> （299）。</p>\n<h2 id=\"返回值\"><a class=\"anchor\" href=\"#返回值\">#</a> 返回值</h2>\n<p>如果函数成功，它将返回一个打开的句柄到指定的快照。</p>\n<p>如果函数失败，则返回  <code>INVALID_HANDLE_VALUE</code> 。要获取扩展错误信息，请调用  <code>GetLastError</code> 。可能的错误代码包括  <code>ERROR_BAD_LENGTH</code> 。</p>\n<h1 id=\"相关函数与结构体\"><a class=\"anchor\" href=\"#相关函数与结构体\">#</a> 相关函数与结构体</h1>\n<h2 id=\"module32first-函数-tlhelp32h\"><a class=\"anchor\" href=\"#module32first-函数-tlhelp32h\">#</a> Module32First 函数 (tlhelp32.h)</h2>\n<p>检索有关与进程关联的第一个模块的信息。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">Module32First</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">]</span>      HANDLE          hSnapshot<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">]</span> LPMODULEENTRY32 lpme</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"参数\"><a class=\"anchor\" href=\"#参数\">#</a> 参数</h3>\n<p><code>[in] hSnapshot</code>  从上一次调用 CreateToolhelp32Snapshot 函数返回的快照句柄 。</p>\n<p><code>[in, out] lpme</code>  指向 MODULEENTRY32 结构的指针。</p>\n<h3 id=\"返回值-2\"><a class=\"anchor\" href=\"#返回值-2\">#</a> 返回值</h3>\n<p>如果模块列表的第一个条目已复制到缓冲区，则返回  <code>TRUE</code> ，否则返回  <code>FALSE</code> 。如果不存在模块或快照不包含模块信息，则  <code>GetLastError</code>  函数将返回  <code>ERROR_NO_MORE_FILES</code>  错误值。</p>\n<h2 id=\"module32next-函数-tlhelp32h\"><a class=\"anchor\" href=\"#module32next-函数-tlhelp32h\">#</a> Module32Next 函数 (tlhelp32.h)</h2>\n<p>检索有关与进程或线程关联的下一个模块的信息。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">Module32Next</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">]</span>  HANDLE          hSnapshot<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">[</span>out<span class=\"token punctuation\">]</span> LPMODULEENTRY32 lpme</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"参数-2\"><a class=\"anchor\" href=\"#参数-2\">#</a> 参数</h3>\n<p><code>[in] hSnapshot</code>  从上一次调用 CreateToolhelp32Snapshot 函数返回的快照句柄 。</p>\n<p><code>[out] lpme</code>  指向 MODULEENTRY32 结构的指针 。</p>\n<h3 id=\"返回值-3\"><a class=\"anchor\" href=\"#返回值-3\">#</a> 返回值</h3>\n<p>如果模块列表的下一个条目已复制到缓冲区，则返回 TRUE，否则返回 FALSE。如果没有更多模块存在，则 GetLastError 函数将返回  <code>ERROR_NO_MORE_FILES</code>  错误值。</p>\n<h2 id=\"moduleentry32-结构体\"><a class=\"anchor\" href=\"#moduleentry32-结构体\">#</a> MODULEENTRY32 结构体</h2>\n<p>描述属于指定进程的模块列表中的条目。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagMODULEENTRY32</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  DWORD   dwSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  DWORD   th32ModuleID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  DWORD   th32ProcessID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  DWORD   GlblcntUsage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  DWORD   ProccntUsage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  BYTE    <span class=\"token operator\">*</span>modBaseAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  DWORD   modBaseSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  HMODULE hModule<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">char</span>    szModule<span class=\"token punctuation\">[</span>MAX_MODULE_NAME32 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">char</span>    szExePath<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span> MODULEENTRY32<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"结构体成员\"><a class=\"anchor\" href=\"#结构体成员\">#</a> 结构体成员</h3>\n<ol>\n<li><code>dwSize</code>  指定结构的长度，以字节为单位。在调用 Module32First 功能，设置这个成员 SIZEOF（MODULEENTRY32）。如果你不初始化的 dwSize，Module32First 将失败。</li>\n<li><code>th32ModuleID</code>  此成员已经不再被使用，通常被设置为 1</li>\n<li><code>th32ProcessID</code>  正在检查的进程标识符。这个成员的内容，可以使用 Win32 API 的元素</li>\n<li><code>GlblcntUsage</code>  全局模块的使用计数，即模块的总载入次数。通常这一项是没有意义的，被设置为 0xFFFF。</li>\n<li><code>ProccntUsage</code>  全局模块的使用计数（与 GlblcntUsage 相同）。通常这一项也是没有意义的，被设置为 0xFFFF。</li>\n<li><code>modBaseAddr</code>  模块的基址，在其所属的进程范围内。</li>\n<li><code>modBaseSize</code>  模块的大小，单位字节。</li>\n<li><code>hModule</code>  所属进程的范围内，模块句柄。</li>\n<li><code>szModule</code>  NULL 结尾的字符串，其中包含模块名。</li>\n<li><code>szExePath</code>  NULL 结尾的字符串，其中包含的位置，或模块的路径。</li>\n</ol>\n<h3 id=\"备注\"><a class=\"anchor\" href=\"#备注\">#</a> 备注</h3>\n<p><code>modBaseAddr</code>  和  <code>hModule</code>  的成员只有在指定的  <code>th32ProcessID</code>  进程中才有效。</p>\n<h2 id=\"process32first-函数-tlhelp32h\"><a class=\"anchor\" href=\"#process32first-函数-tlhelp32h\">#</a> Process32First 函数 (tlhelp32.h)</h2>\n<p>检索有关系统快照中遇到的第一个进程的信息。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">]</span>      HANDLE           hSnapshot<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">]</span> LPPROCESSENTRY32 lppe</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"参数-3\"><a class=\"anchor\" href=\"#参数-3\">#</a> 参数</h3>\n<p><code>[in] hSnapshot</code>  从上一次调用 CreateToolhelp32Snapshot 函数返回的快照句柄 。</p>\n<p><code>[in, out] lppe</code>  指向 PROCESSENTRY32 结构的指针 。它包含进程信息，例如可执行文件的名称、进程标识符和父进程的进程标识符。</p>\n<h3 id=\"返回值-4\"><a class=\"anchor\" href=\"#返回值-4\">#</a> 返回值</h3>\n<p>如果进程列表的下一个条目已复制到缓冲区，则返回 TRUE，否则返回 FALSE。如果没有更多模块存在，则 GetLastError 函数将返回  <code>ERROR_NO_MORE_FILES</code>  错误值。</p>\n<h2 id=\"process32next-函数-tlhelp32h\"><a class=\"anchor\" href=\"#process32next-函数-tlhelp32h\">#</a> Process32Next 函数 (tlhelp32.h)</h2>\n<p>检索有关记录在系统快照中的下一个进程的信息。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">[</span>in<span class=\"token punctuation\">]</span>  HANDLE           hSnapshot<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">[</span>out<span class=\"token punctuation\">]</span> LPPROCESSENTRY32 lppe</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"参数-4\"><a class=\"anchor\" href=\"#参数-4\">#</a> 参数</h3>\n<p>[in] hSnapshot</p>\n<p>从上一次调用 CreateToolhelp32Snapshot 函数返回的快照句柄 。</p>\n<p>[out] lppe</p>\n<p>指向 PROCESSENTRY32 结构的指针 。</p>\n<h3 id=\"返回值-5\"><a class=\"anchor\" href=\"#返回值-5\">#</a> 返回值</h3>\n<p>如果进程列表的下一个条目已复制到缓冲区，则返回 TRUE，否则返回 FALSE。如果没有更多模块存在，则 GetLastError 函数将返回  <code>ERROR_NO_MORE_FILES</code>  错误值。</p>\n<h2 id=\"processentry32-结构-tlhelp32h\"><a class=\"anchor\" href=\"#processentry32-结构-tlhelp32h\">#</a> PROCESSENTRY32 结构 (tlhelp32.h)</h2>\n<p>描述拍摄快照时驻留在系统地址空间中的进程列表中的条目。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagPROCESSENTRY32</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD dwSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    DWORD cntUsage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD th32ProcessID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ULONG_PTR th32DefaultHeapID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    DWORD th32ModuleID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    DWORD cntThreads<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    DWORD th32ParentProcessID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    LONG pcPriClassBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    DWORD dwFlags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    TCHAR szExeFile<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span> PROCESSENTRY32<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PPROCESSENTRY32<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"结构体成员-2\"><a class=\"anchor\" href=\"#结构体成员-2\">#</a> 结构体成员</h2>\n<p><code>dwSize</code></p>\n<p>结构的大小，以字节为单位。在调用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL2FwaS90bGhlbHAzMi9uZi10bGhlbHAzMi1wcm9jZXNzMzJmaXJzdA==\"> Process32First</span> 函数之前 ，将此成员设置为  <code>sizeof(PROCESSENTRY32)</code> 。如果不初始化 <strong>dwSize</strong> ， <strong>Process32First 将</strong>失败。</p>\n<p><code>cntUsage</code></p>\n<p>此成员不再使用并且始终设置为零。</p>\n<p><code>th32ProcessID</code></p>\n<p>进程标识符。</p>\n<p><code>th32DefaultHeapID</code></p>\n<p>此成员不再使用并且始终设置为零。</p>\n<p><code>th32ModuleID</code></p>\n<p>此成员不再使用并且始终设置为零。</p>\n<p><code>cntThreads</code></p>\n<p>进程启动的执行线程数。</p>\n<p><code>th32ParentProcessID</code></p>\n<p>创建此进程的进程的标识符（其父进程）。</p>\n<p><code>pcPriClassBase</code></p>\n<p>此进程创建的任何线程的基本优先级。</p>\n<p><code>dwFlags</code></p>\n<p>此成员不再使用并且始终设置为零。</p>\n<p><code>szExeFile</code></p>\n<p>进程的可执行文件的名称。要检索可执行文件的完整路径，请调用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL2FwaS90bGhlbHAzMi9uZi10bGhlbHAzMi1tb2R1bGUzMmZpcnN0\"> Module32First</span> 函数并检查返回的 MODULEENTRY32 结构的<strong> szExePath</strong> 成员。但是，如果调用进程是 32 位进程，则必须调用 QueryFullProcessImageName 函数来检索 64 位进程的可执行文件的完整路径。</p>\n<h2 id=\"还有线程相关的信息\"><a class=\"anchor\" href=\"#还有线程相关的信息\">#</a> 还有线程相关的信息</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9hcGkvdGxoZWxwMzIvbmYtdGxoZWxwMzItdGhyZWFkMzJmaXJzdA==\">https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-thread32first</span></p>\n<h1 id=\"遍历指定进程模块\"><a class=\"anchor\" href=\"#遍历指定进程模块\">#</a> 遍历指定进程模块</h1>\n<h2 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路:</h2>\n<ol>\n<li>获取你想要遍历的进程 ID (可以通过遍历进程，也可以通过通过句柄获得进程 ID)</li>\n<li>创建进程快照，第一个参数传入遍历模块，第二个参数传入你想要遍历进程的 ID</li>\n</ol>\n<h2 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Tlhelp32.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    HANDLE hProcessSnapshot <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>INVALID_HANDLE_VALUE <span class=\"token operator\">==</span> hProcessSnapshot<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    DWORD dwPid <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    PROCESSENTRY32 pi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    pi<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    BOOL Ret <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hProcessSnapshot<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"QQ.exe\"</span><span class=\"token punctuation\">,</span>pi<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            dwPid <span class=\"token operator\">=</span> pi<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        Ret <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hProcessSnapshot<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcessSnapshot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    HANDLE hSnapshot <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPMODULE<span class=\"token punctuation\">,</span>dwPid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 上面获取了进程 PID, 下面使用即可.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>INVALID_HANDLE_VALUE <span class=\"token operator\">==</span> hSnapshot<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    MODULEENTRY32 mi<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    mi<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MODULEENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 第一次使用必须初始化成员</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    BOOL  bRet <span class=\"token operator\">=</span> <span class=\"token function\">Module32First</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bRet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        循环遍历添加自己的额外代码</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        */</span>    </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        bRet <span class=\"token operator\">=</span> <span class=\"token function\">Module32Next</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"遍历进程\"><a class=\"anchor\" href=\"#遍历进程\">#</a> 遍历进程</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Tlhelp32.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    HANDLE hSnapshot <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>INVALID_HANDLE_VALUE <span class=\"token operator\">==</span> hSnapshot<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    PROCESSENTRY32 pi<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    pi<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 第一次使用必须初始化成员</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    BOOL bRet <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bRet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        循环遍历添加自己的额外代码</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        */</span>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程ID = %d ,进程路径 = %s\\r\\n\"</span><span class=\"token punctuation\">,</span>pi<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">,</span>pi<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        bRet <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DcmVhdGVUb29saGVscDMyU25hcHNob3QvMTAzNzExODQ=\">https://baike.baidu.com/item/CreateToolhelp32Snapshot/10371184</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9hcGkvdGxoZWxwMzIv\">https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaUJpbmFyeS9wLzgxNTk0OTEuaHRtbA==\">https://www.cnblogs.com/iBinary/p/8159491.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaUJpbmFyeS9wLzgxNTk0MjYuaHRtbA==\">https://www.cnblogs.com/iBinary/p/8159426.html</span></p>\n",
            "tags": [
                "tlhelp32.h",
                "进程遍历",
                "模块遍历"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/%E9%80%9A%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B8%8EWM_NOTIFY%E6%B6%88%E6%81%AF/",
            "url": "https://or0kit.github.io/Bin/Win32/%E9%80%9A%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B8%8EWM_NOTIFY%E6%B6%88%E6%81%AF/",
            "title": "通用控件与WM_NOTIFY消息",
            "date_published": "2021-11-13T11:59:46.000Z",
            "content_html": "<h1 id=\"标准控件与通用控件\"><a class=\"anchor\" href=\"#标准控件与通用控件\">#</a> 标准控件与通用控件</h1>\n<p>Windows 标准控件，标准控件总是可用的</p>\n<blockquote>\n<p>Static<br />\nGroup Box<br />\nButton<br />\nCheck Box<br />\nRadio Button<br />\nEdit<br />\nComboBox<br />\nListBox</p>\n</blockquote>\n<p>Windows 通用控件，代码包含在  <code>Comctrl32.dll</code></p>\n<p>使用前：</p>\n<p><code>#include &lt;commctrl.h&gt;</code> <br />\n <code>#pragma comment(lib,&quot;comctl32.lib&quot;)</code></p>\n<p>常用的通用控件有：</p>\n<blockquote>\n<p>Animation<br />\nComboBoxEx<br />\nDate_and_Time_Picker<br />\nDrag_List_Box<br />\nFlat_Scroll_Bar<br />\nHeader<br />\nHotKey<br />\nImageList<br />\nIPAddress<br />\nList_View<br />\nMonth_Calendar<br />\nPager<br />\nProgress_Bar<br />\nProperty_Sheets<br />\nRebar<br />\nStatus Bars<br />\nSysLink<br />\nTab<br />\nToolbar<br />\nToolTip<br />\nTrackbar<br />\nTreeView<br />\nUp_and_Down</p>\n</blockquote>\n<p>特别说明：</p>\n<p>通用控件在使用前，需要通过 INITCOMMONCONTROLSEX 进行初始化</p>\n<p>只要在您的程序中的任意地方引用了该函数就、会使得 WINDOWS 的程序加载器 PE Loader 加载该库</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>INITCOMMONCONTROLSEX icex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>icex<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>INITCOMMONCONTROLSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>icex<span class=\"token punctuation\">.</span>dwICC <span class=\"token operator\">=</span> ICC_WIN95_CLASSES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">InitCommonControlsEx</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>icex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"列表视图控件list-control\"><a class=\"anchor\" href=\"#列表视图控件list-control\">#</a> 列表视图控件（List Control）</h1>\n<p>列表视图控件是一种非常常用的控件，在需要以报表形式显示数据时，列表控件通常是最好的选择，许多专用的数据报表控件，也是在它的基础上派生而来。与树视图类似，列表控件可以由多个子项目组成，并且支持大图标、小图标、列表和报表 4 种方式显示信息（可通过视图 -&gt; 其他窗口 -&gt; 属性窗口 -&gt;View 来更改）<br />\n列表视图包含一个项目列表，而其中每个项目由图标、项目名称和多个子项组成，每一个子项所包含的项目的数目必须相同，属性相同的每个子项显示在同一个列中。</p>\n<p>列表视图控件有两个重要的数据结构 LVCOLUMN 和 LVITEM。</p>\n<h2 id=\"lv_column结构体\"><a class=\"anchor\" href=\"#lv_column结构体\">#</a> LV_COLUMN 结构体</h2>\n<p><code>#define LV_COLUMN       LVCOLUMN</code></p>\n<p>LVCOLUMN 用于定义报表方式下的 “列” 的结构。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LVCOLUMN</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>UINT mask<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 说明此结构中哪些成员是有效的</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> fmt<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 列的对齐方式</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> cx<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 列的初始宽度</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>LPTSTR pszText<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 列的标题</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> cchTextMax<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//pszText 所指向的缓冲区的大小</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> iSubItem<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 与列关联的子项的索引值，从 0 开始</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> iImage<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 与列关联的图像列表中指定图像的索引值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> iOrder<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 第几列，0 代表最左一列</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LVCOLUMN<span class=\"token punctuation\">,</span> FAR <span class=\"token operator\">*</span>LPLVCOLUMN<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>mask</code>  类型： <code>UINT</code></p>\n<p>指定哪些成员包含有效信息的变量。该成员可以是零，也可以是以下值中的一个或多个：</p>\n<table>\n<thead>\n<tr>\n<th>价值</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>LVCF_FMT</strong></td>\n<td>该<strong> FMT</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_WIDTH</strong></td>\n<td>该<strong> CX</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_TEXT</strong></td>\n<td>该<strong> pszText</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_ORDER</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。该<strong> iOrder</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_MINWIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 该<strong> cxMin</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_DEFAULTWIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 该<strong> cxDefault</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_IDEALWIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 该<strong> cxIdeal</strong> 成员是有效的。</td>\n</tr>\n</tbody>\n</table>\n<p><code>fmt</code></p>\n<p>类型：<strong>int</strong></p>\n<p>列标题与列中子项文本的对齐方式。最左边一列的对齐方式始终是 LVCFMT_LEFT；它无法改变。此成员可以是以下值的组合。请注意，并非所有组合都有效。</p>\n<table>\n<thead>\n<tr>\n<th>价值</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>LVCFMT_LEFT</strong></td>\n<td>文本左对齐。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_RIGHT</strong></td>\n<td>文本右对齐。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_CENTER</strong></td>\n<td>文本居中。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_JUSTIFYMASK</strong></td>\n<td>用于选择控制字段对齐的<strong> fmt</strong> 位的位掩码。要检查列的格式，请使用逻辑 “和” 将 LCFMT_JUSTIFYMASK 与<strong> fmt</strong> 组合在一起。然后，您可以使用 switch 语句来确定是否设置了 LVCFMT_LEFT、LVCFMT_RIGHT 或 LVCFMT_CENTER 位。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_IMAGE</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。该项目显示图像列表中的图像。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_BITMAP_ON_RIGHT</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。位图出现在文本的右侧。这不会影响分配给标题项的图像列表中的图像。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_COL_HAS_IMAGES</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。标题项包含图像列表中的图像。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_FIXED_WIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 无法调整列大小；与 HDF_FIXEDWIDTH 相同。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_NO_DPI_SCALE</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 如果未设置，则 CCM_DPISCALE 将控制放大固定宽度。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_FIXED_RATIO</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 宽度将随着行高而增加。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_SPLITTBTON</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> Column 是一个拆分按钮（与 HDF_SPLITBUTTON 相同）。列的标题显示一个拆分按钮（与 HDF_SPLITBUTTON 相同）。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"lv_item结构体\"><a class=\"anchor\" href=\"#lv_item结构体\">#</a> LV_ITEM 结构体</h2>\n<p><code>#define LV_ITEM LVITEM</code></p>\n<p>LVITEM 用于定义 “项” 的结构。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LVITEM</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>UINT   mask<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 说明 LVITEM 结构中哪些成员有效</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span>    iItem<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 项目的索引值 (可以视为行号) 从 0 开始</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span>    iSubItem<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 子项的索引值 (可以视为列号) 从 0 开始</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>UINT   state<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 子项的状态</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>UINT   stateMask<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 状态有效的屏蔽位</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>LPTSTR pszText<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 主项或子项的名称</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span>    cchTextMax<span class=\"token punctuation\">;</span> <span class=\"token comment\">//pszText 所指向的缓冲区大小</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span>    iImage<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 关联图像列表中指定图像的索引值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>LPARAM lParam<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 程序定义的 32 位参数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">int</span> iIndent<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 表示图像位置缩进的单位</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LVITEM<span class=\"token punctuation\">,</span> FAR <span class=\"token operator\">*</span>LPLVITEM<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>mask</code></p>\n<p>类型：<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL1dpblByb2cvd2luZG93cy1kYXRhLXR5cGVz\">UINT</span></strong></p>\n<p>一组标志，指定此结构的哪些成员包含要设置的数据或正在请求哪些成员。该成员可以设置以下一个或多个标志：</p>\n<table>\n<thead>\n<tr>\n<th>价值</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>LVIF_COLFMT</strong></td>\n<td><strong>Windows Vista 及更高版本。</strong> 该<strong> piColFmt</strong> 成员有效或必须设置。如果使用此标志，则<strong> cColumns</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_COLUMNS</strong></td>\n<td>该<strong> cColumns</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_DI_SETITEM</strong></td>\n<td>操作系统应该存储请求的列表项信息并且不再请求它。此标志仅与<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bi1nZXRkaXNwaW5mbw==\"> LVN_GETDISPINFO</span> 通知代码一起使用。</td>\n</tr>\n<tr>\n<td><strong>LVIF_GROUPID</strong></td>\n<td>该 <strong>iGroupId</strong> 成员有效或必须设置。如果在发送<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bS1pbnNlcnRpdGVt\"> LVM_INSERITEM</span> 消息时未设置此标志，则假定<strong> iGroupId</strong> 的值是 I_GROUPIDCALLBACK。</td>\n</tr>\n<tr>\n<td><strong>LVIF_IMAGE</strong></td>\n<td>该<strong> IIMAGE</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_INDENT</strong></td>\n<td>该<strong> iIndent</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_NORECOMPUTE</strong></td>\n<td>如果控件收到 LVM_GETITEM 消息，它不会生成<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bi1nZXRkaXNwaW5mbw==\"> LVN_GETDISPINFO</span> 来检索文本信息。相反，pszText 成员将包含 LPSTR_TEXTCALLBACK。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bS1nZXRpdGVt\"></span></td>\n</tr>\n<tr>\n<td><strong>LVIF_PARAM</strong></td>\n<td>该 <strong>lParam 的</strong>成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_STATE</strong></td>\n<td>该<strong>状态</strong>成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_TEXT</strong></td>\n<td>该<strong> pszText</strong> 成员有效或必须设置。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"listview的使用\"><a class=\"anchor\" href=\"#listview的使用\">#</a> ListView 的使用</h1>\n<p>1、初始化列名信息</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LV_COLUMN lv<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HWND hListProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 初始化\t\t\t\t</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>LV_COLUMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 获取 IDC_LIST_PROCESS 句柄\t\t\t\t</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hListProcess <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>hDlg<span class=\"token punctuation\">,</span>IDC_LIST_PROCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 设置整行选中\t\t\t\t</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span>LVM_SETEXTENDEDLISTVIEWSTYLE<span class=\"token punctuation\">,</span>LVS_EX_FULLROWSELECT<span class=\"token punctuation\">,</span>LVS_EX_FULLROWSELECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 第一列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lv<span class=\"token punctuation\">.</span>mask <span class=\"token operator\">=</span> LVCF_TEXT <span class=\"token operator\">|</span> LVCF_WIDTH <span class=\"token operator\">|</span> LVCF_SUBITEM<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 列标题</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t<span class=\"token comment\">// 列宽</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//ListView_InsertColumn(hListProcess, 0, &amp;lv);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span>LVM_INSERTCOLUMN<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 第二列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//ListView_InsertColumn(hListProcess, 1, &amp;lv);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span>LVM_INSERTCOLUMN<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 第三列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"镜像基址\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">ListView_InsertColumn</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// 第四列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"镜像大小\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token function\">ListView_InsertColumn</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、向列表中新增数据</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LV_ITEM vitem<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 初始化\t\t\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>LV_ITEM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>mask <span class=\"token operator\">=</span> LVIF_TEXT<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token string\">\"csrss.exe\"</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//ListView_InsertItem(hListProcess, &amp;vitem);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> LVM_INSERTITEM<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"448\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"56590000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"000F0000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"winlogon.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">//ListView_InsertItem(hListProcess, &amp;vitem);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> LVM_INSERTITEM<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10000000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"000045800\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"wm_notify消息类型\"><a class=\"anchor\" href=\"#wm_notify消息类型\">#</a> WM_NOTIFY 消息类型</h1>\n<p>WM_NOTIFY 的使用</p>\n<p>该消息类型与 WM_COMMAND 类型相似，都是由子窗口向父窗口发送的消息。</p>\n<p>WM_NOTIFY 可以包含比 WM_COMMAND 更丰富的信息</p>\n<p>Windows 通用组件中有很多消息，都是通过 WM_NOTIFY 来描述的.</p>\n<p>WM_NOTIFY 消息中的参数如下：</p>\n<p>1  <code>wParam</code> : 控件 ID</p>\n<p>2  <code>lParam</code> : 指向一个结构</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagNMHDR</span> <span class=\"token punctuation\">&#123;</span> \t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t        HWND hwndFrom<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 发送通知消息的控制窗口句柄\t\t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t        UINT idFrom<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 发送通知消息的控制 ID 值\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t        UINT code<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 通知码，如 LVM_SELCHANGED\t\t</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t    <span class=\"token punctuation\">&#125;</span> NMHDR<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个结构体能满足一般的要求，但能描述的信息还是有限的</p>\n<p>解决方案：对每种不同用途的通知消息都定义另一种结构来表示</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagNMLVCACHEHINT</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t    NMHDR   hdr<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t    <span class=\"token keyword\">int</span>     iFrom<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t    <span class=\"token keyword\">int</span>     iTo<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> NMLVCACHEHINT<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PNMLVCACHEHINT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagLVDISPINFO</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t    NMHDR hdr<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t    LVITEM item<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> NMLVDISPINFO<span class=\"token punctuation\">,</span> FAR <span class=\"token operator\">*</span>LPNMLVDISPINFO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_NMLVFINDITEM</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t    NMHDR hdr<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t    <span class=\"token keyword\">int</span> iStart<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t    LVFINDINFO lvfi<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> NMLVFINDITEM<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PNMLVFINDITEM<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"本节练习\"><a class=\"anchor\" href=\"#本节练习\">#</a> 本节练习</h1>\n<ol>\n<li>画出 PETools 的第一个界面</li>\n</ol>\n<p>代码上传到 GitHub 上了： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09yMGtpdC9XTV9OT1RJRlk=\">https://github.com/Or0kit/WM_NOTIFY</span></p>\n<ol start=\"2\">\n<li>遍历进程、遍历模块</li>\n</ol>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h1 id=\"小笔记\"><a class=\"anchor\" href=\"#小笔记\">#</a> 小笔记</h1>\n<p>Win32 全是 C 语言现的，但是 Win32 却使用了面向对象的思想，类是如何实现的？--&gt; 结构体<br />\n C 也能用结构体实现类，在  <code>WM_NOTIFY</code>  消息类型中就用结构体实现了  <code>继承</code> 。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoZXVzcHJvbWUvYXJ0aWNsZS9kZXRhaWxzLzUxNzA1MTE2\">https://blog.csdn.net/theusprome/article/details/51705116</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9hcGkvY29tbWN0cmwvbnMtY29tbWN0cmwtbHZjb2x1bW5h\">https://docs.microsoft.com/en-us/windows/win32/api/commctrl/ns-commctrl-lvcolumna</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9hcGkvY29tbWN0cmwvbnMtY29tbWN0cmwtbHZpdGVtYQ==\">https://docs.microsoft.com/en-us/windows/win32/api/commctrl/ns-commctrl-lvitema</span></p>\n",
            "tags": [
                "通用控件",
                "WM_NOTIFY消息类型"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/%E5%9B%BE%E6%A0%87%E5%92%8C%E8%B5%84%E6%BA%90%E8%A1%A8/",
            "url": "https://or0kit.github.io/Bin/Win32/%E5%9B%BE%E6%A0%87%E5%92%8C%E8%B5%84%E6%BA%90%E8%A1%A8/",
            "title": "图标和资源表",
            "date_published": "2021-11-07T11:11:51.000Z",
            "content_html": "<h1 id=\"图标\"><a class=\"anchor\" href=\"#图标\">#</a> 图标</h1>\n<h2 id=\"装入图标\"><a class=\"anchor\" href=\"#装入图标\">#</a> 装入图标</h2>\n<p>在 WM_CREATE 消息中，程序从资源节区中装入所有的图标和光标资源，装入图标是用 LoadIcon 函数来完成的：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>invoke  LoadIcon,hInstance,lpIconName</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.if     eax</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        mov hIcon,eax</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.endif</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HICON hIcon<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hIcon <span class=\"token operator\">=</span> <span class=\"token function\">LoadIcon</span> <span class=\"token punctuation\">(</span>hAppInstance<span class=\"token punctuation\">,</span> <span class=\"token function\">MAKEINTRESOURCE</span> <span class=\"token punctuation\">(</span>IDI_ICON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>MAKEINTRESOURCE</code> \t用这个宏的主要原因是有的资源是用序号定义的，而不是字符串。所以要把数字转换成字符串指针。</p>\n<p><code>hInstance</code>  参数指定实例句柄，表示图标资源定义在哪个可执行文件中， <code>lpIconName</code>  参数指定图标资源的名称，它就是资源文件中定义的图标 ID 值，如果调用成功的话，函数返回图标句柄。</p>\n<p>除了可以装入资源文件中定义的图标资源之外，当参数 <code>hInstance</code>  为 NULL 的时候，用 <code>LoadIcon</code>  还可以用预定义的 <code>lpIconName</code>  参数装入 Windows 预定义的图标，参数说明如下表所示。</p>\n<p><code>LoadIcon</code>  可以装入的预定义图标</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">lpIconName 参数的预定义值</th>\n<th style=\"text-align:left\">图 标 形 状</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">IDI_APPLICATION</td>\n<td style=\"text-align:left\">应用程序默认图标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IDI_ASTERISK</td>\n<td style=\"text-align:left\">I 符号图标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IDI_EXCLAMATION</td>\n<td style=\"text-align:left\">警告图标（黄色三角形＋感叹号）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IDI_HAND</td>\n<td style=\"text-align:left\">严重警告图标（一般是红色圆形＋叉）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IDI_QUESTION</td>\n<td style=\"text-align:left\">问号图标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IDI_WINLOGO</td>\n<td style=\"text-align:left\">Windows 标徽图标</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"设置图标\"><a class=\"anchor\" href=\"#设置图标\">#</a> 设置图标</h2>\n<p>图标一般使用在对话框中或者程序窗口的标题栏中，要在标题栏中设置图标可以用向窗口发送  <code>WM_SETICON</code>  消息的办法实现。</p>\n<p>消息的  <code>wParam</code>  参数可以是  <code>ICON_BIG</code>  或  <code>ICON_SMALL</code>  ，用来指定图标的分辨率为  <code>32×32</code>  还是  <code>16×16</code> 。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> WM_INITDIALOG <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\thIcon <span class=\"token operator\">=</span> <span class=\"token function\">LoadIcon</span> <span class=\"token punctuation\">(</span>hAppInstance<span class=\"token punctuation\">,</span> <span class=\"token function\">MAKEINTRESOURCE</span> <span class=\"token punctuation\">(</span>IDI_ICON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token comment\">// 设置图标\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hDlg<span class=\"token punctuation\">,</span>WM_SETICON<span class=\"token punctuation\">,</span>ICON_BIG<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>hIcon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hDlg<span class=\"token punctuation\">,</span>WM_SETICON<span class=\"token punctuation\">,</span>ICON_SMALL<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>hIcon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"资源表\"><a class=\"anchor\" href=\"#资源表\">#</a> 资源表</h1>\n<p>Windows 下程序中的各种界面 (数据) 组成部分称为资源，比如菜单、图标、快捷键、版本信息以及其他未格式化的二进制资源。<br />\n数据目录中的 <code>IMAGE_DIRECTORY_ ENTRY_RESOURCE</code>  项指向此结构。</p>\n<h2 id=\"资源结构\"><a class=\"anchor\" href=\"#资源结构\">#</a> 资源结构</h2>\n<p>资源在 PE 文件中是以目录结构的形式存在的，一般情况下这个目录分为 3 层，从根目录开始分别为资源类型、目录资源 ID 与资源代码页。</p>\n<p><ins>这 3 层结构其实是非常简单的，只要我们能清晰地判断出 <code>IMAGE_RESOURCE_DIRECTORY_ENTRY</code>  结构所处的目录深度，以及当前情况下此结构中联合体内的哪个值是有效的，即可理清资源结构。</ins></p>\n<p>这 3 层目录结构都是由一个 <code>IMAGE_RESOURCE_DIRECTORY</code>  结构为头部的，并且在其后面跟着一个 <code>IMAGE_RESOURCE_DIRECTORY_ENTRY</code>  结构数组。 <code>IMAGE_RESOURCE_DIRECTORY</code>  结构主要负责指出后面结构数组的成员个数，而后面结构数组的每个成员则分别指向下一层目录结构（或资源数据）。</p>\n<p>下面我们就先了解一下 <code>IMAGE_RESOURCE_DIRECTORY</code>  结构。</p>\n<h2 id=\"image_resource_directory\"><a class=\"anchor\" href=\"#image_resource_directory\">#</a> IMAGE_RESOURCE_DIRECTORY</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_RESOURCE_DIRECTORY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    DWORD   Characteristics<span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">// 资源属性  保留 0\t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD   TimeDateStamp<span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">// 资源创建的时间\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    WORD    MajorVersion<span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">// 资源版本号 未使用 0\t</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    WORD    MinorVersion<span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">// 资源版本号 未使用 0\t</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    WORD    NumberOfNamedEntries<span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 以名称命名的资源数量\t</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    WORD    NumberOfIdEntries<span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">// 以 ID 命名的资源数量\t</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//  IMAGE_RESOURCE_DIRECTORY_ENTRY DirectoryEntries[];\t\t\t\t\t\t\t</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PIMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>每层目录结构中的起始位置都是一个 <code>IMAGE_ RESOURCE_DIRECTORY</code>  结构，这个结构负责指出紧随其后的 <code>IMAGE RESOURCE_DIRECTORY_ENTRY</code>  结构数组的成员个数。<br />\n <code>NumberOfNamedEntries</code>  +  <code>NumberOfIdEntries</code>  就是 <code>IMAGE RESOURCE_DIRECTORY_ENTRY</code>  结构数组的成员个数</p>\n<p>下面就来看看 <code>IMAGE_ RESOURCE_DIRECTORY_ENTRY</code>  结构。</p>\n<h2 id=\"image_resource_directory_entry\"><a class=\"anchor\" href=\"#image_resource_directory_entry\">#</a> IMAGE_RESOURCE_DIRECTORY_ENTRY</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_RESOURCE_DIRECTORY_ENTRY</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t<span class=\"token comment\">// 目录项的名称、或者 ID\t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\t<span class=\"token comment\">// 位段 位域\t\t\t\t\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            DWORD NameOffset<span class=\"token operator\">:</span><span class=\"token number\">31</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            DWORD NameIsString<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        DWORD   Name<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        WORD    Id<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        DWORD   OffsetToData<span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">// 目录项指针\t</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            DWORD   OffsetToDirectory<span class=\"token operator\">:</span><span class=\"token number\">31</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            DWORD   DataIsDirectory<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_RESOURCE_DIRECTORY_ENTRY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PIMAGE_RESOURCE_DIRECTORY_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>上面的结构说明如下。</p>\n<ol>\n<li>NameOffset：当字段 NamelsString 为 1 时，此字段的值为资源名字符串的偏移。</li>\n<li>NamelsString：资源名是否为字符串，当最高位是 0 时，表示字段的值作为  <code>ID</code>  使用。当此值为 1 时， <code>NameOffset</code>  会指向一个 <code>IMAGE_RESOURCE_DIR_STRING_U</code>  结构体，此结构体保存着资源名称，其数据结构如下。</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_RESOURCE_DIR_STRING_U</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  WORD  Length<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//1) 字符串长度</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  WCHAR NameString  <span class=\"token comment\">//2) 字符串数组</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_RESOURCE_DIR_STRING_U<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PIMAGE_RESOURCE_DIRSTRING_U<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>Name: 此结构体位于第一层目录中时，此字段保存有资源类型的值。当此结构体位于第三层目录中时，此字段保存有资源语言区域的类型值，资源类型的值如下图所示。</li>\n</ol>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>Name 在不同层中的含义：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<ol start=\"4\">\n<li>Id: 资源的数字 ID。</li>\n<li>OffsetToData: 加上数据目录中资源表的 <code>VirtualAddress</code>  就是下一层数据偏移的 RAV。</li>\n<li>OffsetToDirectory: 当字段 DataIsDirectory 为 1 时，此字段的值指向下一层子目录的偏移 (相对资源目录起始地址的偏移)。</li>\n<li>DatalsDirectory: 数据指向目标为子目录。</li>\n</ol>\n<hr />\n<hr />\n<hr />\n<p>这个 <code>IMAGE_RESOURCE_ DIRECTORY_ENTRY</code>  是由两个大小为 4 字节的联合体组成的，在不同情况下，两个联合体中的有效字段也不同。</p>\n<blockquote>\n<p>第一个联合体内的字段是根据当前结构体所处的目录层次来决定的，位于第一层目录时字段 Name 有效，保存的信息是资源类型；<br />\n 位于第二层目录时字段 Id 或结构体有效，这取决于此资源的索引方式，如果采用的是编号索引就是字段 Id 有效，否则结构体有效；<br />\n 位于第三层目录时字段 Name 有效，保存的信息是资源语言区域类型。</p>\n</blockquote>\n<blockquote>\n<p>第二个联合体内的字段理论上是根据具体情况而定的，<br />\n 如果下一级是一个子目录的话，那么就是结构体生效，<br />\n 如果下一级是资源数据则是字段 <code>OffsetToData</code>  生效。</p>\n</blockquote>\n<p>在经过三层目录的索引后，最后会到达一个 <code>IMAGE_RESOURCE_DATA_ENTRY</code>  结构中，这个结构将指引我们找到资源数据。下面这个结构体描述的就是此结构。</p>\n<h2 id=\"image_resource_data_entry\"><a class=\"anchor\" href=\"#image_resource_data_entry\">#</a> IMAGE_RESOURCE_DATA_ENTRY</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_RESOURCE_DATA_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    DWORD OffsetToData<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 1) 资源数据的 RAV </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD Size<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 2) 资源数据的长度</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    DWORD CodePage<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 3) 代码页</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD Reserved<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 4) 保留字段</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span>IMAGE_RESOURCE_DATA_ENTRY<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>PIMAGE_RESOURCE_DATA_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>上面的结构说明如下。</p>\n<ol>\n<li>OffsetToData: 此字段保存着指向资源数据 RAV 的指针。</li>\n<li>Size: 资源数据的体积。</li>\n<li>CodePage: 此资源的代码页信息。</li>\n<li>Reserved: 保留字段，恒为 0x000000000。</li>\n</ol>\n<h2 id=\"层次图\"><a class=\"anchor\" href=\"#层次图\">#</a> 层次图</h2>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>每一层的第一个都是 <code>IMAGE_RESOURCE_DIRECTORY</code>  结构，这是为了确认一共有多少项 <code>IMAGE_RESOURCE_DIRECTORY_ENTRY</code>  数据。<br />\n而 <code>IMAGE_RESOURCE_DIRECTORY_ENTRY</code>  这个结构在不同的层中有不同的含义。</p>\n<h1 id=\"代码实现遍历资源表\"><a class=\"anchor\" href=\"#代码实现遍历资源表\">#</a> 代码实现遍历资源表</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 资源的类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> szResType<span class=\"token punctuation\">[</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"鼠标指针\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"位图\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"图标\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"菜单\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t\t\t\t\t  <span class=\"token string\">\"对话框\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"字符串列表\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"字体目录\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"字体\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t\t\t\t\t  <span class=\"token string\">\"加速键\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"非格式化资源\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"消息列表\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"鼠标指针组\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t\t\t\t\t  <span class=\"token string\">\"zz\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"图标组\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"xx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"版本信息\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PrintResourceTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pFileBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//DOS 头 指针</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIMAGE_NT_HEADERS32 pNtHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NT 头 指针</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 文件头 指针</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER pOptionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 可选头 指针</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPIMAGE_DATA_DIRECTORY pDirectory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 数据目录 指针</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tPIMAGE_RESOURCE_DIRECTORY pResourceDirectory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 资源目录</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPIMAGE_RESOURCE_DIRECTORY_ENTRY pResourceDirEntryArray <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tDWORD directoryLevel <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tDWORD dwPRD <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token comment\">// 定位资源表的位置</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pFileBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tpNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNtHeader <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>IMAGE_SIZEOF_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tpDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DATA_DIRECTORY<span class=\"token punctuation\">)</span>pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">// 第一层 </span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tpResourceDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_RESOURCE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">,</span> pFileBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// 打印资源表信息 (一级目录)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|==================================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|资源表一级目录信息:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|Characteristics        :%08X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirectory<span class=\"token operator\">-></span>Characteristics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|TimeDateStamp          :%08X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirectory<span class=\"token operator\">-></span>TimeDateStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|MajorVersion           :%04X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirectory<span class=\"token operator\">-></span>MajorVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|MinorVersion           :%04X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirectory<span class=\"token operator\">-></span>MinorVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|NumberOfNamedEntries   :%04X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirectory<span class=\"token operator\">-></span>NumberOfNamedEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|NumberOfIdEntries      :%04X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirectory<span class=\"token operator\">-></span>NumberOfIdEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|==================================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">//IMAGE_RESOURCE_DIRECTORY_ENTRY 结构的个数</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token comment\">//size_t NumbersOfResource = pResourceDirectory->NumberOfIdEntries + pResourceDirectory->NumberOfNamedEntries;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tpResourceDirEntryArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIRECTORY_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token comment\">// 循环打印后续资源表信息</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|----------------------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token comment\">// 指向一级目录中的资源目录项 (一级目录)\t资源类型</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>pResourceDirectory<span class=\"token operator\">-></span>NumberOfIdEntries <span class=\"token operator\">+</span> pResourceDirectory<span class=\"token operator\">-></span>NumberOfNamedEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token comment\">//\t(2) 判断一级目录中的资源目录项中类型是否是字符串 1 = 字符串 (非标准类型)； 0 = 非字符串 (标准类型)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pResourceDirEntryArray<span class=\"token operator\">-></span>NameIsString<span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">// 字符串 (非标准类型)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t\t1. 指向名字结构体</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\tPIMAGE_RESOURCE_DIR_STRING_U pStringName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIR_STRING_U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory <span class=\"token operator\">+</span> pResourceDirEntryArray<span class=\"token operator\">-></span>NameOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t\t2. 将 Unicode 字符串转换成 ASCII 字符串</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\tCHAR TypeName<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> pStringName<span class=\"token operator\">-></span>Length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t\tTypeName<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CHAR<span class=\"token punctuation\">)</span>pStringName<span class=\"token operator\">-></span>NameString<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t\t3. 打印字符串</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|ResourceType           :\\\"%s\\\"\\n\"</span><span class=\"token punctuation\">,</span> TypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t<span class=\"token keyword\">else</span>\t\t<span class=\"token comment\">// 非字符串 (标准类型)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pResourceDirEntryArray<span class=\"token operator\">-></span>Id <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// 只有 1 - 16 有定义</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|ResourceType           :%s\\n\"</span><span class=\"token punctuation\">,</span> szResType<span class=\"token punctuation\">[</span>pResourceDirEntryArray<span class=\"token operator\">-></span>Id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|ResourceType           :%04Xh\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirEntryArray<span class=\"token operator\">-></span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token comment\">//\t(3) 判断一级目录中子节点的类型\t\t1 = 目录； 0 = 数据 (一级目录和二级目录该值都为 1)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pResourceDirEntryArray<span class=\"token operator\">-></span>DataIsDirectory<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t(4) 打印目录偏移</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|OffsetToDirectory      :%08X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirEntryArray<span class=\"token operator\">-></span>OffsetToDirectory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|----------------------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t(5) 指向二级目录\t资源编号</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\tPIMAGE_RESOURCE_DIRECTORY ResourceDirectory_Sec <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory <span class=\"token operator\">+</span> pResourceDirEntryArray<span class=\"token operator\">-></span>OffsetToDirectory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t(6) 打印资源表信息 (二级目录)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |====================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |资源表二级目录信息:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |Characteristics        :%08X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Sec<span class=\"token operator\">-></span>Characteristics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |TimeDateStamp          :%08X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Sec<span class=\"token operator\">-></span>TimeDateStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |MajorVersion           :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Sec<span class=\"token operator\">-></span>MajorVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |MinorVersion           :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Sec<span class=\"token operator\">-></span>MinorVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |NumberOfNamedEntries   :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Sec<span class=\"token operator\">-></span>NumberOfNamedEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |NumberOfIdEntries      :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Sec<span class=\"token operator\">-></span>NumberOfIdEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |====================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t(7) 指向二级目录中的资源目录项</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\tPIMAGE_RESOURCE_DIRECTORY_ENTRY pResourceDirEntryArray_Sec <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIRECTORY_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>ResourceDirectory_Sec <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t(8) 循环打印二级目录</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>ResourceDirectory_Sec<span class=\"token operator\">-></span>NumberOfIdEntries <span class=\"token operator\">+</span> ResourceDirectory_Sec<span class=\"token operator\">-></span>NumberOfNamedEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//\t(9) 判断二级目录中的资源目录项中编号是否是字符串</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pResourceDirEntryArray_Sec<span class=\"token operator\">-></span>NameIsString<span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">// 字符串 (非标准类型)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t\t1. 指向名字结构体</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t\t\tPIMAGE_RESOURCE_DIR_STRING_U pStringName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIR_STRING_U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory <span class=\"token operator\">+</span> pResourceDirEntryArray_Sec<span class=\"token operator\">-></span>NameOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t\t2. 将 Unicode 字符串转换成 ASCII 字符串</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\t\t\tCHAR TypeName<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> pStringName<span class=\"token operator\">-></span>Length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\t\t\t\tTypeName<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CHAR<span class=\"token punctuation\">)</span>pStringName<span class=\"token operator\">-></span>NameString<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t\t3. 打印字符串</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |ResourceNumber         :\\\"%s\\\"\\n\"</span><span class=\"token punctuation\">,</span> TypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span>\t\t<span class=\"token comment\">// 非字符串 (标准类型)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |ResourceNumber         :%04Xh\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirEntryArray_Sec<span class=\"token operator\">-></span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//\t(10) 判断二级目录中子节点的类型</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pResourceDirEntryArray_Sec<span class=\"token operator\">-></span>DataIsDirectory<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t(11) 打印目录偏移</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |OffsetToDirectory      :%08X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirEntryArray_Sec<span class=\"token operator\">-></span>OffsetToDirectory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    |------------------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t(12) 指向三级目录\t代码页</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\t\t\t\tPIMAGE_RESOURCE_DIRECTORY ResourceDirectory_Thir <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory <span class=\"token operator\">+</span> pResourceDirEntryArray_Sec<span class=\"token operator\">-></span>OffsetToDirectory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t(13) 打印资源表信息 (三级目录)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |资源表三级目录信息:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |Characteristics        :%08X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Thir<span class=\"token operator\">-></span>Characteristics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |TimeDateStamp          :%08X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Thir<span class=\"token operator\">-></span>TimeDateStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |MajorVersion           :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Thir<span class=\"token operator\">-></span>MajorVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |MinorVersion           :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Thir<span class=\"token operator\">-></span>MinorVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |NumberOfNamedEntries   :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Thir<span class=\"token operator\">-></span>NumberOfNamedEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |NumberOfIdEntries      :%04X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDirectory_Thir<span class=\"token operator\">-></span>NumberOfIdEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t(14) 指向三级目录中的资源目录项</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t\t\t\tPIMAGE_RESOURCE_DIRECTORY_ENTRY pResourceDirEntryArray_Thir <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIRECTORY_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>ResourceDirectory_Thir <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_RESOURCE_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">//\t(15) 循环打印三级目录项</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>ResourceDirectory_Thir<span class=\"token operator\">-></span>NumberOfNamedEntries <span class=\"token operator\">+</span> ResourceDirectory_Thir<span class=\"token operator\">-></span>NumberOfIdEntries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//\t(16) 判断三级目录中的资源目录项中编号是否是字符串</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pResourceDirEntryArray_Thir<span class=\"token operator\">-></span>NameIsString<span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">// 字符串 (非标准类型)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">//\t\t1. 指向名字结构体</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t\t\t\t\t\tPIMAGE_RESOURCE_DIR_STRING_U pStringName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DIR_STRING_U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory <span class=\"token operator\">+</span> pResourceDirEntryArray_Thir<span class=\"token operator\">-></span>NameOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">//\t\t2. 将 Unicode 字符串转换成 ASCII 字符串</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t\t\t\t\tCHAR TypeName<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> pStringName<span class=\"token operator\">-></span>Length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t\t\t\t\t\t\tTypeName<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CHAR<span class=\"token punctuation\">)</span>pStringName<span class=\"token operator\">-></span>NameString<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">//\t\t3. 打印字符串</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |CodePageNumber         :\\\"%s\\\"\\n\"</span><span class=\"token punctuation\">,</span> TypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">else</span>\t\t<span class=\"token comment\">// 非字符串 (标准类型)</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |CodePageNumber         :%04Xh\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirEntryArray_Thir<span class=\"token operator\">-></span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//\t(17) 判断三级目录中子节点的类型\t\t(三级目录子节点都是数据，这里可以省去判断)</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pResourceDirEntryArray_Thir<span class=\"token operator\">-></span>DataIsDirectory<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">//\t(18) 打印偏移</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |OffsetToDirectory      :%08X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirEntryArray_Thir<span class=\"token operator\">-></span>OffsetToDirectory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |------------------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">//\t(18) 打印偏移</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |OffsetToData           :%08X\\n\"</span><span class=\"token punctuation\">,</span> pResourceDirEntryArray_Thir<span class=\"token operator\">-></span>OffsetToData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"        |------------------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">//\t(19) 指向数据内容\t(资源表的 FOA + OffsetToData)</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t\t\t\t\t\tPIMAGE_RESOURCE_DATA_ENTRY ResourceDataEntry <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_RESOURCE_DATA_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pResourceDirectory <span class=\"token operator\">+</span> pResourceDirEntryArray_Thir<span class=\"token operator\">-></span>OffsetToData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">//\t(20) 打印数据信息</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"            |================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"            |资源表的数据信息\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"            |OffsetToData(RVA)      :%08X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDataEntry<span class=\"token operator\">-></span>OffsetToData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"            |Size                   :%08X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDataEntry<span class=\"token operator\">-></span>Size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"            |CodePage               :%08X\\n\"</span><span class=\"token punctuation\">,</span> ResourceDataEntry<span class=\"token operator\">-></span>CodePage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"            |================================\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t\t\t\t\t\tpResourceDirEntryArray_Thir<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//\t(21) 目录项后移</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t\t\t\tpResourceDirEntryArray_Sec<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|----------------------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t\t<span class=\"token comment\">//\t(22) 目录项后移</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\tpResourceDirEntryArray<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"课后练习\"><a class=\"anchor\" href=\"#课后练习\">#</a> 课后练习</h2>\n<p>参见《Windows PE 权威指南》</p>\n<p>1、编写程序，定位某个资源在 PE 文件中的位置.</p>\n<p>2、编写程序，提供程序图标资源.</p>\n<p>3、编写程序，修改对话框标题.</p>\n",
            "tags": [
                "加载图标",
                "提取图标",
                "资源表"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E4%B8%8E%E6%B6%88%E6%81%AF%E6%96%AD%E7%82%B9/",
            "url": "https://or0kit.github.io/Bin/Win32/%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E4%B8%8E%E6%B6%88%E6%81%AF%E6%96%AD%E7%82%B9/",
            "title": "资源文件与消息断点",
            "date_published": "2021-11-07T05:54:23.000Z",
            "content_html": "<h1 id=\"创建资源文件\"><a class=\"anchor\" href=\"#创建资源文件\">#</a> 创建资源文件</h1>\n<p>在 VS 中创建资源文件：</p>\n<blockquote>\n<p>创建 windos 桌面应用程序的空项目（不然 VS 会自动给我们创建一个模板）</p>\n</blockquote>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<blockquote>\n<p>添加资源文件</p>\n</blockquote>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<blockquote>\n<p>右键添加 Dialog (对话框) 资源</p>\n</blockquote>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<blockquote>\n<p>获得如下界面</p>\n</blockquote>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<blockquote>\n<p>随便配置一下</p>\n</blockquote>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<blockquote>\n<p>观察一下  <code>resource.h</code>  (创建资源文件时会自动生成头文件，里面定义着各种宏) 这个头文件是有编译器自动填写的，一般我们不需要修改里面的内容，使用资源的时候需要包含头文件。</p>\n</blockquote>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<h1 id=\"通过dialogbox创建对话框\"><a class=\"anchor\" href=\"#通过dialogbox创建对话框\">#</a> 通过 DialogBox 创建对话框</h1>\n<p>DialogBox 函数介绍</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>INT_PTR <span class=\"token function\">DialogBox</span><span class=\"token punctuation\">(</span>\t\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HINSTANCE hInstance<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// handle to module\t\t\t\t\t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  LPCTSTR lpTemplate<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// dialog box template\t\t\t\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  HWND hWndParent<span class=\"token punctuation\">,</span>      <span class=\"token comment\">// handle to owner window\t\t\t\t\t</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  DLGPROC lpDialogFunc  <span class=\"token comment\">// dialog box procedure\t\t\t\t\t</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"定义dialog消息处理函数\"><a class=\"anchor\" href=\"#定义dialog消息处理函数\">#</a> 定义 Dialog 消息处理函数</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL CALLBACK <span class=\"token function\">DialogProc</span><span class=\"token punctuation\">(</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> HWND hwndDlg<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// handle to dialog box\t\t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> UINT uMsg<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// message\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> WPARAM wParam<span class=\"token punctuation\">,</span> <span class=\"token comment\">// first message parameter\t\t</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> LPARAM lParam  <span class=\"token comment\">// second message parameter\t\t</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>uMsg<span class=\"token punctuation\">)</span>\t\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span>\t\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">case</span>  WM_INITDIALOG <span class=\"token operator\">:</span>\t\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_INITDIALOG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INIT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> TRUE <span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">case</span>  WM_COMMAND <span class=\"token operator\">:</span>\t\t\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span> <span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_BUTTON_OK <span class=\"token operator\">:</span>\t\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IDC_BUTTON_OK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">case</span>   IDC_BUTTON_OUT<span class=\"token operator\">:</span>\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IDC_BUTTON_OUT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OUT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token function\">EndDialog</span><span class=\"token punctuation\">(</span>hwndDlg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token keyword\">break</span> <span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">return</span> FALSE <span class=\"token punctuation\">;</span>\t\t\t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Dialog 消息处理函数与 Windows 消息处理函数不一样。</p>\n<p>在 Dialog 消息处理函数中：</p>\n<p>1、处理过的消息，返回 TRUE。</p>\n<p>2、不处理的消息，返回 FALSE。</p>\n<p>在 Windows 消息处理函数中：</p>\n<p>1、处理过的消息，返回 FALSE (既 0)。</p>\n<p>2、不处理的消息，调用 DefWindowProc () 处理。</p>\n<h1 id=\"获取文本框内容\"><a class=\"anchor\" href=\"#获取文本框内容\">#</a> 获取文本框内容</h1>\n<p>重新画一个对话框</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>点击确定的时候就获取文本框内的内容</p>\n<p>1、获取文本框句柄：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HWND hEditUser &#x3D; GetDlgItem (hDlg,IDC_EDIT_USER);\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hDlg\t对话框句柄</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>IDC_EDIT_USER\t\t编号</pre></td></tr></table></figure><p>2、获取文本框内容</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>TCHAR szUserBuff [0x50];\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>GetWindowText (hEditUser,szUserBuff,0x50);\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>hEditUser\t文本框句柄</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>szUserBuff\t输出缓冲区</pre></td></tr></table></figure><p>只贴关键部分了</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>switch (LOWORD(wParam))</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tcase   IDC_BUTTON3:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\thEditUser &#x3D; GetDlgItem(hwndDlg, IDC_EDIT_UserName);</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\thEditPass &#x3D; GetDlgItem(hwndDlg, IDC_EDIT_PassWord);</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\tGetWindowText(hEditUser, szUserBuff, 0x50);</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\tGetWindowText(hEditPass, szPassBuff, 0x50);</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tMessageBox(NULL, szUserBuff, szPassBuff, MB_OK);</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tMessageBox(NULL, TEXT(&quot;IDC_BUTTON_OK&quot;), TEXT(&quot;OK&quot;), MB_OK);</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\treturn TRUE;</pre></td></tr></table></figure><p><img data-src=\"image008.png\" alt=\"\" /></p>\n<h1 id=\"消息断点\"><a class=\"anchor\" href=\"#消息断点\">#</a> 消息断点</h1>\n<p>虽然创建 Dialog 对话框避我们创建 Windows 窗口的步骤更简单一些，但其实步骤一点都没有少，我们逆向分析一个 Win32 程序使还是可以找到其消息处理函数。</p>\n<p>但实际上一个窗口程序可能会有非常多的功能，我们找其消息处理函数是非常耗时耗力的，针对这种情况我们可以借助工具。</p>\n<p>在 OD 中点击 <code>W</code>  图标查看窗口</p>\n<p><img data-src=\"image015.png\" alt=\"\" /></p>\n<p>我们发现，函数处理地址都是 7 开头的高位地址，既这些消息处理函数都是系统给我们提供的，但最终都会调用我们的消息处理函数。<br />\n明白了这个流程，我们就可以先在调用系统处理函数那里下断点，然后追回程序自己的消息处理函数。</p>\n<p>我就在 x32dbg 上演示了</p>\n<p>选择窗口</p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<p>选择消息类型</p>\n<p><img data-src=\"image010.png\" alt=\"\" /></p>\n<p>我们要找到的是子窗口的消息处理函数，发给父窗口的消息是  <code>WM_COMMAND</code>  ，对于按钮控件，无非是鼠标点下去或抬起来，要确定按钮是按下触发消息处理还是松开触发，自己点一下就能确定了。</p>\n<p>鼠标左键抬起的消息类型的宏定义： <code>#define WM_LBUTTONUP                    0x0202</code> 。</p>\n<p>设置消息断点后，我们鼠标点击一下按钮就直接触发断点了：</p>\n<p><img data-src=\"image011.png\" alt=\"\" /></p>\n<p>当程序断在这里的时候我们打开内存布局，在 <code>.text</code>  区段下内存访问断点，这里我们可以选择重复设置。</p>\n<p><img data-src=\"imaeg012.png\" alt=\"\" /></p>\n<p>F9 运行，断在了我们的程序里。</p>\n<p><img data-src=\"image013.png\" alt=\"\" /></p>\n<p><strong>但要注意的是这里断下的消息处理函数可能并不是要处理我们的消息</strong><br />\n注意消息处理函数的堆栈空间看其 <code>ESP+8</code>  的位置，其值并不是  <code>WM_COMMAND</code>  (0x111)</p>\n<p>所以我们的让程序接着跑起来，直到 <code>ESP+8</code>  的值是 0x111，但因下了内存断点，就算是按下 F9 还是一次执行一条指令。</p>\n<p><img data-src=\"image014.png\" alt=\"\" /></p>\n<p>直到确定了 <code>ESP+8</code>  的值是 0x111，这就找到了本次按钮的消息处理函数。</p>\n",
            "tags": [
                "资源文件",
                "消息断点"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/ESP%E5%AF%BB%E5%9D%80-%E5%AE%9A%E4%BD%8D%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/",
            "url": "https://or0kit.github.io/Bin/Win32/ESP%E5%AF%BB%E5%9D%80-%E5%AE%9A%E4%BD%8D%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/",
            "title": "ESP寻址-定位回调函数",
            "date_published": "2021-11-07T02:59:07.000Z",
            "content_html": "<h1 id=\"消息堆栈\"><a class=\"anchor\" href=\"#消息堆栈\">#</a> 消息堆栈</h1>\n<h2 id=\"回调函数的结构\"><a class=\"anchor\" href=\"#回调函数的结构\">#</a> 回调函数的结构</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span>  \t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tIN  HWND hwnd<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIN  UINT uMsg<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN  WPARAM wParam<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN  LPARAM lParam  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"回调函数的堆栈\"><a class=\"anchor\" href=\"#回调函数的堆栈\">#</a> 回调函数的堆栈</h2>\n<p><img data-src=\"image000.png\" alt=\"\" /></p>\n<h1 id=\"win32应用程序入口识别\"><a class=\"anchor\" href=\"#win32应用程序入口识别\">#</a> Win32 应用程序入口识别</h1>\n<p>思路：根据 WinMain 的四个参数，由调用顺序，知道最后压栈的是 hInstance 句柄（也就是 WinMain 函数的第一个参数，其值等于 ImageBase），根据反汇编，则判断压栈参数是 <code>GetModuleHandle</code>  函数的返回值，即可找到 Win32 应用入口。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>0040131F  |.  F645 D0 01    test byte ptr ss:[ebp-0x30],0x1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>00401323  |.  74 06         je short ReverseT.0040132B</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>00401325  |.  0FB745 D4     movzx eax,word ptr ss:[ebp-0x2C]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>00401329  |.  EB 03         jmp short ReverseT.0040132E</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>0040132B  |&gt;  6A 0A         push 0xA</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>0040132D  |.  58            pop eax                                  ;  kernel32.763AFA29</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>0040132E  |&gt;  50            push eax</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>0040132F  |.  FF75 9C       push [local.25]</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>00401332  |.  56            push esi                                 ;  ReverseT.&lt;ModuleEntryPoint&gt;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>00401333  |.  56            push esi                                 ; &#x2F;pModule &#x3D; &quot;U 嬱 jh 郹 @&quot;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>00401334  |.  FF15 2C604000 call dword ptr ds:[&lt;&amp;KERNEL32.GetModuleH&gt;; \\GetModuleHandleA</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>0040133A  |.  50            push eax</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>0040133B  |.  E8 C0FCFFFF   call ReverseT.00401000                   ;</pre></td></tr></table></figure><p>这是我在 OD 中扣出来的一部分反汇编，我们可以很轻松的判断出：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>00401334  |.  FF15 2C604000 call dword ptr ds:[&lt;&amp;KERNEL32.GetModuleH&gt;; \\GetModuleHandleA</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>0040133A  |.  50            push eax</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>0040133B  |.  E8 C0FCFFFF   call ReverseT.00401000                   ;  WinMain 函数入口</pre></td></tr></table></figure><h1 id=\"esp寻址的特点\"><a class=\"anchor\" href=\"#esp寻址的特点\">#</a> ESP 寻址的特点</h1>\n<p>程序入口处，esp+4 一般是函数的第一个参数。<br />\nESP 寻址会受到 push 和 pop 的影响。</p>\n<h1 id=\"定位窗口的回调函数\"><a class=\"anchor\" href=\"#定位窗口的回调函数\">#</a> 定位窗口的回调函数</h1>\n<p>思路：根据 <code>RegisterClass()</code>  函数的参数，找到 <code>WNDCLASS</code>  结构体的 <code>lpfnWndProc</code>  参数，从而找到了回调函数的地址。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h1 id=\"具体事件的处理的定位\"><a class=\"anchor\" href=\"#具体事件的处理的定位\">#</a> 具体事件的处理的定位</h1>\n<p>思路：在 OD 的设置断点中，右键设置条件断点，可根据相应的条件断下来。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h1 id=\"定位子窗口的消息时间处理函数\"><a class=\"anchor\" href=\"#定位子窗口的消息时间处理函数\">#</a> 定位子窗口的消息时间处理函数</h1>\n<p>子窗口如：按钮、编辑框……</p>\n<p>一个主窗口可能会有很多子窗口，对于它们的消息处理，会用到 <code>WPARAM wParam</code>  与 <code>LPARAM lParam </code></p>\n<h2 id=\"按钮\"><a class=\"anchor\" href=\"#按钮\">#</a> 按钮</h2>\n<p>按钮的本质是窗口</p>\n<p>创建按钮</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">CreateButton</span><span class=\"token punctuation\">(</span>HWND hwnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tHWND hwndPushButton<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tHWND hwndCheckBox<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tHWND hwndRadio<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\thwndPushButton <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"普通按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">//WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON | BS_DEFPUSHBUTTON,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> BS_PUSHBUTTON <span class=\"token operator\">|</span> BS_DEFPUSHBUTTON<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 子窗口 ID</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\thAppInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\thwndCheckBox <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"复选框\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token comment\">//WS_CHILD | WS_VISIBLE | BS_CHECKBOX | BS_AUTOCHECKBOX,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> BS_CHECKBOX <span class=\"token operator\">|</span>BS_AUTOCHECKBOX <span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span><span class=\"token number\">1002</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 子窗口 ID</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\thAppInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\thwndRadio <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单选按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token comment\">//WS_CHILD | WS_VISIBLE | BS_RADIOBUTTON | BS_AUTORADIOBUTTON,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> BS_RADIOBUTTON  <span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span><span class=\"token number\">1003</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 子窗口 ID</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\thAppInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"按钮事件的处理\"><a class=\"anchor\" href=\"#按钮事件的处理\">#</a> 按钮事件的处理</h2>\n<p>1、按钮是一种特殊的窗体，并不需要提供单独的窗口回调函数.<br />\n2、当按钮有事件产生时，会给父窗口消息处理程序发送一个 WM_COMMAND 消息</p>\n<blockquote>\n<p>按钮 ---------------&gt; 系统提供 WinProc----------------------&gt; 父窗口的 WinProc<br />\n---\t单击按钮\t\t\t\t\t\t转换 WM_COMMAND</p>\n</blockquote>\n<p>代码：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> WM_COMMAND<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1001</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello Button 1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Demo\"</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1002</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello Button 2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Demo\"</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1003</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello Button 3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Demo\"</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span>uMsg<span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"按钮事件处理逻辑定位\"><a class=\"anchor\" href=\"#按钮事件处理逻辑定位\">#</a> 按钮事件处理逻辑定位</h2>\n<p>设置条件断点</p>\n<p><code>[ESP+8]==WM_COMMAND &amp;&amp; [ESP+0xC]==子窗口ID</code></p>\n<hr />\n<p>总流程大致如上，学会举一反三很重要。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmxhdGNjL3AvNzY5NDIwOC5odG1s\">https://www.cnblogs.com/flatcc/p/7694208.html</span></p>\n",
            "tags": [
                "ESP寻址",
                "定位Win32窗口回调函数"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/%E5%8A%A0%E5%AF%86%E5%A3%B3%E7%BB%83%E4%B9%A0%E9%A1%B9%E7%9B%AE/",
            "url": "https://or0kit.github.io/Bin/Win32/%E5%8A%A0%E5%AF%86%E5%A3%B3%E7%BB%83%E4%B9%A0%E9%A1%B9%E7%9B%AE/",
            "title": "加密壳练习项目",
            "date_published": "2021-11-02T02:23:56.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>壳的编写一直以来都被认为是软件安全领域中教为高端的技术，但是实际上编写一个自己的壳并不是多么困难的事情，只要你理解 PE 结构并会写代码，那么写一个壳的过程其实就会变成一系列重复的数据处理工作。</p>\n<p>但是为什么非要自己编写这个看是毫无创意的工具呢？那是因为这会给你带来非常巨大的帮助。<br />\n具体总结如下：</p>\n<ul>\n<li>壳的原理与蠕虫病毒感染的原理基本一致，你可以在这个过程中学到很多东西。</li>\n<li>最重要的一点，你可以将自己的技术附加到壳上，使其具有与你相同的能力。比如免杀。</li>\n</ul>\n<h1 id=\"项目说明\"><a class=\"anchor\" href=\"#项目说明\">#</a> 项目说明</h1>\n<p><strong>傀儡进程加密壳 滴水三期课后作业</strong></p>\n<ul>\n<li>本项目是滴水三期视频的一个课后作业，是使用 <strong>傀儡进程</strong> 方法写的一个壳</li>\n<li>加壳程序的工作步骤如下</li>\n</ul>\n<ol>\n<li>获取 Shell 程序的路径</li>\n<li>获取 src 程序的路径</li>\n<li>将 src 程序读取到内存中，加密</li>\n<li>在 Shell 程序中新增一个节，并将加密后的 src 程序追加到 Shell 程序的新增节中</li>\n<li>加壳过程完毕</li>\n</ol>\n<ul>\n<li>\n<p>壳主体的工作步骤如下</p>\n<ol>\n<li>读取主模块的数据</li>\n<li>解密：得到原来的 PE 文件</li>\n<li>以挂起的形式创建进程：  <code>CreateProcess</code>  ，要创建的进程，就是壳子本身</li>\n<li>获取外壳程序的 Context，后面要用。</li>\n<li>卸载外壳程序的文件镜像 (ZwUnmapViewOfSection)。</li>\n<li>在指定的位置 (src 的 ImageBase) 申请指定大小 (src 的 SizeOfImage) 的内存 (VirtualAllocEx)。</li>\n<li>如果成功，将 Src 的 PE 文件拉伸 复制到该空间中。</li>\n<li>如果申请空间失败，但有重定位表就在任意位置申请 (src 的 SizeOfImage)，然后将 PE 文件拉伸、复制、修复重定位表。</li>\n<li>如果第 6 步申请空间失败，并且还没有重定位表，直接返回：失败。</li>\n<li>修改外壳程序的 Context:</li>\n</ol>\n<ul>\n<li>将 Context 的 ImageBase 改成 Src 的 ImageBase</li>\n<li>将 Context 的 OEP 改成 Src 的 OEP</li>\n</ul>\n<ol start=\"11\">\n<li>设置 Context 并恢复主线程</li>\n<li>终止外壳程序，解壳过程结束。</li>\n</ol>\n</li>\n</ul>\n<hr />\n<h2 id=\"zwunmapviewofsection函数\"><a class=\"anchor\" href=\"#zwunmapviewofsection函数\">#</a> ZwUnmapViewOfSection 函数</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS   <span class=\"token function\">ZwUnmapViewOfSection</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    IN HANDLE  ProcessHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN PVOID  BaseAddress    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>ZwUnmapViewOfSection</code>  这个函数在 wdm.h 里声明，它的功能是卸载进程的内存镜像（Image Buffer），内存镜像是指进程 4GB 虚拟地址空间中从  <code>ImageBase</code>  开始，长度为  <code>SizeOfImage</code>  的内存。</p>\n<p>卸载内存镜像之后，就得到了一个 “干净” 的 4GB 空间，然后我们可以用  <code>VirtualAllocEx</code>  往里面填数据，比如换成其他程序的内存镜像。</p>\n<p>这样做的意义就是我们可以从内存中启动一个程序，而不用涉及磁盘读写，因为常规的 CreateProcess 必须指定程序路径，而利用这种技术可以避免这一点。</p>\n<h1 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h1>\n<p>要加壳的源程序简称：SRC<br />\n 壳称为：Shell</p>\n<h2 id=\"加壳程序\"><a class=\"anchor\" href=\"#加壳程序\">#</a> 加壳程序</h2>\n<p>给 Shell 程序新增一个节，并把 SRC 的二进制数据加密添加到 Shell 程序的新增节中。</p>\n<p>也可以把 Shell 程序所有节合并，或者扩大节……</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>Packer.cpp</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Head.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 获取壳程序的路径与源程序路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">char</span> szShellPath<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">char</span> szSrcPath<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tLPVOID pFileBuffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPIMAGE_NT_HEADERS32 pNTHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tLPVOID pFileBuffer_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tPIMAGE_NT_HEADERS32 pNTHeader_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tDWORD file_size <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tDWORD file_size_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tLPVOID pNewFileBuffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 加壳后的程序保存的位置</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">char</span> file_path_out<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tFILE<span class=\"token operator\">*</span> fp_out<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]输入Shell程序的路径：\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> szShellPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]输入将要加壳的程序的路径：\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> szSrcPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token comment\">// 读取要加壳的文件</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tfile_size <span class=\"token operator\">=</span> <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span>szShellPath<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pDosHeader<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pNTHeader<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pSectionHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token comment\">// 读取源文件</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tfile_size_src <span class=\"token operator\">=</span> <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span>szSrcPath<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pFileBuffer_src<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pDosHeader_src<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pNTHeader_src<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pSectionHeader_src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token comment\">// 新增节</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token function\">AddNewSec</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pNewFileBuffer<span class=\"token punctuation\">,</span> pFileBuffer<span class=\"token punctuation\">,</span> pDosHeader<span class=\"token punctuation\">,</span>pNTHeader<span class=\"token punctuation\">,</span> pSectionHeader<span class=\"token punctuation\">,</span>file_size<span class=\"token punctuation\">,</span> file_size_src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// 对 pFileBuffer_src 进行加密</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token function\">Encipherment</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pFileBuffer_src<span class=\"token punctuation\">,</span> file_size_src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token comment\">// 复制到后面</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span>pNewFileBuffer <span class=\"token operator\">+</span> file_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tpFileBuffer_src<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tfile_size_src</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>file_path_out<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加壳已完成，请输入要保存的位置：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> file_path_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token comment\">// 写入文件</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tfp_out <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span>file_path_out<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span>fp_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span>pNewFileBuffer<span class=\"token punctuation\">,</span> file_size <span class=\"token operator\">+</span> file_size_src<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> fp_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>Head.h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_CRT_SECURE_NO_WARNINGS</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">EXIT_ERROR</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>                                 </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">do</span>                                                </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#123;</span>                                                 </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\"error in line: %d\\n\"</span><span class=\"token expression\"><span class=\"token punctuation\">,</span> <span class=\"token constant\">__LINE__</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>EXIT_FAILURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">MY_ASSERT</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>                         </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">do</span>                                       </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#123;</span>                                        </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                            </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token expression\"><span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\"ASSERTION failed!\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/// 把 PE 文件读取到内存中</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"file_in\">PE 文件的路径 & lt;/param></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pFileBuffer\"> 返回文件状态的 FileBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pDosHeader\"> 返回 DOS 头 DosHeader&lt;/param></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pNTHeader\"> 返回 NT 头 pNTHeader&lt;/param></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pSectionHeader\"> 返回节表头 pSectionHeader&lt;/param></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">/// &lt;returns>PE 文件的大小 & lt;/returns></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>DWORD <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    IN LPSTR file_in<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    OUT LPVOID <span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    OUT PIMAGE_DOS_HEADER <span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    OUT PIMAGE_NT_HEADERS32 <span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    OUT PIMAGE_SECTION_HEADER <span class=\"token operator\">*</span>pSectionHeader</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">/// 计算对齐，如偏移为 900，对齐为 1000h，返回 1000h</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwOffset\"> 偏移 & lt;/param></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwAlign\"> 对齐 & lt;/param></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 对齐后的值 & lt;/returns></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>DWORD <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>DWORD dwOffset<span class=\"token punctuation\">,</span> DWORD dwAlign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">/// 移动 NT 头</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pBuffer\">PE 文件的 pBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 前移了多少字节 & lt;/returns></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>DWORD <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span>LPVOID pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">/// 为 PE 文件新增一个节</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pNewFileBuffer\"> 返回新的文件状态的 pNewFileBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pFileBuffer\"> 文件状态的 FileBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"file_size\">PE 文件的大小 & lt;/param></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwAddSize\"> 新增节的大小 & lt;/param></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 新增节在 pNewFileBuffer 中的地址 & lt;/returns></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>VOID <span class=\"token function\">AddNewSec</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    OUT LPVOID<span class=\"token operator\">*</span> pNewFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    IN LPVOID pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    IN PIMAGE_DOS_HEADER pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    IN PIMAGE_NT_HEADERS32 pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    IN PIMAGE_SECTION_HEADER pSectionHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    IN DWORD file_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    IN DWORD dwAddSize</pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\">/// 使每个字节与 0xEC 进行异或运算并 + 0xF0</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pFileBuffer\"> 需要加密的 Buffer&lt;/param></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwSize\">Buffer 的大小 & lt;/param></span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 返回加密后的 Buffer&lt;/returns></span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>VOID <span class=\"token function\">Encipherment</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    IN LPVOID<span class=\"token operator\">*</span> pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    IN DWORD dwSize</pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p Head.cpp</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Head.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DWORD <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN LPSTR file_in<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tOUT LPVOID<span class=\"token operator\">*</span> pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tOUT PIMAGE_DOS_HEADER<span class=\"token operator\">*</span> pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tOUT PIMAGE_NT_HEADERS32<span class=\"token operator\">*</span> pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tOUT PIMAGE_SECTION_HEADER<span class=\"token operator\">*</span> pSectionHeader</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tFILE<span class=\"token operator\">*</span> fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tDWORD file_size <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tLPVOID t <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span>file_in<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fp == NULL!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfile_size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">fseek</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_END</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfile_size <span class=\"token operator\">=</span> <span class=\"token function\">ftell</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">fseek</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_SET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tt <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>file_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> file_size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> t <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fread error or malloc error!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token operator\">*</span>pFileBuffer <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token operator\">*</span>pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>e_magic <span class=\"token operator\">==</span> IMAGE_DOS_SIGNATURE</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token operator\">*</span>pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>FileHeader<span class=\"token punctuation\">.</span>SizeOfOptionalHeader <span class=\"token operator\">!=</span> <span class=\"token number\">0xe0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is not a 32-bit executable file.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token operator\">*</span>pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_NT_SIGNATURE<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>FileHeader<span class=\"token punctuation\">.</span>SizeOfOptionalHeader</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">return</span> file_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>DWORD <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>DWORD dwOffset<span class=\"token punctuation\">,</span> DWORD dwAlign<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">// 如果偏移小于对齐，向上取整</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwOffset <span class=\"token operator\">&lt;=</span> dwAlign<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> dwAlign<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token comment\">// 如果偏移大于对齐且不能除尽，向上取整</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwOffset <span class=\"token operator\">%</span> dwAlign<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>dwOffset <span class=\"token operator\">/</span> dwAlign <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> dwAlign<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">// 如果能除尽，直接返回 offset</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token keyword\">return</span> dwOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\">// 移动 NT 头</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">// 返回值是 前移了多少</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>DWORD <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span>LPVOID pBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tPIMAGE_DOS_HEADER\t\t\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tPIMAGE_NT_HEADERS\t\t\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tPIMAGE_FILE_HEADER\t\t\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tPIMAGE_SECTION_HEADER\t\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tLPVOID\t\tpDst <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tDWORD\t\tdwRet <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tDWORD\t\tdwSize <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tLPVOID\t\tpSrc <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tpDst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NT 头插入点</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tdwRet <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNTHeader <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDst<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回地址减小的值</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tdwSize <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader <span class=\"token operator\">+</span> \\</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动的字节数</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\tpSrc <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pSrc <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分配内存失败\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pSrc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pNTHeader<span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 保存要复制的数据</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pNTHeader<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 清空原数据</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pDst<span class=\"token punctuation\">,</span> pSrc<span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动数据</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\tpDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新 e_lfanew</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token keyword\">return</span> dwRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>VOID <span class=\"token function\">AddNewSec</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\tOUT LPVOID<span class=\"token operator\">*</span> pNewFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\tIN LPVOID pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tIN PIMAGE_DOS_HEADER pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tIN PIMAGE_NT_HEADERS32 pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\tIN PIMAGE_SECTION_HEADER pSectionHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\tIN DWORD file_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\tIN DWORD dwAddSize</pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\tPIMAGE_FILE_HEADER\t\t\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\tPWORD\t\t\t\t\t\tpNumberOfSections <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\tPIMAGE_SECTION_HEADER\t\tpLastSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\tPIMAGE_SECTION_HEADER\t\tpNewSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t<span class=\"token comment\">// 定义新增的节的名字</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t<span class=\"token keyword\">char</span> g_NameOfNewSectionHeader<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token comment\">// 申请一个新的 FileBuffer 新增的大小为需要加壳的文件的大小</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t<span class=\"token operator\">*</span>pNewFileBuffer <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>file_size <span class=\"token operator\">+</span> dwAddSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> file_size <span class=\"token operator\">+</span> dwAddSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">,</span> pFileBuffer<span class=\"token punctuation\">,</span> file_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token comment\">// 判断节表后的空白区是否足够 80 字节，若不够则移动 NT 头</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pOptionHeader<span class=\"token operator\">-></span>SizeOfHeaders <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>pSectionHeader<span class=\"token punctuation\">[</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\tDWORD dwRet <span class=\"token operator\">=</span> <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"节表空间不足，NT头和节表向低地址移动了 %d 字节\\n\"</span><span class=\"token punctuation\">,</span> dwRet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwRet <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动后仍没有足够的80字节空间插入新节表\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t<span class=\"token comment\">// 更新指针</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t<span class=\"token comment\">// 在节表最后新增一个节表 并修正新增节表的属性</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\tpNumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 节的数量</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\tpLastSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最后一个节表</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\tpNewSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新节表插入点</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>   <span class=\"token comment\">//1、Name: 名字随便修改，不能超过八个字节。</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">,</span> g_NameOfNewSectionHeader<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t<span class=\"token comment\">//2、VirtualSize : 申请的新节空间大小</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize <span class=\"token operator\">=</span> dwAddSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t<span class=\"token comment\">//3、VirtualAddress : 等于上一个节的 VirtualAddress + SizeOfRawData。 这个成员指定了这个节在内存哪里展开。所以需要修改。</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">=</span> <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>pLastSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">,</span>pOptionHeader<span class=\"token operator\">-></span>SectionAlignment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t<span class=\"token comment\">//4、SizeOfRawData：节在文件中对齐后的尺寸，可以和 VirtualSize 设置的一样。我们新增的节，自己需要在 PE 文件添加一段节数据，数据的大小按照文件对齐添加，并且填写到这个成员中。</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>SizeOfRawData <span class=\"token operator\">=</span> dwAddSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t<span class=\"token comment\">//5、PointerToRawData：等于上一个节的 PointerToRawData + SizeOfRawData。我们指定了内存中从哪里展开节。那么也需要指定这个节在文件中在哪里展开</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">=</span> pLastSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t<span class=\"token comment\">//6、PointerToRelocation：设置成零</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t<span class=\"token comment\">//7、PointerToLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t<span class=\"token comment\">//8、NumberOfLineRelocations：设置成零</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t<span class=\"token comment\">//9、NumberOfLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t<span class=\"token comment\">//10、Characteristics：块属性 </span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">=</span> <span class=\"token number\">0xE00000A0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t<span class=\"token comment\">// 修改标准 PE 头中节的数量</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\tpFileHeader<span class=\"token operator\">-></span>NumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t<span class=\"token comment\">// 修改 SizeOfImage 的大小</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\tpOptionHeader<span class=\"token operator\">-></span>SizeOfImage <span class=\"token operator\">+=</span> <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize<span class=\"token punctuation\">,</span> pOptionHeader<span class=\"token operator\">-></span>SectionAlignment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>VOID <span class=\"token function\">Encipherment</span><span class=\"token punctuation\">(</span>IN LPVOID <span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">,</span> IN DWORD dwSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>DWORD i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dwSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t<span class=\"token comment\">// 注意运算符的优先级</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>仅仅是把源程序读取到内存中，并使每个字节与 0x2 进行异或操作再加 0xF0。</p>\n<p>附异或操作：<br />\n即 “两个输入相同时为 0，不同则为 1”！</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">a</th>\n<th style=\"text-align:left\">b</th>\n<th style=\"text-align:left\">a⊕b</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n</tbody>\n</table>\n<p>加密方法不是重点，既然是个壳那么就必须要对脱壳进行一定的防范。若只是为了文件免杀……</p>\n<p>把源程序的读取到内存中后，再移动其各种表至壳程序，使得壳程序与源程序紧密关联，若要脱壳则要付出更大的代价。 任晓珲在《黑客免杀攻防》一书中说一个设计到极致的壳其实就是一个 PE 融合程序，如果要将任意两个 PE 文件完全的合二为一，会涉及程序的引导、资源单的 HOOK、数据段的融合以及各个 PE 结构的融合（包括输入表、输出表、重定位表）等。<br />\n总而言之，PE 融合操作就是一种将两个 PE 文件完全拆碎，然后再将其组装为一个新 PE 文件的操作，整个过程涉及的若干操作非常复杂，其技术价值前景也是个问题，若要在此方面花费大量时间研究……</p>\n<h2 id=\"壳程序\"><a class=\"anchor\" href=\"#壳程序\">#</a> 壳程序</h2>\n<pre><code class=\"language-c\">\n</code></pre>\n<pre><code class=\"language-c\">\n</code></pre>\n<pre><code class=\"language-c\">\n</code></pre>\n",
            "tags": [
                "傀儡进程加密壳",
                "ZwUnmapViewOfSection函数"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/HOOK%E6%94%BB%E9%98%B2/",
            "url": "https://or0kit.github.io/Bin/Win32/HOOK%E6%94%BB%E9%98%B2/",
            "title": "HOOK攻防",
            "date_published": "2021-10-21T12:45:54.000Z",
            "content_html": "<h1 id=\"hook攻防常用手段\"><a class=\"anchor\" href=\"#hook攻防常用手段\">#</a> Hook 攻防常用手段</h1>\n<h2 id=\"阶段一\"><a class=\"anchor\" href=\"#阶段一\">#</a> 阶段一：</h2>\n<blockquote>\n<p>(防) 检测 JMP (E9)，检测跳转范围<br />\n (破) 想方设法绕过</p>\n</blockquote>\n<p>若检测跳转范围则可以分为几次小跳转来进行跳转。</p>\n<h2 id=\"阶段二\"><a class=\"anchor\" href=\"#阶段二\">#</a> 阶段二：</h2>\n<blockquote>\n<p>(防) 写个线程全代码校验 / CRC 检测<br />\n (破) 修改检测代码、挂起检测函数</p>\n</blockquote>\n<p>针对全代码校验：设置硬件读断点，当有程序尝试读代码，便会断下，这是就发现了检测线程，我们就可以分析并修改检测线程的代码了。</p>\n<h2 id=\"阶段三\"><a class=\"anchor\" href=\"#阶段三\">#</a> 阶段三：</h2>\n<p><code>A-&gt;B-&gt;C-&gt;D-&gt;HOOK函数</code></p>\n<blockquote>\n<p>(防) 先对相关 API 全代码校验，多个线程互相检测，并检测线程是否在活动中。<br />\n(破) 使用瞬时钩子 / 硬件钩子</p>\n</blockquote>\n<ol>\n<li>\n<p>找检测线程的漏洞，来写对应的代码。</p>\n</li>\n<li>\n<p>使用瞬时 HOOK。<br />\n不管是全代码校验也好，CRC 校验也好，多线程检测也好，其目的不就是保护自己的函数不被别人改掉吗，那有没有一种代码把钩子该做的事情做了，还不更改函数的代码呢？</p>\n</li>\n</ol>\n<p>循环检测：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//1.\t// 检测 ExitProcess 是否被 HOOK</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//2.\t// 检测被保护的函数是否被 HOOK</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwAPIAddr<span class=\"token punctuation\">,</span>szAPICode<span class=\"token punctuation\">,</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//A\t\tbRet = VirtualProtect((LPVOID)dwAPIAddr,0x10,PAGE_READWRITE,&amp;dwOldProtect);</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token function\">f</span> <span class=\"token punctuation\">(</span>bRet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwAPIAddr<span class=\"token punctuation\">,</span>szAPICode<span class=\"token punctuation\">,</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwAPIAddr<span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>dwOldProtect<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//B\t\tExitProcess(0);</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>假设我们逆向分析出了上述代码：</p>\n<p>其功能为如果检测到被保护函数被 hook 则执行恢复代码，并关闭程序。</p>\n<p>假设以上代码是 D 线程，还有一个 C 线程在一直检测 D，所以我们不能动 D 线程，但我们发现 D 线程会执行 <code>ExitProcess</code>  函数，那我们可以对 <code>ExitProcess</code>  挂钩，让其退出功能失效，这样用就搞定了循环检测。</p>\n<p>若防守的一方在 D 线程中一开始就检测 <code>ExitProcess</code>  是否被 HOOK 呢？</p>\n<p>分析检测代码的流程</p>\n<p>检测 ExitProcess 是否被 HOOK，被 HOOK 的话恢复代码，然后退出。<br />\n检测被保护函数是否被 HOOK，被 HOOK 的话恢复代码，然后退出。</p>\n<p>这其中用来复原原来函数的关键函数 <code>VirtualProtect</code> , 一般是不会被检测的，我们可以对其挂钩子，先判段是不是 A 地址调用的函数（这个可以查看堆栈中的函数返回地址），如果是那么我们的钩子就执行代码给 <code>ExitProcess</code>  挂钩子，一样判断是否是 B 地址调用的函数，如果是执行钩子使其退出功能失效，使其失效后还要立即摘掉钩子，恢复函数，因为新一轮的检测又开始了。</p>\n<p>切记我们不能动 D 线程的任何代码。</p>\n<p><strong>总结：</strong></p>\n<blockquote>\n<p>&lt;1&gt; 对 VirtualProtect 进行 HOOK，只有当调用地址为 A 时，对 ExitProcess 进行挂钩，并修正返回结果，改变执行流程。</p>\n</blockquote>\n<blockquote>\n<p>&lt;2&gt; 在 ExitProcess 的 HOOK 处理函数中判断，只有当调用地址为 B 的时候，才将 ExitProcess 失效，然后卸载 HOOK。</p>\n</blockquote>\n<h3 id=\"瞬时hook代码\"><a class=\"anchor\" href=\"#瞬时hook代码\">#</a> 瞬时 HOOK 代码</h3>\n<p>撰写代码前先捋一下思路：<br />\n本程序只针对上述阶段三的 HOOK 防守</p>\n<p>这里的前提是有一个函数 <code>VirtualProtect</code>  没有被 hook，我们这里的瞬时 HOOK 的概念是针对被检测的 <code>ExitProcess</code> 。首先我们要触发 <code>MessageBox</code>  的检测函数，让检测程序去调用 <code>VirtualProtect</code>  修复 <code>MessageBox</code> ，这样我们就要先 HOOK <code>VirtualProtect</code>  函数，当 A 地址调用的 <code>VirtualProtect</code>  则执行 HOOK 处理函数去 HOOK <code>ExitProcess</code>  函数，当 B 地址调用 <code>ExitProcess</code>  函数时，则执行 <code>ExitProcess</code>  处的 HOOK 处理函数，先恢复 <code>ExitProcess</code>  函数，然后直接 <code>ret</code>  返回，这样 <code>ExitProcess</code>  函数就失效了，检测线程也就没用了，然后 HOOK <code>MessageBox</code>  函数就行了。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//dllmain.cpp : 定义 DLL 应用程序的入口点。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span>             <span class=\"token comment\">// 从 Windows 头文件中排除极少使用的内容</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Windows 头文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//5 个字节</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH_VP</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>DWORD dwHookAddressVP <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>DWORD dwCallAddressVP <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH_EP</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>DWORD dwHookAddressEP <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>DWORD dwCallAddressEP <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH_MB</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>DWORD dwHookAddressMB <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>DWORD dwRetAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>WCHAR szNewText<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"瞬时Hook!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">/******************************************** Hook VirtualProtect Begin ********************************/</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>VOID <span class=\"token function\">SetVirtualProtectHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 获取要 HOOK 的函数地址</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tdwHookAddressVP <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"kernel32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"VirtualProtect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// 安装或者卸载 HOOK</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">HookVirtualProtect</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">VirtualProtectProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token comment\">// 为 ExitProcess 挂上瞬时 hook</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tdwHookAddressVP <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"kernel32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ExitProcess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"VirtualProtect()开始挂钩 HOOKExitProcess()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">HookExitProcess</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewVirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token comment\">// 判断调用地址 如果是目标地址 则调用处理函数</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>exp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tcmp eax<span class=\"token punctuation\">,</span> dwCallAddressVP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tjnz Lable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tcall VirtualProtectProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\txor eax<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tLable<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\tpush dwHookAddressVP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\tadd dword ptr ds <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tretn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>BOOL <span class=\"token function\">HookVirtualProtect</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_VP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_VP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH_VP <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewVirtualProtect <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddressVP <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\">/******************************************** Hook VirtualProtect End ********************************/</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">/******************************************** Hook ExitProcess Begin ********************************/</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ExitProcessProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t<span class=\"token comment\">// 卸载瞬时 HOOK 避免被检测到</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"ExitProcess()开始卸载：HOOKExitProcess()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t<span class=\"token function\">HookExitProcess</span><span class=\"token punctuation\">(</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewExitProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t<span class=\"token comment\">// 判断调用地址，如果是目标地址，则调用处理函数</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>exp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\tcmp eax<span class=\"token punctuation\">,</span> dwCallAddressEP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\tjnz Lable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\tcall ExitProcessProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t\tret<span class=\"token punctuation\">;</span><span class=\"token comment\">//ExitProcess 没有返回值，所以直接返回</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\tLable<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\tpush dwHookAddressEP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\tadd dword ptr ds <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\tretn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>BOOL <span class=\"token function\">HookExitProcess</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_EP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_EP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH_EP <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewExitProcess <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddressEP <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token comment\">/******************************************** Hook ExitProcess End ********************************/</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre></pre></td></tr><tr><td data-num=\"198\"></td><td><pre></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre><span class=\"token comment\">/******************************************** Hook MessageBox Begin ********************************/</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t<span class=\"token comment\">// 修改数据 esp+8</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t\tlea eax<span class=\"token punctuation\">,</span> dword ptr ds <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>szNewText<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t\tmov dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t\tjmp dwRetAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>BOOL <span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_MB<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_MB<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre></pre></td></tr><tr><td data-num=\"233\"></td><td><pre></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH_MB <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewMessageBox <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddressMB <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre></pre></td></tr><tr><td data-num=\"267\"></td><td><pre></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>VOID <span class=\"token function\">SetMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>\t<span class=\"token comment\">// 获取要 HOOK 的函数地址</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>\tdwHookAddressMB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MessageBoxW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>\tdwRetAddress <span class=\"token operator\">=</span> dwHookAddressMB <span class=\"token operator\">+</span> PATCH_LENGTH_MB<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>\t<span class=\"token comment\">// 安装或者卸载 HOOK</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>\t<span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre><span class=\"token comment\">/******************************************** Hook MessageBox End ********************************/</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre></pre></td></tr><tr><td data-num=\"277\"></td><td><pre></pre></td></tr><tr><td data-num=\"278\"></td><td><pre></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>\t<span class=\"token function\">SetVirtualProtectHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>\t<span class=\"token function\">SetMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre></pre></td></tr><tr><td data-num=\"286\"></td><td><pre></pre></td></tr><tr><td data-num=\"287\"></td><td><pre></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>BOOL APIENTRY <span class=\"token function\">DllMain</span><span class=\"token punctuation\">(</span>HMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>\tDWORD  ul_reason_for_call<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>\tLPVOID lpReserved</pre></td></tr><tr><td data-num=\"291\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ul_reason_for_call<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>\t\t<span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"更多的hook\"><a class=\"anchor\" href=\"#更多的hook\">#</a> 更多的 HOOK</h2>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n",
            "tags": [
                "HOOK攻防",
                "瞬时HOOK过检测"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84GetProcAddress%E5%87%BD%E6%95%B0/",
            "url": "https://or0kit.github.io/Bin/Win32/%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84GetProcAddress%E5%87%BD%E6%95%B0/",
            "title": "实现自己的GetProcAddress函数",
            "date_published": "2021-10-15T05:48:22.000Z",
            "content_html": "<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>宏 MAKEINTRESOURCE</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbWljcm96b25lL2FyY2hpdmUvMjAxMy8wNy8yOC8zMjIyMDAyLmh0bWw=\">https://www.cnblogs.com/microzone/archive/2013/07/28/3222002.html</span></p>\n",
            "tags": [
                "我的GetProcAddress"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/INLINE-HOOK/",
            "url": "https://or0kit.github.io/Bin/Win32/INLINE-HOOK/",
            "title": "INLINE-HOOK",
            "date_published": "2021-09-25T02:40:05.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<pre><code>//执行返回\njmp dwRetAddress;\nret;  图片中多了这个指令，实际上jmp就已经跳走了。\n</code></pre>\n<h1 id=\"inline-hook\"><a class=\"anchor\" href=\"#inline-hook\">#</a> INLINE-HOOK</h1>\n<p>HOOK 函数开头的 5 个字节</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>编写 Dll</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//dllmain.cpp : 定义 DLL 应用程序的入口点。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span>             <span class=\"token comment\">// 从 Windows 头文件中排除极少使用的内容</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Windows 头文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//5 个字节</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>DWORD dwHookAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>DWORD dwRetAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>WCHAR szNewText<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"InlineHook!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token comment\">// 修改数据 esp+8</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tlea eax<span class=\"token punctuation\">,</span> dword ptr ds <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>szNewText<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tmov dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span>edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tjmp dwRetAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>BOOL <span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewMessageBox <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddress <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// E9 00 00 00 00 90</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>VOID <span class=\"token function\">setMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token comment\">// 获取要 HOOK 的函数地址</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tdwHookAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MessageBoxW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tdwRetAddress <span class=\"token operator\">=</span> dwHookAddress <span class=\"token operator\">+</span> PATCH_LENGTH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token comment\">// 安装或者卸载 HOOK</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>BOOL APIENTRY <span class=\"token function\">DllMain</span><span class=\"token punctuation\">(</span>HMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\tDWORD  ul_reason_for_call<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tLPVOID lpReserved</pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ul_reason_for_call<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token function\">setMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>把 DLL 注入到进程中即可。</p>\n<p>结果：</p>\n<p>没有被 INLINE HOOK 的 MessageBoxW</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>点击运行，程序是正常运行的。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>接下来远程线程开始执行了，再次查看</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>可以发现已经 HOOK MessageBox 了。</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>最后运行</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<h1 id=\"inline-hook改进版\"><a class=\"anchor\" href=\"#inline-hook改进版\">#</a> INLINE-HOOK 改进版</h1>\n<p>上述的 INLINE HOOK 其中要跳转的裸函数内并不能定义局部变量，因为编译器并不会帮我们平衡堆栈，但我们可以在裸函数内用全局变量。这样我们写裸函数会有很多限制，但我们可以定义一个函数，在裸函数中去调用它，这样要调用的函数就没有任何限制了。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//dllmain.cpp : 定义 DLL 应用程序的入口点。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span>             <span class=\"token comment\">// 从 Windows 头文件中排除极少使用的内容</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Windows 头文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//5 个字节</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>DWORD dwHookAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>DWORD dwRetAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>WCHAR szNewText<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"InlineHook!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MessageBoxProc</span><span class=\"token punctuation\">(</span> HWND hWnd<span class=\"token punctuation\">,</span> LPCWSTR lpText<span class=\"token punctuation\">,</span> LPCWSTR lpCaption<span class=\"token punctuation\">,</span> UINT uType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 这个函数怎么写都可以，没有限制</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tWCHAR szBuffer<span class=\"token punctuation\">[</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szBuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%x %ws %ws %x\\r\\n\"</span><span class=\"token punctuation\">,</span> hWnd<span class=\"token punctuation\">,</span> lpText<span class=\"token punctuation\">,</span> lpCaption<span class=\"token punctuation\">,</span> uType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token function\">OutputDebugStringW</span><span class=\"token punctuation\">(</span>szBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token comment\">// 调用处理程序</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x4</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xC</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tcall MessageBoxProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tadd esp<span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\tjmp dwRetAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>BOOL <span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewMessageBox <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddress <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// E9 00 00 00 00 90</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>VOID <span class=\"token function\">setMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token comment\">// 获取要 HOOK 的函数地址</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tdwHookAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MessageBoxW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tdwRetAddress <span class=\"token operator\">=</span> dwHookAddress <span class=\"token operator\">+</span> PATCH_LENGTH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token comment\">// 安装或者卸载 HOOK</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>BOOL APIENTRY <span class=\"token function\">DllMain</span><span class=\"token punctuation\">(</span>HMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\tDWORD  ul_reason_for_call<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\tLPVOID lpReserved</pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ul_reason_for_call<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t<span class=\"token function\">setMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>代码已经写入了。</p>\n<p>海哥说了代码可以当成模板。当然只是 HOOK 了函数的前五个字节</p>\n<h1 id=\"另一种inline-hook\"><a class=\"anchor\" href=\"#另一种inline-hook\">#</a> 另一种 INLINE HOOK</h1>\n<ul>\n<li>很多时候，防守的一方都会检测 E9 来判断自己的程序是否被 HOOK 了</li>\n<li>将 JMP……JMP 改成 CALL + RET 的方式实现</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//dllmain.cpp : 定义 DLL 应用程序的入口点。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span>             <span class=\"token comment\">// 从 Windows 头文件中排除极少使用的内容</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Windows 头文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//5 个字节</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>DWORD dwHookAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>DWORD dwRetAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>WCHAR szNewText<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"InlineHook!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MessageBoxProc</span><span class=\"token punctuation\">(</span> HWND hWnd<span class=\"token punctuation\">,</span> LPCWSTR lpText<span class=\"token punctuation\">,</span> LPCWSTR lpCaption<span class=\"token punctuation\">,</span> UINT uType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 这个函数怎么写都可以，没有限制</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tWCHAR szBuffer<span class=\"token punctuation\">[</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szBuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%x %ws %ws %x\\r\\n\"</span><span class=\"token punctuation\">,</span> hWnd<span class=\"token punctuation\">,</span> lpText<span class=\"token punctuation\">,</span> lpCaption<span class=\"token punctuation\">,</span> uType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token function\">OutputDebugStringW</span><span class=\"token punctuation\">(</span>szBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token comment\">// 调用处理程序</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x4</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xC</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tpush dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tcall MessageBoxProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tadd esp<span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\tretn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>BOOL <span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE8</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewMessageBox <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddress <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// E9 00 00 00 00 90</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddress<span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>VOID <span class=\"token function\">setMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token comment\">// 获取要 HOOK 的函数地址</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tdwHookAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MessageBoxW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tdwRetAddress <span class=\"token operator\">=</span> dwHookAddress <span class=\"token operator\">+</span> PATCH_LENGTH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token comment\">// 安装或者卸载 HOOK</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>BOOL APIENTRY <span class=\"token function\">DllMain</span><span class=\"token punctuation\">(</span>HMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\tDWORD  ul_reason_for_call<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\tLPVOID lpReserved</pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ul_reason_for_call<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t<span class=\"token function\">setMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "INLINE-HOOK"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/IAT-HOOK/",
            "url": "https://or0kit.github.io/Bin/Win32/IAT-HOOK/",
            "title": "IAT-HOOK",
            "date_published": "2021-09-25T02:39:42.000Z",
            "content_html": "<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>首先要明白几个重要的点</p>\n<h2 id=\"iat表的填写\"><a class=\"anchor\" href=\"#iat表的填写\">#</a> IAT 表的填写</h2>\n<p>IAT 表和 INT 表都指向的是函数名称所在的位置，然后在运行的时候，IAT 表中的内容会被替换成对应函数的地址，在调用的时候使用间接 CALL ，来调用其中所储存的地址。</p>\n<p>那么操作系统又是根据什么来填写的？</p>\n<p>首先操作系统会通过 <code>Name</code>  字段找到当前导入表的名字，然后调用 <code>LoadLibrary</code>  得到句柄，如果没有找到的话会提示找不到 dll 文件，报错情况如下</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>接着会根据 <code>OriginalFirstThunk</code>  找名字， <code>OriginalFirstThunk</code>  所指向的也就是咱们前面所说的 INT 表，通过 INT 表中的 RVA 地址来找函数的名字。</p>\n<p>当然，这里也不一定存储的就是名字，也可能是导出序号，如果是导出序号的话，就会直接调用  <code>GetProcAddress</code>  得到函数地址，然后填写到  <code>FirstThunk</code>  所指向的对应位置，也就是 IAT 表中的对应位置。</p>\n<p>如果存储的是名字的话，也就是指向了 <code>_IMAGE_IMPORT_BY_NAME</code>  结构，跳过第一个的 <code>Hint</code>  字节，就得到了调用函数的名字，接着还是调用 <code>GetProcAddress</code>  得到函数地址，填写到对应的位置。</p>\n<p>如果 <code>GetProcAddress</code>  函数没有找到的话，会报如下的错误</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>前面一直在说，填写到对应的位置，是在说 INT 表和 IAT 表的对应关系，在 INT 表中处于第一项，对应的填写到 IAT 表的时候，也是填写到第一项的位置。</p>\n<h2 id=\"iat-hook的实现\"><a class=\"anchor\" href=\"#iat-hook的实现\">#</a> IAT HOOK 的实现</h2>\n<p><code>GetModuleHandle</code>  获取本模块基址 --&gt;&gt; 查找导入表 --&gt;&gt; 遍历 IAT 表 --&gt;&gt; 找到要 HOOK 的函数地址 --&gt;&gt; 修改其页属性 --&gt;&gt; 修改函数地址使其跳转 --&gt;&gt; 恢复 HOOK？</p>\n<h2 id=\"iat-hook的缺点\"><a class=\"anchor\" href=\"#iat-hook的缺点\">#</a> IAT HOOK 的缺点</h2>\n<ul>\n<li>容易被检测到</li>\n<li>只能 HOOK IAT 表里的函数</li>\n</ul>\n<h3 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h3>\n<p>首先我尝试了编写 ShellCode 实现 IAT HOOK…… 因为基础差，有很多地方都卡住了。代码也有问题…… 暂时先如此了。</p>\n<p>编写 HOOK 后执行的函数，以这个函数地址替换 IAT 表中 MessageBox 的地址，写成 ShellCode，并再编写一个函数，在这个函数要更改 IAT 表中 MessageBox 的地址，还要开辟一块内存，把 HOOK 后执行的函数的 ShellCode 写入这块内存中，用以替换 IAT 表中 MessageBox 的地址。</p>\n<ol>\n<li>首先要有一个 HOOK 后执行的函数，以这个函数地址替换 IAT 表中 MessageBox 的地址</li>\n</ol>\n<p>这个函数也要编写成 ShellCode</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//Unicode 结构体，这个结构体是在内核中的，在 3 环我们只能自己定义了</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LSA_UNICODE_STRING</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tUSHORT Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tUSHORT MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPWSTR Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span> UNICODE_STRING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_PEB_LDR_DATA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tDWORD\t\tLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tBYTE\t\tInitialized<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> SsHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tLIST_ENTRY\tInloadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tLIST_ENTRY\tInMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tLIST_ENTRY  InInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryInProgress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span>PEB_LDR_DATA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tLIST_ENTRY\t\tInloadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tLIST_ENTRY\t\tInMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tLIST_ENTRY\t\tInInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tDWORD\t\t\tSizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tUNICODE_STRING\tFullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tUNICODE_STRING\tBaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tDWORD\t\t\tFlags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tWORD\t\t\tLoadCout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tWORD\t\t\tTlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tLIST_ENTRY\t\tHashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tDWORD\t\t\tCheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tDWORD\t\t\tTimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> PathInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span>LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">// 定义函数指针类型</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">HMODULE</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PLOADLIBRARY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tLPCTSTR lpFileName</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">DWORD</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PGETPROCADDRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tHMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tLPCSTR lpProcName</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">HANDLE</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PCREATEFILEW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t__in     LPCWSTR lpFileName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t__in     DWORD dwDesiredAccess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t__in     DWORD dwShareMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t__in_opt LPSECURITY_ATTRIBUTES lpSecurityAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t__in     DWORD dwCreationDisposition<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t__in     DWORD dwFlagsAndAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t__in_opt HANDLE hTemplateFile</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">BOOL</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PWRITEFILE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t_In_ HANDLE hFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token function\">_In_reads_bytes_opt_</span><span class=\"token punctuation\">(</span>nNumberOfBytesToWrite<span class=\"token punctuation\">)</span> LPCVOID lpBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t_In_ DWORD nNumberOfBytesToWrite<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t_Out_opt_ LPDWORD lpNumberOfBytesWritten<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t_Inout_opt_ LPOVERLAPPED lpOverlapped</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>__stdcall<span class=\"token operator\">*</span> PSPRINTF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> _Buffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token keyword\">char</span> <span class=\"token keyword\">const</span><span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> _Format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ShellCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token comment\">// 声明变量，赋值</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tLDR_DATA_TABLE_ENTRY<span class=\"token operator\">*</span> pPLD <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pBeg <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\tPLOADLIBRARY pLoadLibraryW <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tPGETPROCADDRESS pGetProcAddress <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tPCREATEFILEW pCreateFileW <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tPWRITEFILE pWriteFile <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\tPSPRINTF pSprintf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\tWORD<span class=\"token operator\">*</span> pFirst <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pLast <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\tDWORD ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\tDWORD dwKernelBase <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//DOS 头 指针</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\tPIMAGE_NT_HEADERS pNtHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NT 头 指针</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\tPIMAGE_EXPORT_DIRECTORY pExportDirectory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 导出表 指针</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\tPDWORD  pExportAddress <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\tPDWORD pExportName <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\tPWORD pExportOrdinal <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token comment\">// 定义自己要使用的 DLL、函数</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\tWCHAR szKernel32<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'K'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token comment\">//4B 00 45 00 52 00 4E 00 45 00 4C 00 33 00 32 00 2E 00 44 00 4C 00 4C 00</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tWCHAR szUser32<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t<span class=\"token keyword\">char</span> szMSVCR100<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//MSVCR100.dll</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t<span class=\"token comment\">// 遍历导出表时用的索引</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\tDWORD dwCnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t<span class=\"token keyword\">char</span> szGetProcAddr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t<span class=\"token keyword\">char</span> szLoadLibraryW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token keyword\">char</span> szCreateFileW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t<span class=\"token keyword\">char</span> szWriteFile<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t<span class=\"token keyword\">char</span> szsprintf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token comment\">// 被 Hook 函数的参数</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\tHWND hWnd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\tLPCWSTR lpText<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\tLPCWSTR lpCaption<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\tUINT uType<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\tHANDLE hFile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token keyword\">char</span> Buffer<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token comment\">// 字符串  \"hWnd:% X,lpText:% ws,lpCaption:% ws,uType:%#010X\"</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token keyword\">char</span> Formatstr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\t<span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t\t<span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t<span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t\t<span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t<span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t<span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\tWCHAR FileName<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token comment\">// 用于实现 strlen () 函数</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token class-name\">size_t</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> sc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\tpush eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ebp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\tmov hWnd<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ebp <span class=\"token operator\">+</span> <span class=\"token number\">0xC</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\tmov lpText<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ebp <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\tmov lpCaption<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ebp <span class=\"token operator\">+</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\tmov uType<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\tpop eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t<span class=\"token comment\">// 获取链表 TEB->PEB->_PEB_LDR_DATA->_LDR_DATA_TABLE_ENTRY</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\tpush eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">//PEB</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax <span class=\"token operator\">+</span> <span class=\"token number\">0x0c</span><span class=\"token punctuation\">]</span>\t<span class=\"token comment\">//PEB->Ldr</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\tadd eax<span class=\"token punctuation\">,</span> <span class=\"token number\">0x0c</span>\t\t\t<span class=\"token comment\">//_PEB_LDR_DATA->InLoadOrderModuleList</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\tmov pBeg<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\tmov pPLD<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\tpop eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t<span class=\"token comment\">// 遍历找到 Kernel32.dll</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t<span class=\"token comment\">// 自己实现字符串比较，因为是 UNICODE 类型，所以一次比较两个字节。</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\tpFirst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>szKernel32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\tpLast <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>BaseDllName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>pFirst <span class=\"token operator\">==</span> <span class=\"token operator\">*</span>pLast<span class=\"token punctuation\">;</span> pLast<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> pFirst<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFirst <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t\t\t\tdwKernelBase <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t\tpPLD <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LDR_DATA_TABLE_ENTRY<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>InloadOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pPLD <span class=\"token operator\">!=</span> pBeg<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>dwKernelBase <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t<span class=\"token comment\">// 遍历 Kernel32.dll 的导出表 找到 GetProcAddress</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\tpNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\tpExportDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_EXPORT_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pNtHeader<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>DataDirectory<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t<span class=\"token comment\">// 导出函数地址表地址</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\tpExportAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfFunctions <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t<span class=\"token comment\">// 导出函数名称表地址</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\tpExportName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfNames <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t<span class=\"token comment\">// 导出函数序号表地址</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\tpExportOrdinal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfNameOrdinals <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre></pre></td></tr><tr><td data-num=\"210\"></td><td><pre></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t<span class=\"token comment\">// 由函数名查找函数地址</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pFinded <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pszGetProcAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t\tpszGetProcAddr <span class=\"token operator\">=</span> szGetProcAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\tpFinded <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pExportName<span class=\"token punctuation\">[</span>dwCnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>pFinded <span class=\"token operator\">==</span> <span class=\"token operator\">*</span>pszGetProcAddr<span class=\"token punctuation\">;</span> pFinded<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> pszGetProcAddr<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pszGetProcAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t\t\t\tpGetProcAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PGETPROCADDRESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pExportAddress<span class=\"token punctuation\">[</span>pExportOrdinal<span class=\"token punctuation\">[</span>dwCnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>\t\tdwCnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dwCnt <span class=\"token operator\">&lt;</span> pExportDirectory<span class=\"token operator\">-></span>NumberOfNames<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>pGetProcAddress <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>\t<span class=\"token comment\">// 有了 GetProcAddress 就可以得到任何 API 函数了</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"231\"></td><td><pre>\tpLoadLibraryW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLOADLIBRARY<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szLoadLibraryW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"233\"></td><td><pre>\tpCreateFileW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PCREATEFILEW<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szCreateFileW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>\tpWriteFile <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWRITEFILE<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szWriteFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>\tpSprintf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PSPRINTF<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span><span class=\"token function\">pLoadLibraryW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span>szMSVCR100<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> szsprintf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"237\"></td><td><pre>\t<span class=\"token function\">pSprintf</span><span class=\"token punctuation\">(</span>Buffer<span class=\"token punctuation\">,</span> Formatstr<span class=\"token punctuation\">,</span> hWnd<span class=\"token punctuation\">,</span> lpText<span class=\"token punctuation\">,</span> lpCaption<span class=\"token punctuation\">,</span> uType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>\thFile <span class=\"token operator\">=</span> <span class=\"token function\">pCreateFileW</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>\t\tFileName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>\t\tGENERIC_READ <span class=\"token operator\">|</span> GENERIC_WRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>\t\tOPEN_ALWAYS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>\t\tFILE_ATTRIBUTE_NORMAL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre></pre></td></tr><tr><td data-num=\"249\"></td><td><pre></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>sc <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>sc <span class=\"token operator\">!=</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>sc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>\tn <span class=\"token operator\">=</span> sc <span class=\"token operator\">-</span> Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>\t<span class=\"token function\">pWriteFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>\t\thFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>\t\tBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>\t\tn<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre></pre></td></tr><tr><td data-num=\"261\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre></pre></td></tr><tr><td data-num=\"263\"></td><td><pre></pre></td></tr><tr><td data-num=\"264\"></td><td><pre></pre></td></tr><tr><td data-num=\"265\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Or0kit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>\t<span class=\"token function\">ShellCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这个函数执行的功能为在工作目录下创建一个 <code>1.txt</code>  文件并向里面写入一句话，即打印 MessageBox 的参数。</p>\n<hr />\n<hr />\n<p>接下来编写实现 IAT HOOK 的主要程序，也是编写成 ShellCode。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//Unicode 结构体，这个结构体是在内核中的，在 3 环我们只能自己定义了</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LSA_UNICODE_STRING</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tUSHORT Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tUSHORT MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPWSTR Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span> UNICODE_STRING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_PEB_LDR_DATA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tDWORD\t\tLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tBYTE\t\tInitialized<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> SsHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tLIST_ENTRY\tInloadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tLIST_ENTRY\tInMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tLIST_ENTRY  InInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryInProgress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span>PEB_LDR_DATA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tLIST_ENTRY\t\tInloadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tLIST_ENTRY\t\tInMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tLIST_ENTRY\t\tInInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tDWORD\t\t\tSizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tUNICODE_STRING\tFullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tUNICODE_STRING\tBaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tDWORD\t\t\tFlags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tWORD\t\t\tLoadCout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tWORD\t\t\tTlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tLIST_ENTRY\t\tHashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tDWORD\t\t\tCheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tDWORD\t\t\tTimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> PathInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span>LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">// 定义函数指针类型</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">HMODULE</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PLOADLIBRARYW<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tLPCTSTR lpFileName</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">DWORD</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PGETPROCADDRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tHMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tLPCSTR lpProcName</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PMESSAGEBOXW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tHWND hWnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tLPCTSTR lpText<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tLPCTSTR lpCaption<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tUINT uType</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">HMODULE</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PGETMODULEHANDLEW<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tLPCTSTR lpFileName</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">BOOL</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PVIRTUALPROTECT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t_In_  LPVOID lpAddress<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t_In_  SIZE_T dwSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t_In_  DWORD flNewProtect<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t_Out_ PDWORD lpflOldProtect</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">LPVOID</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PVIRTUALALLOC<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t_In_opt_ LPVOID lpAddress<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t_In_     SIZE_T dwSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t_In_     DWORD flAllocationType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t_In_     DWORD flProtect</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">HANDLE</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PGETCURRENTPROCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\tVOID</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">BOOL</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PWRITEPROCESSMEMORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tHANDLE hProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tLPVOID lpBaseAddress<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tLPCVOID lpBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\tSIZE_T nSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\tSIZE_T<span class=\"token operator\">*</span> lpNumberOfBytesWritten</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ShellCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token comment\">// 声明变量，赋值</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\tLDR_DATA_TABLE_ENTRY<span class=\"token operator\">*</span> pPLD <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pBeg <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\tPLOADLIBRARYW pLoadLibraryW <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\tPGETPROCADDRESS pGetProcAddress <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\tPMESSAGEBOXW pMessageBoxW <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\tWORD<span class=\"token operator\">*</span> pFirst <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pLast <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\tDWORD ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\tDWORD dwKernelBase <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//DOS 头 指针</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tPIMAGE_NT_HEADERS pNtHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NT 头 指针</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\tPIMAGE_EXPORT_DIRECTORY pExportDirectory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 导出表 指针</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\tPDWORD  pExportAddress <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\tPDWORD pExportName <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\tPWORD pExportOrdinal <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token comment\">// 自己实现比较字符串</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pFinded <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pszGetProcAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t<span class=\"token comment\">// 定义自己要使用的 DLL、函数</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\tWCHAR szKernel32<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'K'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t<span class=\"token comment\">//4B 00 45 00 52 00 4E 00 45 00 4C 00 33 00 32 00 2E 00 44 00 4C 00 4C 00</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\tWCHAR szUser32<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t<span class=\"token comment\">// 遍历导出表时用的索引</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\tDWORD dwCnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token keyword\">char</span> szGetProcAddr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token keyword\">char</span> szLoadLibraryW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token keyword\">char</span> szMessageBoxW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token comment\">//IAT HOOK</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\tHMODULE hModule <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 本模块的基址 ImageBase</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\tPIMAGE_IMPORT_DESCRIPTOR pImportDirectory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 导入表</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token keyword\">char</span> szGetModuleHandleW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'u'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'H'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t<span class=\"token keyword\">char</span> szVirtualProtect<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'u'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t<span class=\"token keyword\">char</span> szVirtualAlloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'u'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token keyword\">char</span> szGetCurrentProcess<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'u'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token keyword\">char</span> szWriteProcessMemory<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token comment\">//WriteProcessMemory</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\tPGETMODULEHANDLEW pGetModuleHandleW <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\tPVIRTUALPROTECT pVirtualProtect <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\tPVIRTUALALLOC pVirtualAlloc <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\tPGETCURRENTPROCESS pGetCurrentProcess <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\tPWRITEPROCESSMEMORY pWriteProcessMemory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\tPIMAGE_THUNK_DATA pIAT <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 存储之前的页属性</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\tLPVOID HookFunc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token comment\">//------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token comment\">// Size    : 1979 (0x7BB)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token comment\">//------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> HookFuncBuffer<span class=\"token punctuation\">[</span><span class=\"token number\">1979</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>        <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>        <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>        <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>        <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>        <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>        <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>        <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>        <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>        <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>        <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>        <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>        <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>        <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>        <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>        <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>        <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>        <span class=\"token number\">0xCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>        <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>        <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>        <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>        <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>        <span class=\"token number\">0x9D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>        <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>        <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>        <span class=\"token number\">0xA3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>        <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>        <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>        <span class=\"token number\">0xAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>        <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>        <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>        <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>        <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>        <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>        <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>        <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>        <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>        <span class=\"token number\">0xBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>        <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>        <span class=\"token number\">0xC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>        <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>        <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>        <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>        <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>        <span class=\"token number\">0xCD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>        <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>        <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>        <span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>        <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>        <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>        <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>        <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>        <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>        <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>        <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>        <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>        <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>        <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>        <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>        <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>        <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>        <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>        <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>        <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>        <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>        <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>        <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>        <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>        <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>        <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>        <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>        <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>        <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>        <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>        <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>        <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>        <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>        <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>        <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>        <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>        <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>        <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>        <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>        <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>        <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>        <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>        <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>        <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>        <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>        <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>        <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>        <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>        <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>        <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>        <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>        <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>        <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>        <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>        <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>        <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>        <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>        <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>        <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>        <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>        <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>        <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>        <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>        <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>        <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>        <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>        <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>        <span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>        <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>        <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>        <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>        <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>        <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>        <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>        <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>        <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>        <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>        <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>        <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>        <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre>        <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>        <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>        <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>        <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>        <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>        <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>        <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre>        <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>        <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>        <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>        <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>        <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>        <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>        <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>        <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>        <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>        <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>        <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>        <span class=\"token number\">0xE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre></pre></td></tr><tr><td data-num=\"414\"></td><td><pre></pre></td></tr><tr><td data-num=\"415\"></td><td><pre></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>\t\t<span class=\"token comment\">// 获取链表 TEB->PEB->_PEB_LDR_DATA->_LDR_DATA_TABLE_ENTRY</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">]</span>\t\t<span class=\"token comment\">//PEB</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax <span class=\"token operator\">+</span> <span class=\"token number\">0x0c</span><span class=\"token punctuation\">]</span>\t<span class=\"token comment\">//PEB->Ldr</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>\t\tadd eax<span class=\"token punctuation\">,</span> <span class=\"token number\">0x0c</span>\t\t\t<span class=\"token comment\">//_PEB_LDR_DATA->InLoadOrderModuleList</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>\t\tmov pBeg<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"423\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>\t\tmov pPLD<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"425\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>\t<span class=\"token comment\">// 遍历找到 Kernel32.dll</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>\t<span class=\"token comment\">// 自己实现字符串比较，因为是 UNICODE 类型，所以一次比较两个字节。</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre>\tpFirst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>szKernel32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>\t\tpLast <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>BaseDllName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>pFirst <span class=\"token operator\">==</span> <span class=\"token operator\">*</span>pLast<span class=\"token punctuation\">;</span> pLast<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> pFirst<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFirst <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>\t\t\t\tdwKernelBase <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>\t\tpPLD <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LDR_DATA_TABLE_ENTRY<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>InloadOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pPLD <span class=\"token operator\">!=</span> pBeg<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>dwKernelBase <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre></pre></td></tr><tr><td data-num=\"444\"></td><td><pre>\t<span class=\"token comment\">// 遍历 Kernel32.dll 的导出表 找到 GetProcAddress</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>\tpNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>\tpExportDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_EXPORT_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pNtHeader<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>DataDirectory<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>\t<span class=\"token comment\">// 导出函数地址表地址</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>\tpExportAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfFunctions <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>\t<span class=\"token comment\">// 导出函数名称表地址</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>\tpExportName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfNames <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>\t<span class=\"token comment\">// 导出函数序号表地址</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>\tpExportOrdinal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfNameOrdinals <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre></pre></td></tr><tr><td data-num=\"456\"></td><td><pre></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>\t<span class=\"token comment\">// 由函数名查找函数地址</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre></pre></td></tr><tr><td data-num=\"459\"></td><td><pre></pre></td></tr><tr><td data-num=\"460\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>\t\tpszGetProcAddr <span class=\"token operator\">=</span> szGetProcAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre>\t\tpFinded <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pExportName<span class=\"token punctuation\">[</span>dwCnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"464\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>pFinded <span class=\"token operator\">==</span> <span class=\"token operator\">*</span>pszGetProcAddr<span class=\"token punctuation\">;</span> pFinded<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> pszGetProcAddr<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pszGetProcAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre>\t\t\t\tpGetProcAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PGETPROCADDRESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pExportAddress<span class=\"token punctuation\">[</span>pExportOrdinal<span class=\"token punctuation\">[</span>dwCnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"470\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"471\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>\t\tdwCnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dwCnt <span class=\"token operator\">&lt;</span> pExportDirectory<span class=\"token operator\">-></span>NumberOfNames<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>pGetProcAddress <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre></pre></td></tr><tr><td data-num=\"475\"></td><td><pre>\t<span class=\"token comment\">// 有了 GetProcAddress 就可以得到任何 API 函数了</span></pre></td></tr><tr><td data-num=\"476\"></td><td><pre></pre></td></tr><tr><td data-num=\"477\"></td><td><pre>\t<span class=\"token comment\">// 获取将要使用的函数</span></pre></td></tr><tr><td data-num=\"478\"></td><td><pre>\tpLoadLibraryW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLOADLIBRARYW<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szLoadLibraryW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"479\"></td><td><pre>\tpGetModuleHandleW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PGETMODULEHANDLEW<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szGetModuleHandleW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"480\"></td><td><pre>\tpMessageBoxW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PMESSAGEBOXW<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">pLoadLibraryW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span>szUser32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> szMessageBoxW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"481\"></td><td><pre>\tpVirtualProtect <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PVIRTUALPROTECT<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szVirtualProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"482\"></td><td><pre>\tpVirtualAlloc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PVIRTUALALLOC<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szVirtualAlloc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"483\"></td><td><pre>\t<span class=\"token comment\">//pCopyMemory = (PCOPYMEMORY)pGetProcAddress((HMODULE)dwKernelBase, szCopyMemory);</span></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>\tpGetCurrentProcess <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PGETCURRENTPROCESS<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szGetCurrentProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>\tpWriteProcessMemory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWRITEPROCESSMEMORY<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szWriteProcessMemory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre></pre></td></tr><tr><td data-num=\"487\"></td><td><pre>\t<span class=\"token comment\">// 开辟一块内存用来存放实现 HOOK 功能的函数</span></pre></td></tr><tr><td data-num=\"488\"></td><td><pre>\tHookFunc <span class=\"token operator\">=</span> <span class=\"token function\">pVirtualAlloc</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">,</span> MEM_COMMIT<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>\t<span class=\"token comment\">//pCopyMemory(HookFunc, HookFuncBuffer, 0x7b9);</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre>\tHANDLE hHandle <span class=\"token operator\">=</span> <span class=\"token function\">pGetCurrentProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>\t<span class=\"token function\">pWriteProcessMemory</span><span class=\"token punctuation\">(</span>hHandle<span class=\"token punctuation\">,</span> HookFunc<span class=\"token punctuation\">,</span> HookFuncBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>HookFuncBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>\t<span class=\"token comment\">// 实现 IAT HOOK</span></pre></td></tr><tr><td data-num=\"494\"></td><td><pre></pre></td></tr><tr><td data-num=\"495\"></td><td><pre>\t<span class=\"token comment\">//1. 获取模块基址</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre>\thModule <span class=\"token operator\">=</span> <span class=\"token function\">pGetModuleHandleW</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre>\t<span class=\"token comment\">//2. 获取导入表</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>hModule<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>\tpNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>LONG<span class=\"token punctuation\">)</span>hModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre>\tpImportDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pNtHeader<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_IMPORT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>hModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"501\"></td><td><pre></pre></td></tr><tr><td data-num=\"502\"></td><td><pre></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>\t<span class=\"token comment\">//3. 遍历 IAT 表</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>pNtHeader<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_IMPORT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Size <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"505\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre>\t\tpIAT <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_THUNK_DATA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pImportDirectory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>FirstThunk <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>hModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pIAT<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pIAT<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pMessageBoxW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"511\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"512\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 找到被 HOOK 的函数后，修改页属性</span></pre></td></tr><tr><td data-num=\"513\"></td><td><pre>\t\t\t\t<span class=\"token function\">pVirtualProtect</span><span class=\"token punctuation\">(</span>pIAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> PAGE_READWRITE<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre>\t\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pIAT<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> HookFunc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre>\t\t\t\t<span class=\"token function\">pVirtualProtect</span><span class=\"token punctuation\">(</span>pIAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"516\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"517\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre>\t\t\tpIAT<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"519\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"520\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"521\"></td><td><pre></pre></td></tr><tr><td data-num=\"522\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre></pre></td></tr><tr><td data-num=\"524\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Or0kit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre></pre></td></tr><tr><td data-num=\"526\"></td><td><pre>\t<span class=\"token function\">ShellCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre></pre></td></tr><tr><td data-num=\"528\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来就要注入到进程中了。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p>IAT HOOK 的实现：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTAxMDg3L2FydGljbGUvZGV0YWlscy8xMDczMTE0NTc=\">https://blog.csdn.net/qq_18501087/article/details/107311457</span></p>\n",
            "tags": [
                "IAT HOOK",
                "编写ShellCode实现IAT HOOK"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E6%B3%A8%E5%85%A5ShellCode/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E6%B3%A8%E5%85%A5ShellCode/",
            "title": "Win注入ShellCode",
            "date_published": "2021-07-20T13:02:23.000Z",
            "content_html": "<h1 id=\"shellcode\"><a class=\"anchor\" href=\"#shellcode\">#</a> ShellCode</h1>\n<h2 id=\"什么是shellcode\"><a class=\"anchor\" href=\"#什么是shellcode\">#</a> 什么是 ShellCode</h2>\n<p>其实在注入代码中就已经用到了。</p>\n<p>ShellCode 就是一段不依赖环境，放到任何地方都可以执行的机器码。</p>\n<h2 id=\"shellcode编写原则\"><a class=\"anchor\" href=\"#shellcode编写原则\">#</a> ShellCode 编写原则</h2>\n<ol>\n<li>\n<p>不能有全局变量</p>\n</li>\n<li>\n<p>不能使用常量字符串</p>\n</li>\n<li>\n<p>不能使用系统调用</p>\n</li>\n<li>\n<p>不能嵌套调用其他函数</p>\n</li>\n</ol>\n<p>如果按照这个规则写出的代码，那么代码的硬编码放到那里都能执行。</p>\n<h2 id=\"shellcode编写\"><a class=\"anchor\" href=\"#shellcode编写\">#</a> ShellCode 编写</h2>\n<p>要编写 ShellCode 就要想办法绕过 ShellCode 原则。</p>\n<h3 id=\"写代码可以不用全局变量这个不是问题\"><a class=\"anchor\" href=\"#写代码可以不用全局变量这个不是问题\">#</a> 写代码可以不用全局变量，这个不是问题。</h3>\n<h3 id=\"不使用常量字符串\"><a class=\"anchor\" href=\"#不使用常量字符串\">#</a> 不使用常量字符串。</h3>\n<p>字符串的写法，示例：</p>\n<pre><code>char s[] = &quot;hello&quot;;\n000C433B A1 30 7B 0C 00       mov         eax,dword ptr ds:[000C7B30h]  \n000C4340 89 45 F4             mov         dword ptr [ebp-0Ch],eax  \n000C4343 66 8B 0D 34 7B 0C 00 mov         cx,word ptr ds:[000C7B34h]  \n000C434A 66 89 4D F8          mov         word ptr [ebp-8],cx  \n\nchar l[] = &#123; &quot;hello&quot; &#125;;\n000C434E A1 30 7B 0C 00       mov         eax,dword ptr ds:[000C7B30h]  \n000C4353 89 45 E4             mov         dword ptr [ebp-1Ch],eax  \n000C4356 66 8B 0D 34 7B 0C 00 mov         cx,word ptr ds:[000C7B34h]  \n000C435D 66 89 4D E8          mov         word ptr [ebp-18h],cx  \n\nchar p[] = &#123; 'h','e','l','l','o','\\0' &#125;;//注意字符串以0x0结尾\n000C4361 C6 45 D4 68          mov         byte ptr [ebp-2Ch],68h  \n000C4365 C6 45 D5 65          mov         byte ptr [ebp-2Bh],65h  \n000C4369 C6 45 D6 6C          mov         byte ptr [ebp-2Ah],6Ch  \n000C436D C6 45 D7 6C          mov         byte ptr [ebp-29h],6Ch  \n000C4371 C6 45 D8 6F          mov         byte ptr [ebp-28h],6Fh  \n000C4375 C6 45 D9 00          mov         byte ptr [ebp-27h],0  \n\n</code></pre>\n<p>在反汇编中可以看到，只有最后一种是存在堆栈中，不依赖其他，在任何地方都可以用。</p>\n<h3 id=\"调用系统api\"><a class=\"anchor\" href=\"#调用系统api\">#</a> 调用系统 API</h3>\n<p>为什么不能直接写呢？</p>\n<p>因为 API 函数在 dll 文件中，是依赖 PE 的导入表的。</p>\n<p>动态获取所需系统 API 地址；shellcode 的很多操作涉及系统底层，必然调用 windows 的 API。正常情况下，windows 针对 3 环用户态程序提供 LoadLibrary 加载 dll，返回 dll 的基址。然后通过 GetProcAddress 从 dll 种获取函数基址；但这两个函数本身也是 windwos 的 API，其地址依然需要动态获取，该怎么做了？</p>\n<ul>\n<li>动态获取 LoadLibraryW 的地址</li>\n</ul>\n<p>先获得 <code>GetProcAdress</code>  函数地址后就可以获得任意地址了。</p>\n<p>还记得 PEB 吗？</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><code>HMODULE hModule = LoadLibrary(&quot;user32.dll&quot;)</code>  得到的这个 <code>hModule</code>  的值就是 <code>DllBase</code></p>\n<p>没错就是利用这个。先找 kernel32.dll，找到 dll 后查找其中函数的地址，这要利用 PE 导出表的知识了。</p>\n<h2 id=\"代码如下\"><a class=\"anchor\" href=\"#代码如下\">#</a> 代码如下</h2>\n<blockquote>\n<p>运行环境：win10 + VS2019</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//Unicode 结构体，这个结构体是在内核中的，在 3 环我们只能自己定义了</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LSA_UNICODE_STRING</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tUSHORT Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tUSHORT MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPWSTR Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span> UNICODE_STRING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_PEB_LDR_DATA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tDWORD\t\tLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tBYTE\t\tInitialized<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> SsHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tLIST_ENTRY\tInloadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tLIST_ENTRY\tInMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tLIST_ENTRY  InInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryInProgress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span>PEB_LDR_DATA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tLIST_ENTRY\t\tInloadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tLIST_ENTRY\t\tInMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tLIST_ENTRY\t\tInInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tDWORD\t\t\tSizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tUNICODE_STRING\tFullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tUNICODE_STRING\tBaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tDWORD\t\t\tFlags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tWORD\t\t\tLoadCout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tWORD\t\t\tTlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tLIST_ENTRY\t\tHashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tDWORD\t\t\tCheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tDWORD\t\t\tTimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tVOID<span class=\"token operator\">*</span> PathInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span>LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">// 定义函数指针类型</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">HMODULE</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PLOADLIBRARY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tLPCTSTR lpFileName</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">DWORD</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PGETPROCADDRESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tHMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tLPCSTR lpProcName</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> PMESSAGEBOX<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tHWND hWnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tLPCTSTR lpText<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tLPCTSTR lpCaption<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tUINT uType</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ShellCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token comment\">// 声明变量，赋值</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tLDR_DATA_TABLE_ENTRY<span class=\"token operator\">*</span> pPLD <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pBeg <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tPLOADLIBRARY pLoadLibraryW <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tPGETPROCADDRESS pGetProcAddress <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tPMESSAGEBOX pMessageBoxW <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tWORD<span class=\"token operator\">*</span> pFirst <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pLast <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tDWORD ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tDWORD dwKernelBase <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//DOS 头 指针</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\tPIMAGE_NT_HEADERS pNtHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NT 头 指针</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\tPIMAGE_EXPORT_DIRECTORY pExportDirectory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 导出表 指针</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\tPDWORD  pExportAddress <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\tPDWORD pExportName <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tPWORD pExportOrdinal <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token comment\">// 定义自己要使用的 DLL、函数</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tWCHAR szKernel32<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'K'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token comment\">//4B 00 45 00 52 00 4E 00 45 00 4C 00 33 00 32 00 2E 00 44 00 4C 00 4C 00</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\tWCHAR szUser32<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token comment\">// 遍历导出表时用的索引</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\tDWORD dwCnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token keyword\">char</span> szGetProcAddr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token keyword\">char</span> szLoadLibraryW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token keyword\">char</span> szMessageBoxW<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t<span class=\"token comment\">// 使用函数的参数</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\tWCHAR szTitle<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\tWCHAR szContent<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token comment\">// 获取链表 TEB->PEB->_PEB_LDR_DATA->_LDR_DATA_TABLE_ENTRY</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">]</span>\t<span class=\"token comment\">//PEB</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax <span class=\"token operator\">+</span> <span class=\"token number\">0x0c</span><span class=\"token punctuation\">]</span>\t<span class=\"token comment\">//PEB->Ldr</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\tadd eax<span class=\"token punctuation\">,</span> <span class=\"token number\">0x0c</span>\t\t<span class=\"token comment\">//_PEB_LDR_DATA->InLoadOrderModuleList</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\tmov pBeg<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\tmov pPLD<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t<span class=\"token comment\">// 遍历找到 Kernel32.dll</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token comment\">// 自己实现字符串比较，因为是 UNICODE 类型，所以一次比较两个字节。</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\tpFirst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>szKernel32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\tpLast <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>BaseDllName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>pFirst <span class=\"token operator\">==</span> <span class=\"token operator\">*</span>pLast<span class=\"token punctuation\">;</span> pLast<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> pFirst<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFirst <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t\tdwKernelBase <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\tpPLD <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LDR_DATA_TABLE_ENTRY<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pPLD<span class=\"token operator\">-></span>InloadOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pPLD <span class=\"token operator\">!=</span> pBeg<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>dwKernelBase <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token comment\">// 遍历 Kernel32.dll 的导出表 找到 GetProcAddress</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\tpNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\tpExportDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_EXPORT_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pNtHeader<span class=\"token operator\">-></span>OptionalHeader<span class=\"token punctuation\">.</span>DataDirectory<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token comment\">// 导出函数地址表地址</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\tpExportAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfFunctions <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t<span class=\"token comment\">// 导出函数名称表地址</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\tpExportName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfNames <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token comment\">// 导出函数序号表地址</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\tpExportOrdinal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pExportDirectory<span class=\"token operator\">-></span>AddressOfNameOrdinals <span class=\"token operator\">+</span> dwKernelBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t<span class=\"token comment\">// 由函数名查找函数地址</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pFinded <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> pszGetProcAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\tpszGetProcAddr <span class=\"token operator\">=</span> szGetProcAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\tpFinded <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pExportName<span class=\"token punctuation\">[</span>dwCnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>pFinded <span class=\"token operator\">==</span> <span class=\"token operator\">*</span>pszGetProcAddr<span class=\"token punctuation\">;</span> pFinded<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> pszGetProcAddr<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pszGetProcAddr <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t\t\tpGetProcAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PGETPROCADDRESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwKernelBase <span class=\"token operator\">+</span> pExportAddress<span class=\"token punctuation\">[</span>pExportOrdinal<span class=\"token punctuation\">[</span>dwCnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\tdwCnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dwCnt <span class=\"token operator\">&lt;</span> pExportDirectory<span class=\"token operator\">-></span>NumberOfNames<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>pGetProcAddress <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t<span class=\"token comment\">// 有了 GetProcAddress 就可以得到任何 API 函数了</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\tpLoadLibraryW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLOADLIBRARY<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>dwKernelBase<span class=\"token punctuation\">,</span> szLoadLibraryW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\tpMessageBoxW <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PMESSAGEBOX<span class=\"token punctuation\">)</span><span class=\"token function\">pGetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">pLoadLibraryW</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span>szUser32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> szMessageBoxW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t<span class=\"token comment\">// 调用函数</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t<span class=\"token function\">pMessageBoxW</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span>szContent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span>szTitle<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t<span class=\"token function\">ShellCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"把shellcode注入到其他进程中\"><a class=\"anchor\" href=\"#把shellcode注入到其他进程中\">#</a> 把 ShellCode 注入到其他进程中</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_CRT_SECURE_NO_WARNINGS</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> hexData<span class=\"token punctuation\">[</span><span class=\"token number\">0x508</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token number\">0xB3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token number\">0xD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token number\">0xDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre></pre></td></tr><tr><td data-num=\"172\"></td><td><pre><span class=\"token comment\">// 提权函数：提升为 DEBUG 权限</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>BOOL <span class=\"token function\">EnableDebugPrivilege</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\tHANDLE hToken<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\tBOOL fOk <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OpenProcessToken</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCurrentProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TOKEN_ADJUST_PRIVILEGES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\tTOKEN_PRIVILEGES tp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\ttp<span class=\"token punctuation\">.</span>PrivilegeCount <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t<span class=\"token function\">LookupPrivilegeValue</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> SE_DEBUG_NAME<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tp<span class=\"token punctuation\">.</span>Privileges<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Luid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\ttp<span class=\"token punctuation\">.</span>Privileges<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Attributes <span class=\"token operator\">=</span> SE_PRIVILEGE_ENABLED<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t\t<span class=\"token function\">AdjustTokenPrivileges</span><span class=\"token punctuation\">(</span>hToken<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>tp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\tfOk <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ERROR_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t<span class=\"token keyword\">return</span> fOk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre></pre></td></tr><tr><td data-num=\"192\"></td><td><pre></pre></td></tr><tr><td data-num=\"193\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\tDWORD dwWritten<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\tDWORD pid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>    <span class=\"token function\">EnableDebugPrivilege</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要注入的进程PID: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\tHANDLE hProcess <span class=\"token operator\">=</span> <span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_ALL_ACCESS<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\tPVOID pAddr <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAllocEx</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">,</span> MEM_COMMIT <span class=\"token operator\">|</span> MEM_RESERVE<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t<span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> pAddr<span class=\"token punctuation\">,</span> hexData<span class=\"token punctuation\">,</span> <span class=\"token number\">0x508</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwWritten<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t<span class=\"token function\">CreateRemoteThread</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pAddr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"注意事项\"><a class=\"anchor\" href=\"#注意事项\">#</a> 注意事项</h2>\n<p>关闭 C/C++ 常规 支持仅我的代码调试 / JMC</p>\n<p>这玩意开了的话会在代码里加一些栈溢出校验函数，这些函数会在我们修复重定位 IAT 之前使用错误的地址，所以必须关掉。</p>\n<p>同理，也要把 / GS 运行时安全检查关掉，这个选项也会加入一些校验函数。这个选项在 debug 模式下没有影响，release 下就会运行时崩溃。</p>\n<p>总结一下就是，我们要把所有编译器链接器可能自己添加代码的功能尽可能关掉，不然它们在修复工作开始前就调用，就会出错。</p>\n<p>下面给出编写 shellcode 的典型配置，出自《Rootkit 系统灰色地带的潜伏者 原书第 2 版》</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"shellcode环境的基础配置\"><a class=\"anchor\" href=\"#shellcode环境的基础配置\">#</a> ShellCode 环境的基础配置</h1>\n<ol>\n<li>修改成编译选项</li>\n</ol>\n<p>创建一个空项目，只写一个空的 main 函数</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>DeBug 模式下编译，大小如下：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>改成 Release 模式编译</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>大小如下：</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>更改函数入口</li>\n</ol>\n<p>方法：</p>\n<p>工程 &gt; 属性 &gt; 配置属性 &gt; 链接器 &gt; 高级 &gt; 入口点 的选项处输入自定义的名字，我这里改成 <code>Or0kit</code>  同样的，在编写的代码中也要将 main 改成 Or0kit</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>结果：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>关闭缓冲区安全检查</li>\n</ol>\n<p>方法：</p>\n<p>工程 &gt; 属性 &gt; 配置属性 &gt; C/C++&gt; 代码生成将 “缓冲区安全检查” 禁用</p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<p>结果：</p>\n<p><img data-src=\"image010.png\" alt=\"\" /></p>\n<ol start=\"4\">\n<li>设置工程兼容 Windows XP</li>\n</ol>\n<p>方法：</p>\n<p><img data-src=\"image011.png\" alt=\"\" /></p>\n<p>结果：</p>\n<p><img data-src=\"image012.png\" alt=\"\" /></p>\n<ol start=\"5\">\n<li>关闭生成清单</li>\n</ol>\n<p>使用 peid 命令查看生成的 exe 文件的 EP 段，发现有三个数据段.text，.rsrc 以及.rdata，我们只需要留下.text 数据段</p>\n<p>目的：去除.rsrc 数据段<br />\n方法：在 工程 &gt; 属性 &gt; 配置属性 &gt; 链接器 &gt; 清单文件将 “生成清单选项” 关掉</p>\n<p><img data-src=\"image013.png\" alt=\"\" /></p>\n<p>结果：</p>\n<p><img data-src=\"image014.png\" alt=\"\" /></p>\n<ol start=\"6\">\n<li>关闭调试信息<br />\n目的：去除.rdata 数据段<br />\n方法：在 工程 &gt; 属性 &gt; 配置属性 &gt; 链接器 &gt; 调试将 “生成调试信息” 关掉</li>\n</ol>\n<p><img data-src=\"image015.png\" alt=\"\" /></p>\n<p>结果：</p>\n<p><img data-src=\"image016.png\" alt=\"\" /></p>\n<p>这个我用 vs2019 没有成功去除.rdata 数据段</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY5ODI3My9hcnRpY2xlL2RldGFpbHMvMTAzODQzODY3\">https://blog.csdn.net/weixin_43698273/article/details/103843867</span> 这篇文章的博主成功了，最后文件只有 1kB。</p>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY5ODI3My9hcnRpY2xlL2RldGFpbHMvMTAzODQzODY3\">https://blog.csdn.net/weixin_43698273/article/details/103843867</span></p>\n",
            "tags": [
                "ShellCode原则"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E6%97%A0%E6%A8%A1%E5%9D%97%E6%B3%A8%E5%85%A5%E4%BB%A3%E7%A0%81/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E6%97%A0%E6%A8%A1%E5%9D%97%E6%B3%A8%E5%85%A5%E4%BB%A3%E7%A0%81/",
            "title": "Win无模块注入代码",
            "date_published": "2021-07-20T12:52:47.000Z",
            "content_html": "<h1 id=\"代码注入\"><a class=\"anchor\" href=\"#代码注入\">#</a> 代码注入</h1>\n<p>把自己想要使用的函数复制到目标进程中。</p>\n<p><strong>复制代码的编写原则：</strong></p>\n<blockquote>\n<p>不能有全局变量<br />\n不能使用常量字符串<br />\n不能使用系统调用<br />\n不能嵌套调用其他函数</p>\n</blockquote>\n<p>这些都是可以解决的。</p>\n<p><strong>以创建一个文件举例</strong></p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>以上图举例</p>\n<p>我在代码进程中创建一个函数，这个函数实现的功能是创建一个文件。</p>\n<p>这个函数的格式一定要遵守线程函数的格式，既一个四个字节的参数一个返回值。<br />\n写完这个函数后就可以直接把这个函数复制到目标进程中去，把复制后函数的地址，赋给 <code>CreateRemoteThread</code> ，这样就解决了创建远程线程后线程函数的问题，并且这个线程函数是在我的代码进程中写的，这样就可以按照我自己的要求来写。</p>\n<p>可这个函数如果要创建一个文件的话，必须要用到 <code>CreateFile</code>  这个系统函数，可我们不能直接这样写，因为调用者个函数依赖的是进程本身的导入表，复制到目标进程后，目标进程的导入表跟当前进程的导入表是不一样的。</p>\n<p>因为远程线程函数能够接受参数，那我单独在分配一块内存，比如说我这块内存是一个结构体，我把所有用到的参数都赋好值，然后复制到目标进程，并且把结构体在目标进程中的地址传给远程线程参数，这样就解决了远程线程函数参数的问题，并且线程函数和参数都是我自己可控的。</p>\n<p>不会像 dll 注入留下明显的痕迹，唯一的痕迹就是几块内存空间了。从检测的角度来看，代码注入的检测要比 dll 注入的检测复杂的多。</p>\n<h2 id=\"代码实例\"><a class=\"anchor\" href=\"#代码实例\">#</a> 代码实例</h2>\n<p>主要是理解流程，掌握思路。</p>\n<p>需求：在目标进程中执行 <code>CreateFile</code>  函数。</p>\n<p>如何使 CreateFile 在目标进程执行呢？</p>\n<p>创建一个结构体，这个结构体包含：<br />\n <code>CreateFile</code>  的函数地址。<br />\n <code>CreateFile</code>  函数的所有参数。</p>\n<p>使用远程线程注入，这就需要创建一个线程函数，这个线程函数的参数是指向结构体的地址，由于是在目标进程中调用，所以这个地址是目标进程中此结构体的地址。</p>\n<p>如何实现这一点呢？</p>\n<p>给目标进程申请一块私有内存，并写入数据。申请内存的时候会返回内存的地址。<br />\n这样就可以把线程函数和参数都传给目标进程。</p>\n<p>如何去调用线程函数呢？</p>\n<p>可以函数指针来实现</p>\n<p>给目标进程开辟一块内存空间会返回内存地址，把线程函数写入这块内存空间中后，把这块内存的首地址赋给函数指针就可以调用这个线程函数了。</p>\n<p>这个时候 <code>CreateRemoteThread</code>  函数所需要的参数都已经准备完毕，可以直接在目标进程中创建线程执行代码了。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/************************************************************************/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/* 远程线程实现 CreateFile                                               */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/************************************************************************/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Tlhelp32.h></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;tchar.h></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assert.h></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//CreateFile 函数的参数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">CreateFileParam</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tDWORD\t\t\tdwCreateFileAddress<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//CreateFile 函数的地址</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tLPCTSTR\t\t\tlpFileName<span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 文件名（包含路径）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tDWORD\t\t\tdwDesiredAccess<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 访问模式（写 / 读）</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tDWORD\t\t\tdwShareMode<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 共享模式</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tLPSECURITY_ATTRIBUTES lpSecurityAttributes<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 指向安全属性的指针</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tDWORD\t\t\tdwCreationDisposition<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 如何创建</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tDWORD\t\t\tdwFlagsAndAttributes<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 文件属性</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tHANDLE\t\t\thTemplateFile<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 用于复制文件句柄</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span>CreateFileParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 定义一个 CreateFile 一模一样的函数指针类型</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">HANDLE</span><span class=\"token punctuation\">(</span>WINAPI<span class=\"token operator\">*</span> pCreateFile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tLPCTSTR\t\t\tlpFileName<span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\">// 文件名（包含路径）</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tDWORD\t\t\tdwDesiredAccess<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 访问模式（写 / 读）</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tDWORD\t\t\tdwShareMode<span class=\"token punctuation\">,</span>\t\t\t<span class=\"token comment\">// 共享模式</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tLPSECURITY_ATTRIBUTES lpSecurityAttributes<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指向安全属性的指针</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tDWORD\t\t\tdwCreationDisposition<span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 如何创建</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tDWORD\t\t\tdwFlagsAndAttributes<span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 文件属性</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tHANDLE\t\t\thTemplateFile\t\t\t<span class=\"token comment\">// 用于复制文件句柄</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">// 获取进程的 PID</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>DWORD <span class=\"token function\">ByNameGetPid</span><span class=\"token punctuation\">(</span>LPCTSTR lpName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tHANDLE hProcSnap <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取进程快照句柄</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>hProcSnap <span class=\"token operator\">!=</span> INVALID_HANDLE_VALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tPROCESSENTRY32 pe32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tpe32<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tBOOL flag <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取列表的第一个进程</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">_tcscmp</span><span class=\"token punctuation\">(</span>pe32<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">,</span> lpName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> pe32<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">;</span><span class=\"token comment\">//pid</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\tflag <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取下一个进程</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">// 编写要复制到目标进程中的函数</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>DWORD WINAPI <span class=\"token function\">CreateFileThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token comment\">// 转换参数</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tCreateFileParam<span class=\"token operator\">*</span> cfParam <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CreateFileParam<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lpParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token comment\">// 声明变量，赋值</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tpCreateFile pCF <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pCreateFile<span class=\"token punctuation\">)</span>cfParam<span class=\"token operator\">-></span>dwCreateFileAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token comment\">// 传参</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tHANDLE hFile <span class=\"token operator\">=</span> <span class=\"token function\">pCF</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\tcfParam<span class=\"token operator\">-></span>lpFileName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\tcfParam<span class=\"token operator\">-></span>dwDesiredAccess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\tcfParam<span class=\"token operator\">-></span>dwShareMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\tcfParam<span class=\"token operator\">-></span>lpSecurityAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\tcfParam<span class=\"token operator\">-></span>dwCreationDisposition<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\tcfParam<span class=\"token operator\">-></span>dwFlagsAndAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\tcfParam<span class=\"token operator\">-></span>hTemplateFile</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">// 远程创建文件</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>BOOL <span class=\"token function\">RemoteCreateFile</span><span class=\"token punctuation\">(</span>DWORD dwPid<span class=\"token punctuation\">,</span> LPCTSTR lpFilePathName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token comment\">//. 获取进程的句柄</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tHANDLE hProcess <span class=\"token operator\">=</span> <span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_ALL_ACCESS<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> dwPid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hProcess <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OpenProcessError!: %d\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token comment\">// 分配内存</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token comment\">// 用来存储字符串参数中的文件名</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token comment\">//wcslen 获取的是字符数，要将其转换为字节数</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token comment\">// 函数执行成功返回内存首地址</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\tLPVOID MemAddressOfFileName <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAllocEx</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\thProcess<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t<span class=\"token function\">_tcslen</span><span class=\"token punctuation\">(</span>lpFilePathName<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\tMEM_COMMIT<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\tPAGE_READWRITE</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MemAddressOfFileName <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write MemAddressOfFileName Error!: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t<span class=\"token comment\">// 用来存储线程函数</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tLPVOID MemAddressOfThreadProc <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAllocEx</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\thProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t<span class=\"token number\">0x400</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 函数在内存中的大小给个大点的值</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\tMEM_COMMIT<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\tPAGE_EXECUTE</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MemAddressOfThreadProc <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write MemAddressOfThreadProc Error!: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t<span class=\"token comment\">// 关闭资源</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token comment\">// 用来存储文件参数</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\tLPVOID MemAddressOfParam <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAllocEx</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\thProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CreateFileParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\tMEM_COMMIT<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\tPAGE_READWRITE</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MemAddressOfParam <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write MemAddressOfParam Error!: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t<span class=\"token comment\">// 关闭资源</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token comment\">// 初始化参数</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\tCreateFileParam cfParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t<span class=\"token comment\">// 文件名</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>lpFileName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span>MemAddressOfFileName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t<span class=\"token comment\">// 其他参数</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>dwDesiredAccess <span class=\"token operator\">=</span> GENERIC_READ <span class=\"token operator\">|</span> GENERIC_WRITE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>dwShareMode <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>lpSecurityAttributes <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>dwCreationDisposition <span class=\"token operator\">=</span> OPEN_ALWAYS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>dwFlagsAndAttributes <span class=\"token operator\">=</span> FILE_ATTRIBUTE_NORMAL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>hTemplateFile <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t<span class=\"token comment\">// 获取 CreateFile 的地址</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\tHMODULE hModule <span class=\"token operator\">=</span> <span class=\"token function\">GetModuleHandle</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"kernel32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\tcfParam<span class=\"token punctuation\">.</span>dwCreateFileAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span>hModule<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CreateFileW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t<span class=\"token comment\">// 开始复制到目标进程</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t<span class=\"token comment\">// 拷贝文件名</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t<span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\thProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\tMemAddressOfFileName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t\tlpFilePathName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t<span class=\"token function\">_tcslen</span><span class=\"token punctuation\">(</span>lpFilePathName<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t<span class=\"token comment\">// 拷贝线程函数</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t<span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t<span class=\"token comment\">// 修改线程函数起始地址</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\tDWORD dwFunAddr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>CreateFileThreadProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t<span class=\"token comment\">// 间接 CALL</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>BYTE<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>dwFunAddr<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\tdwFunAddr <span class=\"token operator\">=</span> dwFunAddr <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>dwFunAddr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t<span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\thProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\tMemAddressOfThreadProc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwFunAddr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t<span class=\"token number\">0x400</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t<span class=\"token comment\">// 拷贝参数</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t<span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t\thProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t\tMemAddressOfParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>cfParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CreateFileParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t<span class=\"token comment\">// 创建远程线程</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\tDWORD dwThreadId<span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回线程 id, 失败则为 NULL</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t<span class=\"token comment\">// 如果成功，返回新线程句柄，失败则为 NULL</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\tHANDLE hThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateRemoteThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\thProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>MemAddressOfThreadProc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\tMemAddressOfParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>dwThreadId</pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hThread <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CreateRemoteThread Error!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t<span class=\"token comment\">//. 关闭资源</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre></pre></td></tr><tr><td data-num=\"228\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>\tLPCTSTR CreateFileName <span class=\"token operator\">=</span>  L<span class=\"token string\">\"F:\\\\000Users\\\\Desktop\\\\test.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>\t<span class=\"token function\">RemoteCreateFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>\t\t<span class=\"token function\">ByNameGetPid</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"LittleGame.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>\t\tCreateFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>写代码并不复杂，运行的时候碰到了很多问题。</p>\n<p>搞了整整一天，还重写了几次，VS2019 的坑也踩了好多。最后功夫不负有心人：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>理解了海哥说的话：了解 C 和硬编码后，Win32 汇编能做的，C 一样能做。</p>\n",
            "tags": [
                "代码注入"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/WinDLL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%A8%A1%E5%9D%97%E9%9A%90%E8%97%8F/",
            "url": "https://or0kit.github.io/Bin/Win32/WinDLL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%A8%A1%E5%9D%97%E9%9A%90%E8%97%8F/",
            "title": "WinDLL注入之模块隐藏",
            "date_published": "2021-07-20T12:51:57.000Z",
            "content_html": "<h1 id=\"模块隐藏的实现原理\"><a class=\"anchor\" href=\"#模块隐藏的实现原理\">#</a> 模块隐藏的实现原理</h1>\n<p>普通 API 查找模块实现思路：其通过查询在 R3 中的 PEB (Process Environment Block 进程环境块) 与 TEB (Thread Environment Block 进程环境块) 来找到一个双向链表，通过遍历双向链表中某一成员 (字符串) 来查找全部模块。</p>\n<p>模块隐藏实现思路：在 R3 层的模块隐藏，我们需要做的就是将其该链表断链，将某一模块从这个双向链表中摘除，这样再调用传统的 API 时就会搜索不到。</p>\n<h1 id=\"结构体成员详细介绍\"><a class=\"anchor\" href=\"#结构体成员详细介绍\">#</a> 结构体成员详细介绍</h1>\n<h2 id=\"teb结构体-内存地址为-fs0-处\"><a class=\"anchor\" href=\"#teb结构体-内存地址为-fs0-处\">#</a> TEB 结构体 -- 内存地址为 fs:[0] 处。</h2>\n<p>使用 Windbg 的 &quot;dt _TEB&quot; 命令来查看 TEB 结构体</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h3 id=\"通过olldbg查看该结构体\"><a class=\"anchor\" href=\"#通过olldbg查看该结构体\">#</a> 通过 olldbg 查看该结构体</h3>\n<p>打开任意进程，在寄存器窗口找到 fs:[0]，查看其内存地址。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>在内存窗口使用命令 &quot;db 29E000&quot; 跳转到该内存，使用地址格式 (长型 - 地址) 显示。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h2 id=\"peb结构体-fs0x30\"><a class=\"anchor\" href=\"#peb结构体-fs0x30\">#</a> PEB 结构体 -- fs:[0x30]</h2>\n<p>使用 Windbg 指令 dt _PEB 查看 PEB 结构体，重点关注最后一个 进程加载信息表。</p>\n<p>查看 _PEB_LDR_DATA 进程加载信息表 的结构体</p>\n<p>重点关注 0x00c 处的指针，其指向 _PEB_LDR_DATA 这个结构体。</p>\n<p>在这个结构体中 0x00c、0x014、0x01c 分别表示：模块加载顺序、加载后在内存中的顺序、模块初始化的顺序。</p>\n<p>它们都是一个双向链表指针，其指向_LDR_DATA_TABLE_ENTRY 结构体中的三个成员，而 _LDR_DATA_TABLE_ENTRY 中存储着就是关于有关模块信息的元素 (比如模块名等)</p>\n<p>先了解一下 Unicode 结构体</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>这是 PEB 中存储着我们模块名称的数据在哪个地方。</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h3 id=\"使用olldbg来查看查找首先加载模块的模块名称\"><a class=\"anchor\" href=\"#使用olldbg来查看查找首先加载模块的模块名称\">#</a> 使用 olldbg 来查看查找首先加载模块的模块名称</h3>\n<blockquote>\n<p>TEB-&gt;PEB-&gt; InLoadOrderModuleList -&gt; BaseDllName</p>\n</blockquote>\n<p>接之前 TEB 内容查找到 PEB 的所在位置 fs:[0x30]。</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>进入 PEB 后找 0x0c 的位置，接着在内存窗口跟随。</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>进入后我们随便选择三个链表中的一个跟随，我这里选择了第一个</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>进入后即可看到如下内容</p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<p>可以在通过 <code>_LIST_ENTRY</code>  可以遍历前一个模块的内容和下一个模块的内容</p>\n<p><img data-src=\"image010.png\" alt=\"\" /></p>\n<p>跟随</p>\n<p><img data-src=\"image011.png\" alt=\"\" /></p>\n<h1 id=\"代码实现断链\"><a class=\"anchor\" href=\"#代码实现断链\">#</a> 代码实现断链</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* 所需要的结构体</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>1. _LDR_DATA_TABLE_ENTRY 链表指向数据</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>2. _PEB_LDR_DATA 表示其 PEB0x 处指向的数据表</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>3. _LIST_ENTRY 指针指向的链表</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LSA_UNICODE_STRING</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    USHORT Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    USHORT MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    PWSTR  Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>UNICODE_STRING<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PUNICODE_STRING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_PEB_LDR_DATA</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    DWORD Length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x00</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">bool</span> Initialized<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x04</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    PVOID SsHandle<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x08</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    LIST_ENTRY InLoadOrderModuleList<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x0c</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    LIST_ENTRY InMemoryOrderModuleList<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x14</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    LIST_ENTRY InInitializationOrderModuleList<span class=\"token punctuation\">;</span><span class=\"token comment\">// +0x1c</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span> PEB_LDR_DATA<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PPEB_LDR_DATA<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x24</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_MODULE</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    LIST_ENTRY          InLoadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    LIST_ENTRY          InMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    LIST_ENTRY          InInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> BaseAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    ULONG               SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    UNICODE_STRING   FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    UNICODE_STRING      BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    ULONG               Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    SHORT               LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    SHORT               TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    HANDLE              SectionHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    ULONG               CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    ULONG               TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LDR_MODULE<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PLDR_MODULE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">// 所谓模块句柄，即该模块的入口地址</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">hide_module</span><span class=\"token punctuation\">(</span>LPCSTR szDllName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    HMODULE hMod <span class=\"token operator\">=</span> <span class=\"token function\">GetModuleHandleA</span><span class=\"token punctuation\">(</span>szDllName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    PLIST_ENTRY Head<span class=\"token punctuation\">,</span> Cur<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    PPEB_LDR_DATA ldr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    PLDR_MODULE ldm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    __asm</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        mov eax<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        mov ecx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax <span class=\"token operator\">+</span> <span class=\"token number\">0x0c</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//Ldr</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        mov ldr<span class=\"token punctuation\">,</span> ecx</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    Head <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>ldr<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    Cur <span class=\"token operator\">=</span> Head<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        ldm <span class=\"token operator\">=</span> <span class=\"token function\">CONTAINING_RECORD</span><span class=\"token punctuation\">(</span>Cur<span class=\"token punctuation\">,</span> LDR_MODULE<span class=\"token punctuation\">,</span> InLoadOrderModuleList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hMod <span class=\"token operator\">==</span> ldm<span class=\"token operator\">-></span>BaseAddress<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token comment\">// 三个链表同时给断掉</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token operator\">-></span>Flink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token operator\">-></span>Blink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token operator\">-></span>Flink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token operator\">-></span>Blink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token operator\">-></span>Flink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token operator\">-></span>Blink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        Cur <span class=\"token operator\">=</span> Cur<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Head <span class=\"token operator\">!=</span> Cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token comment\">// 通过模块名，来获取模块句柄</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"****按任意键隐藏模块*****\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    LPCSTR lpDllName <span class=\"token operator\">=</span> <span class=\"token string\">\"kernel32.dll\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token function\">hide_module</span><span class=\"token punctuation\">(</span>lpDllName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"****隐藏模块完成*****\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vb25ldHJhaW5lZS9wLzExNjc0MjExLmh0bWw=\">https://www.cnblogs.com/onetrainee/p/11674211.html</span></p>\n",
            "tags": [
                "TEB",
                "PEB",
                "R3层断链"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/WinDLL%E6%B3%A8%E5%85%A5%E4%B9%8B%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/",
            "url": "https://or0kit.github.io/Bin/Win32/WinDLL%E6%B3%A8%E5%85%A5%E4%B9%8B%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/",
            "title": "WinDLL注入之进程间通信",
            "date_published": "2021-07-20T12:50:13.000Z",
            "content_html": "<h1 id=\"dll注入之进程间通信\"><a class=\"anchor\" href=\"#dll注入之进程间通信\">#</a> DLL 注入之进程间通信</h1>\n<h2 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h2>\n<p>写一个小程序，模拟游戏。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">recover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**********回血**********\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">seckill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**********秒杀**********\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">teleport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**********传送**********\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">char</span> cOrder<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**********Game Begin**********\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tcOrder <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>cOrder<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'R'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t<span class=\"token function\">recover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'S'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t<span class=\"token function\">seckill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'T'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t<span class=\"token function\">teleport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>效果图</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>人可以控制它的执行，那么我们可不可以通过别的程序控制它的执行呢？</p>\n<h2 id=\"基本思路\"><a class=\"anchor\" href=\"#基本思路\">#</a> 基本思路</h2>\n<p>Dll 加载后会创建一个新线程，这个线程会实现我们控制程序的基本功能，为了能够实现 “控制”，我们还需要一个 “控制台” 的程序，首先这个控制台程序能够把 Dll 注入进 Game 进程中，那么，如何进行控制呢，我们可以在 Dll 创建的线程中实现共享内存映射，使得这块内存既可以被 Dll 访问也可以被 “控制台” 访问，具体为 “控制台程序写入命令，dll 线程读取命令，以这块共享内存进行通信，最后还有一个重要的事情，那就是结束通信卸载 dll。</p>\n<p>具体化为：</p>\n<ol>\n<li>通过 dll 注入的方式将代码加载进目标进程</li>\n<li>通过共享内存的方式进行数据通信 (共享物理页)</li>\n<li>通过循环读取命令队列，并通过内联汇编的方式调用各种函数</li>\n</ol>\n<p>一些外挂（辅助）的原理也是这样。</p>\n<h2 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> 实例</h2>\n<p>想清楚原理后，我们用代码来实现逻辑。</p>\n<p>DLL 文件</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">///dllmain.cpp : 定义 DLL 应用程序的入口点。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"pch.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_MAP_</span> <span class=\"token expression\">L</span><span class=\"token string\">\"内存共享\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 函数地址</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RECOVER</span>  <span class=\"token expression\"><span class=\"token number\">0x00411790</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SEECKILL</span> <span class=\"token expression\"><span class=\"token number\">0x004117F0</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TELEPORT</span> <span class=\"token expression\"><span class=\"token number\">0x00411850</span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>HANDLE g_hModule<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>HANDLE g_hMapFile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>LPTSTR lpBuff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>DWORD dwType<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"DllInject\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Or0kit\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tdwType <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 打开共享内存</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tg_hMapFile <span class=\"token operator\">=</span> <span class=\"token function\">OpenFileMapping</span><span class=\"token punctuation\">(</span>FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> _MAP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_hMapFile <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OpenFileMapping Error: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">// 映射内存</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tlpBuff <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span>g_hMapFile<span class=\"token punctuation\">,</span> FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> BUFSIZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpBuff <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>dwType<span class=\"token punctuation\">,</span> lpBuff<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwType <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\tmov eax<span class=\"token punctuation\">,</span> RECOVER</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\tcall eax</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\tdwType <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span>lpBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwType<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwType <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\tmov eax<span class=\"token punctuation\">,</span> SEECKILL</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t\tcall eax</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\tdwType <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span>lpBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwType<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwType <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\tmov eax<span class=\"token punctuation\">,</span> TELEPORT</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t\tcall eax</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\tdwType <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span>lpBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwType<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwType <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t<span class=\"token function\">FreeLibraryAndExitThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HMODULE<span class=\"token punctuation\">)</span>g_hModule<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>BOOL APIENTRY <span class=\"token function\">DllMain</span><span class=\"token punctuation\">(</span>HANDLE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tDWORD  ul_reason_for_call<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tLPVOID lpReserved</pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ul_reason_for_call<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>“控制台”</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;TlHelp32.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;assert.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;tchar.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_MAP_</span> <span class=\"token expression\">L</span><span class=\"token string\">\"内存共享\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>LPTSTR lpBuff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 获取进程 name 的 ID</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>DWORD <span class=\"token function\">getPid</span><span class=\"token punctuation\">(</span>LPTSTR name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    HANDLE hProcSnap <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取进程快照句柄</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>hProcSnap <span class=\"token operator\">!=</span> INVALID_HANDLE_VALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    PROCESSENTRY32 pe32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    pe32<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    BOOL flag <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取列表的第一个进程</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">_tcscmp</span><span class=\"token punctuation\">(</span>pe32<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">return</span> pe32<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">;</span><span class=\"token comment\">//pid</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取下一个进程</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">// 远程线程注入</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">RemoteThreadInject</span><span class=\"token punctuation\">(</span>LPTSTR ProcName<span class=\"token punctuation\">,</span> LPCWSTR DllPath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    DWORD dwPid <span class=\"token operator\">=</span> <span class=\"token function\">getPid</span><span class=\"token punctuation\">(</span>ProcName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">//1. 使用 PID 打开进程获取权限</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    HANDLE hProcess <span class=\"token operator\">=</span> <span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> dwPid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">//2. 申请内存，写入 DLL 路径</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">int</span> nLen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">lstrlen</span><span class=\"token punctuation\">(</span>DllPath<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    LPVOID pBuf <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAllocEx</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> nLen<span class=\"token punctuation\">,</span> MEM_RESERVE <span class=\"token operator\">|</span> MEM_COMMIT<span class=\"token punctuation\">,</span> PAGE_READWRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"申请内存失败！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">//3. 写入内存</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    DWORD dwWrite <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> pBuf<span class=\"token punctuation\">,</span> DllPath<span class=\"token punctuation\">,</span> nLen<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwWrite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写入内存失败！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">//4. 创建远程线程，让对方调用 LoadLibrary</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    HANDLE hRemoteThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateRemoteThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        hProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>LoadLibrary<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        pBuf<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">//5. 等待线程结束返回，释放资源</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hRemoteThread<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hRemoteThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token function\">VirtualFreeEx</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> pBuf<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MEM_FREE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\">// 创建 FileMapping</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>BOOL <span class=\"token function\">InitFileMapping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token comment\">// 挂载共享内存</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    HANDLE g_hMapFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span>INVALID_HANDLE_VALUE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> PAGE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">,</span> _MAP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_hMapFile <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CreateFileMapping Error\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    lpBuff <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span>g_hMapFile<span class=\"token punctuation\">,</span> FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> BUFSIZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpBuff <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MapViewOfFile Error\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    LPCWSTR  DllPath <span class=\"token operator\">=</span> L<span class=\"token string\">\"F:\\\\000Users\\\\Desktop\\\\Dll2021-7-20.dll\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token function\">InitFileMapping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token function\">RemoteThreadInject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LittleGame.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>DllPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    DWORD dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token comment\">// 命令队列</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    dwOrderList<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    DWORD dwCtrlCode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        dwCtrlCode <span class=\"token operator\">=</span> dwOrderList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span>lpBuff<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwCtrlCode<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>成功！</p>\n<p>这里不得不吐槽，就这些代码我看了一天多，昨晚还整到一点，全程调试，就是不知道为什么 dll 不执行。</p>\n<p>我这里之所以执行成功是因为在 <code>dwCtrlCode</code>  这里下了断点，我想看看一看传递的参数是否赋值成功。<br />\n结果，我 F11 一步一步执行，发现我看了一天多怎么都执行不了的代码可以执行了……</p>\n<p>可如果我不在 <code>dwCtrlCode</code>  这里下断点，直接执行，就弹出一个 dll 注入成功的窗，可程序还是没反应。</p>\n<p>不知道为什么。</p>\n<p><img data-src=\"001.gif\" alt=\"\" /></p>\n",
            "tags": [
                "外挂原理",
                "DLL注入之进程间通信"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5/",
            "title": "Win远程线程注入",
            "date_published": "2021-07-19T07:56:02.000Z",
            "content_html": "<h1 id=\"1-什么是注入\"><a class=\"anchor\" href=\"#1-什么是注入\">#</a> 1、什么是注入？</h1>\n<p>所谓注入就是在第三方进程不知道或者不允许的情况下将模块或者代码写入对方进程空间，并设法执行的技术。</p>\n<p>在安全领域，“注入” 是非常重要的一一种技术手段，注入与反注入也一直处于不断变化的，而且也愈来愈激烈的对抗当中。</p>\n<p>己知的注入方式:<br />\n 远程线程注入、APC 注入、消息钩子注入、注册表注入、导入表注入、输入法注入等等。</p>\n<h1 id=\"2-远程线程注入的实现\"><a class=\"anchor\" href=\"#2-远程线程注入的实现\">#</a> 2、远程线程注入的实现</h1>\n<h2 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h2>\n<p>利用  <code>CreateRemoteThread</code>  函数我们能创建一个远程线程，并且在这个远程线程中运行一个满足  <code>ThreadProc</code>  格式的线程函数。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//ThreadProc 函数格式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  __in  LPVOID lpParameter</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个远程线程函数的格式是有局限的，有 4 个字节类型的返回值、一个参数。且必须在被创建远程线程的程序进程中，还要知道这个函数在这个程序进程中的地址。</p>\n<p>这就引出了我们的关键函数  <code>LoadLibary</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HMODULE WINAPI <span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  __in  LPCTSTR lpFileName</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>看下这张图立马就明白了</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>既让远程线程执行  <code>LoadLibrary</code>  函数去加载一个 dll（模块）。</p>\n<p>这也就是所谓的 DLL 注入。</p>\n<p>还有一个很重要的问题，我们知道不同进程中，地址空间是隔离的，那么我在注入的进程中传入 LoadLibrary 函数的地址，这算是一个硬编码的地址，它在目标进程中是否是一样的呢？答案是，二者的地址是一样的，这是由于 kernel32.dll 在 32 位程序中加载的基地址是一样的，而 LoadLibrary 在 kernel32.dll 中的偏移是一定的（只要不同的进程加载的是同一份 kernel32.dll）那么不同进程中的 LoadLibrary 函数的地址是一样的。其实不光是 LoadLibrary 函数，只要是 kernel32.dll 中导出的函数，在不同进程中的地址都是一样的。注意这里只是 32 位，如果想要使用 32 位程序往 64 位目标程序中注入，可能需要考虑地址转换的问题，只要知道 kernel32.dll 在 64 位中的偏移，就可以计算出对应函数的地址了。</p>\n<h2 id=\"dll注入\"><a class=\"anchor\" href=\"#dll注入\">#</a> DLL 注入</h2>\n<p>这是网上收集的一些概念。</p>\n<ol>\n<li>dll 注入是指向运行中的其它进程强制插入特定的 dll 文件。从技术细节来说，DLL 注入命令其他进程自行调用 LoadLibrary () API，加载用户指定的 dll 文件。</li>\n<li>当 dll 被加载到进程中以后，就拥有了访问进程内存的权限。(用户可以通过这个来修复程序 bug 或增加功能等)。</li>\n<li>dll 被加载到进程后会自动运行 DllMain 函数。</li>\n<li>使用 LoadLibrary () API 加载某个 DLL 时，该 DLL 中的 DllMain 函数就会被自动执行。DLL 注入的工作原理就是从外部促使目标进程调用 LoadLibrary () API，所以会强制掉用执行 DLL 的 DllMain () 函数。</li>\n</ol>\n<h1 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> 实例</h1>\n<h2 id=\"将会使用到的函数\"><a class=\"anchor\" href=\"#将会使用到的函数\">#</a> 将会使用到的函数</h2>\n<h3 id=\"getmodulefilename\"><a class=\"anchor\" href=\"#getmodulefilename\">#</a> <strong>GetModuleFileName</strong></h3>\n<p>获取当前进程已加载模块的文件的完整路径，该模块必须由当前进程加载。</p>\n<p>如果想要获取另一个已加载模块的文件路径，可以使用 GetModuleFileNameEx 函数。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DWORD WINAPI <span class=\"token function\">GetModuleFileName</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    _In_opt_  HMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _Out_     LPTSTR lpFilename<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _In_      DWORD nSize</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><em>hModule</em>： 一个模块的句柄。可以是一个 DLL 模块，或者是一个应用程序的实例句柄。如果该参数为 NULL，该函数返回该应用程序全路径。</li>\n<li><em>lpFileName</em>: 指定一个字符串缓冲区，要在其中容纳文件的用 NULL 字符中止的路径名，hModule 模块就是从这个文件装载进来的。</li>\n<li><em>nSize</em>： 装载到缓冲区 lpFileName 的最大字符数。</li>\n</ul>\n<p>返回值：</p>\n<p>如果返回为成功，将在 lpFileName 的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkMlOTMlRTUlODYlQjIlRTUlOEMlQkE=\">缓冲区</span>当中返回相应模块的路径，如果所设的 nSize 过小，那么返回仅按所设置缓冲区大小返回相应字符串内容。如果函数失败，返回值将为 0，利用 GetLastError 可获得异常代码。</p>\n<h3 id=\"_tcsrchr\"><a class=\"anchor\" href=\"#_tcsrchr\">#</a> <strong>_tcsrchr</strong></h3>\n<p><strong>函数功能</strong> ：查找一个字符串中<strong>最后</strong>一次出现的指定字符。</p>\n<p><strong>函数原型</strong> ：<br />\nchar *strrchr( const char *string, int c);<br />\nchar *wcsrchr( const wchar_t *string, int c );<br />\n<strong> 参数说明</strong> ：<br />\n第一个参数：字符串<br />\n第二个参数：需要查找的字符<br />\n<strong>功能</strong> ：查找一个字符串中最后出现的指定字符。<br />\n<strong>返回值</strong> ：找出字符串中最后一个出现查找字符的地址，然后将该字符出现的地址返回。</p>\n<p>(注：_tcsrchr 支持 ANSI 和 UNICODE，ANSI 使用 strrchr，UNICODE 使用 wcsrchr。)</p>\n<h3 id=\"_tcscpy_s\"><a class=\"anchor\" href=\"#_tcscpy_s\">#</a> <strong>_tcscpy_s</strong></h3>\n<p>字符拷贝函数，使用的如果是 UNICODE 编码，则采用 wcscpy_s () 函数，如果是多字节编码，则采用 strcpy_s () 函数。</p>\n<p>功能：字符串拷贝</p>\n<p>后缀_s 表示使用安全的字符串拷贝函数，防止缓冲区不够大而引起错误。</p>\n<h3 id=\"urldownloadtofile\"><a class=\"anchor\" href=\"#urldownloadtofile\">#</a> <strong>URLDownloadToFile</strong></h3>\n<p>URLDownloadToFile，指从指定 URL 地址读取内容并将读取到的内容保存到特定的文件里的实现方法。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HRESULT <span class=\"token function\">URLDownloadToFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    LPUNKNOWN pCaller<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    LPCTSTR szURL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    LPCTSTR szFileName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD dwReserved<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    LPBINDSTATUSCALLBACK lpfnCB</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数</p>\n<ul>\n<li><em>pCaller</em><br />\n 指向调用 ActiveX 组件的控制<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczY4MDUwOQ==\"> IUnknown</span> 接口的指针，如果调用者是 ActiveX 组件。如果调用应用程序不是 ActiveX 组件，则可以将此值设置为 <strong>NULL</strong> 。否则，调用方是包含在另一个组件中的 COM 对象，例如 HTML 页面上下文中的 ActiveX 控件。此参数表示调用组件的最外层 IUnknown。该函数在 ActiveX 客户端框架的上下文中尝试下载，并允许调用者容器接收有关下载进度的回调。</li>\n<li><em>szURL</em><br />\n 指向包含要下载的 URL 的字符串值的指针。不能设置为 <strong>NULL</strong> 。如果 URL 无效，则返回 INET_E_DOWNLOAD_FAILURE。</li>\n<li><em>szFileName</em><br />\n 指向包含要为下载创建的文件的名称或完整路径的字符串值的指针。如果<em> szFileName</em> 包含路径，则目标目录必须已经存在。</li>\n<li><em>dwReserved</em><br />\n 保留。必须设置为 0。</li>\n<li><em>lpfnCB</em><br />\n 指向调用者<a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775060(v=vs.85)\"><strong> IBindStatusCallback</strong></a> 接口的指针。通过使用<a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775064(v=vs.85)\"><strong> IBindStatusCallback::OnProgress</strong></a>，调用者可以接收下载状态。<a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775123(v=vs.85)\"><strong>URLDownloadToFile</strong></a> 在接收到数据时调用<strong> IBindStatusCallback::OnProgress</strong> 和<a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms775061(v=vs.85)\"><strong> IBindStatusCallback::OnDataAvailable</strong></a> 方法。下载操作可以通过从任何回调返回 E_ABORT 来取消。如果不需要状态，可以将此参数设置为 <strong>NULL</strong> 。</li>\n</ul>\n<p>返回值</p>\n<p>此函数可以返回这些值之一。</p>\n<table>\n<thead>\n<tr>\n<th>返回码</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>S_OK</strong></td>\n<td>下载成功开始。</td>\n</tr>\n<tr>\n<td><strong>E_OUTOFMEMORY</strong></td>\n<td>缓冲区长度无效，或内存不足，无法完成操作。</td>\n</tr>\n<tr>\n<td><strong>INET_E_DOWNLOAD_FAILURE</strong></td>\n<td>指定的资源或回调接口无效。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"程序\"><a class=\"anchor\" href=\"#程序\">#</a> 程序</h2>\n<p>DLL 文件，环境是 VS2019。<br />\n只是简单的弹个窗，在并把百度首页保存到 dll 所在目录。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//dllmain.cpp : 定义 DLL 应用程序的入口点。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"pch.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;urlmon.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;tchar.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">comment</span><span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">,</span> </span><span class=\"token string\">\"urlmon.lib\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span>  </span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEF_FILE_NAME</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>L</span><span class=\"token string\">\"DllInject.html\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">//define 我们保存的网页的文件名</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 自动下载到 dll 所在的目录下</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    HMODULE g_hMod <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    TCHAR szPath<span class=\"token punctuation\">[</span>_MAX_PATH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 定义一个数组来储存路径</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">GetModuleFileName</span><span class=\"token punctuation\">(</span>g_hMod<span class=\"token punctuation\">,</span> szPath<span class=\"token punctuation\">,</span> MAX_PATH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取当前模块的路径</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    TCHAR<span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> <span class=\"token function\">_tcsrchr</span><span class=\"token punctuation\">(</span>szPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 在 szPath 储存的路径中从右到左寻找字符 \\\\ 并返回字符串指针</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">_tcscpy_s</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> _MAX_PATH<span class=\"token punctuation\">,</span> DEF_FILE_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 生成文件保存的路径，将 DllInject.html 保存在 szPath 路径最后的 '\\' 字符之后</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">URLDownloadToFile</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"https://www.baidu.com\"</span><span class=\"token punctuation\">,</span> szPath<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 下载文件保存到 szPath 所描述的文件中</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>BOOL APIENTRY <span class=\"token function\">DllMain</span><span class=\"token punctuation\">(</span> HMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                       DWORD  ul_reason_for_call<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                       LPVOID lpReserved</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                     <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ul_reason_for_call<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">case</span> DLL_PROCESS_ATTACH<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        HANDLE hTread <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hTread<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"CreateThread Error!!\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Or0kit\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Inject Success!!\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Or0kit\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hTread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">case</span> DLL_THREAD_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">case</span> DLL_THREAD_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">case</span> DLL_PROCESS_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>主程序</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;TlHelp32.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;assert.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;tchar.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DllPath</span> <span class=\"token expression\">L</span><span class=\"token string\">\"F:\\\\000Users\\\\Desktop\\\\Dll2021-7-19.dll\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 获取进程 name 的 ID</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>DWORD <span class=\"token function\">getPid</span><span class=\"token punctuation\">(</span>LPTSTR name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    HANDLE hProcSnap <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取进程快照句柄</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>hProcSnap <span class=\"token operator\">!=</span> INVALID_HANDLE_VALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    PROCESSENTRY32 pe32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    pe32<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    BOOL flag <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取列表的第一个进程</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">_tcscmp</span><span class=\"token punctuation\">(</span>pe32<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">return</span> pe32<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">;</span><span class=\"token comment\">//pid</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取下一个进程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">// 远程线程注入</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>bool <span class=\"token function\">RemoteThreadInject</span><span class=\"token punctuation\">(</span>LPTSTR ProcName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    DWORD dwPid <span class=\"token operator\">=</span> <span class=\"token function\">getPid</span><span class=\"token punctuation\">(</span>ProcName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">//1. 使用 PID 打开进程获取权限</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    HANDLE hProcess <span class=\"token operator\">=</span> <span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> dwPid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">//2. 申请内存，写入 DLL 路径</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">int</span> nLen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">wcslen</span><span class=\"token punctuation\">(</span>DllPath<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    LPVOID pBuf <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAllocEx</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> nLen<span class=\"token punctuation\">,</span> MEM_RESERVE <span class=\"token operator\">|</span> MEM_COMMIT<span class=\"token punctuation\">,</span> PAGE_READWRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"申请内存失败！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\">//3. 写入内存</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    DWORD dwWrite <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> pBuf<span class=\"token punctuation\">,</span> DllPath<span class=\"token punctuation\">,</span> nLen<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwWrite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"写入内存失败！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">//4. 创建远程线程，让对方调用 LoadLibrary</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    HANDLE hRemoteThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateRemoteThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        hProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>LoadLibrary<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        pBuf<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\">//5. 等待线程结束返回，释放资源</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hRemoteThread<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hRemoteThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">VirtualFreeEx</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> pBuf<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MEM_FREE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token function\">RemoteThreadInject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win2021-7-19.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>；</pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>首先这是我们没注入前的桌面</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>运行我们的受害者</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>运行我们的注入程序</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>结果</p>\n<p><img data-src=\"image005.png\" alt=\"\" /><br />\n<img data-src=\"image006.png\" alt=\"\" /></p>\n<p>不过我这里出了点问题，不过程序还是跑起来了……</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>等有时间了再调试吧。</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMucGVkaXkuY29tL3RocmVhZC0yNjY5MDEuaHRt\">https://bbs.pediy.com/thread-266901.htm</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3doYXRkYXkvYXJ0aWNsZS9kZXRhaWxzLzg5NzU5MzA=\">https://blog.csdn.net/whatday/article/details/8975930</span></p>\n",
            "tags": [
                "远程线程",
                "DLL注入",
                "DLL注入相关函数"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B/",
            "title": "Win远程线程",
            "date_published": "2021-07-14T06:50:59.000Z",
            "content_html": "<h1 id=\"远程线程函数createremotethread\"><a class=\"anchor\" href=\"#远程线程函数createremotethread\">#</a> 远程线程函数 CreateRemoteThread</h1>\n<p>CreateRemoteThread 是一个 Windows API 函数，它能够创建一个在其它进程地址空间中运行的线程。</p>\n<h2 id=\"函数原型\"><a class=\"anchor\" href=\"#函数原型\">#</a> 函数原型</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HANDLE WINAPI <span class=\"token function\">CreateRemoteThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__in HANDLE hProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>__in LPSECURITY_ATTRIBUTES lpThreadAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>__in SIZE_T dwStackSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>__in LPTHREAD_START_ROUTINE lpStartAddress<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>__in LPVOID lpParameter<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>__in DWORD dwCreationFlags<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>__out LPDWORD lpThreadId</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"参数说明\"><a class=\"anchor\" href=\"#参数说明\">#</a> 参数说明</h2>\n<ol>\n<li>\n<p>hProcess [in]<br />\n 线程所属进程的进程句柄.<br />\n 该句柄必须具有 PROCESS_CREATE_THREAD, PROCESS_QUERY_INFORMATION, PROCESS_VM_OPERATION, PROCESS_VM_WRITE, 和 PROCESS_VM_READ 访问权限.</p>\n</li>\n<li>\n<p>lpThreadAttributes [in]<br />\n 一个指向 SECURITY_ATTRIBUTES 结构的指针，该结构指定了线程的安全属性.</p>\n</li>\n<li>\n<p>dwStackSize [in]<br />\n 线程栈初始大小，以字节为单位，如果该值设为 0, 那么使用系统默认大小.</p>\n</li>\n<li>\n<p>lpStartAddress [in]<br />\n 在远程进程的地址空间中，该线程的线程函数的起始地址.</p>\n</li>\n<li>\n<p>lpParameter [in]<br />\n 传给线程函数的参数.</p>\n</li>\n<li>\n<p>dwCreationFlags [in]<br />\n 线程的创建标志</p>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">线程创建后立即运行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CREATE_SUSPENDED 0x00000004</td>\n<td style=\"text-align:left\">线程创建后先将线程挂起，直到 ResumeThread 被调用.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">STACK_SIZE_PARAM_IS_A_RESERVATION 0x00010000</td>\n<td style=\"text-align:left\">dwStackSize 参数指定为线程栈预订大小，如果 STACK_SIZE_PARAM_IS_A_RESERVATION 没有被指定，dwStackSize 参数指定为线程栈分配大小.</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"7\">\n<li>lpThreadId [out]<br />\n 指向所创建线程 ID 的指针，如果创建失败，该参数为 NULL.</li>\n</ol>\n<h2 id=\"函数返回值\"><a class=\"anchor\" href=\"#函数返回值\">#</a> 函数返回值</h2>\n<p>如果调用成功，返回新线程句柄.<br />\n 如果失败，返回 NULL.</p>\n<h2 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例</h2>\n<p>先创建一个进程，使其执行一个线程。</p>\n<p>创建远程线程的程序</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;TlHelp32.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;assert.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;tchar.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 获取进程 name 的 ID</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>DWORD <span class=\"token function\">getPid</span><span class=\"token punctuation\">(</span>LPTSTR name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    HANDLE hProcSnap <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取进程快照句柄</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>hProcSnap <span class=\"token operator\">!=</span> INVALID_HANDLE_VALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    PROCESSENTRY32 pe32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    pe32<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    BOOL flag <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取列表的第一个进程</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">_tcscmp</span><span class=\"token punctuation\">(</span>pe32<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> pe32<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">;</span><span class=\"token comment\">//pid</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pe32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取下一个进程</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcSnap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>BOOL <span class=\"token function\">MyRemoteThread</span><span class=\"token punctuation\">(</span>LPTSTR tcProcName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">//  获取进程 id</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    DWORD dwProcId<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    dwProcId <span class=\"token operator\">=</span> <span class=\"token function\">getPid</span><span class=\"token punctuation\">(</span>tcProcName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwProcId <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getPid Error!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// 获得进程句柄</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    HANDLE hProcess <span class=\"token operator\">=</span> <span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> dwProcId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hProcess <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OpenProcess Error!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    HANDLE hThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateRemoteThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        hProcess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span><span class=\"token number\">0x007317F0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hThread <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CreateRemoteThread Error \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">MyRemoteThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win2021-7-19.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Win2021-7-19.cpp<br />\n 被创建远程线程的程序</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------------%d\\n\"</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tHANDLE hThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建远程线程前</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>创建远程线程后</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n",
            "tags": [
                "远程线程函数"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/",
            "title": "Win内存映射文件",
            "date_published": "2021-07-13T07:00:44.000Z",
            "content_html": "<p>内存映射文件<br />\n内存映射共享<br />\n写拷贝</p>\n<h1 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> 实例</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAPPINGNAME</span> <span class=\"token expression\"><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\"共享内存\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DWORD <span class=\"token function\">MappingFile</span><span class=\"token punctuation\">(</span>LPSTR lpcFile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tHANDLE hFile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHANDLE hMapFile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tDWORD dwFileMapSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tLPVOID lpAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">//1. 得到文件句柄</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\thFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>LPCWSTR<span class=\"token punctuation\">)</span>lpcFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tGENERIC_READ <span class=\"token operator\">|</span> GENERIC_WRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tOPEN_EXISTING<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tFILE_ATTRIBUTE_NORMAL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hFile <span class=\"token operator\">==</span> INVALID_HANDLE_VALUE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CreateFIle 失败:%d \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">//2. 创建 FileMapping 对象</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\thMapFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\thFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tPAGE_READWRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tMAPPINGNAME</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hMapFile <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CreateFileMapping 失败:%d \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token comment\">//3. 映射到虚拟内存</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tlpAddr <span class=\"token operator\">=</span> <span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\thMapFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tFILE_MAP_COPY<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpAddr <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MapViewOfFile 失败:%d \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hMapFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token comment\">//4. 读取文件</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tDWORD dwTest1 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>lpAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#010X \\n\"</span><span class=\"token punctuation\">,</span> dwTest1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token comment\">//5. 写入文件</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token comment\">//*(PDWORD)lpAddr = 0x42424242;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token comment\">// 强制更新缓存</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token comment\">//FlushViewOfFile((PDWORD)lpAddr,4)      </span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token comment\">//6. 关闭资源</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token function\">UnmapViewOfFile</span><span class=\"token punctuation\">(</span>lpAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hMapFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token function\">MappingFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPSTR<span class=\"token punctuation\">)</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"G:\\\\HelloWorld.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>打印出文件的前四个字节</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n",
            "tags": [
                "内存映射文件",
                "内存映射共享",
                "写拷贝"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%87%BD%E6%95%B0/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%87%BD%E6%95%B0/",
            "title": "Win文件系统函数",
            "date_published": "2021-07-13T06:58:30.000Z",
            "content_html": "<h1 id=\"什么是文件系统\"><a class=\"anchor\" href=\"#什么是文件系统\">#</a> 什么是文件系统</h1>\n<p>文件系统是操作系统用于管理磁盘上文件的方法和数据结构；简单点说就是在磁盘上如何组织文件的方法。</p>\n<p>文件系统分为 NTFS 和 FAT32。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>EFS 加密：这个加密主要针对当前用户的<br />\n步骤：点击一个文件 -&gt; 文件 -&gt; 属性 -&gt; 高级 -&gt; 加密保护文件内容.</p>\n<p>如果在当前用户则不会有什么结果。但是如果换了用户访问。则不可以访问这个加密文件了</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>加密后</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>磁盘配额：限制其他用户使用硬盘的存储额度。</p>\n<h1 id=\"windows文件系统相关的api\"><a class=\"anchor\" href=\"#windows文件系统相关的api\">#</a> Windows 文件系统相关的 API</h1>\n<h2 id=\"卷相关api\"><a class=\"anchor\" href=\"#卷相关api\">#</a> 卷相关 API</h2>\n<p>&lt;1&gt; 获取卷<br />\n GetLogicalDrives ()</p>\n<p>&lt;2&gt; 获取一个所有卷的盘符的字符串<br />\n GetLogicalDriveStrings ()</p>\n<p>&lt;3&gt; 获取卷的类型<br />\n GetLogicalDriveType ()</p>\n<p>&lt;4&gt; 获取卷信息<br />\n GetVolumeInformation ()</p>\n<h2 id=\"目录相关api\"><a class=\"anchor\" href=\"#目录相关api\">#</a> 目录相关 API</h2>\n<p>&lt;1&gt; 创建目录<br />\n CreateDirectory ();</p>\n<p>&lt;2&gt; 删除目录<br />\n RemoveDirectory ();</p>\n<p>&lt;3&gt; 修改目录名称<br />\n MoveFile ();</p>\n<p>&lt;4&gt; 获取程序当前目录<br />\n GetCurrentDirectory ( );</p>\n<p>&lt;5&gt; 设置程序当前目录<br />\n SetCurrentDirectory ();</p>\n<h2 id=\"文件相关api\"><a class=\"anchor\" href=\"#文件相关api\">#</a> 文件相关 API</h2>\n<p>&lt;1&gt; 创建文件<br />\n CreateFile ();</p>\n<p>&lt;2&gt; 关闭文件的句柄<br />\n CloseHandle ();</p>\n<p>&lt;3&gt; 获取文件长度<br />\n GetFileSize ();</p>\n<p>&lt;4&gt; 获取文件的属性和信息<br />\n GetFileAttributes ()/GetFileAttributesEx ();</p>\n<p>&lt;5&gt; 读 / 写 / 拷 贝 / 删除文件<br />\n ReadFile () witeFile ()/CopyFile ()/DeleteFile ();</p>\n<p>&lt;6&gt; 查找文件<br />\n FindFirstFile ()/FindNextFile ();</p>\n",
            "tags": [
                "win32文件函数"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E7%A7%81%E6%9C%89%E5%86%85%E5%AD%98%E5%92%8C%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E7%9A%84%E7%94%B3%E8%AF%B7%E4%B8%8E%E9%87%8A%E6%94%BE/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E7%A7%81%E6%9C%89%E5%86%85%E5%AD%98%E5%92%8C%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E7%9A%84%E7%94%B3%E8%AF%B7%E4%B8%8E%E9%87%8A%E6%94%BE/",
            "title": "Win私有内存和共享内存的申请与释放",
            "date_published": "2021-07-13T06:57:41.000Z",
            "content_html": "<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>私有内存：在进程本身的物理页中，只能进程本身使用。<br />\n共享内存：进程都可以使用。</p>\n<h2 id=\"私有内存申请api\"><a class=\"anchor\" href=\"#私有内存申请api\">#</a> 私有内存申请 API</h2>\n<p><code>VirtualAlloc</code> <br />\n <code>virtualAllocEx</code>  在指定进程的虚拟空间保留或提交内存区域</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LPVOID <span class=\"token function\">VirtualAlloc</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    LPVOID lpAddress<span class=\"token punctuation\">,</span>        </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SIZE_T dwSize<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    DWORD flAllocationType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD flProtect</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>参数介绍：</p>\n<ol>\n<li>申请内存的地址。可以指定地址，但是物理页我们不知道哪里的地址是否可用，所以一般为 <code>NULL</code> 。</li>\n<li>申请内存的大小。一般以页的整数倍进行申请，如：两页  <code>0x1000*2</code> 。</li>\n<li>申请内存的类型。<br />\n常用的有两种类型：<br />\n <code>MEM_RESERVE</code> : 先申请线性内存，但不占用物理内存<br />\n <code>MEM_COMMIT</code> : 占用线性内存和物理内存。</li>\n<li>内存的状态。可读、可写、可执行。</li>\n</ol>\n<h2 id=\"new-malloc的区别\"><a class=\"anchor\" href=\"#new-malloc的区别\">#</a> new malloc 的区别</h2>\n<p>真正申请内存的其实是 API。而 new malloc 是申请堆内存，new malloc 其实是在已申请的内存上面划分出一块虚拟内存。</p>\n<p>new 关键字本质也就是 malloc + 构造函数。malloc 的底层是通过 HeapAlloc 申请的，并没有进 0 环。</p>\n<h2 id=\"共享内存申请\"><a class=\"anchor\" href=\"#共享内存申请\">#</a> 共享内存申请</h2>\n<p>共享内存其实就是物理页共享使用，A 进程申请物理页并写入内容，B 进程可以读取。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HANDLE <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HANDLE hFile<span class=\"token punctuation\">,</span>                       </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  LPSECURITY_ATTRIBUTES lpAttributes<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  DWORD flProtect<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  DWORD dwMaximumSizeHigh<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  DWORD dwMaximumSizeLow<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  LPCTSTR lpName</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>参数介绍:</p>\n<ol>\n<li>文件映射。申请的物理页可以跟文件相映射，如果不需要文件只申请物理页则填 <code>INVALID_HANDLE_VALUE</code> 。</li>\n<li>SD 安全属性，每个内核对象都需要的安全属性。</li>\n<li>权限。你申请的这个物理页是可读的可写的还是可读写。</li>\n<li>申请内存的高 32 位。windows 为了支持 64 位操作系统，所以给了高低 32 位来保存地址， 如果是 32 位地址，则不需要，填 NULL 即可.</li>\n<li>低 32 位。你要申请的物理页内存的大小</li>\n<li>进程共享物理页的名字。如果希望这个物理页其他进程可以使用，则需要给一个名字。</li>\n</ol>\n<p>返回值：返回物理页句柄索引。</p>\n<p>有创建物理页 也有打开物理页 主要是其他进程使用。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HANDLE <span class=\"token function\">OpenFileMapping</span><span class=\"token punctuation\">(</span>  DWORD dwDesiredAccess<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// access mode</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  BOOL bInheritHandle<span class=\"token punctuation\">,</span>    <span class=\"token comment\">// inherit flag</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  LPCTSTR lpName          <span class=\"token comment\">// object name);</span></pre></td></tr></table></figure><p>当然如果其他进程使用一样可以使用 CreateFileMaping，只不过会返回文件对象已经存在的错误。</p>\n<h3 id=\"线性地址虚拟地址-关联物理页\"><a class=\"anchor\" href=\"#线性地址虚拟地址-关联物理页\">#</a> 线性地址 (虚拟地址) 关联物理页</h3>\n<p>我们还需要将这个物理页映射到线性地址。<br />\n需要的 API 如下</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LPVOID <span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HANDLE hFileMappingObject<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 物理页句柄</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  DWORD dwDesiredAccess<span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 线性地址访问权限。注意跟物理页最好一致，或者比物理页更低。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  DWORD dwFileOffsetHigh<span class=\"token punctuation\">,</span>      <span class=\"token comment\">// 映射线性地址的偏移位置 高 32 位</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  DWORD dwFileOffsetLow<span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 低 32 位</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  SIZE_T dwNumberOfBytesToMap  <span class=\"token comment\">// 内存映射的字节数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"关闭映射\"><a class=\"anchor\" href=\"#关闭映射\">#</a> 关闭映射</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL WINAPI <span class=\"token function\">UnmapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  _In_LPCVOID lpBaseAddress   <span class=\"token comment\">// 指定要解除映射的一个文件映射的基准地址。这个地址是早先用 MapViewOfFile 函数获得的</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>返回值 Bool，非零表示成功，零表示失败。可以通过 GetLastError () 获取错误代码。</p>\n<p>关闭物理页句柄用 <code>CloseHandle()</code></p>\n<h2 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> 实例</h2>\n<p>A 进程</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MapFileName</span> <span class=\"token expression\">L</span><span class=\"token string\">\"共享内存\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">M_Page</span> <span class=\"token expression\"><span class=\"token number\">0x1000</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>HANDLE g_hMapFile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>LPVOID  g_lpBuff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 共享内存</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 获取内核对象 物理页 的句柄</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tg_hMapFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tINVALID_HANDLE_VALUE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tPAGE_READWRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tM_Page<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tMapFileName</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tg_lpBuff <span class=\"token operator\">=</span> <span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tg_hMapFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tFILE_MAP_WRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tM_Page</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>g_lpBuff <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token function\">UnmapViewOfFile</span><span class=\"token punctuation\">(</span>g_lpBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>g_hMapFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>B 进程</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MapFileName</span> <span class=\"token expression\">L</span><span class=\"token string\">\"共享内存\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">M_Page</span> <span class=\"token expression\"><span class=\"token number\">0x1000</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>HANDLE g_hMapFile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>LPVOID  g_lpBuff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 共享内存</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 获取内核对象 物理页 的句柄</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tg_hMapFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tINVALID_HANDLE_VALUE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tPAGE_READWRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tM_Page<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tMapFileName</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tg_lpBuff <span class=\"token operator\">=</span> <span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tg_hMapFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tFILE_MAP_WRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tM_Page</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>g_lpBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token function\">UnmapViewOfFile</span><span class=\"token punctuation\">(</span>g_lpBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>g_hMapFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>A 进程写入，B 进程访问。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n",
            "tags": [
                "私有内存",
                "共享内存"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E4%B8%8E%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E4%B8%8E%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98/",
            "title": "Win虚拟内存与物理内存",
            "date_published": "2021-07-12T07:57:22.000Z",
            "content_html": "<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>学过计算机操作系统后，会有更深的理解。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"虚拟内存地址划分\"><a class=\"anchor\" href=\"#虚拟内存地址划分\">#</a> 虚拟内存地址划分</h2>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"可供使用的物理内存\"><a class=\"anchor\" href=\"#可供使用的物理内存\">#</a> 可供使用的物理内存</h2>\n<p>MmNumberOfPhysicalPages* 4 = 物理内存<br />\n虛拟内存 (硬盘)<br />\n 能够识别的物理内存:<br />\n32 位系统最多可以识别物理内存为 64G，但由于操作系统的限制<br />\n比如 XP, 只能识别 4G (Windows 2003 服务器版本可以识别 4G 以上</p>\n<h2 id=\"pagefilesys\"><a class=\"anchor\" href=\"#pagefilesys\">#</a> pagefile.sys</h2>\n<p>如果我们的物理页超过了。那么操作系统还支持使用硬盘来当物理内存.</p>\n<p>具体设置</p>\n<p>计算机属性 -&gt; 高级系统设置 -&gt; 高级 - &gt; 性能设置 -&gt; 高级 -&gt; 虚拟内存更改</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>pagefile.sys 文件</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n",
            "tags": [
                "虚拟内存",
                "物理内存"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E5%AD%90%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E5%AD%90%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6/",
            "title": "Win子窗口控件",
            "date_published": "2021-07-12T06:36:07.000Z",
            "content_html": "<h1 id=\"子窗口控件\"><a class=\"anchor\" href=\"#子窗口控件\">#</a> 子窗口控件</h1>\n<p>在前边我们已经讲解了窗口的本质。以及如何注册窗口类跟创建窗口。还讲了消息循环.</p>\n<p>那么有很多窗口其实 Windows 已经帮我们创建出来了。我们直接使用即可。而这些窗口都有自己的消息循环。只有改变状态的时候。才会发送消息给我们的父窗口通知.</p>\n<p>此时我们捕获消息就可以进行处理了.<br />\n 控件会自己处理消息，并在自己状态发生改变时通知父窗口。<br />\n预定义的控件有:<br />\n 按钮、复选框、编辑框、静态字符串标签和滚动条等<br />\n子窗口其实就是绘制在主窗口的一个窗口。</p>\n<h1 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> 实例</h1>\n<p>在 vs2019 中运行</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 定义控件标识</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IDC_EDIT_1</span>   <span class=\"token expression\"><span class=\"token number\">0x100</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IDC_BUTTON_1</span> <span class=\"token expression\"><span class=\"token number\">0x101</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IDC_BUTTON_2</span> <span class=\"token expression\"><span class=\"token number\">0x102</span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>HINSTANCE g_hInstance<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 定义全局的 g_hInstance，子窗口可以获取到父窗口的 hInstance</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tHWND hwnd<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tUINT uMsg<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tWPARAM wParam<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tLPARAM lParam   </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span>HINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tHINSTANCE hPrevInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tLPSTR     lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">int</span>       nCmdShow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tTCHAR szOutBuff<span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tg_hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 把父窗口的 hInstance 赋值给全局的 g_hInstance，</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tTCHAR className<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My first window\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tWNDCLASS wndclass <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span>COLOR_BACKGROUND<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpfnWndProc <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> className<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token function\">RegisterClass</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wndclass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\tclassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tWS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token number\">650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token number\">400</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\thInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hwnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %d\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tMSG msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\tBOOL bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bRet <span class=\"token operator\">=</span> <span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bRet <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %d\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t<span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\tHWND hwnd<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tUINT uMsg<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tWPARAM wParam<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tLPARAM lParam   </pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\tWCHAR szOutBuff<span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token comment\">//sprintf (szOutBuff,\"消息: % x\\n\",uMsg);   // 查看消息类型</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token comment\">//OutputDebugString(szOutBuff); </span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>uMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_DESTROY<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t<span class=\"token function\">PostQuitMessage</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_CREATE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EDIT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> WS_VSCROLL <span class=\"token operator\">|</span> ES_MULTILINE<span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 子窗口通用 style 和特殊 style</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t<span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t<span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\thwnd<span class=\"token punctuation\">,</span>                    <span class=\"token comment\">// 父窗口</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span>IDC_EDIT_1<span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 子窗口身份标识</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\tg_hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t<span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BUTTON\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"设置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t\t<span class=\"token number\">520</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t<span class=\"token number\">180</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t<span class=\"token number\">60</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t<span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span>IDC_BUTTON_1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t\tg_hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\t<span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BUTTON\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t\t<span class=\"token number\">520</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t\t<span class=\"token number\">220</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t\t<span class=\"token number\">60</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t\t<span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span>IDC_BUTTON_2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\t\tg_hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\t<span class=\"token constant\">NULL</span>\t</pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_COMMAND<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> IDC_BUTTON_1<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\t\t<span class=\"token function\">SetDlgItemText</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> IDC_EDIT_1<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> IDC_BUTTON_2<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t<span class=\"token function\">GetDlgItemText</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> IDC_EDIT_1<span class=\"token punctuation\">,</span> szOutBuff<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> szOutBuff<span class=\"token punctuation\">,</span> szOutBuff<span class=\"token punctuation\">,</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> uMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>点击设置后，编辑框会出现 test。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>点击获取，会弹出编辑框内的内容。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n",
            "tags": [
                "Win子窗口控件"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6%E5%92%8C%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6%E5%92%8C%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B/",
            "title": "Win消息机制和消息类型",
            "date_published": "2021-07-05T14:48:49.000Z",
            "content_html": "<h1 id=\"事件和消息\"><a class=\"anchor\" href=\"#事件和消息\">#</a> 事件和消息</h1>\n<p>Windows 中的事件是一个 &quot;动作&quot;，这个动作可能是用户操作应用程序产生的，也可能是 Windows 自己产生的.<br />\n 而消息，就是用来描述这些 &quot;动作&quot; 的，比如：</p>\n<p>1 这个动作是什么时候产生的？<br />\n2 哪个应用程序产生的？<br />\n3 在什么位置产生的？<br />\n等等。。。</p>\n<h2 id=\"事件驱动消息-消息封装事件\"><a class=\"anchor\" href=\"#事件驱动消息-消息封装事件\">#</a> 事件驱动消息 消息封装事件</h2>\n<p>Windows 为了能够准确的描述这些信息，提供了一个结构体：MSG，该结构体里面记录的事件的详细信息。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagMSG</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            HWND hwnd<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 窗口句柄</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            UINT message<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 消息类型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            WPARAM wParam<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 对消息类型进一步描述</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            LPARAM lParam<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 同上</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            DWORD time<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 动作发生时间</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            POINT pt<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 坐标，结构体封装了，内部是 x，y</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span> MSG<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PMSG<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>说明：</p>\n<blockquote>\n<p>1、hwnd<br />\n 表示消息所属的窗口<br />\n一个消息一般都是与某个窗口相关联的<br />\n在 Windows 中 HWND 类型的变量通常用来标识窗口。</p>\n</blockquote>\n<blockquote>\n<p>2、message<br />\n 在 Windows 中，消息是由一个数值来表示的<br />\n但是由于数值不便于记忆，所以 Windows 将消息对应的数值定义为 WM_XXX 宏（WM == Window Message）<br />\n鼠标左键按下 WM_LBUTTONDOWN        键盘按下 WM_KEYDOWN</p>\n</blockquote>\n<blockquote>\n<p>3、wParam 和 lParam<br />\n32 位消息的特定附加信息，具体表示什么处决于 message</p>\n</blockquote>\n<blockquote>\n<p>4、time<br />\n 消息创建时的时间</p>\n</blockquote>\n<blockquote>\n<p>5、消息创建时的鼠标位置</p>\n</blockquote>\n<p>具体来说：如下图，用户输入后，封装成消息，加入系统的消息队列，然后应用程序那还有队列</p>\n<p>用来存储自己的消息队列，所以系统队列到应用程序队列是分流而治的过程。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>从队列中取出消息，使用的是循环机制，就是不停的取出消息，而后面的判断消息类型是不是我们关心的意思其实是</p>\n<p>我们是否写了该消息下的响应函数，或者说回调函数。</p>\n<p>具体流程如下图：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h1 id=\"消息机制\"><a class=\"anchor\" href=\"#消息机制\">#</a> 消息机制</h1>\n<p>我们了解了窗口其实是绘制出来的，而且是不断绘制的过程，所以窗口的本质是绘制， 但是我们现在看到的窗口程序，都可以点击关闭按钮 使用鼠标点击会有反应.</p>\n<p>而我们要怎么实现呢？</p>\n<p>其实鼠标点击是产生了一个消息。window 把这个消息封装成了消息结构体。 发送给了我们的窗口程序。</p>\n<p>那么 windows 怎么知道你点击的那个窗口呢？</p>\n<p>是这样的 当我们点击的时候 会记录点击坐标。消息。等等 windows 系统会接受到 然后遍历内核中的 WINOBJ 结构 而这个结构中存储着窗口对象 窗口对象对应着消息线程.</p>\n<p>所以 windows 一层一层的遍历。则找到了对应的窗口以及窗口对应的线程。然后发送给我们的应用程序</p>\n<p>上面说的我们需要了解 要知道消息怎么产生的 怎么传递的。那么下面编程就明白了.</p>\n<p>例如下图:</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>每个应用程序都有一个线程对象 而这个线程对象如果创建窗口。那么内核中就有这个窗口对象.</p>\n<p>如果我们有鼠标点击的消息。键盘消息等等。操作系统都会遍历窗口对象 而窗口对象也会保存着创建这个窗口对象对应的线程对象 而这个线程对象中则有消息队列.</p>\n<p>这样的话操作系统则会封装消息发送给我们窗口对象</p>\n<h1 id=\"消息类型\"><a class=\"anchor\" href=\"#消息类型\">#</a> 消息类型</h1>\n<p>我们回调中有我们的消息类型，我们可以判断消息类型进行我们不同的操作。</p>\n<p>比如菜单消息</p>\n<p><code>WM_COMMAND</code> ， 如果是这个消息。那么回调函数的 <code>wparam</code>  等附加信息就是 <code>WM_COMMAND</code>  的附加消息了 我们可以取低位得出操作的菜单 ID. 进而进行消息处理.</p>\n<p><code>WM_PAINT</code>  这个消息是绘制的消息。我们知道。窗口是不断绘制的。所以绘制消息会一直来.</p>\n<p><code>WM_DESTROY</code>   窗口关闭消息 如果接受到这个消息。则调用 API 往消息队列中 (MSG) 中传递退出消息 此时外层主线程就会结束.</p>\n<p>具体 API:<br />\n <code>postQuitMessage(0);</code></p>\n<p>当前具体的消息还要查询 MSDN, 因为消息种类很多.</p>\n<p>windows 消息都是 WM 开头的</p>\n<p>比如查询 <code>WM_COMMAND</code>  消息</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>可以清楚的看到它会告诉你如果是 <code>WM_COMMAND</code>  消息来了那么回调函数的参数分别代表的是什么意思。</p>\n<h1 id=\"窗口类结构\"><a class=\"anchor\" href=\"#窗口类结构\">#</a> 窗口类结构</h1>\n<p>创建窗口程序</p>\n<h2 id=\"进行窗口编程需要注意的问题\"><a class=\"anchor\" href=\"#进行窗口编程需要注意的问题\">#</a> 进行窗口编程需要注意的问题</h2>\n<p>在 Windows 中进行窗口编程，入口点已经改成 WinMain 了 有四个参数</p>\n<p>如以下代码所示</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">wWinMain</span><span class=\"token punctuation\">(</span>_In_ HINSTANCE hInstance<span class=\"token punctuation\">,</span>               <span class=\"token comment\">// 窗口的实例句柄 hinstance 代表模块意思 HWND 代表窗口意思 HANDLE 代表内核对象 HDC 设备上下文</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                     _In_opt_ HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span>        <span class=\"token comment\">// 父窗口句柄   已淘汰</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                     _In_ LPWSTR    lpCmdLine<span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 命令行参数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                     _In_ <span class=\"token keyword\">int</span>       nCmdShow<span class=\"token punctuation\">)</span>                 <span class=\"token comment\">// 命令 最大化命令还是最小化命令</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>wWinMain</code>  因为有 <code>UNICODE</code>  跟 <code>ASCII</code>  区别，所以 <code>UNICODE</code>  使用 <code>wWinMain</code> ， <code>ASCII</code>  版就是用 <code>WinMain</code></p>\n<p>这里我上网上查了一下</p>\n<p>其实并不是程序中有中文时就必须用 <code>Unicode</code>  字符集，当 <code>windows</code>  系统语言为中文时，不管你选择哪个字符集都是可以正常显示中文的，但是系统语言不为中文时就会出现乱码了。所以如果你的软件需要适应多语言的 <code>windows</code>  系统的话就得用 <code>Unicode</code>  字符集。</p>\n<p>另外需要说明的是，当字符集为 <code>Unicode</code>  时，向 api 函数传递的一个字符串的时候应该将该字符串转换为 <code>Unicode</code>  编码的，可用 L 转换：<br />\n <code>CreateWindow(wndClass, L&quot;这是窗口标题&quot;, ......);</code></p>\n<h2 id=\"进行windows编程的调试手法\"><a class=\"anchor\" href=\"#进行windows编程的调试手法\">#</a> 进行 Windows 编程的调试手法</h2>\n<p>在 Windows 中我们调试程序不能简单的使用 printf 进行调试。或者打印输出了 我们可以使用两个 API 进行操作.</p>\n<p>1  <code>wsprintf()</code>  格式化字符串</p>\n<p>2  <code>OutPutDebugString()</code>  输出调试字符串</p>\n<p>详细参见百科：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS93c3ByaW50Zg==\">https://baike.baidu.com/item/wsprintf</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9PdXRwdXREZWJ1Z1N0cmluZw==\">https://baike.baidu.com/item/OutputDebugString</span></p>\n<p>因为 <code>OutPutDebugString()</code>  只能打印固定字符串</p>\n<p>所以使用 wsprintf 进行格式化字符串，如下面代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">wWinMain</span><span class=\"token punctuation\">(</span>_In_ HINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    _In_opt_ HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _In_ LPWSTR    lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _In_ <span class=\"token keyword\">int</span>       nCmdShow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    TCHAR str<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"HelloWin32\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">//MessageBox (0, str, 0, MB_OK);// 也可以弹个窗</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们编译出程序之后，可以使用 DebugView 这款工具查看，也可以在编译器的调试窗口看</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"窗口编程的步骤\"><a class=\"anchor\" href=\"#窗口编程的步骤\">#</a> 窗口编程的步骤</h2>\n<p>1 创建窗口类<br />\n windows 提供的窗口样式。我们需要给定.</p>\n<p>2 注册窗口类<br />\n创建了窗口我们需要注册到 windows 系统中.</p>\n<p>3 创建窗口</p>\n<p>如果注册窗口成功。那么我们需要创建出来这个窗口。并且显示跟更新.</p>\n<p>4 消息处理</p>\n<h2 id=\"窗口编程需要的主要结构\"><a class=\"anchor\" href=\"#窗口编程需要的主要结构\">#</a> 窗口编程需要的主要结构</h2>\n<p>窗口的创建 Windows 已经为我们提供了，这个结构就是 <code>WNDCLASSEX</code>  结构</p>\n<p>看下这个结构中的内容吧</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_WNDCLASSEX</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    UINT       cbSize<span class=\"token punctuation\">;</span>                   扩展的大小 既自己WndClass本身大小<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    UINT       style<span class=\"token punctuation\">;</span>                    风格</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    WNDPROC    lpfnWndProc<span class=\"token punctuation\">;</span>              窗口回调<span class=\"token punctuation\">.</span>消息都要进入这个回调</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span>        cbClsExtra<span class=\"token punctuation\">;</span>              </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span>        cbWndExtra<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    HINSTANCE  hInstance<span class=\"token punctuation\">;</span>                实例句柄</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    HICON      hIcon<span class=\"token punctuation\">;</span>                    图标</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    HCURSOR    hCursor<span class=\"token punctuation\">;</span>                  光标</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    HBRUSH     hbrBackground<span class=\"token punctuation\">;</span>            背景</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    LPCTSTR    lpszMenuName<span class=\"token punctuation\">;</span>             菜单名称</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    LPCTSTR    lpszClassName<span class=\"token punctuation\">;</span>            类名称</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    HICON      hIconSm<span class=\"token punctuation\">;</span>                  最小化图标</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span> WNDCLASSEX<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PWNDCLASSEX<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>你的窗口是什么样式、 大小、是否有图标、 消息处理函数在哪里等等，需要我们给指定。<br />\n还有一个 <code>WNDCLASS</code>  结构，这个是兼容老版本的。如今一般用 <code>WNDCLASSEX</code></p>\n<p>详细见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxMjQzMDY1L2FydGljbGUvZGV0YWlscy84MzUxMzc5NQ==\"> https://blog.csdn.net/qq_31243065/article/details/83513795</span></p>\n<h1 id=\"创建一个窗口程序的详细步骤\"><a class=\"anchor\" href=\"#创建一个窗口程序的详细步骤\">#</a> 创建一个窗口程序的详细步骤</h1>\n<blockquote>\n<p>步骤 1：创建 Windows 应用程序 选择空项目<br />\n步骤 2：在新建项窗口中选 C++ 代码文件 创建一个新的 cpp 文件<br />\n步骤 3：在新的 cpp 文件中添加: <code>#include &lt;Windows.h&gt;</code> <br />\n 并添加入口函数：</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> CALLBACK <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span>                 <span class=\"token comment\">// CALLBACK 是一个宏  #define CALLBACK __stdcall   所有的 Win32 API 函数都遵循该约定 此外 #define WINAPI __stdcall  #define APIENTRY    WINAPI        </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            _In_ HINSTANCE hInstance<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 应用程序当前实例的句柄</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            _In_ HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            _In_ LPSTR lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            _In_ <span class=\"token keyword\">int</span> nCmdShow</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4：设计窗口类<br />\n既能用 <code>WNDCLASS</code>  也能用 <code>WNDCLASSEX</code> <br />\n 例：</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 窗口的类名    </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>TCHAR className<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"My First Window\"</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 创建窗口类的对象     </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>WNDCLASS wndclass <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 一定要先将所有值赋值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>wndclass<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span>COLOR_MENU<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 窗口的背景色    </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>wndclass<span class=\"token punctuation\">.</span>lpfnWndProc <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 窗口过程函数 也叫回调函数   </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>wndclass<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> className<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 窗口类的名字    </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>wndclass<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 标识该窗口所在的实例</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 5：注册窗口类    (这是什么？哈哈哈，就是把结构体赋值后传参调用)</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">RegisterClass</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wndclass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 6：创建窗口</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建窗口     </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span>     </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            className<span class=\"token punctuation\">,</span>                    <span class=\"token comment\">// 类名    </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// 窗口标题    </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            WS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 窗口外观样式     </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>                           <span class=\"token comment\">// 相对于父窗口的 X 坐标    </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>                           <span class=\"token comment\">// 相对于父窗口的 Y 坐标    </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>                          <span class=\"token comment\">// 窗口的宽度     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>                          <span class=\"token comment\">// 窗口的高度     </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                         <span class=\"token comment\">// 父窗口句柄，为 NULL     </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                         <span class=\"token comment\">// 菜单句柄，为 NULL     </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            hInstance<span class=\"token punctuation\">,</span>                    <span class=\"token comment\">// 当前应用程序的句柄     </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token constant\">NULL</span>                          <span class=\"token comment\">// 附加数据一般为 NULL</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hwnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tTCHAR str<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"HelloWin32\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 7：显示窗口</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 显示窗口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 8：消息循环<br />\n GetMessage 函数说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9HZXRNZXNzYWdl\">https://baike.baidu.com/item/GetMessage</span></p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MSG msg<span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>BOOL bRet<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bRet<span class=\"token operator\">=</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span>hwnd<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//TranslateMessage (&amp;msg);      // 键盘消息转换为小写.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 分发消息。将我们的消息传递给我们的回调函数处理 重要函数。此消息会将 Windows 的消息。发送给我们 定义窗口类的时候给的回调函数。这样我们就可以根据消息执行我们代码了.    </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 9：回调函数<br />\n例：</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*                        </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>窗口消息处理程序 窗口回调函数：            </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1、窗口回调函数处理过的消息，必须传回 0.        </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>2、窗口回调不处理的消息，由 DefWindowProc 来处理.    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//  函数: WndProc (HWND, UINT, WPARAM, LPARAM)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//  目的：处理主窗口的消息。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//  WM_COMMAND  - 处理应用程序菜单</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//  WM_PAINT    - 绘制主窗口</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//  WM_DESTROY  - 发送退出消息并返回</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span>         </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            IN HWND hwnd<span class=\"token punctuation\">,</span>     </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            IN UINT uMsg<span class=\"token punctuation\">,</span>     </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            IN WPARAM wParam<span class=\"token punctuation\">,</span>     </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            IN LPARAM lParam     </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>uMsg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token comment\">// 窗口消息</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_COMMAND<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>                           <span class=\"token comment\">// 菜单消息类型</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> wmId <span class=\"token operator\">=</span> <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 取低两位为菜单 ID. 根据菜单 ID 可以进行操作我们的窗口</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token comment\">// 分析菜单选择:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>wmId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">case</span> IDM_EXIT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">DestroyWindow</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 如果不处理。则必须调用这个函数教给默认的窗口回调处理</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_CREATE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_CREATE %d %d\\n\"</span><span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\tCREATESTRUCT<span class=\"token operator\">*</span> createst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CREATESTRUCT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CREATESTRUCT %s\\n\"</span><span class=\"token punctuation\">,</span>createst<span class=\"token operator\">-></span>lpszClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_MOVE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_MOVE %d %d\\n\"</span><span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\tPOINTS points <span class=\"token operator\">=</span> <span class=\"token function\">MAKEPOINTS</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X Y %d %d\\n\"</span><span class=\"token punctuation\">,</span>points<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>points<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_SIZE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_SIZE %d %d\\n\"</span><span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> newWidth <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span> <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> newHeight <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_SIZE %d %d\\n\"</span><span class=\"token punctuation\">,</span>newWidth<span class=\"token punctuation\">,</span>newHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_DESTROY<span class=\"token operator\">:</span>    <span class=\"token comment\">// 销毁</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_DESTROY %d %d\\n\"</span><span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token function\">PostQuitMessage</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token comment\">// 键盘消息</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_KEYUP<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_KEYUP %d %d\\n\"</span><span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_KEYDOWN<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_KEYDOWN %d %d\\n\"</span><span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token comment\">// 鼠标消息</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> WM_LBUTTONDOWN<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_LBUTTONDOWN %d %d\\n\"</span><span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\tPOINTS points <span class=\"token operator\">=</span> <span class=\"token function\">MAKEPOINTS</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_LBUTTONDOWN %d %d\\n\"</span><span class=\"token punctuation\">,</span>points<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>points<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token comment\">//default:</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token comment\">//       return DefWindowProc (hWnd, message, wParam, lParam);// 扔给 windows 处理其他消息</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span>uMsg<span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 扔给 windows 处理其他消息</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>MFC 就是基于此封装</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p>滴水逆向课件<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaUJpbmFyeS9wLzk1ODAyNjguaHRtbA==\"> https://www.cnblogs.com/iBinary/p/9580268.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RmZzA4MjMvYXJ0aWNsZS9kZXRhaWxzLzEwMTk2NDQyMw==\">https://blog.csdn.net/dfg0823/article/details/101964423</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1p6MjIzMzMvYXJ0aWNsZS9kZXRhaWxzLzg5MDg0NTYy\">https://blog.csdn.net/Zz22333/article/details/89084562</span></p>\n",
            "tags": [
                "窗口程序",
                "消息机制",
                "消息类型"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%AC%E8%B4%A8/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%AC%E8%B4%A8/",
            "title": "Win窗口的本质",
            "date_published": "2021-07-05T12:57:58.000Z",
            "content_html": "<h1 id=\"窗口的本质\"><a class=\"anchor\" href=\"#窗口的本质\">#</a> 窗口的本质</h1>\n<p>在学习 Win32 的时候。很多操作都是窗口进行操作的。那么今天就说一下窗口的本质是什么.</p>\n<p>窗口的本质是不断绘制。是 windows 通过消息机制进行绘制的.</p>\n<p>我们知道内存分为高低 2G，其中低 2G 是给应用程序使用的而高 2G 是给操作系统使用的。</p>\n<p>而我们画图形的操作都是操作系统通过底层的 win32k.sys 这个驱动来提供的.<br />\n 进程跟线程管理是通过 ntoskrnl.exe 这个程序来管理的。</p>\n<p>但是三环不能使用，所以提供接口给三环。分别是 <code>kernel32.dll</code>  跟 <code>user32.dll</code>   <code>gdi.dll</code></p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>那么他们之间的区别是什么.</p>\n<p>1.kernel32.dll  管理进程线程跟内存的一个 dll</p>\n<p>2.user32.dll   窗口管理 图形界面管理</p>\n<p>3.gdi.dll      自己绘制的的管理</p>\n<h2 id=\"hwnd与全局句柄表\"><a class=\"anchor\" href=\"#hwnd与全局句柄表\">#</a> HWND 与全局句柄表</h2>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>在进程线程那几节我们知道每一个进程中都有一个私有的句柄表，句柄的名字叫做 <code>HANDLE</code>  代表着一个索引，并对应着内核对象。</p>\n<p>每个窗口的句柄在图形化编程中它不叫 <code>HANDLE</code> ，而叫 <code>HWND</code> ，窗口句柄表是 <code>全局句柄表</code> 。</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>所以在其他程序中也能使用这个句柄。<br />\n所有进程公用这个全局句柄表。</p>\n<h2 id=\"gdi-图形设备接口graphics-device-interface\"><a class=\"anchor\" href=\"#gdi-图形设备接口graphics-device-interface\">#</a> GDI 图形设备接口 (Graphics Device Interface)</h2>\n<p>1. 设备对象（HWND）</p>\n<p>2.DC 设备上下文（设备上下文，Device，Contexts）</p>\n<p>3. 图形对象</p>\n<h3 id=\"设备对象是什么\"><a class=\"anchor\" href=\"#设备对象是什么\">#</a> 设备对象是什么</h3>\n<p>简而言之设备对象的意思就是你要画图形要往哪里画。每一个窗口都有一个窗口句柄。而且是存放在全局窗口句柄表中的。我们可以获取一下。使用 Spy++ 获取.</p>\n<h3 id=\"dc设备上下文\"><a class=\"anchor\" href=\"#dc设备上下文\">#</a> DC 设备上下文</h3>\n<p>DC 设备上下文其实就是这个窗口有一块内存是绘制用的。我们想要往这个窗口绘制。需要先绘制到这个内存中才可以。这块内存就称为 DC 上下文.</p>\n<h3 id=\"图形对象\"><a class=\"anchor\" href=\"#图形对象\">#</a> 图形对象</h3>\n<p>图形对象就是指 <code>画笔``画刷``位图</code> 等等。我们要往内存中画的时候画的默认的，但是一般我们想改变一下形式，所以创建图形对象跟 DC 相关联。那么我们绘制就可以使用图形对象了。</p>\n<h1 id=\"绘制窗口步骤\"><a class=\"anchor\" href=\"#绘制窗口步骤\">#</a> 绘制窗口步骤</h1>\n<p>绘制窗口免不了使用 API。但是使用之前。需要知道我们要操作的步骤.</p>\n<ol>\n<li>\n<p>获取窗口句柄。也就是设备对象。</p>\n</li>\n<li>\n<p>获取窗口中的 DC 上下文。可以理解为获取指定窗口的绘图的那块内存。</p>\n</li>\n<li>\n<p>创建图形对象。 要想绘制，那么首先就需要你自定义的一个绘制的东西才可以。比如你要写字，那么就必须得用图形对象字体，而不能用图形对象画笔。</p>\n</li>\n<li>\n<p>关联图形对象跟 DC。 只要关联了。那么绘制的时候自动就使用你的图形对象了。</p>\n</li>\n<li>\n<p>进行你的绘图操作。 这里就是你写的绘图代码了。</p>\n</li>\n<li>\n<p>释放资源。 不管是窗口句柄也好，DC 也好，图形对象也好，都是内核对象，所以我们需要进行释放。</p>\n</li>\n</ol>\n<h2 id=\"具体api\"><a class=\"anchor\" href=\"#具体api\">#</a> 具体 API</h2>\n<ol>\n<li>获取指定窗口句柄   <code>FindWindowA/FindWindowW</code></li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HWND <span class=\"token function\">FindWindowA</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  LPCSTR lpClassName<span class=\"token punctuation\">,</span>              窗口类名<span class=\"token punctuation\">.</span>字符串<span class=\"token punctuation\">.</span> 可以用Spy<span class=\"token operator\">++</span>获取</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  LPCSTR lpWindowName           窗口名称</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>返回窗口句柄</pre></td></tr></table></figure><ol start=\"2\">\n<li>获取 DC 设备上下文  <code>GetDc()</code></li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HDC <span class=\"token function\">GetDC</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HWND hWnd                    传入设备对象<span class=\"token punctuation\">.</span>也就是窗口句柄</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>创建图形对象</li>\n</ol>\n<p>PS: 创建图形对象。图形对象有很多。有画笔。画刷。等等.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HPEN <span class=\"token function\">CreatePen</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span>      iStyle<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// 创建笔的风格，意思就是你的画笔是实心的 还是虚线 还是其他.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span>      cWidth<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// 笔的宽度。如果实心的。笔的宽度则自定义设置。如果其他。不能超过 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  COLORREF color                <span class=\"token comment\">//RGB 的颜色。你的画笔是什么颜色的。是一串 16 进制可以在线取色</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>返回图形对象</pre></td></tr></table></figure><p>还有常用的。创建矩形区域.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HRGN <span class=\"token function\">CreateRectRgn</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> y1<span class=\"token punctuation\">,</span>                 <span class=\"token comment\">// 坐标</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> x2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> y2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>具体使用可以查询 MSDN:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9kZXNrdG9wL2dkaS93aW5kb3dzLWdkaQ==\">https://docs.microsoft.com/zh-cn/windows/desktop/gdi/windows-gdi</span> 代码使用例子<br />\n如果你安装了 MSDN 2001 版本。搜索 SelectObject 可以看到。图形对象有很多。并且告诉你相应的 API</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>Bitmap  位图。后面是操作的 API</p>\n<p>Brush     画刷</p>\n<p>字体</p>\n<p>笔</p>\n<p>矩形</p>\n<ol start=\"4\">\n<li>关联 DC 跟图形对象</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HGDIOBJ <span class=\"token function\">SelectObject</span><span class=\"token punctuation\">(</span>  HDC hdc<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// handle to DC</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HGDIOBJ hgdiobj   <span class=\"token comment\">// handle to object);</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>写你想要绘制的代码</li>\n</ol>\n<p>这里如果是画线。则用  <code>LineTo(Hdc,x,y)</code>  这个 API  给定一个 DC. 给个 x y 坐标。则可以绘制.</p>\n<p>当然如果指定在哪里开始绘制则用 <code>MoveToEx</code>  指定起始位置.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">MoveToEx</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HDC     hdc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span>     x<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span>     y<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  LPPOINT lppt</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>释放资源</li>\n</ol>\n<p>释放资源很简单了，如果是图形对象，同一使用 <code>DeleteObject(对象)</code>  进行删除.</p>\n<p>如果是 <code>DC</code> , 如果是创建的 <code>DC</code> , 则用 <code>DeleteDc(DC对象)</code>  来进行删除.</p>\n<p>如果是获取的 <code>DC</code>  则用 <code>ReleaseDc(Dc对象)</code>  来进行删除.</p>\n<p>题外话 windows 程序中还有一个 API. 可以获取 DC 中默认的图形对象.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 该函数检索预定义的备用笔、刷子、字体或者调色板的句柄</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HGDIOBJ <span class=\"token function\">GetStockObject</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span>  fnObject                  <span class=\"token comment\">// 对象的类型。你想从 DC 中获取什么对象类型.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>详情见百科<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9HZXRTdG9ja09iamVjdA==\"> https://baike.baidu.com/item/GetStockObject</span></p>\n<p>图像类型如果是 <code>DC_BRUSH</code>  则是获取纯色刷。就不用自己创建色刷了。可以通过操作色刷的 API 进行操作.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>COLORREF <span class=\"token function\">SetDCBrushColor</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HDC      hdc<span class=\"token punctuation\">,</span>         <span class=\"token comment\">// 设备上下文环境句柄。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  COLORREF color        <span class=\"token comment\">//RGB 颜色</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"绘制图形\"><a class=\"anchor\" href=\"#绘制图形\">#</a> 绘制图形</h1>\n<h2 id=\"实例代码\"><a class=\"anchor\" href=\"#实例代码\">#</a> 实例代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//1. 设备对象 就是你要把东西画在什么地方</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 这里使用的是桌面的句柄</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">//2.DC 设备上下文对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 把它看成一块内存，画在内存中，然后再打印到屏幕上</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 获取设备上下文对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tHDC hdc <span class=\"token operator\">=</span> <span class=\"token function\">GetDC</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">//3. 图形对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 获取默认画刷 DC_BRUSH 可以设置颜色</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tHBRUSH hbrush <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span><span class=\"token function\">GetStockObject</span><span class=\"token punctuation\">(</span>DC_BRUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">//4. 关联</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">SelectObject</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> hbrush<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">//5. 开始画矩形</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// 设置画刷颜色</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">SetDCBrushColor</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> <span class=\"token function\">RGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">// 画矩形</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">//6. 销毁对象 释放资源</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">DeleteObject</span><span class=\"token punctuation\">(</span>hbrush<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">ReleaseDC</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> hdc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaUJpbmFyeS9wLzk1ODAyNjguaHRtbA==\">https://www.cnblogs.com/iBinary/p/9580268.html</span></p>\n",
            "tags": [
                "设备对象",
                "DC设备上下文",
                "图形对象"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E4%BA%8B%E4%BB%B6/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E4%BA%8B%E4%BB%B6/",
            "title": "Win事件与线程同步",
            "date_published": "2021-06-03T04:56:46.000Z",
            "content_html": "<h1 id=\"通知类型\"><a class=\"anchor\" href=\"#通知类型\">#</a> 通知类型</h1>\n<p>创建通知类型</p>\n<h2 id=\"createevent函数\"><a class=\"anchor\" href=\"#createevent函数\">#</a> CreateEvent 函数</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HANDLE <span class=\"token function\">CreateEvent</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  LPSECURITY_ATTRIBUTES lpEventAttributes<span class=\"token punctuation\">,</span> <span class=\"token comment\">// SD  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  BOOL bManualReset<span class=\"token punctuation\">,</span>                       <span class=\"token comment\">// reset type  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  BOOL bInitialState<span class=\"token punctuation\">,</span>                      <span class=\"token comment\">// initial state  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  LPCTSTR lpName                           <span class=\"token comment\">// object name  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"参数解析\"><a class=\"anchor\" href=\"#参数解析\">#</a> 参数解析</h2>\n<h3 id=\"lpeventattributes\"><a class=\"anchor\" href=\"#lpeventattributes\">#</a> lpEventAttributes</h3>\n<p>指向 <code>SECURITY_ATTRIBUTES</code>  结构体，此结构体决定函数的返回句柄是否可以让子进程继承。如果这个参数为 <code>NULL</code> ，这个句柄是不能继承的。一般情况下，这个参数设置为 <code>NULL</code> 。</p>\n<h3 id=\"bmanualreset\"><a class=\"anchor\" href=\"#bmanualreset\">#</a> bManualReset</h3>\n<p>指定将创建的 <code>EVENT</code>  是自动复位还是手动复位。如果为 <code>TRUE</code> ，需要用 <code>ResetEvent(HANDLE)</code>  函数手动复位状态为无信号，即一旦改 <code>EVENT</code>  被设置成有信号，则它会一直等到 <code>ResetEvent</code>  调用时才为无信号状态。如果为 <code>FALSE</code> ，当一个有信号的等待线程被释放后，系统会自动复位状态为无信号状态。</p>\n<h3 id=\"binitialstate\"><a class=\"anchor\" href=\"#binitialstate\">#</a> bInitialState</h3>\n<p>指定事件对象的初始状态。如果为 <code>TRUE</code> ，初始状态为有信号，否则为无信号。</p>\n<h3 id=\"lpname\"><a class=\"anchor\" href=\"#lpname\">#</a> lpName</h3>\n<p>事件对象的名称，以字符串表示。名称的长度受 <code>MAX_PATH</code>  的限制，名称是大小写敏感的。</p>\n<p>如果 <code>lpName</code>  匹配一个存在的命名的事件对象，函数将请求 <code>EVENT_ALL_ACCESS</code>  来访问存在的对象。在这种情况下， <code>bManualReset</code>  和 <code>bInitialState</code>  被忽略，因为这两个参数已经被存在的事件设置。如果 <code>lpEventAttributes</code>  参数不为 <code>NULL</code> ，这个参数可以决定是否句柄被继承，但是它的安全描述 <code>（security-descriptor）</code> 成员被忽略。</p>\n<p>如果 <code>lpName</code>  为 <code>NULL</code> ，创建一个没有名称的事件。</p>\n<p>如果 <code>lpName</code>  匹配一个存在的 <code>semaphore</code> , <code>mutex</code> ,  <code>waitable timer</code> ,  <code>job</code>  或者 <code>file-mapping</code>  对象的名称，函数调用失败， <code>GetLastError</code>  函数返回 <code>ERROR_INVALID_HANDLE</code> 。由于这些对象共享相同的命名空间，才导致这种情况的发生。</p>\n<h2 id=\"返回值\"><a class=\"anchor\" href=\"#返回值\">#</a> 返回值</h2>\n<p>函数返回句柄，该句柄具有 <code>EVENT_ALL_ACCESS</code>  权限去访问新的事件对象，同时它可以在任何需要事件对象句柄的函数中使用。</p>\n<h2 id=\"事件的初始状态\"><a class=\"anchor\" href=\"#事件的初始状态\">#</a> 事件的初始状态</h2>\n<p>事件对象的初始状态由 <code>bInitialState</code>  参数指定，用 <code>SetEvent函数</code> 可以设置对象为有信号状态，用 <code>ResetEvent函数</code> 可以设置对象为无信号状态。</p>\n<p><span class=\"label info\">应用:</span><br />\n 调用过程中的任何线程，都可以在一个等待函数中指定事件对象句柄。当指定的对象的状态为有信号时，单对象等待函数（例如 WaitForSingleObject）返回。对于多对象等待函数（例如 WaitForMultipleObjects），可以指定为任意或所有指定的对象被置为有信号状态。当等待函数返回时，等待线程将被释放去继续它的执行。</p>\n<p>当一个手动复原的事件对象的状态被置为有信号状态时，该对象将一直保持有信号状态，直至明确调用 <code>ResetEvent</code>  函数将其置为无符号状态。</p>\n<p>注意： <span class=\"label danger\">当事件对象被设置为有信号状态时，任何数量的等待线程或者随后等待的线程都会被释放。</span></p>\n<p><code>SetEvent(HANDLE hEvent);</code> <br />\n <code>ResetEvent(HANDLE hEvent);</code></p>\n<h2 id=\"实例代码\"><a class=\"anchor\" href=\"#实例代码\">#</a> 实例代码</h2>\n<p>通过修改 <code>bManualReset</code>  和 <code>bInitialState</code>  来深刻理解 <code>CreateEvent</code>  函数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span>  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc2</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>HANDLE hEvent <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>HANDLE hThread1 <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>HANDLE hThread2 <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    hEvent <span class=\"token operator\">=</span> <span class=\"token function\">CreateEvent</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用手动重置为无信号状态，初始化时有信号状态</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    从结果中看，执行完线程 1 又执行了线程 2.</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    hEvent 一直处于有信号状态，无论线程 1 是否释放，hEvent 仍处于有信号状态，所以线程 2 也正常执行了。</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">//hEvent = CreateEvent (NULL, FALSE, FALSE, NULL);// 使用自动重置为无信号状态，初始化为无信号状态</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    由于调用 SetEvent，hEvent 为有信号状态，线程 1 正常执行，又由于调用完线程 1 后，hEvent 自动重置为无信号状态，所以线程 2 只能在等待，直到主线程退出。</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    修改：线程 1 中的 SetEvent (hEvent); 的注释去掉，再运行，则线程 1 和线程 2 都会执行。</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">//hEvent = CreateEvent (NULL, FALSE, TRUE, NULL); // 当一个等待线程被释放时，自动重置为无信号状态，初始是有信号状态  </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    从执行结果中分析，执行了线程 1，线程 2 一直在等待，直到主线程结束。</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    由于 hEvent = CreateEvent (NULL, FALSE, TRUE, NULL)，当一个等待线程被释放时，自动重置为无信号状态，初始是有信号状态</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    初始执行线程 1 的时候，hEvent 是有信号的，所以线程 1 正常执行；又由于 bManualReset=FALSE，所以执行完线程 1 后，hEvent 自动重置为无信号状态</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    WaitForSingleObject (hEvent,INFINITE); 函数一直在等待 hEvent 变为有信号状态，但是当主线程执行完，还没等待到，线程 2 程序一直没有走下去。</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">//hEvent = CreateEvent (NULL, TRUE, FALSE, NULL);// 使用手动重置为无信号状态，初始化时无信号状态</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    执行结果，可想而知，只能输出：</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    in thread1@!</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    in thread2@!</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    因为初始为无信号状态，所以 hEvent 一直处于无信号状态，因此这两个线程一直在等待，直到主线程结束。</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    修改：放开例子中的注释部分：</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    if (SetEvent (hEvent))// 设置信号为有信号状态</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    cout &lt;&lt; \"setEvent 成功\" &lt;&lt;endl;</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    可见，线程 1 和线程 2 都执行了。</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    因为调用 SetEvent，事件变为有信号状态，线程 1 执行；又由于线程 1 释放后，hEvent 仍旧处于有信号状态，所以线程 2 也执行了。</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    再修改：在线程 1 中，添加 ResetEvent (hEvent)（手动设置事件为无信号状态），则线程 2 不会执行。</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\">// 在第 1、3、4 种情况下注释 SetEvent 函数</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">//if (SetEvent(hEvent))  </span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">//&#123;  </span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">//  cout &lt;&lt; \"setEvent 成功\" &lt;&lt;endl;  </span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">// 创建线程</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    hThread1 <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>ThreadProc1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    hThread2 <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>ThreadProc2<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> hThread1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"create thread fail!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token comment\">//system(\"pause\");</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"in thread1@!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    DWORD dReturn <span class=\"token operator\">=</span> <span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hEvent<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>WAIT_OBJECT_0 <span class=\"token operator\">==</span> dReturn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" thread1 signaled ! \"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"in thread1 --signal\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token comment\">//SetEvent(hEvent); </span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token comment\">//ResetEvent(hEvent);</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc2</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"in thread2@!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    DWORD dReturn <span class=\"token operator\">=</span> <span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hEvent<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>WAIT_OBJECT_0 <span class=\"token operator\">==</span> dReturn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"thread2 signaled ! \"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"in thread2--signal\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"线程同步\"><a class=\"anchor\" href=\"#线程同步\">#</a> 线程同步</h1>\n<p>线程互斥：线程互斥是指对于共享的进程系统资源，在各单个线程访问时的排它性。当有若干个线程都要使用某一共享资源时， 任何时刻最多只允许一个线程去使用，其它要使用该资源的线程必须等待，直到占用资源者释放该资源。</p>\n<p>线程同步：线程同步是指线程之间所具有的一种制约关系，一个线程的执行依赖另一个线程的消息，当它没有得到另一个线程的消息时应等待，直到消息到达时才被唤醒。</p>\n<p>同步 = 互斥 + 有序执行</p>\n<p>同步的前提是互斥</p>\n<h2 id=\"生产者和消费者\"><a class=\"anchor\" href=\"#生产者和消费者\">#</a> 生产者和消费者</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>HANDLE hproducer<span class=\"token punctuation\">,</span> hconsumer<span class=\"token punctuation\">;</span><span class=\"token comment\">// 生产者消费者句柄</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> G_Max <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> G_Product <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>DWORD WINAPI <span class=\"token function\">Thread1</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>DWORD WINAPI <span class=\"token function\">Thread2</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\thproducer <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">CreateEvent</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\thconsumer <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">CreateEvent</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Thread1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Thread2<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token function\">WaitForMultipleObjects</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> hThread<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hproducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hconsumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>DWORD WINAPI <span class=\"token function\">Thread1</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> G_Max<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hproducer<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 一直在等待信号</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token operator\">++</span>G_Product<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tDWORD id <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">GetCurrentThreadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"生产者%d生产一个！产品数量为%d\\n\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> G_Product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token function\">SetEvent</span><span class=\"token punctuation\">(</span>hconsumer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>DWORD WINAPI <span class=\"token function\">Thread2</span><span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> G_Max<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hconsumer<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token operator\">--</span>G_Product<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tDWORD id <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">GetCurrentThreadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者%d消费一个!产品剩余数量为%d\\n\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> G_Product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token function\">SetEvent</span><span class=\"token punctuation\">(</span>hproducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTE2NDI3NzQvYXJ0aWNsZS9kZXRhaWxzLzUyNzg5OTY5\">https://blog.csdn.net/u011642774/article/details/52789969</span></p>\n",
            "tags": [
                "Win事件",
                "线程同步"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E4%BA%92%E6%96%A5%E4%BD%93/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E4%BA%92%E6%96%A5%E4%BD%93/",
            "title": "Win互斥体",
            "date_published": "2021-05-31T12:05:41.000Z",
            "content_html": "<h1 id=\"内核级临界资源怎么办\"><a class=\"anchor\" href=\"#内核级临界资源怎么办\">#</a> 内核级临界资源怎么办</h1>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h1 id=\"跨进程的线程控制之互斥体\"><a class=\"anchor\" href=\"#跨进程的线程控制之互斥体\">#</a> 跨进程的线程控制之互斥体</h1>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>很少用到快进程的线程控制，如打印机。<br />\n在一个进程中对互斥的控制完全没有必要起名字。</p>\n<p><span class=\"label info\">示例代码</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>进程一：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>HANDLE g_hMutex <span class=\"token operator\">=</span> <span class=\"token function\">CreateMutex</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>FALSE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"XYZ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>进程二：</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>HANDLE g_hMutex <span class=\"token operator\">=</span> <span class=\"token function\">OpenMutex</span><span class=\"token punctuation\">(</span>MUTEX_ALL_ACCESS<span class=\"token punctuation\">,</span>FALSE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"XYZ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>g_hMutex<span class=\"token punctuation\">,</span>INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 逻辑代码</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">ReleaseMutex</span><span class=\"token punctuation\">(</span>g_hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>进程三：</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>HANDLE g_hMutex <span class=\"token operator\">=</span> <span class=\"token function\">OpenMutex</span><span class=\"token punctuation\">(</span>MUTEX_ALL_ACCESS<span class=\"token punctuation\">,</span>FALSE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"XYZ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>g_hMutex<span class=\"token punctuation\">,</span>INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// 逻辑代码</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">ReleaseMutex</span><span class=\"token punctuation\">(</span>g_hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"createmutex函数\"><a class=\"anchor\" href=\"#createmutex函数\">#</a> CreateMutex 函数</h1>\n<p>创建或打开一个已命名或未命名的互斥对象</p>\n<h2 id=\"函数声明\"><a class=\"anchor\" href=\"#函数声明\">#</a> 函数声明</h2>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h2 id=\"参数详解\"><a class=\"anchor\" href=\"#参数详解\">#</a> 参数详解</h2>\n<h3 id=\"lpmutexattributes\"><a class=\"anchor\" href=\"#lpmutexattributes\">#</a> lpMutexAttributes</h3>\n<p><code>SECURITY_ATTRIBUTES lpMutexAttributes</code> ，指定一个 SECURITY_ATTRIBUTES 结构，或传递零值（将参数声明为 ByVal As Long，并传递零值），表示使用不允许继承的默认描述符</p>\n<h3 id=\"binitialowner\"><a class=\"anchor\" href=\"#binitialowner\">#</a> bInitialOwner</h3>\n<p><code>BOOL bInitialOwner</code>  ，如创建进程希望立即拥有互斥体，则设为 TRUE。一个互斥体同时只能由一个线程拥有</p>\n<h3 id=\"lpname\"><a class=\"anchor\" href=\"#lpname\">#</a> lpName</h3>\n<p><code>String lpName</code> ，指定互斥体对象的名字。如已经存在拥有这个名字的一个事件，则打开现有的已命名互斥体。</p>\n<h1 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 创建一个互斥体</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tHANDLE g_hMutex <span class=\"token operator\">=</span> <span class=\"token function\">CreateMutex</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 第三个参数：随便起一个名字</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 获取令牌</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>g_hMutex<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 释放令牌</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">ReleaseMutex</span><span class=\"token punctuation\">(</span>g_hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"互斥体与线程锁的区别\"><a class=\"anchor\" href=\"#互斥体与线程锁的区别\">#</a> 互斥体与线程锁的区别</h1>\n<ol>\n<li>线程锁只能用于单个进程间的线程控制</li>\n<li>互斥体可以设定等待超时，但线程锁不能</li>\n<li>线程意外终结时，Mutex 可以避免无限等待</li>\n<li>Mutex 效率没有线程锁高</li>\n</ol>\n<h1 id=\"通过互斥体防止程序多开\"><a class=\"anchor\" href=\"#通过互斥体防止程序多开\">#</a> 通过互斥体防止程序多开</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tHANDLE hMutex <span class=\"token operator\">=</span> <span class=\"token function\">CreateMutex</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"防止多开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">//1. 第一次打开程序的时候 GetLastError () 返回值为：0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">//2. 第二次打开程序的时候 GetLastError () 返回为：ERROR_ALREADY_EXISTS</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">//3. 其它情况则是程序出错</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tDWORD dwRet <span class=\"token operator\">=</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ERROR_ALREADY_EXISTS <span class=\"token operator\">==</span> dwRet<span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 如果是第二次打开程序，直接关闭进程</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序已存在\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建失败，程序退出\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序执行中.....\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Win互斥体"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E4%B8%B4%E7%95%8C%E5%8C%BA/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E4%B8%B4%E7%95%8C%E5%8C%BA/",
            "title": "Win临界区",
            "date_published": "2021-05-31T12:05:19.000Z",
            "content_html": "<h1 id=\"临界区\"><a class=\"anchor\" href=\"#临界区\">#</a> 临界区</h1>\n<h2 id=\"线程安全问题\"><a class=\"anchor\" href=\"#线程安全问题\">#</a> 线程安全问题</h2>\n<p>每个线程都有自己的栈，而局部变量是存储在栈中的，这就意味着每个线程都有一份自己的 “局部变量 &quot;, 如果线程仅仅使用 “局部变量” 那么就不存在线程安全问题。那如果多个线程共用 - 一个全局变量呢？</p>\n<h2 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"临界区实现之线程锁\"><a class=\"anchor\" href=\"#临界区实现之线程锁\">#</a> 临界区实现之线程锁</h2>\n<p>&lt;1&gt; 创建全局变量<br />\n <code>CRITICAL_SECTION cs;</code> <br />\n&lt;2&gt; 初始化全局变量<br />\n <code>InitializeCriticalSection(&amp;cs);</code> <br />\n&lt;3&gt; 实现临界区<br />\n <code>EnterCriticalSection(&amp;cs);</code> <br />\n&lt;4&gt; 使用临界资源<br />\n <code>LeaveCriticalSection(&amp;cs);</code></p>\n<h2 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> g_dwTickets <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>CRITICAL_SECTION cs<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 创建全局变量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>DWORD WINAPI <span class=\"token function\">MyFirstThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">EnterCriticalSection</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 实现临界区</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>g_dwTickets <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"还有：%d张票\\n\"</span><span class=\"token punctuation\">,</span> g_dwTickets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tg_dwTickets<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"卖出一张，还有：%d张票\\n\"</span><span class=\"token punctuation\">,</span> g_dwTickets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">LeaveCriticalSection</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 使用临界资源</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tHANDLE arrThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">InitializeCriticalSection</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 初始化全局变量</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tarrThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MyFirstThreadProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tarrThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MyFirstThreadProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">WaitForMultipleObjects</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> arrThread<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>arrThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>arrThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Win临界区"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E7%BA%BF%E7%A8%8B/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E7%BA%BF%E7%A8%8B/",
            "title": "Win线程",
            "date_published": "2021-05-26T11:49:21.000Z",
            "content_html": "<h1 id=\"什么是线程\"><a class=\"anchor\" href=\"#什么是线程\">#</a> 什么是线程</h1>\n<ul>\n<li>线程是附属在进程上的执行实体，是代码的执行流程</li>\n<li>一个进程课以包含多个线程，但一个进程至少要包含一个线程。</li>\n</ul>\n<p>滴水老师：进程是一种空间上的概念，它代表的是 4GB 的虚拟内存。线程是一种时间上的概念，线程就是当前正在运行的代码。</p>\n<h1 id=\"创建线程\"><a class=\"anchor\" href=\"#创建线程\">#</a> 创建线程</h1>\n<h2 id=\"createthread函数\"><a class=\"anchor\" href=\"#createthread函数\">#</a> CreateThread 函数</h2>\n<p>返回值：函数成功，返回线程句柄；函数失败返回 false。若不想返回线程 ID, 设置值为 NULL。<br />\n函数说明：<br />\n创建一个线程。<br />\n语法：<br />\n <code>hThread = CreateThread (&amp;security_attributes, dwStackSize, ThreadProc,pParam, dwFlags, &amp;idThread);</code></p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WINBASEAPI</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>_Ret_maybenull_</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>HANDLE</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>WINAPI</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 安全设置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t_In_ SIZE_T dwStackSize<span class=\"token punctuation\">,</span>\t\t\t\t\t\t\t\t<span class=\"token comment\">// 堆栈大小</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t_In_ LPTHREAD_START_ROUTINE lpStartAddress<span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\">// 要执行的线程函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t_In_opt_ __drv_aliasesMem LPVOID lpParameter<span class=\"token punctuation\">,</span>\t\t\t<span class=\"token comment\">// 要执行的线程函数的参数，类型为 LPVOID</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t_In_ DWORD dwCreationFlags<span class=\"token punctuation\">,</span>\t\t\t\t\t\t\t\t<span class=\"token comment\">// 启动选项</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t_Out_opt_ LPDWORD lpThreadId\t\t\t\t\t\t\t<span class=\"token comment\">// 输出线程 ID</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">// 函数返回线程的句柄</span></pre></td></tr></table></figure><h2 id=\"参数说明\"><a class=\"anchor\" href=\"#参数说明\">#</a> 参数说明</h2>\n<p>关于这个函数的说明，百度百科很详细<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DcmVhdGVUaHJlYWQvODIyMjY1Mg==\"> https://baike.baidu.com/item/CreateThread/8222652</span></p>\n<h3 id=\"lpthreadattributes\"><a class=\"anchor\" href=\"#lpthreadattributes\">#</a> lpThreadAttributes</h3>\n<p>lpThreadAttributes：指向 SECURITY_ATTRIBUTES 型态的结构的指针。在 Windows 98 中忽略该参数。在 Windows NT 中，NULL 使用默认安全性，不可以被子线程继承，否则需要定义一个结构体将它的 bInheritHandle 成员初始化为 TRUE<br />\ndwStackSize，设置初始栈的大小，以字节为单位，如果为 0，那么默认将使用与调用该函数的线程相同的栈空间大小。任何情况下，Windows 根据需要动态延长堆栈的大小。</p>\n<h3 id=\"lpstartaddress\"><a class=\"anchor\" href=\"#lpstartaddress\">#</a> lpStartAddress</h3>\n<p>lpStartAddress，指向线程函数的指针，形式：@函数名，函数名称没有限制，<br />\n线程有两种声明方式<br />\n（1）DWORD WINAPI 函数名 (LPVOID lpParam); // 标准格式</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DWORD WINAPI 函数名 <span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> 函数名<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>（2）void 函数名 ();<br />\n 使用 void 函数名 () 此种线程声明方式时，lpStartAddress 需要加入 LPTHREAD_START_ROUTINE 转换，如</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> 函数名<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>函数名<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"lpparameter\"><a class=\"anchor\" href=\"#lpparameter\">#</a> lpParameter</h3>\n<p>lpParameter：向线程函数传递的参数，是一个指向结构的指针，不需传递参数时，为 NULL。</p>\n<h3 id=\"dwcreationflags\"><a class=\"anchor\" href=\"#dwcreationflags\">#</a> dwCreationFlags</h3>\n<p>dwCreationFlags ：线程标志，可取值如下<br />\n（1）CREATE_SUSPENDED (0x00000004)：创建一个挂起的线程，<br />\n（2）0：表示创建后立即激活。<br />\n（3）STACK_SIZE_PARAM_IS_A_RESERVATION (0x00010000)：dwStackSize 参数指定初始的保留堆栈 的大小，否则，dwStackSize 指定提交的大小。该标记值在 Windows 2000/NT and Windows Me/98/95 上不支持。</p>\n<h3 id=\"lpthreadid\"><a class=\"anchor\" href=\"#lpthreadid\">#</a> lpThreadId</h3>\n<p>lpThreadId: 保存新线程的 id。</p>\n<h2 id=\"实例代码\"><a class=\"anchor\" href=\"#实例代码\">#</a> 实例代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 强转传递的参数的类型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lpParameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">//cout &lt;&lt; *p &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"子+++++\"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 参数</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tHANDLE hThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">//1. 返回的是线程句柄</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">//2. 第三个参数是要执行的线程函数</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">//3. 第四个参数是要执行的线程函数的参数，类型为 LPVOID</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token comment\">//hThread </span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">//cout &lt;&lt; hThread &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"父------%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"线程控制api\"><a class=\"anchor\" href=\"#线程控制api\">#</a> 线程控制 API</h1>\n<h2 id=\"如何让线程停下来\"><a class=\"anchor\" href=\"#如何让线程停下来\">#</a> 如何让线程停下来</h2>\n<p>让自己停下来:<br />\n <code>Sleep()</code> <br />\n 让别人停下来:<br />\n <code>SuspendThread()</code> <br />\n 线程恢复:<br />\n <code>ResumeThread()</code></p>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lpParameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"+++++%d \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\thThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">SuspendThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 挂起线程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">ResumeThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t   <span class=\"token comment\">// 恢复线程</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 防止主线程结束</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"相关函数\"><a class=\"anchor\" href=\"#相关函数\">#</a> 相关函数</h2>\n<p>在多线程下面，有时候我们会希望等待某一线程完成了再继续做其他事情，要实现这个目的，可以使用 Windows API 函数 <code>WaitForSingleObject</code> ，或者 <code>WaitForMultipleObjects</code> 。这两个函数都会等待  <code>Object</code>  被标为有信号 (signaled) 时才返回的。<br />\n那么，什么是信号呢？<br />\n简单来说，Windows 下创建的 <code>Object</code>  都会被赋予一个状态量。如果 <code>Object</code>  被激活了，或者正在使用，那么该 <code>Object</code>  就是无信号，也就是不可用；另一方面，如果 <code>Object</code>  可用了，那么它就恢复有信号了。<br />\n这两个函数的优点是它们在等待的过程中会进入一个非常高效沉睡状态，只占用极少的 CPU 时间片。（这两个函数都是在内核状态下等待内核对象，不切换到用户模式下，因而效率很高）</p>\n<h3 id=\"waitforsingleobject\"><a class=\"anchor\" href=\"#waitforsingleobject\">#</a> WaitForSingleObject</h3>\n<ol>\n<li>格式</li>\n</ol>\n<p><code>DWORD WaitForSingleObject( HANDLE hHandle, DWORDdwMilliseconds);</code></p>\n<p>有两个参数，分别是 <code>THandle</code>  和 <code>Timeout</code>  (毫秒单位)。</p>\n<p>如果想要等待一条线程，那么你需要指定线程的 <code>Handle</code> ，以及相应的 <code>Timeout</code>  时间。当然，如果你想无限等待下去， <code>Timeout</code>  参数可以指定系统常量 <code>INFINITE</code> 。</p>\n<ol start=\"2\">\n<li>使用对象</li>\n</ol>\n<p>它可以等待如下几种类型的对象：</p>\n<p><code>Event</code> ， <code>Mutex</code> ， <code>Semaphore</code> ， <code>Process</code> ， <code>Thread</code></p>\n<ol start=\"3\">\n<li>返回类型</li>\n</ol>\n<p>有三种返回类型：</p>\n<p><code>WAIT_OBJECT_0</code> , 表示等待的对象有信号（对线程来说，表示执行结束）；</p>\n<p><code>WAIT_TIMEOUT</code> , 表示等待指定时间内，对象一直没有信号（线程没执行完）；</p>\n<p><code>WAIT_ABANDONED</code>  表示对象有信号，但还是不能执行  一般是因为未获取到锁或其他原因</p>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span> LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\thThread<span class=\"token operator\">=</span><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>FunProc<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tDWORD dwRet<span class=\"token operator\">=</span><span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dwRet<span class=\"token operator\">==</span>WAIT_OBJECT_0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建的线程执行结束\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dwRet<span class=\"token operator\">==</span>WAIT_TIMEOUT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"等待超时\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dwRet<span class=\"token operator\">==</span>WAIT_ABANDONED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Abandoned\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span> LPVOID lpParameter <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d  \"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"waitformultipleobjecct\"><a class=\"anchor\" href=\"#waitformultipleobjecct\">#</a> WaitForMultipleObjecct</h3>\n<p>相对来说， <code>WaitForMultipleObjects</code>  要复杂点点</p>\n<p>格式为：</p>\n<p><code>DWORD WaitForMultipleObjects(DWORD nCount, CONST HANDLE *lpHandles, BOOL bWaitAll, DWORD dwMilliseconds);</code></p>\n<p>四个参数分别是：</p>\n<ol>\n<li><code>nCount</code> ，DWORD 类型，用于指定句柄数组的数量</li>\n<li><code>lphObjects</code> ，Pointer 类型，用于指定句柄数组的内存地址</li>\n<li><code>bWaitAll</code> ，Bool 类型，  <code>TRUE</code>  表示函数等待所有指定句柄的 <code>Object</code>  有信号为止， <code>FALSE</code>  当有其中一个信号量有效时就向下执行</li>\n<li><code>dwTimeout</code> ，DWORD 类型，用于指定等待的 Timeout 时间，单位毫秒，可以是 <code>INFINITE</code></li>\n</ol>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">WaitForMultipleObjects</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> hThread<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 线程执行结束后打印</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"End of thread execution!!!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**************%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"terminatethread\"><a class=\"anchor\" href=\"#terminatethread\">#</a> TerminateThread</h3>\n<p>TerminateThread 在线程外终止一个线程，用于强制终止线程。</p>\n<h4 id=\"声明\"><a class=\"anchor\" href=\"#声明\">#</a> 声明</h4>\n<p><code>BOOLTerminateThread( HANDLEhThread,DWORDdwExitCode);</code></p>\n<h4 id=\"参数详解\"><a class=\"anchor\" href=\"#参数详解\">#</a> 参数详解</h4>\n<p><code>HANDLE hThread</code> ：被终止的线程的句柄，为 <code>CWinThread</code>  指针。<br />\n <code>DWORD dwExitCode</code> ：退出码。</p>\n<h4 id=\"返回值\"><a class=\"anchor\" href=\"#返回值\">#</a> 返回值</h4>\n<p>函数执行成功则返回非零值，执行失败返回 0。调用 GetLastError 获得返回的值。</p>\n<hr />\n<p><span class=\"label danger\">💔注意</span><br />\n TerminateThread 强烈不建议使用，因为这个函数的执行是异步的，<br />\n你无法保证调用之后会立即退出，同时线程的堆栈均不会被销毁，<br />\n导致内存泄露。如果调用了这个函数，请确保使用 WaitForSingleObject 来等待线程对象的结束。</p>\n<h3 id=\"getexitcodethread\"><a class=\"anchor\" href=\"#getexitcodethread\">#</a> GetExitCodeThread</h3>\n<p>GetExitCodeThread () 将传回线程函数的返回值。然而，GetExitCodeThread () 的一个糟糕行为是，当线程还在进行，尚未有所谓结束代码时，它会传回 TRUE 表示成功。如果这样，IpExitCode 指向的内存区域中应该放的是 STILL-ACTIVE, 你必须小心这种行为，也就是说你不可能从其返回值中知道 “到底是线程还在运行呢，还是它已结束，但返回值为 STILL_ACTIVE”。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL   <span class=\"token function\">GetExitCodeThread</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HANDLE    hThread<span class=\"token punctuation\">,</span>                 <span class=\"token comment\">//in, 线程 handle, 也就是 CreateThread () 的返回值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LPDWORD   lpExitCode               <span class=\"token comment\">//out, 存储线程结束代码，也就是线程的返回值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>说明：此函数调用成功返回 <code>TRUE</code> , 失败返回 <code>FALSE</code> , 只表示这个函数是否调用成功而己，不能根据返回值来判断一个线程是否结束，而要根据 <code>lpExitCode</code>  的值来确定。</p>\n<p><code>lpExitCode</code>  值为 <code>STILL_ACTIVE</code>  表示线程正在运行，若线程己经结束，则 <code>lpExitCode</code>  中存储指定线程的返回值.</p>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tDWORD  dwResult<span class=\"token punctuation\">,</span> dwResult1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">WaitForMultipleObjects</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> hThread<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">GetExitCodeThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">GetExitCodeThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwResult1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 线程执行结束后打印</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"End of thread execution!!!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">// 打印返回值</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Thread return: \"</span><span class=\"token operator\">&lt;&lt;</span> dwResult <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Thread1 return: \"</span> <span class=\"token operator\">&lt;&lt;</span> dwResult1 <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**************%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"context-结构体\"><a class=\"anchor\" href=\"#context-结构体\">#</a> CONTEXT 结构体</h1>\n<p>当线程进行切换的时候，上一个未执行完毕的线程的状态会保存在 CONTEXT 结构体中。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_CONTEXT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD           ContextFlags    <span class=\"token comment\">// -|               +00h</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    DWORD           Dr0             <span class=\"token comment\">//  |               +04h</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD           Dr1             <span class=\"token comment\">//  |               +08h</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    DWORD           Dr2             <span class=\"token comment\">//  > 调试寄存器     +0Ch</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    DWORD           Dr3             <span class=\"token comment\">//  |               +10h</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    DWORD           Dr6             <span class=\"token comment\">//  |               +14h</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    DWORD           Dr7             <span class=\"token comment\">// -|               +18h</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    FLOATING_SAVE_AREA FloatSave<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 浮点寄存器区      +1Ch~~~88h</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    DWORD           SegGs           <span class=\"token comment\">//-|                +8Ch</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    DWORD           SegFs           <span class=\"token comment\">// |\\ 段寄存器       +90h</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    DWORD           SegEs           <span class=\"token comment\">// |/               +94h</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    DWORD           SegDs           <span class=\"token comment\">//-|                +98h</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    DWORD           Edi             <span class=\"token comment\">//________          +9Ch</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    DWORD           Esi             <span class=\"token comment\">// |  通用          +A0h</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    DWORD           Ebx             <span class=\"token comment\">// |   寄           +A4h</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    DWORD           Edx             <span class=\"token comment\">// |   存           +A8h</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    DWORD           Ecx             <span class=\"token comment\">// |   器           +ACh</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    DWORD           Eax             <span class=\"token comment\">//_|___组_          +B0h</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    DWORD           Ebp             <span class=\"token comment\">//++++++            +B4h</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    DWORD           Eip             <span class=\"token comment\">// | 控制            +B8h</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    DWORD           SegCs           <span class=\"token comment\">// | 寄存            +BCh</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    DWORD           EFlag           <span class=\"token comment\">// | 器组            +C0h</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    DWORD           Esp             <span class=\"token comment\">// |                +C4h</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    DWORD           SegSs           <span class=\"token comment\">//++++++            +C8h</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    BYTE    ExtendedRegisters<span class=\"token punctuation\">[</span>MAXIMUM_SUPPORTED_EXTENSION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CONTEXT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">typedef</span>     CONTEXT     <span class=\"token operator\">*</span>PCONTEXT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>     <span class=\"token macro-name\">MAXIMUM_SUPPORTED_EXTENSION</span>     <span class=\"token expression\"><span class=\"token number\">512</span></span></span></pre></td></tr></table></figure><h2 id=\"获取和设置线程上下文\"><a class=\"anchor\" href=\"#获取和设置线程上下文\">#</a> 获取和设置线程上下文</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>BOOL <span class=\"token function\">GetThreadContext</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">,</span> \t\t<span class=\"token comment\">// handle to thread with context</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPCONTEXT IpContext \t<span class=\"token comment\">// context structure</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 设置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>BOOL <span class=\"token function\">SetThreadContext</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">,</span>\t     \t<span class=\"token comment\">// handle to thread</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tCONST CONTEXT <span class=\"token operator\">*</span>lpContext    <span class=\"token comment\">//context structure</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tCONTEXT context<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">SuspendThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 需要哪个值赋给哪个值</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tcontext<span class=\"token punctuation\">.</span>ContextFlags <span class=\"token operator\">=</span> CONTEXT_INTEGER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">GetThreadContext</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EAX:%#X\\nECX:%#X\\n\"</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>Eax<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>Ecx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**************%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9iYWkxNTkzL2FydGljbGUvZGV0YWlscy82NjcyMTkz\">https://blog.csdn.net/xiaobai1593/article/details/6672193</span></p>\n",
            "tags": [
                "创建线程",
                "线程控制",
                "线程相关API",
                "线程上下文",
                "CONTEXT结构体"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E8%BF%9B%E7%A8%8B%E3%80%81%E5%8F%A5%E6%9F%84%E8%A1%A8/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E8%BF%9B%E7%A8%8B%E3%80%81%E5%8F%A5%E6%9F%84%E8%A1%A8/",
            "title": "Win进程、句柄表",
            "date_published": "2021-05-20T15:14:28.000Z",
            "content_html": "<h1 id=\"进程\"><a class=\"anchor\" href=\"#进程\">#</a> 进程</h1>\n<h2 id=\"进程是什么\"><a class=\"anchor\" href=\"#进程是什么\">#</a> 进程是什么</h2>\n<p>进程提供程序所需的资源，如：数据、代码等等。</p>\n<h2 id=\"进程内存空间的地址划分\"><a class=\"anchor\" href=\"#进程内存空间的地址划分\">#</a> 进程内存空间的地址划分</h2>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"进程的创建\"><a class=\"anchor\" href=\"#进程的创建\">#</a> 进程的创建</h2>\n<ol>\n<li>任何进程都是别的进程创建的: CreateProcess ()</li>\n<li>进程的创建过程\n<ol>\n<li>映射 EXE 文件</li>\n<li>创建内核对象 EPROCESS</li>\n<li>映射系统 DLL (ntdll.dIl)</li>\n<li>创建线程内核对象 ETHREAD</li>\n<li>系统启动线程\n<ul>\n<li>映射 DLL (ntll.Ldrlnitialize Thunk)</li>\n<li>线程开始执行</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p>在这个进程的创建过程中是可以动手脚的。</p>\n<h2 id=\"创建进程\"><a class=\"anchor\" href=\"#创建进程\">#</a> 创建进程</h2>\n<p>进程的创建：</p>\n<h3 id=\"createprocess函数\"><a class=\"anchor\" href=\"#createprocess函数\">#</a> CreateProcess 函数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">CreateProcess</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>　LPCTSTR lpApplicationName<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 应用程序名称  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>　LPTSTR lpCommandLine<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 命令行字符串  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>　LPSECURITY_ATTRIBUTES lpProcessAttributes<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 进程的安全属性  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>　LPSECURITY_ATTRIBUTES lpThreadAttributes<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 线程的安全属性  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>　BOOL bInheritHandles<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否继承父进程的属性  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>　DWORD dwCreationFlags<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 创建标志  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>　LPVOID lpEnvironment<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指向新的环境块的指针  </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>　LPCTSTR lpCurrentDirectory<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指向当前目录名的指针  </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>　LPSTARTUPINFO lpStartupInfo<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 传递给新进程的信息  </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>　LPPROCESS_INFORMATION lpProcessInformation <span class=\"token comment\">// 新进程返回的信息  </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 在 processthreadsapi.h 中为</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>WINBASEAPI</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>BOOL</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>WINAPI</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">CreateProcessA</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    _In_opt_ LPCSTR lpApplicationName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    _Inout_opt_ LPSTR lpCommandLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    _In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    _In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    _In_ BOOL bInheritHandles<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _In_ DWORD dwCreationFlags<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    _In_opt_ LPVOID lpEnvironment<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    _In_opt_ LPCSTR lpCurrentDirectory<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    _In_ LPSTARTUPINFOA lpStartupInfo<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    _Out_ LPPROCESS_INFORMATION lpProcessInformation</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>WINBASEAPI</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>BOOL</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>WINAPI</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token function\">CreateProcessW</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    _In_opt_ LPCWSTR lpApplicationName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    _Inout_opt_ LPWSTR lpCommandLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    _In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    _In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    _In_ BOOL bInheritHandles<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    _In_ DWORD dwCreationFlags<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    _In_opt_ LPVOID lpEnvironment<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    _In_opt_ LPCWSTR lpCurrentDirectory<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    _In_ LPSTARTUPINFOW lpStartupInfo<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    _Out_ LPPROCESS_INFORMATION lpProcessInformation</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>CreateProcess</code>  函数详细参见百科<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DcmVhdGVQcm9jZXNzLzExMDUwNDE5\"> https://baike.baidu.com/item/CreateProcess/11050419</span></p>\n<h3 id=\"startupinfo结构体\"><a class=\"anchor\" href=\"#startupinfo结构体\">#</a> STARTUPINFO 结构体</h3>\n<p><code>LPSTARTUPINFO</code>  是一个结构体指针，指向 <code>STARTUPINFO</code> ， <code>STARTUPINFO</code>  结构体如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_STARTUPINFOW</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    DWORD   cb<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 指定该结构大小 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    LPWSTR  lpReserved<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 保留，置为 NULL</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    LPWSTR  lpDesktop<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 指定一个字符串，包括该进程的桌面或窗口位置名</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    LPWSTR  lpTitle<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 指定控制台进程创建的新控制台窗口标题</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    DWORD   dwX<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 指定新窗口左上角的 x 和 y 偏移量（以像素为单位）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    DWORD   dwY<span class=\"token punctuation\">;</span>                <span class=\"token comment\">//……</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    DWORD   dwXSize<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 指定新窗口的宽度和高度</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    DWORD   dwYSize<span class=\"token punctuation\">;</span>            <span class=\"token comment\">//……</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    DWORD   dwXCountChars<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 指定新窗口的屏幕缓存区的宽度和高度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    DWORD   dwYCountChars<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//……</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    DWORD   dwFillAttribute<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 指定新窗口的初始化文字和背景颜色</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    DWORD   dwFlags<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 创建窗口标志</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    WORD    wShowWindow<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 新窗口的显示状态</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    WORD    cbReserved2<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 保留，必须置为 0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    LPBYTE  lpReserved2<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 保留，必须置为 NULL</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    HANDLE  hStdInput<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 指定一个句柄，该句柄用作进程的标准输入句柄</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    HANDLE  hStdOutput<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 指定一个句柄，该句柄用作进程的标准输出句柄</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    HANDLE  hStdError<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 指定一个句柄，该句柄用作进程的标准错误句柄</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span> STARTUPINFOW<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> LPSTARTUPINFOW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_STARTUPINFOA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    DWORD   cb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    LPSTR   lpReserved<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    LPSTR   lpDesktop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    LPSTR   lpTitle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    DWORD   dwX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    DWORD   dwY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    DWORD   dwXSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    DWORD   dwYSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    DWORD   dwXCountChars<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    DWORD   dwYCountChars<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    DWORD   dwFillAttribute<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    DWORD   dwFlags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    WORD    wShowWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    WORD    cbReserved2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    LPBYTE  lpReserved2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    HANDLE  hStdInput<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    HANDLE  hStdOutput<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    HANDLE  hStdError<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span> STARTUPINFOA<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> LPSTARTUPINFOA<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"process_information结构体\"><a class=\"anchor\" href=\"#process_information结构体\">#</a> PROCESS_INFORMATION 结构体</h3>\n<p><code>LPPROCESS_INFORMATION</code>  也是一个结构体指针，指向 <code>PROCESS_INFORMATION</code> , <code>PROCESS_INFORMATION</code>  结构体如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_PROCESS_INFORMATION</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    HANDLE hProcess<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 进程句柄</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HANDLE hThread<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 线程句柄</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    DWORD dwProcessId<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 进程 ID    </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD dwThreadId<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 线程 ID    </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> PROCESS_INFORMATION<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PPROCESS_INFORMATION<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> LPPROCESS_INFORMATION<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>打开 Chrome 浏览器，并打开指定网页</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 父进程填充的信息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//***************** 可以用在调试与反调试对抗 *************</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 返回值：void</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AntiDebug</span><span class=\"token punctuation\">(</span>LPSTARTUPINFO si<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//STARTUPINFO si;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">//GetStartupInfo(&amp;si);</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"结构大小：%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>dwFlags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>lpDesktop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>lpReserved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>cbReserved2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>dwFillAttribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>dwX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>dwY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#X\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>wShowWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新控制台窗口标题：%p\\n\"</span><span class=\"token punctuation\">,</span> si<span class=\"token operator\">-></span>lpTitle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 子进程返回的信息</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 返回值：void</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ReturnInfo</span><span class=\"token punctuation\">(</span>PPROCESS_INFORMATION pi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程句柄：%p\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程句柄：%p\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程ID：%#X\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>dwProcessId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程ID：%#X\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>dwThreadId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">// 创建子进程</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 返回值：BOOL 成功与失败</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>BOOL <span class=\"token function\">CreateChildProcess</span><span class=\"token punctuation\">(</span>PTCHAR szChildProcessName<span class=\"token punctuation\">,</span> PTCHAR szCommandLine<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    STARTUPINFO si<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    PROCESS_INFORMATION pi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>si<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>si<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    si<span class=\"token punctuation\">.</span>cb <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>si<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">CreateProcess</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        szChildProcessName<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 对象名称（全路径名）</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        szCommandLine<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 命令行</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 不继承进程句柄</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 不继承线程句柄</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        FALSE<span class=\"token punctuation\">,</span>                  <span class=\"token comment\">// 不继承句柄</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>                      <span class=\"token comment\">// 没有创建标志</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 使用父进程环境变量</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 使用父进程目录作为当前目录，可以自己设置目录</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token operator\">&amp;</span>si<span class=\"token punctuation\">,</span>                    <span class=\"token comment\">//STARTUPINFO 结构体详细信息</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span>                    <span class=\"token comment\">//PROCESS_INFORMATION 结构体详细信息</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 返回最近的错误代码值</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CreateChildProcess Error:%d \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\">// 查看父进程填充的信息</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">AntiDebug</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>si<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\">// 查看子进程返回的信息</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token function\">ReturnInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">// 释放句柄</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    TCHAR szApplicationName<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    TCHAR szCmdline<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\ http://www.baidu.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 打开百度</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token function\">CreateChildProcess</span><span class=\"token punctuation\">(</span>szApplicationName<span class=\"token punctuation\">,</span> szCmdline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>学习 <code>CreateProcess</code>  里的 <code>PPROCESS_INFORMATION</code>  时里面有进程和线程句柄、ID，那这是什么呢？这就要学习句柄表了</p>\n<h1 id=\"句柄表\"><a class=\"anchor\" href=\"#句柄表\">#</a> 句柄表</h1>\n<h2 id=\"什么是内核对象\"><a class=\"anchor\" href=\"#什么是内核对象\">#</a> 什么是内核对象</h2>\n<p>像进程、线程、文件、互斥体、事件等在内核都有一个对应的结构体，这些结构体由内核负责管理。我们管这样的对象叫做内核对象。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"如何管理内核对象\"><a class=\"anchor\" href=\"#如何管理内核对象\">#</a> 如何管理内核对象</h2>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>不能和常规的结构体一样，把内核结构体的地址传给用户层使其操作。这样就会出现问题，若是用户把访问地址更改了，就会找不到内核结构体了，出现内存地址访问错误，一般内存地址访问错误会出现 0x0000 的报错，但内核地址访问错误就直接蓝屏了。</p>\n<h2 id=\"每一个进程都有一个句柄表\"><a class=\"anchor\" href=\"#每一个进程都有一个句柄表\">#</a> 每一个进程都有一个句柄表</h2>\n<p>不是每个内核对象都有表。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>映射关系，不让用户直接访问。</p>\n<p>创建一个对象，想对它做任何事情必须通过句柄来实现。</p>\n<p><span class=\"label info\">句柄，句柄表概念</span></p>\n<p>任意进程，只要每打开一个对象，就会获得一个句柄，这个句柄用来标志对某个对象的一次打开，通过句柄，可以直接找到对应的内核对象。句柄本身是进程的句柄表中的一个结构体，用来描述一次打开操作。句柄值则可以简单看做句柄表中的索引，并不影响理解。HANDLE 的值可以简单的看做一个整形索引值。</p>\n<h2 id=\"多进程共享一个内核对象\"><a class=\"anchor\" href=\"#多进程共享一个内核对象\">#</a> 多进程共享一个内核对象</h2>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>当调用 <code>CloseHandle()</code>  函数成功后，相关的内核对象的引用计数被减 1。它并没有真正的关闭内核对象，只是将计数减 1，也就是说，这个时候，如果这个内核对象的引用计数不为 0 的话，内核对象依然存在，如果你有办法找到他，那么你依然可以操作他。</p>\n<p>以下两种情况，内核对象会被删除 -- 系统回收：</p>\n<ul>\n<li>当内核对象的引用计数为 0 的时候</li>\n<li>进程结束后</li>\n</ul>\n<h2 id=\"句柄是否可以被继承\"><a class=\"anchor\" href=\"#句柄是否可以被继承\">#</a> 句柄是否可以被继承</h2>\n<p><span id=\"006\">图</span></p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>内核对象都有一个 <code>LPSECURITY_ATTRIBUTES</code>  这种类型的参数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_SECURITY_ATTRIBUTES</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    DWORD nLength<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 当前结构体的大小</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    LPVOID lpSecurityDescriptor<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 指向一个对象的安全描述符 该安全描述符控制对象的共享 如果为ＮＵＬＬ　则该对象使用调用进程的默认安全描述符 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    BOOL bInheritHandle<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 是否被继承</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> SECURITY_ATTRIBUTES<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PSECURITY_ATTRIBUTES<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>LPSECURITY_ATTRIBUTES<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>若是不希望被继承，此参数填成 <code>NULL</code>  就行，若想让其继承则还需创建一个这样的结构体传递给此参数。</p>\n<p><span id=\"007\"></span></p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<h2 id=\"共享内核\"><a class=\"anchor\" href=\"#共享内核\">#</a> 共享内核</h2>\n<p>学了上面内容我们就知道两种共享内核的解决方式了。</p>\n<ul>\n<li>平行进程间，<a href=\"#006\">如图</a>可以一个创建一个打开。</li>\n<li>父子进程间，可以使用<a href=\"#007\">继承</a></li>\n</ul>\n<h1 id=\"进程相关的\"><a class=\"anchor\" href=\"#进程相关的\">#</a> 进程相关的</h1>\n<h2 id=\"id与句柄\"><a class=\"anchor\" href=\"#id与句柄\">#</a> ID 与句柄</h2>\n<p>每个进程有自己的句柄表，而操作系统也有自己的句柄表，里面至少包含了所有正在运行的进程和线程，和进程的句柄表没有太大的区别。</p>\n<p>ID 也叫 PID，是全局变量中的值，所有进程都认识。</p>\n<p>全局句柄表</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<h2 id=\"以挂起的形式创建进程\"><a class=\"anchor\" href=\"#以挂起的形式创建进程\">#</a> 以挂起的形式创建进程</h2>\n<p>如果以 <code>CREATE_SUSPENDED</code>  以挂起的方式创建进程，系统只会分配 4G 空间，而不会执行拉伸等后续操作，此时可以就可以对这个空间做一些你懂的事情。</p>\n<p>那么其进程创建的过程为：</p>\n<ol>\n<li>任何进程都是别的进程创建的: CreateProcess ()</li>\n<li>进程的创建过程\n<ol>\n<li>映射 EXE 文件</li>\n<li>创建内核对象 EPROCESS</li>\n<li>映射系统 DLL (ntdll.dIl)</li>\n<li>创建线程内核对象 ETHREAD</li>\n<li>如果是挂起的方式创建的，恢复以后再继续执行。</li>\n<li>系统启动线程\n<ul>\n<li>映射 DLL (ntll.Ldrlnitialize Thunk)</li>\n<li>线程开始执行</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p>代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 子进程返回的信息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 返回值：void</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ReturnInfo</span><span class=\"token punctuation\">(</span>PPROCESS_INFORMATION pi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程句柄：%p\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程句柄：%p\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程ID：%#X\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>dwProcessId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程ID：%#X\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">-></span>dwThreadId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 创建子进程</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 返回值：BOOL 成功与失败</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//*********************************//</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>BOOL <span class=\"token function\">CreateChildProcess</span><span class=\"token punctuation\">(</span>PTCHAR szChildProcessName<span class=\"token punctuation\">,</span> PTCHAR szCommandLine<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    STARTUPINFO si<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    PROCESS_INFORMATION pi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>si<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>si<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    si<span class=\"token punctuation\">.</span>cb <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>si<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    SECURITY_ATTRIBUTES sa<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sa<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>sa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    sa<span class=\"token punctuation\">.</span>nLength <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>sa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    sa<span class=\"token punctuation\">.</span>lpSecurityDescriptor <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    sa<span class=\"token punctuation\">.</span>bInheritHandle <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">CreateProcess</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        szChildProcessName<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 对象名称（全路径名）</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        szCommandLine<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 命令行</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 不继承进程句柄</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 不继承线程句柄</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        FALSE<span class=\"token punctuation\">,</span>                  <span class=\"token comment\">// 不继承句柄</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        CREATE_SUSPENDED<span class=\"token punctuation\">,</span>       <span class=\"token comment\">// 以挂起的形式创建进程</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 使用父进程环境变量</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 使用父进程目录作为当前目录，可以自己设置目录</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token operator\">&amp;</span>si<span class=\"token punctuation\">,</span>                    <span class=\"token comment\">//STARTUPINFO 结构体详细信息</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span>                    <span class=\"token comment\">//PROCESS_INFORMATION 结构体详细信息</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 返回最近的错误代码值</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CreateChildProcess Error:%d \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">// 查看子进程返回的信息</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token function\">ReturnInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\">// 进程挂起后，恢复前做的事情</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">// 线程恢复函数</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token function\">ResumeThread</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\">// 释放句柄</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    TCHAR szApplicationName<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\\\WINDOWS\\\\system32\\\\notepad.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token function\">CreateChildProcess</span><span class=\"token punctuation\">(</span>szApplicationName<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"模块目录和工作目录\"><a class=\"anchor\" href=\"#模块目录和工作目录\">#</a> 模块目录和工作目录</h2>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<h2 id=\"creeateprocess函数的其他参数\"><a class=\"anchor\" href=\"#creeateprocess函数的其他参数\">#</a> CreeateProcess 函数的其他参数</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DcmVhdGVQcm9jZXNzLzExMDUwNDE5\">https://baike.baidu.com/item/CreateProcess/11050419</span> 百度百科非常详细了</p>\n<h1 id=\"进程终止\"><a class=\"anchor\" href=\"#进程终止\">#</a> 进程终止</h1>\n<p>终止进程的三种方式：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>、VOID　<span class=\"token function\">ExitProcess</span><span class=\"token punctuation\">(</span>UINT fuExitCode<span class=\"token punctuation\">)</span>                       <span class=\"token comment\">// 进程自己调用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span>、BOOL <span class=\"token function\">TerminateProcess</span><span class=\"token punctuation\">(</span>HANDLE hProcess<span class=\"token punctuation\">,</span> UINT fuExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 终止其他进程</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                         </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">3</span>、ExitThread                                               <span class=\"token comment\">// 终止进程中的所有线程，进程也会终止</span></pre></td></tr></table></figure><p>获取进程的退出码：</p>\n<p><code>BOOL GetExitCodeProcess(HANDLE hProcess,PDWORD pdwExitCode);</code></p>\n<p>进程终止时相关操作：</p>\n<p>1、进程中剩余的所有线程全部终止运行</p>\n<p>2、进程指定的所有用户对象均被释放，所有内核对象均被关闭</p>\n<p>3、进程内核对象的状态变成收到通知的状态</p>\n<p>4、进程内核对象的使用计数递减 1</p>\n",
            "tags": [
                "Windows进程",
                "句柄表"
            ]
        },
        {
            "id": "https://or0kit.github.io/Bin/Win32/win32%E5%AD%A6%E4%B9%A0/",
            "url": "https://or0kit.github.io/Bin/Win32/win32%E5%AD%A6%E4%B9%A0/",
            "title": "win32学习",
            "date_published": "2021-03-30T07:14:33.000Z",
            "content_html": "<h1 id=\"winmain-函数\"><a class=\"anchor\" href=\"#winmain-函数\">#</a> WinMain 函数</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> WINAPI <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    HINSTANCE hInstance<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 应用程序当前实例的句柄</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 应用程序的先前实例的句柄。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    LPSTR IpCmdLine<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 命令行的字符串的指针</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> nShowCmd  <span class=\"token comment\">// 窗口显示方式、默认为 SW_SHOWDEFAULT</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>WinMain 函数接收 4 个参数，这些参数都是在系统调用 WinMain 函数时，传递给应用程序的。</p>\n<p>第一个参数 hInstance 表示该程序当前运行的实例的句柄，这是一个数值。当程序在 Windows 下运行时，它唯一标识运行中的实例（注意，只有运行中的程序实例，才有实例句柄）。一个应用程序可以运行多个实例，每运行一个实例，系统都会给该实例分配一个句柄值，并通过 hInstance 参数传递给 WinMain 函数。</p>\n<p>同一个程序打开两次，出现两个窗口，第一次打开的窗口就是先前实例的窗口。对于一个 32 位程序，该参数总为 NULL。</p>\n<p>第二个参数 hPrevInstance 表示当前实例的前一个实例的句柄。通过查看 MSDN 我们可以知道，在 Win32 环境下，这个参数总是 NULL ，即在 Win32 环境下，这个参数不再起作用。</p>\n<p>第三个参数 lpCmdLine 是一个以空终止的字符串，指定传递给应用程序的命令行参数。 例如：在 D 盘下有一个 sunxin.txt 文件，当我们用鼠标双击这个文件时将启动记事本程序（ notepad.exe ），此时系统会将 D:/sunxin.txt 作为命令行参数传递给记事本程序的 WinMain 函数，记事本程序在得到这个文件的全路径名后，就在窗口中显示该文件的内容。要在 VC++ 开发环境中向应用程序传递参数，可以单击菜单 【 Project 】→【 Settings 】，选择 “Debug” 选项卡，在 “ Program arguments ” 编辑框中输入你想传递给应用程序的参数。</p>\n<p>第四个参数 nCmdShow 指定程序的窗口应该如何显示，例如最大化、最小化、隐藏等。这个参数的值由该程序的调用者所指定，在调用 ShowWindow () 时可以使用到该值</p>\n<p>=============================================================</p>\n<p><span class=\"label\">应用程序句柄</span></p>\n<p>WinMain 函数的第一个参数 hInstance 就是可执行文件的实例句柄，实际上是个内存地址，它指出系统在何处把 exe 文件装载入进程的地址空间！<br />\nPE 中的 ImageBase</p>\n<p><span class=\"label\">窗口显示方式</span></p>\n<p>第四个参数 nCmdShow，指定窗口第一次出现 (程序刚刚启动时) 时的显示方式。显示方式有多种，比如：</p>\n<p>不显示，nCmdShow = 0;<br />\n 正常显示，nCmdShow = 1;(默认为 1)<br />\n 最小化显示，nCmdShow = 2;<br />\n 最大化显示，nCmdShow = 3;<br />\n 如果需要改变系统的默认的显示方式，需要在创建窗口之前指定 nCmdShow 的值 (通过一个简单的赋值语句 nCmdShow = n)</p>\n<p>不过，其实这里要让 nCmdShow 起作用，需要把 nCmdShow 作为参数传递给 ShowWindow 函数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * ShowWindow() Commands</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_HIDE</span>             <span class=\"token expression\"><span class=\"token number\">0</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOWNORMAL</span>       <span class=\"token expression\"><span class=\"token number\">1</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_NORMAL</span>           <span class=\"token expression\"><span class=\"token number\">1</span>     激活并显示一个窗口。如果窗口被最小化或最大化，系统 将其恢复到原来的尺寸和大小。应用程序 在第一次显示窗口的时候应该指定此标志。</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOWMINIMIZED</span>    <span class=\"token expression\"><span class=\"token number\">2</span>     激活窗口并将其最小化。</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOWMAXIMIZED</span>    <span class=\"token expression\"><span class=\"token number\">3</span>     激活窗口并将其最大化。</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_MAXIMIZE</span>         <span class=\"token expression\"><span class=\"token number\">3</span>     最大化指定的窗口。</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOWNOACTIVATE</span>   <span class=\"token expression\"><span class=\"token number\">4</span>     以窗口最近一次的大小和状态显示窗口。激活窗口仍然维持激活状态。</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOW</span>             <span class=\"token expression\"><span class=\"token number\">5</span>     在窗口原来的位置以原来的尺寸激活和显示窗口。</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_MINIMIZE</span>         <span class=\"token expression\"><span class=\"token number\">6</span>     最小化指定的窗口并且激活在Z序中的下一个顶层窗口。</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOWMINNOACTIVE</span>  <span class=\"token expression\"><span class=\"token number\">7</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOWNA</span>           <span class=\"token expression\"><span class=\"token number\">8</span>     以窗口原来的状态显示窗口。激活窗口仍然维持激活状态。</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_RESTORE</span>          <span class=\"token expression\"><span class=\"token number\">9</span>     激活并显示窗口。如果窗口最小化或最大化，则系统 将窗口恢复到原来的尺寸和位置。在恢复最小化窗口时，应用程序 应该指定这个标志。</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_SHOWDEFAULT</span>      <span class=\"token expression\"><span class=\"token number\">10</span>     依据在STARTUPINFO结构中指定的SW_FLAG标志设定显示状态，STARTUPINFO 结构是由启动应用程序 的程序 传递给CreateProcess函数的。</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_FORCEMINIMIZE</span>    <span class=\"token expression\"><span class=\"token number\">11</span>     在WindowNT5<span class=\"token punctuation\">.</span><span class=\"token number\">0</span>中最小化窗口，即使拥有窗口的线程被挂起也会最小化。在从其他线程最小化窗口时才使用这个参数。</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SW_MAX</span>              <span class=\"token expression\"><span class=\"token number\">11</span></span></span></pre></td></tr></table></figure><h1 id=\"winapi和apientry\"><a class=\"anchor\" href=\"#winapi和apientry\">#</a> WINAPI 和 APIENTRY</h1>\n<p>另外，这里稍微说明一下  <code>WINAPI</code>  这个宏定义，我们看 WinMain 函数的原型：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> WINAPI <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    HINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HINSTANCE hPreInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    LPSTR     lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span>       nCmdShow</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>WINAPI 是这样定义的：</p>\n<p><code>#define WINAPI      __stdcall</code></p>\n<p>在 VC6.0 下生成的 WinMain 函数，实际上是：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    HINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HINSTANCE hPreInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    LPSTR     lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span>       nCmdShow</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>APIENTRY 这个定义为：</p>\n<p><code>#define APIENTRY    WINAPI</code></p>\n<p>所以归根到底都是  <code>__stdcall</code> ，这个是什么东西了？这里解释一下：</p>\n<p><code>__stdcall</code>  一种调用约定 (调用函数时候的一种约定)，其他的调用约定有：</p>\n<p><code>__cdecl 和 __fastcall</code></p>\n<p>调用约定将决定以下内容：</p>\n<p>1) 函数参数的压栈顺序，</p>\n<p>2) 由调用者还是被调用者把参数弹出栈，</p>\n<p>3) 以及产生函数修饰名的方法。</p>\n<p>WIN32API 使用的是 <code>__stdcall</code>  调用约定</p>\n<p>标准 C，C++ 使用的是 <code>__cdecl</code>  调用约定</p>\n<p><code>__stdcall</code>  调用约定：函数的参数自右向左压栈，被调用的函数在返回前清理传送参数的内存栈</p>\n<p><code>__cdecl</code>  调用约定：每一个调用它的函数都包含清空堆栈的代码，所以产生的可执行文件大小会比调用 <code>_stdcall</code>  函数的大。函数采用从右到左的压栈方式。注意：对于可变参数的成员函数，始终使用 <code>__cdecl</code>  的调用约定</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zMDI0Nzc4MS9hcnRpY2xlL2RldGFpbHMvOTcxNDE1MTg=\">https://blog.csdn.net/weixin_30247781/article/details/97141518</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjMzMzU1MS9hcnRpY2xlL2RldGFpbHMvMTEzMjUwOTk5\">https://blog.csdn.net/weixin_42333551/article/details/113250999</span></p>\n",
            "tags": [
                "WinMain函数",
                "调用约定"
            ]
        }
    ]
}