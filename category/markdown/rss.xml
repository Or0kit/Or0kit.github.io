<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Or0kit • Posts by &#34;markdown&#34; category</title>
        <link>https://Or0kit.github.io</link>
        <description>临渊羡鱼，不如退而结网</description>
        <language>zh-CN</language>
        <pubDate>Tue, 17 Nov 2020 11:22:41 +0800</pubDate>
        <lastBuildDate>Tue, 17 Nov 2020 11:22:41 +0800</lastBuildDate>
        <category>Drozer</category>
        <category>Algolia</category>
        <category>同义词替换</category>
        <category>xpath</category>
        <category>win32api</category>
        <category>WOW64</category>
        <category>windows消息机制</category>
        <category>虚拟内存</category>
        <category>jsDelivr</category>
        <category>First blog</category>
        <category>markdown 学习</category>
        <category>Android</category>
        <category>替换密钥</category>
        <category>数论基础</category>
        <category>ADB</category>
        <category>雷电模拟器</category>
        <category>Hadoop</category>
        <category>IDA</category>
        <category>Windows逆向</category>
        <category>SSH隧道</category>
        <category>url</category>
        <category>http</category>
        <category>Nginx</category>
        <category>Linux</category>
        <category>CentOS7配置vsftp</category>
        <category>Psad</category>
        <category>fwsnort</category>
        <category>应急响应</category>
        <category>x86汇编指令</category>
        <category>逆向</category>
        <category>IDA学习</category>
        <category>恶意代码分析实战入门</category>
        <category>静态分析基础</category>
        <category>动态分析技术基础</category>
        <category>加壳</category>
        <category>脱壳</category>
        <category>C++壳</category>
        <category>ESP寻址</category>
        <category>定位Win32窗口回调函数</category>
        <category>HOOK攻防</category>
        <category>瞬时HOOK过检测</category>
        <category>INLINE-HOOK</category>
        <category>IAT HOOK</category>
        <category>INLINE HOOK</category>
        <category>进程监控</category>
        <category>模块隐藏</category>
        <category>进程通信</category>
        <category>tlhelp32.h</category>
        <category>进程遍历</category>
        <category>模块遍历</category>
        <category>TEB</category>
        <category>PEB</category>
        <category>R3层断链</category>
        <category>外挂原理</category>
        <category>DLL注入之进程间通信</category>
        <category>Win临界区</category>
        <category>Win互斥体</category>
        <category>内存映射文件</category>
        <category>内存映射共享</category>
        <category>写拷贝</category>
        <category>Win事件</category>
        <category>线程同步</category>
        <category>Win子窗口控件</category>
        <category>win32文件函数</category>
        <category>代码注入</category>
        <category>窗口程序</category>
        <category>消息机制</category>
        <category>消息类型</category>
        <category>私有内存</category>
        <category>共享内存</category>
        <category>设备对象</category>
        <category>DC设备上下文</category>
        <category>图形对象</category>
        <category>创建线程</category>
        <category>线程控制</category>
        <category>线程相关API</category>
        <category>线程上下文</category>
        <category>CONTEXT结构体</category>
        <category>物理内存</category>
        <category>Windows进程</category>
        <category>句柄表</category>
        <category>远程线程函数</category>
        <category>远程线程</category>
        <category>DLL注入</category>
        <category>DLL注入相关函数</category>
        <category>WinMain函数</category>
        <category>调用约定</category>
        <category>我的GetProcAddress</category>
        <category>资源文件</category>
        <category>消息断点</category>
        <category>通用控件</category>
        <category>WM_NOTIFY消息类型</category>
        <category>MFC</category>
        <category>PE查看器</category>
        <category>PE课后作业</category>
        <category>RVA与FOA</category>
        <category>PE结构</category>
        <category>DOS头属性说明</category>
        <category>标准PE头属性说明</category>
        <category>扩展PE头属性说明</category>
        <category>节表属性说明</category>
        <category>空白区添加代码</category>
        <category>合并节</category>
        <category>导入表</category>
        <category>注入</category>
        <category>导入表注入</category>
        <category>导出表</category>
        <category>新增节</category>
        <category>移动NT头</category>
        <category>扩大节</category>
        <category>移动导出表</category>
        <category>移动重定位表</category>
        <category>重定位表</category>
        <category>静态链接库</category>
        <category>动态链接库</category>
        <category>句柄</category>
        <category>button</category>
        <category>单选框</category>
        <category>复选框件</category>
        <category>Edit</category>
        <category>Combo Box</category>
        <category>Tab</category>
        <category>ListCtrl</category>
        <category>MFC的本质</category>
        <category>MFC的层次结构图</category>
        <category>手动创建一个MFC程序</category>
        <category>MFC的初始化过程</category>
        <category>MFC运行时类型识别</category>
        <category>关键字static</category>
        <category>关键字const</category>
        <category>MFC动态创建</category>
        <category>MFC消息映射</category>
        <category>结构体AFX_MSGMAP_ENTRY</category>
        <category>结构体AFX_MSGM</category>
        <category>MFC的三大类消息</category>
        <category>数据传输</category>
        <category>ini文件的读写</category>
        <category>python</category>
        <category>SSH</category>
        <category>python文件读取</category>
        <category>数据分析</category>
        <category>socket</category>
        <category>数据库编程</category>
        <category>python内置属性</category>
        <category>multiprocessing</category>
        <category>threading</category>
        <category>scrapy</category>
        <category>测试</category>
        <category>BHP</category>
        <category>Python的import功能</category>
        <category>木马</category>
        <category>STL</category>
        <category>Vector容器</category>
        <category>Deque容器</category>
        <category>List容器</category>
        <category>Set容器</category>
        <category>Multiset容器</category>
        <category>Map容器</category>
        <category>Multimap容器</category>
        <category>Stack容器</category>
        <category>Queue容器</category>
        <category>STL算法</category>
        <category>STL迭代器</category>
        <category>CobaltStrike</category>
        <category>RedTeam</category>
        <category>Apeache</category>
        <category>Nmap</category>
        <category>php</category>
        <category>guestbook</category>
        <category>SQLmap</category>
        <category>apache</category>
        <category>log</category>
        <category>mysql主键</category>
        <category>CSRF</category>
        <category>SSRF</category>
        <category>业务逻辑漏洞</category>
        <category>xss</category>
        <category>webshell流量特征</category>
        <category>虚拟网卡</category>
        <category>0环与3环的通信（常规方法）</category>
        <category>内核空间</category>
        <category>内核模块</category>
        <category>遍历内核模块</category>
        <category>定位未导出函数PspTiminateProcess</category>
        <category>内核编程基础</category>
        <category>ANSI_STRING</category>
        <category>UNICODE_STRING</category>
        <category>内核内存</category>
        <category>上下文环境</category>
        <category>中断请求级别</category>
        <category>链表</category>
        <category>自旋锁</category>
        <category>注册表</category>
        <category>地址空间</category>
        <category>文件操作</category>
        <category>线程与事件</category>
        <category>内核重载</category>
        <category>驱动调试</category>
        <category>配置VS2019+WDK10</category>
        <category>第一个驱动程序</category>
        <category>调试驱动程序</category>
        <category>OpenSCManager</category>
        <category>CreateService</category>
        <category>APC的本质</category>
        <category>APC的备用队列</category>
        <category>消息队列</category>
        <category>PsConvertToGuiThread</category>
        <category>win32k.sys</category>
        <category>GUI线程</category>
        <category>窗口程序的创建</category>
        <category>消息循环</category>
        <category>线性地址的管理</category>
        <category>VAD树</category>
        <category>_MMVAD</category>
        <category>_MMVAD_FLAGS</category>
        <category>VirtualAlloc</category>
        <category>MEM_COMMIT与MEM_RESERVE</category>
        <category>malloc</category>
        <category>堆内存</category>
        <category>栈内存</category>
        <category>全局区内存</category>
        <category>共享物理页</category>
        <category>共享文件</category>
        <category>LoadLibrary的本质</category>
        <category>MmAddPhysicalMemoryEx</category>
        <category>缺页异常</category>
        <category>临界区</category>
        <category>KPCR结构体</category>
        <category>等待链表</category>
        <category>调度链表</category>
        <category>模拟线程切换</category>
        <category>模拟挂起与恢复函数</category>
        <category>进程的创建</category>
        <category>获取当前进程</category>
        <category>ETHREAD</category>
        <category>KTHREAD</category>
        <category>EPROCESS</category>
        <category>KPROCESS</category>
        <category>2-9-9-12分页</category>
        <category>PAE</category>
        <category>PDPTE</category>
        <category>PDE</category>
        <category>PTE</category>
        <category>XD标志位</category>
        <category>逆向分析MmIsAddressValid函数(2-9-9-12)</category>
        <category>PWT</category>
        <category>PDT</category>
        <category>TLB</category>
        <category>CPU缓存</category>
        <category>INVLPG指令</category>
        <category>全局页</category>
        <category>ShadowWalker</category>
        <category>中断</category>
        <category>异常</category>
        <category>CLI指令</category>
        <category>STI指令</category>
        <category>INT2</category>
        <category>INT8</category>
        <category>中断门描述符</category>
        <category>IDT</category>
        <category>提权</category>
        <category>TSS</category>
        <category>跨段跳转流程</category>
        <category>JMP FAR指令</category>
        <category>任务门</category>
        <category>LDT段描述符</category>
        <category>LDT</category>
        <category>CR0</category>
        <category>CR2</category>
        <category>CR4</category>
        <category>CRL</category>
        <category>DPL</category>
        <category>RPL</category>
        <category>段寄存器结构</category>
        <category>段描述符</category>
        <category>段选择子</category>
        <category>GDT表</category>
        <category>调用门</category>
        <category>调用门描述符</category>
        <category>逆向分析MmIsAddressValid函数</category>
        <category>error C2143</category>
        <category>error C2275</category>
        <category>CALL与CALL FAR</category>
        <category>陷阱门描述符</category>
        <category>页目录表基址</category>
        <category>页表的基址</category>
        <category>0地址执行ShellCode</category>
        <category>10-10-12分页</category>
        <category>PDE_PTE</category>
        <category>物理页</category>
        <category>SSDT HOOK</category>
        <category>OpenProcess</category>
        <category>系统服务表</category>
        <category>SSDT</category>
        <category>SSDT HOOK隐藏</category>
        <category>API进出内核</category>
        <category>系统调用阶段总结</category>
        <category>网络安全法</category>
        <category>ASCII</category>
        <category>GBK</category>
        <category>ANSI</category>
        <category>Unicode</category>
        <category>UTF-8</category>
        <category>URL 编码/解码</category>
        <category>十进制</category>
        <category>二进制</category>
        <category>十六进制</category>
        <category>内存</category>
        <category>编写ShellCode实现IAT HOOK</category>
        <category>ShellCode原则</category>
        <category>傀儡进程加密壳</category>
        <category>ZwUnmapViewOfSection函数</category>
        <category>加载图标</category>
        <category>提取图标</category>
        <category>资源表</category>
        <category>MFC命令传递</category>
        <category>远控界面编写</category>
        <category>HTML</category>
        <category>文件包含</category>
        <category>sql注入</category>
        <category>经典定长指令</category>
        <category>经典变长指令</category>
        <category>指令前缀</category>
        <category>进程句柄表</category>
        <category>全局句柄表</category>
        <category>KAPC</category>
        <category>QueueUserAPC</category>
        <category>NtQueueApcThread</category>
        <category>KeInitializeApc</category>
        <category>KeInsertQueueApc</category>
        <category>KiInsertQueueApc</category>
        <category>消息队列与线程</category>
        <category>Windows线程切换</category>
        <category>KiSwapContext</category>
        <category>SwapContext</category>
        <category>时钟中断</category>
        <category>时间片管理</category>
        <category>线程切换与TSS</category>
        <category>线程切换与FS</category>
        <category>线程切换与线程优先级</category>
        <category>快速调用</category>
        <category>中断调用</category>
        <category>分析ReadProcessMemory</category>
        <category>KiFastSystemCall</category>
        <category>KiIntSystemCall</category>
        <category>重写3环</category>
        <category>文件上传</category>
        <category>隐藏驱动</category>
        <category>IopLoadDriver</category>
        <category>延迟过程调用</category>
        <category>进程挂靠</category>
        <category>跨进程读写内存</category>
        <category>APC</category>
        <category>逆向分析NtReadVirtualMemory</category>
        <category>逆向分析NtWriteVIrtualMemory</category>
        <category>AD-Attack-Defense</category>
        <category>payload</category>
        <category>sysenter指令</category>
        <category>KiFastCallEntry函数</category>
        <category>KiSystemService函数</category>
        <category>Trap_Frame</category>
        <category>web安全</category>
        <category>Pentest</category>
        <item>
            <guid isPermalink="true">https://or0kit.github.io/%E5%88%9D%E5%AD%A6Markdown%E8%AF%AD%E6%B3%95/</guid>
            <title>初学Markdown语法</title>
            <link>https://or0kit.github.io/%E5%88%9D%E5%AD%A6Markdown%E8%AF%AD%E6%B3%95/</link>
            <category>First blog</category>
            <category>markdown 学习</category>
            <pubDate>Tue, 17 Nov 2020 11:22:41 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;welcome-to-my-first-blog&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#welcome-to-my-first-blog&#34;&gt;#&lt;/a&gt; Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9TZWxmLWZlcnJ5LmdpdGh1Yi5pbw==&#34;&gt;My first blog&lt;/span&gt;!&lt;/h1&gt;
&lt;h2 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;第一次搭建，搞了好久，呼～&lt;br /&gt;
 还没学习怎么用 md，这篇就学习如何使用 md 吧！&lt;br /&gt;
如果有人看到这个博客&lt;br /&gt;
记得以下内容仅供参考哦&lt;br /&gt;
都是我在网上胡乱搜索并总结前辈们的经验。&lt;/p&gt;
&lt;h2 id=&#34;什么是md&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是md&#34;&gt;#&lt;/a&gt; 什么是 md&lt;/h2&gt;
&lt;p&gt;.md 即 markdown 文件的基本常用编写语法，是一种快速标记、快速排版语言，现在很多前段项目中的说明文件 readme 等都是用.md 文件  编写的，而且很多企业也在在鼓励使用这种编辑方式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这不，想写博客就得学吗。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;基本符号-&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本符号-&#34;&gt;#&lt;/a&gt; 基本符号 *.-+&lt;/h3&gt;
&lt;p&gt;基本上所有的 markdown 标记都是基于这四个符号或组合，需要注意的是，如果以基本符号开头的标记，注意基本符号后有一个用于分割标记符和内容的空格。&lt;/p&gt;
&lt;h3 id=&#34;标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标题&#34;&gt;#&lt;/a&gt; 标题&lt;/h3&gt;
&lt;p&gt;前面带 #号，后面跟文字，随着 #号的增多分别表示 h1-h6，最多到 h6&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h3&gt;
&lt;p&gt;换行以后直接开始书写，不用加任何符号。&lt;/p&gt;
&lt;h3 id=&#34;段落&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#段落&#34;&gt;#&lt;/a&gt; 段落&lt;/h3&gt;
&lt;p&gt;一个段落以一个自然的 回车 作为换行分隔。&lt;/p&gt;
&lt;h3 id=&#34;引用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#引用&#34;&gt;#&lt;/a&gt; 引用&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; 一级引用
&amp;gt;&amp;gt; 二级引用
&amp;gt;&amp;gt;&amp;gt; 三级引用
&amp;gt;&amp;gt;&amp;gt;&amp;gt; 四级引用
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 五级引用
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 六级引用

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;字体样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体样式&#34;&gt;#&lt;/a&gt; 字体样式&lt;/h3&gt;
&lt;p&gt;倾斜 &lt;em&gt;倾斜&lt;/em&gt;&lt;br /&gt;
加粗 &lt;strong&gt;加粗&lt;/strong&gt;&lt;br /&gt;
倾斜并加粗 &lt;em&gt;&lt;strong&gt;倾斜并加粗&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt;
文字删除线 &lt;s&gt;文字删除线&lt;/s&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;倾斜 *倾斜*
加粗 **加粗**
倾斜并加粗 ***倾斜并加粗***
文字删除线 ~~文字删除线~~
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;分割线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分割线&#34;&gt;#&lt;/a&gt; 分割线&lt;/h3&gt;
&lt;p&gt;分割线可以由 * - _（星号，减号，底线）这 3 个符号的至少 3 个符号表示，注意至少要 3 个，且不需要连续，有空格也可以，会出现一条横线&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id=&#34;列表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表&#34;&gt;#&lt;/a&gt; 列表&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;无序列表&lt;br /&gt;
使用 * - + 中的任何一个符号加空格就可以创建无序列表，可以进一步使用 + 和 - 来表现层次关系。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;* 这是一个无序列表
* 这是一个无序列表

+ 这是一个父无序列表
  - 这是一个子无序列表
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;有序列表&lt;br /&gt;
使用 数字 + 点 + 空格 + 内容 创建有序列表。&lt;br /&gt;
把数字写错也会自动更正&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;1. 这是一个有序列表
2. 这是一个有序列表
3. 这是一个有序列表
  1. 这是一个嵌套有序列表
  2. 这是一个嵌套有序列表
  3. 这是一个嵌套有序列表
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链接&#34;&gt;#&lt;/a&gt; 链接&lt;/h3&gt;
&lt;p&gt;格式为&lt;br /&gt;
 &lt;code&gt;[文字](https://xxx.xxx.com)&lt;/code&gt; &lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi5iaW5nLmNvbQ==&#34;&gt;bing&lt;/span&gt;&lt;br /&gt;
 也可以直接用尖括号包含网址的方式 &lt;code&gt;&amp;lt;http://www.xxx.com&amp;gt;&lt;/code&gt;  来直接构造一个可点击的链接&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi5iaW5nLmNvbQ==&#34;&gt; https://cn.bing.com&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;打开本地文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打开本地文件&#34;&gt;#&lt;/a&gt; 打开本地文件&lt;/h4&gt;
&lt;p&gt;例如 1： &lt;code&gt;[xx](http://www.xxx.com)&lt;/code&gt; ，注意要使用英文符号&lt;br /&gt;
打开 F 盘的 test 文件夹：&lt;br /&gt;
例如 2： &lt;code&gt;[test](file:///F:/text)&lt;/code&gt; ，注意要使用英文符号&lt;br /&gt;
打开 H 盘的 test 文件夹里的 test1.mp4：&lt;br /&gt;
例如 3： &lt;code&gt;[test1](file:///F:/test/test1.mp4)&lt;/code&gt; ，注意要使用英文符号&lt;/p&gt;
&lt;h3 id=&#34;图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片&#34;&gt;#&lt;/a&gt; 图片&lt;/h3&gt;
&lt;p&gt;像构造一个链接一样，但需要在前面加！&lt;br /&gt;
 &lt;code&gt;![图片名称](图片地址)&lt;/code&gt; &lt;br /&gt;
 图片地址可以是网络路址，相对地址，绝对地址。&lt;br /&gt;
这里我也是搞了好久，呼～&lt;br /&gt;
 参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaHVnb2NoZW4xMDI0L3AvMTI1NzA2NTYuaHRtbA==&#34;&gt; https://www.cnblogs.com/hugochen1024/p/12570656.html&lt;/span&gt;&lt;br /&gt;
 这是本地的一个图片&lt;br /&gt;
&lt;img data-src=&#34;/images/bimg/lin.jpg&#34; alt=&#34;一个图片&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;表格&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表格&#34;&gt;#&lt;/a&gt; 表格&lt;/h3&gt;
&lt;p&gt;使用 - | 符号把内容分割为你认为合适的表格样式就好。&lt;br /&gt;
使用：符号标识对齐。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;表头1|表头2|表头3
:----|:-----:|-----:
左对齐|居中对齐|右对齐
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;表头 1&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;表头 2&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;表头 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;左对齐&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;居中对齐&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;右对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码&#34;&gt;#&lt;/a&gt; 代码&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;代码块&lt;br /&gt;
有时候需要写代码&lt;br /&gt;
使用 `符号包裹代码构建一个代码块，` 符号在左上角 esc 键下方&lt;br /&gt;
 &lt;code&gt;print(hello world!)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码段&lt;br /&gt;
因为代码段里有反引号 这里我是用了 4 个反引号开头和结尾包括着这个代码段&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;使用
```
print(hello world!)
print(hello world!)
print(hello world!)
```
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;呼~-没啦在以后的学习中会学到更多的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#呼~-没啦在以后的学习中会学到更多的&#34;&gt;#&lt;/a&gt; 呼～没啦，在以后的学习中会学到更多的&lt;/h2&gt;
 ]]></description>
        </item>
    </channel>
</rss>
