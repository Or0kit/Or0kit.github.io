{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"mfc\" category",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Programming/MFC/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%86%99%E8%BF%9C%E6%8E%A7-02%E5%8A%A0%E5%85%A5Socket%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E5%86%85%E6%A0%B8/",
            "url": "https://or0kit.github.io/Programming/MFC/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%86%99%E8%BF%9C%E6%8E%A7-02%E5%8A%A0%E5%85%A5Socket%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E5%86%85%E6%A0%B8/",
            "title": "从零开始写远控-02加入Socket数据传输的内核",
            "date_published": "2022-10-03T12:41:32.000Z",
            "content_html": "<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>已经编写好基本的界面了，接下来分析 gh0st 的数据传输架构，这是一个远控的核心，其他功能都可以根据这个核心去拓展。</p>\n<h2 id=\"分析gh0st主控端socket内核\"><a class=\"anchor\" href=\"#分析gh0st主控端socket内核\">#</a> 分析 gh0st 主控端 socket 内核</h2>\n<p>简略分析 socket 的内核。</p>\n<p>视频中老狼是从重启功能开始切入分析的。</p>\n<p>开始从 ReBoot 函数开始看起：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>当触发重启消息事件时，就会调用  <code>SendSelectCommand</code>  处理函数（很多都是调用这个函数，相当于一个消息处理的入口）。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CGh0stView</span><span class=\"token operator\">::</span><span class=\"token function\">SendSelectCommand</span><span class=\"token punctuation\">(</span>PBYTE pData<span class=\"token punctuation\">,</span> UINT nSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: Add your command handler code here</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tPOSITION pos <span class=\"token operator\">=</span> m_pListCtrl<span class=\"token operator\">-></span><span class=\"token function\">GetFirstSelectedItemPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//iterator for the CListCtrl</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span> <span class=\"token comment\">//so long as we have a valid POSITION, we keep iterating</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span>\tnItem <span class=\"token operator\">=</span> m_pListCtrl<span class=\"token operator\">-></span><span class=\"token function\">GetNextSelectedItem</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tClientContext<span class=\"token operator\">*</span> pContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ClientContext<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>m_pListCtrl<span class=\"token operator\">-></span><span class=\"token function\">GetItemData</span><span class=\"token punctuation\">(</span>nItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">// 发送获得驱动器列表数据包</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tm_iocpServer<span class=\"token operator\">-></span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>pContext<span class=\"token punctuation\">,</span> pData<span class=\"token punctuation\">,</span> nSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">//Save the pointer to the new item in our CList</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">//EO while(pos) -- at this point we have deleted the moving items and stored them in memoryt\t</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>解释上面的代码：获取选中了多少行，然后遍历每一行，获取每一行的  <code>ClientContext</code>  类对象，然后调用  <code>m_iocpServer</code>  的  <code>Send</code>  函数发送数据。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">ClientContext</span>          <span class=\"token comment\">// 简单分析 ClientContext 结构体然后回到  SendSelectCommand</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SOCKET\t\t\t\tm_Socket<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 套接字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// Store buffers</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tCBuffer\t\t\t\tm_WriteBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tCBuffer\t\t\t\tm_CompressionBuffer<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 接收到的压缩的数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCBuffer\t\t\t\tm_DeCompressionBuffer<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 解压后的数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tCBuffer\t\t\t\tm_ResendWriteBuffer<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 上次发送的数据包，接收失败时重发时用</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">int</span>\t\t\t\t\tm_Dialog<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 放对话框列表用，第一个 int 是类型，第二个是 CDialog 的地址</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">int</span>\t\t\t\t\tm_nTransferProgress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// Input Elements for Winsock</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tWSABUF\t\t\t\tm_wsaInBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tBYTE\t\t\t\tm_byInBuffer<span class=\"token punctuation\">[</span><span class=\"token number\">8192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// Output elements for Winsock</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tWSABUF\t\t\t\tm_wsaOutBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tHANDLE\t\t\t\tm_hWriteComplete<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// Message counts... purely for example purposes</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tLONG\t\t\t\tm_nMsgIn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tLONG\t\t\t\tm_nMsgOut<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tBOOL\t\t\t\tm_bIsMainSocket<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 是不是主 socket</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tClientContext<span class=\"token operator\">*</span>\t\tm_pWriteContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tClientContext<span class=\"token operator\">*</span>\t\tm_pReadContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接着按 F12 查看  <code>m_iocpServer</code>  声明。</p>\n<p>发现是  <code>CIOCPServer</code>  类型的指针变量：  <code>CIOCPServer* m_iocpServer</code></p>\n<h3 id=\"ciocpserver-类-send函数分析\"><a class=\"anchor\" href=\"#ciocpserver-类-send函数分析\">#</a> CIOCPServer 类 Send 函数分析</h3>\n<p>简单的了解一下流程。</p>\n<p>查看其  <code>Send</code>  函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CIOCPServer</span><span class=\"token operator\">::</span><span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>ClientContext<span class=\"token operator\">*</span> pContext<span class=\"token punctuation\">,</span> LPBYTE lpData<span class=\"token punctuation\">,</span> UINT nSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pContext <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nSize <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token comment\">// Compress data</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>\tdestLen <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>nSize <span class=\"token operator\">*</span> <span class=\"token number\">1.001</span>  <span class=\"token operator\">+</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 计算压缩后数据的大小</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tLPBYTE\t\t\tpDest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> BYTE<span class=\"token punctuation\">[</span>destLen<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 分配压缩数据的空间</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span>\tnRet <span class=\"token operator\">=</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span>pDest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>destLen<span class=\"token punctuation\">,</span> lpData<span class=\"token punctuation\">,</span> nSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 压缩数据</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nRet <span class=\"token operator\">!=</span> Z_OK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pDest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\tLONG nBufLen <span class=\"token operator\">=</span> destLen <span class=\"token operator\">+</span> HDR_SIZE<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 数据中加入数据头标识大小    </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token comment\">// 5 bytes packet flag</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 写入数据头</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token comment\">// 4 byte header [Size of Entire Packet]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>nBufLen<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nBufLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 写入当前数据总大小  </span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token comment\">// 4 byte header [Size of UnCompress Entire Packet]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>nSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 写入压缩前的数据大小</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token comment\">// Write Data</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>pDest<span class=\"token punctuation\">,</span> destLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// 写入数据</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pDest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token comment\">// 发送完后，再备份数据，因为有可能是 m_ResendWriteBuffer 本身在发送，所以不直接写入</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\tLPBYTE lpResendWriteBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> BYTE<span class=\"token punctuation\">[</span>nSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span>lpResendWriteBuffer<span class=\"token punctuation\">,</span> lpData<span class=\"token punctuation\">,</span> nSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_ResendWriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">ClearBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_ResendWriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>lpResendWriteBuffer<span class=\"token punctuation\">,</span> nSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 备份发送的数据</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> lpResendWriteBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">else</span> <span class=\"token comment\">// 要求重发</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_ResendWriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">ClearBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_ResendWriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 备份发送的数据\t</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token comment\">// Wait for Data Ready signal to become available</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_hWriteComplete<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token comment\">// Prepare Packet</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t <span class=\"token comment\">//\tpContext->m_wsaOutBuffer.buf = (CHAR*) new BYTE[nSize];</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t <span class=\"token comment\">//\tpContext->m_wsaOutBuffer.len = pContext->m_WriteBuffer.GetBufferLen();</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre> \t\tOVERLAPPEDPLUS <span class=\"token operator\">*</span> pOverlap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">OVERLAPPEDPLUS</span><span class=\"token punctuation\">(</span>IOWrite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 创建一个对列</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre> \t\t<span class=\"token function\">PostQueuedCompletionStatus</span><span class=\"token punctuation\">(</span>m_hCompletionPort<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span> pContext<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pOverlap<span class=\"token operator\">-></span>m_ol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 发送这个队列的消息  搜索 IOWrite</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tpContext<span class=\"token operator\">-></span>m_nMsgOut<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>发送数据前先把要发送的数据压缩了一下，然后加入数据头，数据头为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 这里是数据发送的标记  服务端同客户端字符必须一致</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>BYTE bPacketFlag<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'t'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">,</span> bPacketFlag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>bPacketFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>然后就创建了一个叫  <code>IOWrite</code>  的队列，搜索一下，发现这个  <code>IO_MESSAGE_HANDLER(IOWrite, OnClientWriting)</code>   转到  <code>OnClientWriting</code> <br />\n 函数查看：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">CIOCPServer</span><span class=\"token operator\">::</span><span class=\"token function\">OnClientWriting</span><span class=\"token punctuation\">(</span>ClientContext<span class=\"token operator\">*</span> pContext<span class=\"token punctuation\">,</span> DWORD dwIoSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">static</span> DWORD nLastTick <span class=\"token operator\">=</span> <span class=\"token function\">GetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">static</span> DWORD nBytes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tnBytes <span class=\"token operator\">+=</span> dwIoSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> nLastTick <span class=\"token operator\">>=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tnLastTick <span class=\"token operator\">=</span> <span class=\"token function\">GetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token function\">InterlockedExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPLONG<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>m_nSendKbps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tnBytes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tULONG ulFlags <span class=\"token operator\">=</span> MSG_PARTIAL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// Finished writing - tidy up</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tpContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>dwIoSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBufferLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">ClearBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token comment\">// Write complete</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token function\">SetEvent</span><span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_hWriteComplete<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// issue new read after this one</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\tOVERLAPPEDPLUS <span class=\"token operator\">*</span> pOverlap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">OVERLAPPEDPLUS</span><span class=\"token punctuation\">(</span>IOWrite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token function\">m_pNotifyProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span> m_pFrame<span class=\"token punctuation\">,</span> pContext<span class=\"token punctuation\">,</span> NC_TRANSMIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 调用一下回调函数</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_wsaOutBuffer<span class=\"token punctuation\">.</span>buf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> pContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_wsaOutBuffer<span class=\"token punctuation\">.</span>len <span class=\"token operator\">=</span> pContext<span class=\"token operator\">-></span>m_WriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBufferLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>             <span class=\"token comment\">// 最终调用 WSASend 将数据发送出去</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> nRetVal <span class=\"token operator\">=</span> <span class=\"token function\">WSASend</span><span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_Socket<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token operator\">&amp;</span>pContext<span class=\"token operator\">-></span>m_wsaOutBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token operator\">&amp;</span>pContext<span class=\"token operator\">-></span>m_wsaOutBuffer<span class=\"token punctuation\">.</span>len<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t\t\t\tulFlags<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token operator\">&amp;</span>pOverlap<span class=\"token operator\">-></span>m_ol<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token comment\">// 判断是否成功。如果失败就执行 if 中的代码</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> nRetVal <span class=\"token operator\">==</span> SOCKET_ERROR <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">WSAGetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> WSA_IO_PENDING <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t<span class=\"token function\">RemoveStaleClient</span><span class=\"token punctuation\">(</span> pContext<span class=\"token punctuation\">,</span> FALSE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// issue new read after this one</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>发现其调用了回调函数，查看了一下，什么也没做，直接 break 返回了。<br />\n最后就调用了  <code>WSASend</code>  把数据发了出去。</p>\n<h3 id=\"ciocpserver-类的-onclientreading-函数分析\"><a class=\"anchor\" href=\"#ciocpserver-类的-onclientreading-函数分析\">#</a> CIOCPServer 类的 OnClientReading 函数分析</h3>\n<p>上面的  <code>OnClientWriting</code>  是向被控端发送数据时调用。</p>\n<p>接下来分析  <code>OnClientReading</code>  了解当主控端收到消息时如何处理。</p>\n<p>可以在 CIOCPServer 中看到 IO 操作的映射函数  <code>IO_MESSAGE_HANDLER(IORead, OnClientReading)</code>  当有消息发来的时候就调用了  <code>OnClientReading</code>  。</p>\n<p>还是简单的了解一下流程</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">CIOCPServer</span><span class=\"token operator\">::</span><span class=\"token function\">OnClientReading</span><span class=\"token punctuation\">(</span>ClientContext<span class=\"token operator\">*</span> pContext<span class=\"token punctuation\">,</span> DWORD dwIoSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tCLock <span class=\"token function\">cs</span><span class=\"token punctuation\">(</span>CIOCPServer<span class=\"token operator\">::</span>m_cs<span class=\"token punctuation\">,</span> <span class=\"token string\">\"OnClientReading\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">static</span> DWORD nLastTick <span class=\"token operator\">=</span> <span class=\"token function\">GetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">static</span> DWORD nBytes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tnBytes <span class=\"token operator\">+=</span> dwIoSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> nLastTick <span class=\"token operator\">>=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tnLastTick <span class=\"token operator\">=</span> <span class=\"token function\">GetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token function\">InterlockedExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPLONG<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>m_nRecvKbps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tnBytes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwIoSize <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token function\">RemoveStaleClient</span><span class=\"token punctuation\">(</span>pContext<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 如果出现错误要求重发数据</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwIoSize <span class=\"token operator\">==</span> FLAG_SIZE <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_byInBuffer<span class=\"token punctuation\">,</span> m_bPacketFlag<span class=\"token punctuation\">,</span> FLAG_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token comment\">// 重新发送</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>pContext<span class=\"token punctuation\">,</span> pContext<span class=\"token operator\">-></span>m_ResendWriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pContext<span class=\"token operator\">-></span>m_ResendWriteBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBufferLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token comment\">// 必须再投递一个接收请求</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token function\">PostRecv</span><span class=\"token punctuation\">(</span>pContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token comment\">// 将接收到的数据写入</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token comment\">// Add the message to out message</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token comment\">// Dont forget there could be a partial, 1, 1 or more + partial mesages</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tpContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_byInBuffer<span class=\"token punctuation\">,</span>dwIoSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token comment\">// 调用回调函数 传递\tNC_RECEIVE  跟进回调函数查看  </span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token function\">m_pNotifyProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span> m_pFrame<span class=\"token punctuation\">,</span> pContext<span class=\"token punctuation\">,</span> NC_RECEIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>         <span class=\"token comment\">// 如果接收的数据 大于标识头大小</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token comment\">// Check real Data</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBufferLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> HDR_SIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\tBYTE bPacketFlag<span class=\"token punctuation\">[</span>FLAG_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span>bPacketFlag<span class=\"token punctuation\">,</span> pContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>bPacketFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token comment\">// 这里对比 是否是同一个标识头 就是上一节给大家将的 我们再去看看 此类的构造函数</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">,</span> bPacketFlag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>m_bPacketFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token string\">\"bad buffer\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token comment\">// 得到数据大小  到 Send 函数看一下 就明白了  搜索  Send</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> nSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token function\">CopyMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>nSize<span class=\"token punctuation\">,</span> pContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBuffer</span><span class=\"token punctuation\">(</span>FLAG_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token comment\">// Update Process Variable</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\tpContext<span class=\"token operator\">-></span>m_nTransferProgress <span class=\"token operator\">=</span> pContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBufferLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">/</span> nSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token comment\">// 如果数据大小真确</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nSize <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>pContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">GetBufferLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> nSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span> nUnCompressLength <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// Read off header</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 读取数据</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t\tpContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span> bPacketFlag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>bPacketFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t\tpContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>nSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t\tpContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>nUnCompressLength<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t\t<span class=\"token comment\">////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t\t<span class=\"token comment\">////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// SO you would process your data here</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// I'm just going to post message so we can see the data</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span>\tnCompressLength <span class=\"token operator\">=</span> nSize <span class=\"token operator\">-</span> HDR_SIZE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t\tPBYTE pData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> BYTE<span class=\"token punctuation\">[</span>nCompressLength<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 重新计算数据的压缩前大小</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\tPBYTE pDeCompressionData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> BYTE<span class=\"token punctuation\">[</span>nUnCompressLength<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pData <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> pDeCompressionData <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token string\">\"bad Allocate\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t\t\tpContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>pData<span class=\"token punctuation\">,</span> nCompressLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 解压缩数据 ，此处也就是这个完成端口传输的 精妙所在，用解压是否成功判断 数据包是否完整接收</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>\tdestLen <span class=\"token operator\">=</span> nUnCompressLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span>\tnRet <span class=\"token operator\">=</span> <span class=\"token function\">uncompress</span><span class=\"token punctuation\">(</span>pDeCompressionData<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>destLen<span class=\"token punctuation\">,</span> pData<span class=\"token punctuation\">,</span> nCompressLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//////////////////////////////////////////////////////////////////////////</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nRet <span class=\"token operator\">==</span> Z_OK<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 如果完整接收</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 写入数据</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t\t\tpContext<span class=\"token operator\">-></span>m_DeCompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">ClearBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t\t\tpContext<span class=\"token operator\">-></span>m_DeCompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>pDeCompressionData<span class=\"token punctuation\">,</span> destLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t\t\t <span class=\"token comment\">// 调用回调函数传递  NC_RECEIVE_COMPLETE  到回调函数看一下 </span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">m_pNotifyProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span> m_pFrame<span class=\"token punctuation\">,</span> pContext<span class=\"token punctuation\">,</span> NC_RECEIVE_COMPLETE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token string\">\"bad buffer\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pDeCompressionData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\tpContext<span class=\"token operator\">-></span>m_nMsgIn<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token comment\">// Post to WSARecv Next</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t<span class=\"token function\">PostRecv</span><span class=\"token punctuation\">(</span>pContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\tpContext<span class=\"token operator\">-></span>m_CompressionBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">ClearBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t<span class=\"token comment\">// 要求重发，就发送 0, 内核自动添加数包标志</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t<span class=\"token function\">Send</span><span class=\"token punctuation\">(</span>pContext<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t<span class=\"token function\">PostRecv</span><span class=\"token punctuation\">(</span>pContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "数据传输",
                "ini文件的读写"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%86%99%E8%BF%9C%E6%8E%A7-01%E7%95%8C%E9%9D%A2%E7%BC%96%E5%86%99%E5%92%8C%E8%AE%BE%E8%AE%A1/",
            "url": "https://or0kit.github.io/Programming/MFC/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%86%99%E8%BF%9C%E6%8E%A7-01%E7%95%8C%E9%9D%A2%E7%BC%96%E5%86%99%E5%92%8C%E8%AE%BE%E8%AE%A1/",
            "title": "从零开始写远控-01界面编写和设计",
            "date_published": "2022-09-04T14:59:21.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>早就想学习如何编写远控了。<br />\n前几天网上冲浪看到了一篇博客，其博主看教程是 11 年（11 年了）的网名为老狼的前辈的教程，于是我也在网上找了一下这个教程，虽然已经有些年头了，不过这并不影响我们学习大规模软件开发的设计思想。</p>\n<p>注：<strong>因为目前本人水平有限，有些内容会搬运教程中的教案，如有侵犯，即刻删除。</strong></p>\n<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>创建一个基于对话框的 MFC 项目。</p>\n<p>首先设计主控端的界面。</p>\n<h2 id=\"对话框-列表控件的伸缩\"><a class=\"anchor\" href=\"#对话框-列表控件的伸缩\">#</a> 对话框、列表控件的伸缩</h2>\n<ol>\n<li>\n<p>新建一个工程，看操作  我们必须给工程起一个响亮的名字 😄  就叫  <code>Or0Remote</code>  吧</p>\n</li>\n<li>\n<p>添加最大化窗口，最小化窗口的属性</p>\n</li>\n</ol>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>\n<p>更改对话框到适当大小</p>\n</li>\n<li>\n<p>添加服务端连接后显示的列表控件，控件 ID 设置为： IDIDC_ONLINE ，日志列表控件，控件 ID 设置为： IDC_MESSAGE</p>\n</li>\n<li>\n<p>伸缩窗口，发现列表不能随着窗口伸缩。</p>\n</li>\n<li>\n<p>添加列表控件变量 m_CList_Online , m_CList_Message</p>\n</li>\n<li>\n<p>响应对话框改变大小的消息是 WM_SIZE 就是向对话框抛出这个消息，对话框就会改变大小，我们先响应这个消息，然后再把这个消息向下传递。</p>\n</li>\n</ol>\n<p>可以在对话框的类向导中添加此消息。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>也可以对对话框右键，点击属性，点击消息，在消息一栏中查看 WM_SIZE 消息，添加处理函数。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<ol start=\"8\">\n<li>写入更改列表大小的代码</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_CList_Online<span class=\"token punctuation\">.</span>m_hWnd<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tCRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>left<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 列表的左坐标</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>top<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 列表的上坐标</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>right<span class=\"token operator\">=</span>cx<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 列表的右坐标</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>bottom<span class=\"token operator\">=</span>cy<span class=\"token operator\">-</span><span class=\"token number\">160</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 列表的下坐标</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_CList_Message<span class=\"token punctuation\">.</span>m_hWnd<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tCRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>left<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 列表的左坐标</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>top<span class=\"token operator\">=</span>cy<span class=\"token operator\">-</span><span class=\"token number\">156</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 列表的上坐标</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>right<span class=\"token operator\">=</span>cx<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 列表的右坐标</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>bottom<span class=\"token operator\">=</span>cy<span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 列表的下坐标</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tm_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"9\">\n<li>示范伸缩</li>\n</ol>\n<p>刚初始化完的对话框：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>稍微拉伸了一点的对话框，既触发了 WM_SIZE 消息后的对话框：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>需要解决伸缩后与原来有差别的问题！</p>\n<ol start=\"10\">\n<li>伸缩同原来的有差别，小技巧：</li>\n</ol>\n<p>我们可以在初始化对话框的函数  <code>OnInitDialog</code>  中触发 WM_SIZE 消息。</p>\n<p>添加下面的代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CRect rect<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">GetWindowRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rect<span class=\"token punctuation\">.</span>bottom<span class=\"token operator\">+=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这样初始化窗口的时候 List 控件就被修正成了与拉伸后一样的了。</p>\n<h2 id=\"加入列表的列名称\"><a class=\"anchor\" href=\"#加入列表的列名称\">#</a> 加入列表的列名称</h2>\n<ol>\n<li>参考 gh0st 的列表中的列名:</li>\n</ol>\n<p>0IP 1 所在区域   2 计算机名 / 备注  3 操作系统  4CPU  5 摄像头  6Ping</p>\n<ol start=\"2\">\n<li>我们已经为列表控件添加变量了，我们来查看变量的类型:<br />\n <code>CListCtrl</code>  类<br />\n查看 MSDN  找到</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">InsertColumn</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token keyword\">int</span> nCol<span class=\"token punctuation\">,</span>                  <span class=\"token comment\">// 列的顺序</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                LPCTSTR lpszColumnHeading<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 列的名字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">int</span> nFormat <span class=\"token operator\">=</span> LVCFMT_LEFT<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 列对齐的方式 LVCFMT_LEFT, LVCFMT_RIGHT,LVCFMT_CENTER</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">int</span> nWidth <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>            <span class=\"token comment\">// 列的宽度</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">int</span> nSubItem <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>           <span class=\"token comment\">// 与之联系的子条目 默认为 - 1 我们不用写</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>有了这些我们可以现在就写入代码了，但请等一下！</li>\n</ol>\n<p>我们来考虑一下以后的扩展问题，假如我们要加入新的列那会不会很麻烦，我们每一个列都写入了固定的顺序 (0--6) 没有考虑扩展，比如在 CPU 列的后面加入显示内存大小，那么加入的就是第 5 列，而第 5 列恰好是摄头，这样如果更改的话，就会很麻烦。</p>\n<p><strong>解决这个问题的方式就是用枚举 enum 写入列的顺序时不写入硬编码 (0----6) 而是写入枚举成员这样我们只需很小的改动就能达到目的。</strong></p>\n<p>很多知识都是这个样，学习到的知识只有到实践中才体会到用处很大，枚举变量就是一个例子，我刚开始学习时并不知道这个有什么用，实践中才发现用<br />\n枚举解决问题更简单，更高效。</p>\n<ol start=\"4\">\n<li>因为这个列表比较重要所以要放到一个每一个文件都能访问到的文件很自然的就是 stdafx.h（在如今的 VS2019 中，我把他们放到了 pch.h）</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tONLINELIST_IP<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>          <span class=\"token comment\">//IP 的列顺序</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tONLINELIST_ADDR<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 地址</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tONLINELIST_COMPUTER_NAME<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 计算机名 / 备注</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tONLINELIST_OS<span class=\"token punctuation\">,</span>            <span class=\"token comment\">// 操作系统</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tONLINELIST_CPU<span class=\"token punctuation\">,</span>           <span class=\"token comment\">//CPU</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tONLINELIST_VIDEO<span class=\"token punctuation\">,</span>         <span class=\"token comment\">// 摄像头</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tONLINELIST_PING           <span class=\"token comment\">//PING</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>处理列表的代码应该统一放在一处，添加列表处理的代码 InitList ()</li>\n</ol>\n<p><strong>可以在类视图中对着对话框的类右键添加函数</strong></p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<ol start=\"6\">\n<li>写入加入列表列名的代码:</li>\n</ol>\n<p>列表的名字与列表的宽度是同一一对应的关系，以后为了以后修改方便建立这样的一个结构体:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLPTSTR title<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 列表的名称</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tsize_t  nWidth<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 列表的宽度</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span>COLUMNSTRUCT<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>然后建立这个结构体变量的数组</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>COLUMNSTRUCT g_Column_Online_Data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token number\">148</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"区域\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t\t<span class=\"token number\">150</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"计算机名/备注\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t<span class=\"token number\">160</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"操作系统\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token number\">128</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CPU\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token number\">80</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"摄像头\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t\t<span class=\"token number\">81</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PING\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t\t<span class=\"token number\">81</span>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>添加全局变量 int g_Column_Online_Count=7; // 列表的个数</p>\n<ol start=\"7\">\n<li>在 initList 中写入加入列表列名称的代码:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> g_Column_Online_Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">InsertColumn</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> g_Column_Online_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> g_Column_Online_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"8\">\n<li>\n<p>在 Oninitdlg 中写入 InitList ()</p>\n</li>\n<li>\n<p>改变列表控件的属性 ICon  改为 Report</p>\n</li>\n<li>\n<p>同样的方法改动日志消息的列表控件看操作</p>\n</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 变量声明</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>size_t g_Column_Count_Message<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 列表的个数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>COLUMNSTRUCT g_Column_Message_Data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"信息类型\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token number\">68</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"时间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t\t<span class=\"token number\">100</span>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"信息内容\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t    <span class=\"token number\">660</span>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 在 InitList 中添加一下代码</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> g_Column_Message_Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tm_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">InsertColumn</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> g_Column_Message_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> LVCFMT_CENTER<span class=\"token punctuation\">,</span> g_Column_Message_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"11\">\n<li>记得改变列表控件的属性 ICon  改为 Report</li>\n</ol>\n<h2 id=\"使列表控件的列的宽度支持伸缩\"><a class=\"anchor\" href=\"#使列表控件的列的宽度支持伸缩\">#</a> 使列表控件的列的宽度支持伸缩</h2>\n<p>我们伸缩对话框的时候，发现 List 控件的每一列并不能随着窗口的拉伸而改变，现在解决这一问题！</p>\n<ol>\n<li>查找相关的函数：<br />\n <code>CListCtrl::SetColumnWidth</code> <br />\n 查看 MSDN</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">SetColumnWidth</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> nCol<span class=\"token punctuation\">,</span>             <span class=\"token comment\">// 列索引</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> cx                <span class=\"token comment\">// 列宽度</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>声明列的总宽度:</li>\n</ol>\n<p>size_t g_Column_Online_Width=0;  // 列总宽度</p>\n<ol start=\"3\">\n<li>得到列的总宽度 initlist 中:</li>\n</ol>\n<p>g_Column_Online_Width+=g_Column_Online_Data [i].nWidth;       // 得到总宽度</p>\n<ol start=\"4\">\n<li>在 OnSize 添加代码:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> dcx<span class=\"token operator\">=</span>cx<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 对话框的总宽度</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>g_Column_Online_Count<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>                   <span class=\"token comment\">// 遍历每一个列</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">double</span> dd<span class=\"token operator\">=</span>g_Column_Online_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 得到当前列的宽度</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dd<span class=\"token operator\">/=</span>g_Column_Online_Width<span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 看一看当前宽度占总长度的几分之几</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dd<span class=\"token operator\">*=</span>dcx<span class=\"token punctuation\">;</span>                                       <span class=\"token comment\">// 用原来的长度乘以所占的几分之几得到当前的宽度</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> lenth<span class=\"token operator\">=</span>dd<span class=\"token punctuation\">;</span>                                   <span class=\"token comment\">// 转换为 int 类型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetColumnWidth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>lenth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 设置当前的宽度</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>注意使用 double 类型的变量，原因就不解释了。</li>\n</ol>\n<p>6. 改变日志的列表宽度</p>\n<p>和上面的步骤一样了</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> g_Column_Message_Width<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 列总宽度</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>g_Column_Message_Width<span class=\"token operator\">+=</span>g_Column_Message_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 得到总宽度</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>g_Column_Online_Count<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>                   <span class=\"token comment\">// 遍历每一个列</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> dd<span class=\"token operator\">=</span>g_Column_Message_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 得到当前列的宽度</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tdd<span class=\"token operator\">/=</span>g_Column_Message_Width<span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 看一看当前宽度占总长度的几分之几</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tdd<span class=\"token operator\">*=</span>dcx<span class=\"token punctuation\">;</span>                                       <span class=\"token comment\">// 用原来的长度乘以所占的几分之几得到当前的宽度</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> lenth<span class=\"token operator\">=</span>dd<span class=\"token punctuation\">;</span>                                   <span class=\"token comment\">// 转换为 int 类型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tm_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">SetColumnWidth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>lenth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 设置当前的宽度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"7\">\n<li>改变一下流程</li>\n</ol>\n<p>在 OnInitDialog 中 ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// TODO: 在此添加额外的初始化代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 初始化 List 控件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">InitList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 触发 WM_SIZE 执行 OnSize 函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>CRect rect<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">GetWindowRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 OnSize 函数中：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">COr0RemoteDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnSize</span><span class=\"token punctuation\">(</span>UINT nType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cy<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此处添加消息处理程序代码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token class-name\">CDialogEx</span><span class=\"token operator\">::</span><span class=\"token function\">OnSize</span><span class=\"token punctuation\">(</span>nType<span class=\"token punctuation\">,</span> cx<span class=\"token punctuation\">,</span> cy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_CList_Online<span class=\"token punctuation\">.</span>m_hWnd <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tCRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 列表的左坐标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 列表的上坐标</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> cx <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 列表的右坐标</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">=</span> cy <span class=\"token operator\">-</span> <span class=\"token number\">160</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 列表的下坐标</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_CList_Message<span class=\"token punctuation\">.</span>m_hWnd <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tCRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 列表的左坐标</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> cy <span class=\"token operator\">-</span> <span class=\"token number\">156</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 列表的上坐标</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> cx <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 列表的右坐标</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\trc<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">=</span> cy <span class=\"token operator\">-</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 列表的下坐标</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tm_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g_Column_Online_Width <span class=\"token operator\">&amp;&amp;</span> g_Column_Message_Width<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> dcx <span class=\"token operator\">=</span> cx<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 对话框的总宽度</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> dd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> g_Column_Online_Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 遍历每一个列</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\tdd <span class=\"token operator\">=</span> g_Column_Online_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 得到当前列的宽度</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\tdd <span class=\"token operator\">/=</span> g_Column_Online_Width<span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 看一看当前宽度占总长度的几分之几</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\tdd <span class=\"token operator\">*=</span> dcx<span class=\"token punctuation\">;</span>                                       <span class=\"token comment\">// 用原来的长度乘以所占的几分之几得到当前的宽度</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetColumnWidth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>dd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 设置当前的宽度</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> g_Column_Online_Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>     <span class=\"token comment\">// 遍历每一个列</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\tdd <span class=\"token operator\">=</span> g_Column_Message_Data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">;</span>\t\t\t  <span class=\"token comment\">// 得到当前列的宽度</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\tdd <span class=\"token operator\">/=</span> g_Column_Message_Width<span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 看一看当前宽度占总长度的几分之几</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\tdd <span class=\"token operator\">*=</span> dcx<span class=\"token punctuation\">;</span>                                        <span class=\"token comment\">// 用原来的长度乘以所占的几分之几得到当前的宽度</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\tm_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">SetColumnWidth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>dd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 设置当前的宽度</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>把初始化 List 放在前面，这样做是为了后执行 MoveWindow () 触发消息并执行 OnSize 函数，这样当窗口显示的时候就是按比例调整好的了。<br />\n就不会出现，拖动前和拖动后比例差异不一样的问题了（因为拖动前显示的使我们之前手动设置的，肯定是不完美的。）</p>\n<p>附上结果：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<h2 id=\"列表中添加条目\"><a class=\"anchor\" href=\"#列表中添加条目\">#</a> 列表中添加条目</h2>\n<ol>\n<li>查找相关函数</li>\n</ol>\n<p><code>CListCtrl::InsertItem()</code> <br />\n InsertItem   插入条目<br />\n SetItemText  设置哪个列的文本</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> nItem<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// 插入哪一行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LPCTSTR lpszItem        <span class=\"token comment\">// 该行 0 列显示的字符</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>BOOL <span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> nItem<span class=\"token punctuation\">,</span>                   <span class=\"token comment\">// 改动那个行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> nSubItem<span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 该行中那个子列</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>LPCTSTR lpszText             <span class=\"token comment\">// 要设置的字符</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>列表设计思路:<br />\n 对于这种庞大的远控程序，我们要有一个设计思路。</li>\n</ol>\n<p>(1) 服务端上线后要显示在列表中，这样有一个统一的函数来处理会使代码更加简洁。<br />\n(2) 消息显示分为成功失败两种，还要在其中显示消息产生的时间，这样也应该有一个统一的函数来处理。</p>\n<ol start=\"3\">\n<li>上线列表添加处理:</li>\n</ol>\n<p>在对话框的类中添加函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CPCRemoteDlg</span><span class=\"token operator\">::</span><span class=\"token function\">AddList</span><span class=\"token punctuation\">(</span>CString strIP<span class=\"token punctuation\">,</span> CString strAddr<span class=\"token punctuation\">,</span> CString strPCName<span class=\"token punctuation\">,</span> CString strOS<span class=\"token punctuation\">,</span> CString strCPU<span class=\"token punctuation\">,</span> CString strVideo<span class=\"token punctuation\">,</span> CString strPing<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>strIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 默认为 0 行  这样所有插入的新列都在最上面</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ONLINELIST_ADDR<span class=\"token punctuation\">,</span>strAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 设置列的显示字符   这里 ONLINELIST_ADDR 等 为第二节课中的枚举类型 用这样的方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ONLINELIST_COMPUTER_NAME<span class=\"token punctuation\">,</span>strPCName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 解决问题会避免以后扩展时的冲突</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ONLINELIST_OS<span class=\"token punctuation\">,</span>strOS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ONLINELIST_CPU<span class=\"token punctuation\">,</span>strCPU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ONLINELIST_VIDEO<span class=\"token punctuation\">,</span>strVideo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ONLINELIST_PING<span class=\"token punctuation\">,</span>strPing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>添加日志消息的处理:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CPCRemoteDlg</span><span class=\"token operator\">::</span><span class=\"token function\">ShowMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bIsOK<span class=\"token punctuation\">,</span> CString strMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tCString strIsOK<span class=\"token punctuation\">,</span>strTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tCTime t<span class=\"token operator\">=</span><span class=\"token class-name\">CTime</span><span class=\"token operator\">::</span><span class=\"token function\">GetCurrentTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tstrTime<span class=\"token operator\">=</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%H:%M:%S\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bIsOK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tstrIsOK<span class=\"token operator\">=</span><span class=\"token string\">\"执行成功\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tstrIsOK<span class=\"token operator\">=</span><span class=\"token string\">\"执行失败\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t m_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>strIsOK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t m_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>strTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t m_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>strMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>添加伪上线，和日志的测试代码，在没有加入 gh0st 传输内核之前是要自己测试的:</li>\n</ol>\n<p>然后在 OnInitDialog  中添加如下代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">AddList</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"本机局域网\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Windows7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2.2GHZ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123232\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ShowMessage</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"软件初始化成功...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>使点击时整个列都是选中状态:</li>\n</ol>\n<p>InitList () 中加入代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">SetExtendedStyle</span><span class=\"token punctuation\">(</span>LVS_EX_FULLROWSELECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m_CList_Message<span class=\"token punctuation\">.</span><span class=\"token function\">SetExtendedStyle</span><span class=\"token punctuation\">(</span>LVS_EX_FULLROWSELECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>结果如下：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<h2 id=\"设计列表中的右键菜单\"><a class=\"anchor\" href=\"#设计列表中的右键菜单\">#</a> 设计列表中的右键菜单</h2>\n<ol>\n<li>\n<p>添加菜单资源</p>\n</li>\n<li>\n<p>功能菜单项并写入相应的菜单 ID</p>\n</li>\n</ol>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>显示菜单</li>\n</ol>\n<p>(1) 参考 gh0st 代码，看一下 gh0st 是怎样显示菜单的<br />\n a. 找到主菜单<br />\n b. 查看主菜单的 ID<br />\nc. 搜索 IDR_LIST<br />\nd. 分析代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CMenu\tpopup<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 声明一个菜单变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>popup<span class=\"token punctuation\">.</span><span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span>IDR_LIST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 载入菜单资源</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMenu<span class=\"token operator\">*</span>\tpM <span class=\"token operator\">=</span> popup<span class=\"token punctuation\">.</span><span class=\"token function\">GetSubMenu</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 得到菜单项</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>CPoint\tp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">GetCursorPos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 得到鼠标指针的位置</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span>\tcount <span class=\"token operator\">=</span> pM<span class=\"token operator\">-></span><span class=\"token function\">GetMenuItemCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 得到菜单的个数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_pListCtrl<span class=\"token operator\">-></span><span class=\"token function\">GetSelectedCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 如果没有选中列表中的条目</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 遍历每一个菜单</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tpM<span class=\"token operator\">-></span><span class=\"token function\">EnableMenuItem</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> MF_BYPOSITION <span class=\"token operator\">|</span> MF_DISABLED <span class=\"token operator\">|</span> MF_GRAYED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 该项变灰</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pM<span class=\"token operator\">-></span><span class=\"token function\">EnableMenuItem</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MF_BYPOSITION <span class=\"token operator\">|</span> MF_DISABLED <span class=\"token operator\">|</span> MF_GRAYED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 全选</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_pListCtrl<span class=\"token operator\">-></span><span class=\"token function\">GetItemCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 列表中的条目项大于 0     </span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>pM<span class=\"token operator\">-></span><span class=\"token function\">EnableMenuItem</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> MF_BYPOSITION <span class=\"token operator\">|</span> MF_ENABLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 激活倒数第二个菜单 </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>pM<span class=\"token operator\">-></span><span class=\"token function\">EnableMenuItem</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> MF_BYPOSITION <span class=\"token operator\">|</span> MF_DISABLED <span class=\"token operator\">|</span> MF_GRAYED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 否则变灰</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>pM<span class=\"token operator\">-></span><span class=\"token function\">TrackPopupMenu</span><span class=\"token punctuation\">(</span>TPM_LEFTALIGN<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 在指定位置显示菜单</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>(2) 添加我们的代码</p>\n<p>a. 添加右键列表的响应函数</p>\n<p><img data-src=\"image010.png\" alt=\"\" /></p>\n<p>b. 添加代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CMenu\tpopup<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>popup<span class=\"token punctuation\">.</span><span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span>IDR_MENU_ONLINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMenu<span class=\"token operator\">*</span>\tpM <span class=\"token operator\">=</span> popup<span class=\"token punctuation\">.</span><span class=\"token function\">GetSubMenu</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>CPoint\tp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">GetCursorPos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span>\tcount <span class=\"token operator\">=</span> pM<span class=\"token operator\">-></span><span class=\"token function\">GetMenuItemCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectedCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 如果没有选中</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>pM<span class=\"token operator\">-></span><span class=\"token function\">EnableMenuItem</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> MF_BYPOSITION <span class=\"token operator\">|</span> MF_DISABLED <span class=\"token operator\">|</span> MF_GRAYED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 菜单全部变灰</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>pM<span class=\"token operator\">-></span><span class=\"token function\">TrackPopupMenu</span><span class=\"token punctuation\">(</span>TPM_LEFTALIGN<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>附上结果：</p>\n<p><img data-src=\"image011.png\" alt=\"\" /></p>\n<h2 id=\"添加菜单消息响应-删除列表中的条目\"><a class=\"anchor\" href=\"#添加菜单消息响应-删除列表中的条目\">#</a> 添加菜单消息响应、删除列表中的条目</h2>\n<ol>\n<li>添加菜单消息响应的函数:</li>\n</ol>\n<p>终端管理     进程管理    窗口管理    桌面管理     文件管理    语音管理     视频管理   服务管理     注册表管理</p>\n<p>这里可以直接对着菜单中的条目右键选择添加事件处理程序：</p>\n<p><img data-src=\"image012.png\" alt=\"\" /></p>\n<p>也可以在类视图中对对话框右键选择属性，点击事件，然后如下添加事件处理程序：</p>\n<p><img data-src=\"image013.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>删除列表中的条目:<br />\n 查找函数:<br />\n(1)  <code>CListCtrl::DeleteItem()</code></li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">DeleteItem</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> nItem              <span class=\"token comment\">// 列表的索引  从 0 开始</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>(2)  <code>GetSelectionMark()</code> <br />\n 我们还要得到选中的是哪一行。<br />\n <code>int GetSelectionMark( );        //得到用户选中的条目索引</code></p>\n<ol start=\"3\">\n<li>添加下线菜单  断开连接   ID:   IDM_ONLINE_DELETE</li>\n</ol>\n<p>这个我之前已经添加了</p>\n<ol start=\"4\">\n<li>添加菜单中的断开链接的响应代码:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> iSelect<span class=\"token operator\">=</span>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectionMark</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteItem</span><span class=\"token punctuation\">(</span>iSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>产生下线日志:</li>\n</ol>\n<p>我们要知道哪一个主机断开了连接，既获取下线主机的 IP。可以用这个函数：</p>\n<p><code>CListCtrl::GetItemText </code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CString <span class=\"token function\">GetItemText</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> nItem<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 哪一行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> nSubItem        <span class=\"token comment\">// 行中的那个子列</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>接着添加代码:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CString strIP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> iSelect<span class=\"token operator\">=</span>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectionMark</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>strIP<span class=\"token operator\">=</span>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemText</span><span class=\"token punctuation\">(</span>iSelect<span class=\"token punctuation\">,</span>ONLINELIST_IP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m_CList_Online<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteItem</span><span class=\"token punctuation\">(</span>iSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>strIP<span class=\"token operator\">+=</span><span class=\"token string\">\"断开连接\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">ShowMessage</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>strIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>附上结图:</p>\n<p><img data-src=\"image014.png\" alt=\"\" /></p>\n<h2 id=\"为对话框添加菜单栏及其事件响应\"><a class=\"anchor\" href=\"#为对话框添加菜单栏及其事件响应\">#</a> 为对话框添加菜单栏及其事件响应</h2>\n<ol>\n<li>\n<p>创建菜单的资源  ID:  IDR_MENU_MAIN</p>\n</li>\n<li>\n<p>添加菜单:</p>\n</li>\n</ol>\n<p>选项 -- 参数设置 (IDM_MAIN_SET)---- 生成服务端 (IDM_MAIN_BUILD)-- 退出 (IDM_MAIN_CLOSE)<br />\n 帮助 -- 关于 (IDM_MAIN_ABOUT)</p>\n<p><img data-src=\"image015.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>为对话框添加代码，显示菜单:</li>\n</ol>\n<p>(1) 认识几个 API 函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HMENU <span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span>                    <span class=\"token comment\">// 载入菜单 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tHINSTANCE hInstance<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 资源所在文件模块的句柄标识</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLPCTSTR lpMenuName           <span class=\"token comment\">// 资源 ID</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>BOOL <span class=\"token function\">SetMenu</span><span class=\"token punctuation\">(</span>                  <span class=\"token comment\">// 为窗口设置菜单</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tHWND hWnd<span class=\"token punctuation\">,</span>                 <span class=\"token comment\">// 要设置菜单的窗口句柄</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tHMENU hMenu                <span class=\"token comment\">// 菜单标识</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>BOOL <span class=\"token function\">DrawMenuBar</span><span class=\"token punctuation\">(</span>          <span class=\"token comment\">// 显示菜单</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tHWND hWnd          <span class=\"token comment\">// 要显示菜单的窗口句柄</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>(2) 在  <code>OnInitDialog</code>  中添加添加菜单的代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HMENU hmenu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hmenu<span class=\"token operator\">=</span><span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token function\">MAKEINTRESOURCE</span><span class=\"token punctuation\">(</span>IDR_MENU_MAIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 载入菜单资源</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">::</span><span class=\"token function\">SetMenu</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>hmenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 为窗口设置菜单</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">::</span><span class=\"token function\">DrawMenuBar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 显示菜单</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>为每一个菜单添加事件响应</li>\n</ol>\n<p>添加事件响应函数。</p>\n<ol start=\"4\">\n<li>添加代码:</li>\n</ol>\n<p>退出菜单代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">PostMessage</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\tHWND hWnd<span class=\"token punctuation\">,</span>             <span class=\"token comment\">// 标识向那个窗口发送消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tUINT Msg<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// 消息内容</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tWPARAM wParam<span class=\"token punctuation\">,</span>         <span class=\"token comment\">// 消息参数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tLPARAM lParam          <span class=\"token comment\">// 消息参数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>PostMessage(WM_CLOSE,0,0);</code></p>\n<p>菜单中关于项的响应代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CAboutDlg dlgAbout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dlgAbout<span class=\"token punctuation\">.</span><span class=\"token function\">DoModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其他代码用  <code>MessageBox</code>  代替。</p>\n<h2 id=\"为对话框添加状态条并在态条上显示文字\"><a class=\"anchor\" href=\"#为对话框添加状态条并在态条上显示文字\">#</a> 为对话框添加状态条并在态条上显示文字</h2>\n<ol>\n<li>\n<p>创建字符串资源  ID:  IDR_STATUSBAR_STRING</p>\n</li>\n<li>\n<p>添加状态条变量:</p>\n</li>\n</ol>\n<p><code>CStatusBar  m_wndStatusBar;             //状态条</code></p>\n<p>3. 查看 MSDN:</p>\n<p><code>CStatusBar::SetIndicators</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">SetIndicators</span><span class=\"token punctuation\">(</span>           <span class=\"token comment\">// 在状态条中加入对应字符串 ID</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">const</span> UINT<span class=\"token operator\">*</span> lpIDArray<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 字符串 ID         </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">int</span> nIDCount     <span class=\"token comment\">// 个数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SetPaneInfo</span><span class=\"token punctuation\">(</span>         <span class=\"token comment\">// 设置状态条的显示状态</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> nIndex<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 状态条的索引</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tUINT<span class=\"token operator\">&amp;</span> nID<span class=\"token punctuation\">,</span>      <span class=\"token comment\">// 状态条的字符 ID</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tUINT<span class=\"token operator\">&amp;</span> nStyle<span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 状态条的样式</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> cxWidth    <span class=\"token comment\">// 状态条的宽度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>4. 写入代码创建状态条的代码:</p>\n<p>(1)  创建字符 ID 的数组</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> UINT indicators<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>IDR_STATUSBAR_STRING</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>(2) 添加 CreatStatusBar 函数并写入代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>m_wndStatusBar<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">!</span>m_wndStatusBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetIndicators</span><span class=\"token punctuation\">(</span>indicators<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>indicators<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                    <span class=\"token comment\">// 创建状态条并设置字符资源的 ID</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">TRACE0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to create status bar\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span>      <span class=\"token comment\">// fail to create</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>CRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">::</span><span class=\"token function\">GetWindowRect</span><span class=\"token punctuation\">(</span>m_wndStatusBar<span class=\"token punctuation\">.</span>m_hWnd<span class=\"token punctuation\">,</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m_wndStatusBar<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">// 移动状态条到指定位置</span></pre></td></tr></table></figure><p>(3) 在 OnSize 中添加代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m_wndStatusBar<span class=\"token punctuation\">.</span>m_hWnd<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 当对话框大小改变时 状态条大小也随之改变</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rc<span class=\"token punctuation\">.</span>top<span class=\"token operator\">=</span>cy<span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rc<span class=\"token punctuation\">.</span>left<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rc<span class=\"token punctuation\">.</span>right<span class=\"token operator\">=</span>cx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rc<span class=\"token punctuation\">.</span>bottom<span class=\"token operator\">=</span>cy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>m_wndStatusBar<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>m_wndStatusBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetPaneInfo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> m_wndStatusBar<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemID</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>SBPS_POPOUT<span class=\"token punctuation\">,</span> cx<span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>注意这里修改，关于 Message List 的大小设置框，使其底部留出状态栏的高度。</strong></p>\n<ol start=\"5\">\n<li>写入状态上显示文字的代码:<br />\n 在对话框的类中添加 protected 成员变量 int iCount<br />\n 并且在构造函数中把其初始化为 0。</li>\n</ol>\n<p>在 ShowMessage () 函数的最后加入以下代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CString strStatusMsg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strMsg<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上线\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\">// 处理上线还是下线消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tiCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strMsg<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"下线\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tiCount<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strMsg<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"断开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tiCount<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>iCount <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>iCount <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> iCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 防止 iCount 有 - 1 的情况</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>strStatusMsg<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接：%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> iCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>m_wndStatusBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetPaneText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> strStatusMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 在状态条上显示文字</span></pre></td></tr></table></figure><p>6. 列表中添加条目时产生日志:</p>\n<p>记得在 Addlist 中添加  <code>ShowMessage(true, strIP + _T(&quot;主机上线&quot;));</code></p>\n<p>截图如下：</p>\n<p><img data-src=\"image016.png\" alt=\"\" /></p>\n<h2 id=\"为对话框添加工具条\"><a class=\"anchor\" href=\"#为对话框添加工具条\">#</a> 为对话框添加工具条</h2>\n<ol>\n<li>创建工具条资源<br />\n ID:  IDR_TOOLBAR_MAIN</li>\n</ol>\n<p>共 12 个工具条  9+3。 创建 12 个方块就行了</p>\n<ol start=\"2\">\n<li>添加 BMP 资源:<br />\nID:  IDB_BITMAP_MAIN</li>\n</ol>\n<p>这里自己 DIY 了每一个位图，然后在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudG9wdGFsLmNvbS9kZXZlbG9wZXJzL2Nzcy9zcHJpdGUtZ2VuZXJhdG9yLw==\"> https://www.toptal.com/developers/css/sprite-generator/</span> 生成精灵图。</p>\n<ol start=\"3\">\n<li>\n<p>复制 TrueColorToolBar 文件，添加 CTrueColorToolBar 类.</p>\n</li>\n<li>\n<p>在对话框的头文件中添加:</p>\n</li>\n</ol>\n<p>#include &quot;TrueColorToolBar.h&quot;</p>\n<ol start=\"5\">\n<li>并且在对话框的类中声明 protected 成员变量:</li>\n</ol>\n<p><code>CTrueColorToolBar m_ToolBar; </code></p>\n<ol start=\"6\">\n<li>\n<p>添加 CreateToolBar () 函数</p>\n</li>\n<li>\n<p>分析 CTrueColorToolBar 类:<br />\n 继承 CToolBar</p>\n</li>\n<li>\n<p>查看 MSDN  CToolBar 类:</p>\n</li>\n<li>\n<p>CreateToolBar () 函数中写入代码:</p>\n</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>m_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">CreateEx</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> TBSTYLE_FLAT<span class=\"token punctuation\">,</span> WS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> CBRS_TOP</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token operator\">|</span> CBRS_GRIPPER <span class=\"token operator\">|</span> CBRS_TOOLTIPS <span class=\"token operator\">|</span> CBRS_FLYBY <span class=\"token operator\">|</span> CBRS_SIZE_DYNAMIC<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token operator\">!</span>m_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">LoadToolBar</span><span class=\"token punctuation\">(</span>IDR_TOOLBAR_MAIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token function\">TRACE0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to create toolbar\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// fail to create</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">ModifyStyle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> TBSTYLE_FLAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//Fix for WinXP</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">LoadTrueColorToolBar</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token number\">48</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 加载真彩工具条</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tIDB_BITMAP_MAIN<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tIDB_BITMAP_MAIN<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tIDB_BITMAP_MAIN</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tRECT rt<span class=\"token punctuation\">,</span> rtMain<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token function\">GetWindowRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rtMain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\trt<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\trt<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\trt<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\trt<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> rtMain<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> rtMain<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rt<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"终端管理\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程管理\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"窗口管理\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"屏幕监控\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件管理\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"语音监听\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键盘记录\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"服务管理\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"注册表管理\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"参数设置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"生成服务端\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tm_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">SetButtonText</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"帮助\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">RepositionBars</span><span class=\"token punctuation\">(</span>AFX_IDW_CONTROLBAR_FIRST<span class=\"token punctuation\">,</span> AFX_IDW_CONTROLBAR_LAST<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>OnSize 中添加代码:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m_ToolBar<span class=\"token punctuation\">.</span>m_hWnd<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 工具条</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rc<span class=\"token punctuation\">.</span>top<span class=\"token operator\">=</span>rc<span class=\"token punctuation\">.</span>left<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rc<span class=\"token punctuation\">.</span>right<span class=\"token operator\">=</span>cx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rc<span class=\"token punctuation\">.</span>bottom<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>m_ToolBar<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 设置工具条大小位置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"11\">\n<li>\n<p>Oninitdialog 中添加 CreateToolBar</p>\n</li>\n<li>\n<p>vs 系列中工具条不能添加消息响应，然后应该给工具条添加已经设置过的菜单的消息，省去好多麻烦。</p>\n</li>\n</ol>\n<p>截图：</p>\n<p><img data-src=\"image017.png\" alt=\"\" /></p>\n<h2 id=\"为程序添加系统托盘\"><a class=\"anchor\" href=\"#为程序添加系统托盘\">#</a> 为程序添加系统托盘</h2>\n<ol>\n<li>创建菜单资源</li>\n</ol>\n<p>ID:  IDR_MENU_NOTIFY</p>\n<p>添加子菜单并设置其 ID<br />\n 显示  IDM_NOTIFY_SHOW<br />\n 退出  IDM_NOTIFY_CLOSE</p>\n<p><img data-src=\"image018.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>认识一个 API   <code>Shell_NotifyIcon</code></li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 向系统托盘中加入图标</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>BOOL <span class=\"token function\">Shell_NotifyIcon</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tDWORD dwMessage<span class=\"token punctuation\">,</span>         <span class=\"token comment\">// 状态           </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tPNOTIFYICONDATA lpdata   <span class=\"token comment\">// 含有图标  消息响应 的一个结构体</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>认识  <code>NOTIFYICONDATA</code>  结构体:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_NOTIFYICONDATA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    DWORD cbSize<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 结构体自身大小</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HWND hWnd<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 托盘的父窗口  托盘发出的消息由哪一个窗口响应</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    UINT uID<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 显示图标的 ID</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    UINT uFlags<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 托盘的状态 (如有图标，有气泡提示，有消息响应等)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    UINT uCallbackMessage<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 托盘事件的消息响应函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    HICON hIcon<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 图标的变量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    TCHAR szTip<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 气泡的显示文字</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    DWORD dwState<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 图标的显示状态</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    DWORD dwStateMask<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 图标的显示状态</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    TCHAR szInfo<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 气泡的显示文字  (可以忽略)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        UINT uTimeout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        UINT uVersion<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    TCHAR szInfoTitle<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    DWORD dwInfoFlags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    GUID guidItem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    HICON hBalloonIcon<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span> NOTIFYICONDATA<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PNOTIFYICONDATA<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>在  <code>OnInitDialog</code>  函数中写入加入系统脱盘的代码:</li>\n</ol>\n<p>需要在对话框的类中添加 protected 成员  <code>NOTIFYICONDATA nid</code> <br />\n 这里我添加了一个函数  <code>CreateSystemTray()</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// TODO: 在此处添加实现代码.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nid<span class=\"token punctuation\">.</span>cbSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 大小赋值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nid<span class=\"token punctuation\">.</span>hWnd <span class=\"token operator\">=</span> m_hWnd<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 父窗口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nid<span class=\"token punctuation\">.</span>uID <span class=\"token operator\">=</span> IDR_MAINFRAME<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//icon  ID</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nid<span class=\"token punctuation\">.</span>uFlags <span class=\"token operator\">=</span> NIF_MESSAGE <span class=\"token operator\">|</span> NIF_ICON <span class=\"token operator\">|</span> NIF_TIP<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 托盘所拥有的状态</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>nid<span class=\"token punctuation\">.</span>uCallbackMessage <span class=\"token operator\">=</span> UM_ICONNOTIFY<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 回调消息</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>nid<span class=\"token punctuation\">.</span>hIcon <span class=\"token operator\">=</span> m_hIcon<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">//icon 变量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>CString str <span class=\"token operator\">=</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Or0Remote编写中……\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 气泡提示</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">lstrcpyn</span><span class=\"token punctuation\">(</span>nid<span class=\"token punctuation\">.</span>szTip<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span>str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nid<span class=\"token punctuation\">.</span>szTip<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nid<span class=\"token punctuation\">.</span>szTip<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">Shell_NotifyIcon</span><span class=\"token punctuation\">(</span>NIM_ADD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 显示托盘</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>pch.h 文件中加入自定义消息的定义</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 自定义消息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">enum</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tUM_ICONNOTIFY<span class=\"token operator\">=</span> WM_USER<span class=\"token operator\">+</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>\n<p>发现在窗口销毁时托盘依然存在</p>\n</li>\n<li>\n<p>添加  <code>WM_CLOSE</code>  消息并写入代码:</p>\n</li>\n</ol>\n<p><code>Shell_NotifyIcon(NIM_DELETE, &amp;nid); //销毁图标</code></p>\n<ol start=\"8\">\n<li>在对话框类中声明消息处理函数:</li>\n</ol>\n<p><code>afx_msg void OnIconNotify(WPARAM wParam,LPARAM lParam);</code></p>\n<ol start=\"9\">\n<li>在 cpp 文件中写入代码:</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">COr0RemoteDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnIconNotify</span><span class=\"token punctuation\">(</span>WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_LBUTTONDOWN<span class=\"token operator\">:</span> <span class=\"token comment\">// click or dbclick left button on icon</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_LBUTTONDBLCLK<span class=\"token operator\">:</span> <span class=\"token comment\">// should show desktop</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">IsWindowVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_HIDE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">case</span> WM_RBUTTONDOWN<span class=\"token operator\">:</span> <span class=\"token comment\">// click right button, show menu</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tCMenu menu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tmenu<span class=\"token punctuation\">.</span><span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span>IDR_MENU_NOTIFY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tCPoint point<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">GetCursorPos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token function\">SetForegroundWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tmenu<span class=\"token punctuation\">.</span><span class=\"token function\">GetSubMenu</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">TrackPopupMenu</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\tTPM_LEFTBUTTON <span class=\"token operator\">|</span> TPM_RIGHTBUTTON<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tpoint<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token function\">PostMessage</span><span class=\"token punctuation\">(</span>WM_USER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>绑定消息映射</li>\n</ol>\n<p><code>ON_MESSAGE(UM_ICONNOTIFY, (LRESULT (__thiscall CWnd::* )(WPARAM,LPARAM))OnIconNotify)</code></p>\n<p>此时就可以响应我们的右键消息了。</p>\n<p><img data-src=\"image020.png\" alt=\"\" /></p>\n<p>但右键事件还没有对应的事件处理函数。</p>\n<ol start=\"11\">\n<li>添加显示菜单消息响应</li>\n</ol>\n<p>老样子，在类视图中对对话框类右键选择属性，然后选择事件，查找对应的事件并添加响应的处理函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">COr0RemoteDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnNotifyClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加命令处理程序代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">PostMessage</span><span class=\"token punctuation\">(</span>WM_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">COr0RemoteDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnNotifyShow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加命令处理程序代码</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>消息已经正常响应了。</p>\n<p>至此界面框架编写完毕。</p>\n",
            "tags": [
                "远控界面编写"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-05%E5%91%BD%E4%BB%A4%E4%BC%A0%E9%80%92/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-05%E5%91%BD%E4%BB%A4%E4%BC%A0%E9%80%92/",
            "title": "MFC六大核心机制-05命令传递",
            "date_published": "2022-06-03T14:24:47.000Z",
            "content_html": "<h1 id=\"什么是命令传递\"><a class=\"anchor\" href=\"#什么是命令传递\">#</a> 什么是命令传递</h1>\n<p>消息会按照规定的路线，游走于各个对象之间，直到找到它的消息处理函数；如果找不到，则最终把它交给 <code>::DefWindowPro</code>  函数去处理。</p>\n<h2 id=\"本节需要掌握的知识点\"><a class=\"anchor\" href=\"#本节需要掌握的知识点\">#</a> 本节需要掌握的知识点</h2>\n<p>1、本节必须掌握的知识点</p>\n<p><strong>通过单步调试，熟悉窗口过程处理函数在 MFC 的实现和命令传递的方式</strong></p>\n<p>2、需要简单了解的内容</p>\n<p><code>MessageMapFunctions</code></p>\n<h1 id=\"找到mfc的窗口的消息处理函数\"><a class=\"anchor\" href=\"#找到mfc的窗口的消息处理函数\">#</a> 找到 MFC 的窗口的消息处理函数</h1>\n<h2 id=\"create-函数\"><a class=\"anchor\" href=\"#create-函数\">#</a> Create 函数</h2>\n<p>通过  <code>Create</code>  函数来看窗口创建流程</p>\n<p>之前我们了解过  <code>Create</code>  函数，其第一个参数（类名）为 NULL，则以 MFC 内建的窗口类产生一个标准的外框窗口，既然它有窗口类那肯定就有窗口过程处理函数，我们需要从这个函数入手下断点去跟进。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tWS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_THICKFRAME <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_VSCROLL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">// 左上角，既起始位置是（400,300），右下角（800,700）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// 700 -300 是高度  800-400 是宽度</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>单步跟进后，进入 <code>CFrameWnd::Create</code> ，  <code>Create</code>  函数是一个虚函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CFrameWnd</span><span class=\"token operator\">::</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>LPCTSTR lpszClassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tLPCTSTR lpszWindowName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tDWORD dwStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> RECT<span class=\"token operator\">&amp;</span> rect<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tCWnd<span class=\"token operator\">*</span> pParentWnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tLPCTSTR lpszMenuName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tDWORD dwExStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tCCreateContext<span class=\"token operator\">*</span> pContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHMENU hMenu <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpszMenuName <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">// load in a menu that will get destroyed when window gets destroyed</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tHINSTANCE hInst <span class=\"token operator\">=</span> <span class=\"token function\">AfxFindResourceHandle</span><span class=\"token punctuation\">(</span>lpszMenuName<span class=\"token punctuation\">,</span> ATL_RT_MENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>hMenu <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span>hInst<span class=\"token punctuation\">,</span> lpszMenuName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Warning: failed to load menu for CFrameWnd.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token function\">PostNcDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// perhaps delete the C++ object</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tm_strTitle <span class=\"token operator\">=</span> lpszWindowName<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// save title for later</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">CreateEx</span><span class=\"token punctuation\">(</span>dwExStyle<span class=\"token punctuation\">,</span> lpszClassName<span class=\"token punctuation\">,</span> lpszWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\trect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> rect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">-</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tpParentWnd<span class=\"token operator\">-></span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Warning: failed to create CFrameWnd.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hMenu <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token function\">DestroyMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"createex-函数\"><a class=\"anchor\" href=\"#createex-函数\">#</a> CreateEx 函数</h2>\n<p>而后会进入  <code>CreateEx</code>  函数中：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">CreateEx</span><span class=\"token punctuation\">(</span>DWORD dwExStyle<span class=\"token punctuation\">,</span> LPCTSTR lpszClassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tLPCTSTR lpszWindowName<span class=\"token punctuation\">,</span> DWORD dwStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nHeight<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tHWND hWndParent<span class=\"token punctuation\">,</span> HMENU nIDorHMenu<span class=\"token punctuation\">,</span> LPVOID lpParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>lpszClassName <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> <span class=\"token function\">AfxIsValidString</span><span class=\"token punctuation\">(</span>lpszClassName<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">AfxIsValidAtom</span><span class=\"token punctuation\">(</span>lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">ENSURE_ARG</span><span class=\"token punctuation\">(</span>lpszWindowName <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> <span class=\"token function\">AfxIsValidString</span><span class=\"token punctuation\">(</span>lpszWindowName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// allow modification of several common create parameters</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCREATESTRUCT cs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>dwExStyle <span class=\"token operator\">=</span> dwExStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>lpszClass <span class=\"token operator\">=</span> lpszClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>lpszName <span class=\"token operator\">=</span> lpszWindowName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> dwStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> nWidth<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>cy <span class=\"token operator\">=</span> nHeight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>hwndParent <span class=\"token operator\">=</span> hWndParent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>hMenu <span class=\"token operator\">=</span> nIDorHMenu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetInstanceHandle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>lpCreateParams <span class=\"token operator\">=</span> lpParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">PreCreateWindow</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token function\">PostNcDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">AfxHookWindowCreate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tHWND hWnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindowEx</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">.</span>dwExStyle<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>lpszClass<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\tcs<span class=\"token punctuation\">.</span>lpszName<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>cx<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>cy<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\tcs<span class=\"token punctuation\">.</span>hwndParent<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>hMenu<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>hInstance<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>lpCreateParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_DEBUG</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Warning: Window creation failed: GetLastError returns 0x%8.8X\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">AfxUnhookWindowCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token function\">PostNcDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// cleanup if CreateWindowEx fails too soon</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>hWnd <span class=\"token operator\">==</span> m_hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// should have been set in send msg hook</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>跟进  <code>CreateEx</code>  函数，其一开始对一些信息进行了填充，这个信息传递给了  <code>PreCreateWindow</code>  函数。</p>\n<p><code>CREATESTRUCT</code>  结构体的介绍如下，此结构也是分为 A 和 W 版本。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagCREATESTRUCTA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    LPVOID      lpCreateParams<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建参数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HINSTANCE   hInstance<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口模块的句柄</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    HMENU       hMenu<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口使用的菜单句柄</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    HWND        hwndParent<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果该窗口是一个子窗口，则为父窗口的句柄；如果该窗口是自有的，这个成员标识了所有者窗口；如果该窗口不是一个子窗口或自有窗口，这个成员是 NULL。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span>         cy<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的高度，单位是像素。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span>         cx<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的宽度，单位是像素。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span>         y<span class=\"token punctuation\">;</span> <span class=\"token comment\">//y 坐标，如果窗口是一个子窗口，坐标是相对于父窗口的，否则，坐标是相对于屏幕原点的。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span>         x<span class=\"token punctuation\">;</span> <span class=\"token comment\">//x 坐标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    LONG        style<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的样式</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    LPCSTR      lpszName<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的名称</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    LPCSTR      lpszClass<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的类名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    DWORD       dwExStyle<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 扩展窗口样式</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CREATESTRUCTA<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>LPCREATESTRUCTA<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"precreatewindow-函数\"><a class=\"anchor\" href=\"#precreatewindow-函数\">#</a> PreCreateWindow 函数</h2>\n<p>跟进  <code>PreCreateWindow</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CFrameWnd</span><span class=\"token operator\">::</span><span class=\"token function\">PreCreateWindow</span><span class=\"token punctuation\">(</span>CREATESTRUCT<span class=\"token operator\">&amp;</span> cs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">.</span>lpszClass <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token function\">VERIFY</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxDeferRegisterClass</span><span class=\"token punctuation\">(</span>AFX_WNDFRAMEORVIEW_REG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">//_afxWndFrameOrView 在 AfxDeferRegisterClass 函数中被处理了。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tcs<span class=\"token punctuation\">.</span>lpszClass <span class=\"token operator\">=</span> _afxWndFrameOrView<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// COLOR_WINDOW background</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 窗口风格的扩展</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">.</span>style <span class=\"token operator\">&amp;</span> FWS_ADDTOTITLE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tcs<span class=\"token punctuation\">.</span>style <span class=\"token operator\">|=</span> FWS_PREFIXTITLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>dwExStyle <span class=\"token operator\">|=</span> WS_EX_CLIENTEDGE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们可以看见如果窗口名称为空则帮我去注册一个默认的窗口类。</p>\n<h2 id=\"afxenddeferregisterclass-函数\"><a class=\"anchor\" href=\"#afxenddeferregisterclass-函数\">#</a> AfxEndDeferRegisterClass 函数</h2>\n<p>其使用的是  <code>AfxDeferRegisterClass</code>  ，这是一个宏，其背后就是  <code>AfxEndDeferRegisterClass</code>  这个函数，跟进后就可以看到：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>这里知道了消息处理函数是  <code>DefWindowProc</code></p>\n<h2 id=\"afxhookwindowcreate-函数\"><a class=\"anchor\" href=\"#afxhookwindowcreate-函数\">#</a> AfxHookWindowCreate 函数</h2>\n<p>但通过阅读代码我们发现这个函数不是我们想要知道其是如何处理消息的函数，继续跟进，跟到  <code>CreateEx</code>  函数里面会有一个  <code>AfxHookWindowCreate</code>  函数，通过这个名字我们就知道什么意思了，其就表示在窗口创建之前挂了一个钩子（HOOK），跟进这个函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> AFXAPI <span class=\"token function\">AfxHookWindowCreate</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span> pWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t_AFX_THREAD_STATE<span class=\"token operator\">*</span> pThreadState <span class=\"token operator\">=</span> _afxThreadState<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">==</span> pWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tpThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">SetWindowsHookEx</span><span class=\"token punctuation\">(</span>WH_CBT<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t_AfxCbtFilterHook<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">::</span><span class=\"token function\">GetCurrentThreadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token function\">AfxThrowMemoryException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd<span class=\"token operator\">-></span>m_hWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// only do once</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// hook not already in progress</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tpThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">=</span> pWnd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到其挂钩子的函数是  <code>SetWindowsHookEx</code>  （其第一个参数是  <code>WH_CBT</code>  ，这是一个宏，其就是一个钩子，其表示可以监听窗口激活、产生、释放（关闭）、最小化、最大化或改变；那么在这些事件之前就会调用函数   <code>_AfxCbtFilterHook</code>  ，也就是第二个参数），相当于安装了一个  <code>WH_CBT</code>  类型的钩子函数  <code>_AfxCbtFilterHook</code>  。</p>\n<h2 id=\"_afxcbtfilterhook-函数\"><a class=\"anchor\" href=\"#_afxcbtfilterhook-函数\">#</a> _AfxCbtFilterHook 函数</h2>\n<p>我们查看  <code>_AfxCbtFilterHook</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">_AfxCbtFilterHook</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> code<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t_AFX_THREAD_STATE<span class=\"token operator\">*</span> pThreadState <span class=\"token operator\">=</span> _afxThreadState<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">!=</span> HCBT_CREATEWND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// wait for HCBT_CREATEWND just pass others on...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">CallNextHookEx</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\twParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>lParam <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tLPCREATESTRUCT lpcs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPCBT_CREATEWND<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>lpcs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>lpcs <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tCWnd<span class=\"token operator\">*</span> pWndInit <span class=\"token operator\">=</span> pThreadState<span class=\"token operator\">-></span>m_pWndInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tBOOL bContextIsDLL <span class=\"token operator\">=</span> afxContextIsDLL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pWndInit <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>lpcs<span class=\"token operator\">-></span>style <span class=\"token operator\">&amp;</span> WS_CHILD<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bContextIsDLL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// Note: special check to avoid subclassing the IME window</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_afxDBCS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token comment\">// check for cheap CS_IME style first...</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetClassLong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span>wParam<span class=\"token punctuation\">,</span> GCL_STYLE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> CS_IME<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">goto</span> lCallNextHook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token comment\">// get class name of the window that is being created</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\tLPCTSTR pszClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\tTCHAR szClassName<span class=\"token punctuation\">[</span><span class=\"token function\">_countof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ime\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">DWORD_PTR</span><span class=\"token punctuation\">(</span>lpcs<span class=\"token operator\">-></span>lpszClass<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\tpszClassName <span class=\"token operator\">=</span> lpcs<span class=\"token operator\">-></span>lpszClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\tszClassName<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>disable<span class=\"token operator\">:</span> <span class=\"token number\">4302</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">// 'type cast' : truncation from 'LPCSTR' to 'ATOM'</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t<span class=\"token function\">GlobalGetAtomName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ATOM<span class=\"token punctuation\">)</span>lpcs<span class=\"token operator\">-></span>lpszClass<span class=\"token punctuation\">,</span> szClassName<span class=\"token punctuation\">,</span> <span class=\"token function\">_countof</span><span class=\"token punctuation\">(</span>szClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>pop<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\tpszClassName <span class=\"token operator\">=</span> szClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token comment\">// a little more expensive to test this way, but necessary...</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">::</span><span class=\"token function\">AfxInvariantStrICmp</span><span class=\"token punctuation\">(</span>pszClassName<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">goto</span> lCallNextHook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>wParam <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// should be non-NULL HWND</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tHWND hWnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span>wParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tWNDPROC oldWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pWndInit <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token function\">AFX_MANAGE_STATE</span><span class=\"token punctuation\">(</span>pWndInit<span class=\"token operator\">-></span>m_pModuleState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token comment\">// the window should not be in the permanent map at this time</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandlePermanent</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token comment\">// connect the HWND to pWndInit...</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\tpWndInit<span class=\"token operator\">-></span><span class=\"token function\">Attach</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token comment\">// allow other subclassing to occur first</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\tpWndInit<span class=\"token operator\">-></span><span class=\"token function\">PreSubclassWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\tWNDPROC <span class=\"token operator\">*</span>pOldWndProc <span class=\"token operator\">=</span> pWndInit<span class=\"token operator\">-></span><span class=\"token function\">GetSuperWndProcAddr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pOldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t<span class=\"token comment\">// subclass the window with standard AfxWndProc</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\tWNDPROC afxWndProc <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetAfxWndProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\toldWndProc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">SetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>afxWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> afxWndProc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t<span class=\"token operator\">*</span>pOldWndProc <span class=\"token operator\">=</span> oldWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\tpThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bContextIsDLL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// should never get here</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token keyword\">static</span> ATOM s_atomMenu <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t<span class=\"token keyword\">bool</span> bSubclass <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_atomMenu <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t\tWNDCLASSEX wc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WNDCLASSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\twc<span class=\"token punctuation\">.</span>cbSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WNDCLASSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t\ts_atomMenu <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ATOM<span class=\"token punctuation\">)</span><span class=\"token function\">GetClassInfoEx</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#32768\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token comment\">// Do not subclass menus.</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_atomMenu <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t\tATOM atomWnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ATOM<span class=\"token punctuation\">)</span><span class=\"token operator\">::</span><span class=\"token function\">GetClassLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GCW_ATOM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>atomWnd <span class=\"token operator\">==</span> s_atomMenu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t\t\tbSubclass <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\tTCHAR szClassName<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">::</span><span class=\"token function\">GetClassName</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> szClassName<span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t\tszClassName<span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">_tcscmp</span><span class=\"token punctuation\">(</span>szClassName<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#32768\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t\t\t\tbSubclass <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bSubclass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// subclass the window with the proc which does gray backgrounds</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t\toldWndProc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">GetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">GetProp</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> _afxOldWndProc<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">SetProp</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> _afxOldWndProc<span class=\"token punctuation\">,</span> oldWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">GetProp</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> _afxOldWndProc<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> oldWndProc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">GlobalAddAtom</span><span class=\"token punctuation\">(</span>_afxOldWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">SetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>_AfxActivationWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>lCallNextHook<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\tLRESULT lResult <span class=\"token operator\">=</span> <span class=\"token function\">CallNextHookEx</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\twParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bContextIsDLL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t<span class=\"token operator\">::</span><span class=\"token function\">UnhookWindowsHookEx</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\tpThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token keyword\">return</span> lResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>函数中的关键点就是：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// subclass the window with standard AfxWndProc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t\tWNDPROC afxWndProc <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetAfxWndProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\toldWndProc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">SetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>afxWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>把老的消息处理函数替换成了  <code>AfxGetAfxWndProc</code>  函数的返回值。</p>\n<h2 id=\"afxgetafxwndproc-函数\"><a class=\"anchor\" href=\"#afxgetafxwndproc-函数\">#</a> AfxGetAfxWndProc 函数</h2>\n<p>继续跟进  <code>AfxGetAfxWndProc</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// always indirectly accessed via AfxGetAfxWndProc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WNDPROC AFXAPI <span class=\"token function\">AfxGetAfxWndProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL    </span><span class=\"token comment\">// 如果是动态库的话调用这个</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">AfxGetModuleState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>m_pfnAfxWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span>            <span class=\"token comment\">// 静态库调用这个</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>AfxWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>发现其会判断是否定义了_AFXDLL 宏，经查阅发现这是判断是否使用了动态链接库，而我们现在使用的是静态链接库，所以返回的就是   <code>AfxWndProc</code>  这个函数的地址。</p>\n<h2 id=\"afxwndproc-函数\"><a class=\"anchor\" href=\"#afxwndproc-函数\">#</a> AfxWndProc 函数</h2>\n<p>查看  <code>AfxWndProc</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">AfxWndProc</span><span class=\"token punctuation\">(</span>HWND hWnd<span class=\"token punctuation\">,</span> UINT nMsg<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// special message which identifies the window as using AfxWndProc</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nMsg <span class=\"token operator\">==</span> WM_QUERYAFXWNDPROC<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// all other messages route through message map</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tCWnd<span class=\"token operator\">*</span> pWnd <span class=\"token operator\">=</span> <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandlePermanent</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> pWnd<span class=\"token operator\">-></span>m_hWnd <span class=\"token operator\">==</span> hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> pWnd<span class=\"token operator\">-></span>m_hWnd <span class=\"token operator\">!=</span> hWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">::</span><span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> nMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">AfxCallWndProc</span><span class=\"token punctuation\">(</span>pWnd<span class=\"token punctuation\">,</span> hWnd<span class=\"token punctuation\">,</span> nMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>这样就是 Crate 的完整创建流程，首先它为我们创建了一个窗口类，填充了默认的窗口处理函数、风格、背景等等，然后通过一个  <code>SetWindowsHookEx</code> ，把我们默认的消息处理函数，替换为了  <code>AfxWndProc</code>  函数</p>\n<h1 id=\"标准消息的处理流程\"><a class=\"anchor\" href=\"#标准消息的处理流程\">#</a> 标准消息的处理流程</h1>\n<p>这里以 MFC 的三大类消息中的标准消息为主，去探寻 MFC 的消息处理流程了。</p>\n<h2 id=\"验证消息处理函数\"><a class=\"anchor\" href=\"#验证消息处理函数\">#</a> 验证消息处理函数</h2>\n<p>在消息处理函数  <code>OnLButtonDown</code>  中下断点：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>进入上层调用函数  <code>OnWndMsg</code>  中：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>继续执行，直到进入函数  <code>OnWndMsg</code>  的上层调用函数  <code>WindowProc</code>  中：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>继续执行，直到进入函数  <code>WindowProc</code>  的上层调用函数  <code>AfxCallWndProc</code>  中：</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>继续执行，直到进入函数  <code>AfxCallWndProc</code>  的上层调用函数  <code>AfxWndProc</code>  中：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>由此可知我们找的消息处理函数是正确的。</p>\n<h2 id=\"分析处理流程\"><a class=\"anchor\" href=\"#分析处理流程\">#</a> 分析处理流程</h2>\n<p>在  <code>AfxCallWndProc</code>  中下条件断点：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>我们可以看见消息是通过  <code>WindowProc</code>  函数的，这个函数是一个虚函数，也就表示我们可以在类中改写这个函数，但是这里我们没有改写其调用的就是  <code>CWnd::WindowProc</code>  。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">virtual</span> LRESULT <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">OnWndMsg</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span> pResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在  <code>WindowProc</code>  中调用了  <code>OnWndMsg</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// OnWndMsg does most of the work, except for DefWindowProc call</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLRESULT lResult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">OnWndMsg</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> lResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"onwndmsg-分析\"><a class=\"anchor\" href=\"#onwndmsg-分析\">#</a> OnWndMsg 分析</h3>\n<h4 id=\"判断消息类型\"><a class=\"anchor\" href=\"#判断消息类型\">#</a> 判断消息类型</h4>\n<p>接下来进入  <code>OnWndMsg</code>  查看，发现这个函数超级长，这里先放一小段：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">OnWndMsg</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span> pResult<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLRESULT lResult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">union</span> MessageMapFunctions mmf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tmmf<span class=\"token punctuation\">.</span>pfn <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tCInternalGlobalLock winMsgLock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// special case for commands</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_COMMAND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OnCommand</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tlResult <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_CREATE <span class=\"token operator\">&amp;&amp;</span> m_pDynamicLayout <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">ASSERT_VALID</span><span class=\"token punctuation\">(</span>m_pDynamicLayout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>m_pDynamicLayout<span class=\"token operator\">-></span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">delete</span> m_pDynamicLayout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tm_pDynamicLayout <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token function\">InitDynamicLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// special case for notifies</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_NOTIFY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\tNMHDR<span class=\"token operator\">*</span> pNMHDR <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pNMHDR<span class=\"token operator\">-></span>hwndFrom <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token comment\">// special case for activation</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_ACTIVATE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token function\">_AfxHandleActivate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// special case for set cursor HTERROR</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_SETCURSOR <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token function\">_AfxHandleSetCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>   <span class=\"token comment\">// special case for windows that contain windowless ActiveX controls</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>   BOOL bHandled<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>   bHandled <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>m_pCtrlCont <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>m_pCtrlCont<span class=\"token operator\">-></span>m_nWindowlessControls <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">>=</span> WM_MOUSEFIRST<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;=</span> AFX_WM_MOUSELAST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">>=</span> WM_KEYFIRST<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;=</span> WM_IME_KEYLAST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">>=</span> WM_IME_SETCONTEXT<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;=</span> WM_IME_KEYUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t bHandled <span class=\"token operator\">=</span> m_pCtrlCont<span class=\"token operator\">-></span><span class=\"token function\">HandleWindowlessMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHandled<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t  <span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意联合体  <code>MessageMapFunctions</code> ，这是我在 VS2019 中查看的定义：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">union</span> MessageMapFunctions</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tAFX_PMSG pfn<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// generic member function pointer</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_W_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_W_COPYDATASTRUCT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> COPYDATASTRUCT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_HELPINFO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPHELPINFO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">HBRUSH</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_B_D_W_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token function\">HBRUSH</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_B_D_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_u_W_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_W_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_w_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WPARAM<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_u_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_b_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_h_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">,</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">HCURSOR</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_C_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT_PTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_i_i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_i_i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_w_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WPARAM<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_b_W_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_M_u_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_W_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPCTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_i_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_i_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_b_NCCALCSIZEPARAMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> NCCALCSIZE_PARAMS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_v_WINDOWPOS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WINDOWPOS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> HMENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_pr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_u_s_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_MOUSEHWHEEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_W_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_v_MENUGETOBJECTINFO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>MENUGETOBJECTINFO<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_M_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_LPMDINEXTMENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPMDINEXTMENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_APPCOMMAND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_RAWINPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> HRAWINPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_MOUSE_XBUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_MOUSE_NCXBUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_INPUTLANGCHANGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_INPUTDEVICECHANGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_D_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_F_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CFont<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token function\">HANDLE</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_h_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token function\">HANDLE</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_h_b_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_v_ii<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token function\">HANDLE</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_h_h_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token comment\">// type safe variant for thread messages</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWinThread<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_THREAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WPARAM<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token comment\">// specific type safe variants for WM_COMMAND and WM_NOTIFY messages</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_v_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_b_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_v_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_b_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_v_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_b_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_v_u_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_b_u_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmdUI_v_C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CCmdUI<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmdUI_v_C_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CCmdUI<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_v_pv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_b_pv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\">//OLD</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token comment\">// specific type safe variants for WM-style messages</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bD)(CDC*);</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bb)(BOOL);</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bWww)(CWnd*, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bHELPINFO)(HELPINFO*);</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bWCDS)(CWnd*, COPYDATASTRUCT*);</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\">//\tHBRUSH  (AFX_MSG_CALL CWnd::*pfn_hDWw)(CDC*, CWnd*, UINT);</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\">//\tHBRUSH  (AFX_MSG_CALL CWnd::*pfn_hDw)(CDC*, UINT);</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iwWw)(UINT, CWnd*, UINT);</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iww)(UINT, UINT);</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iWww)(CWnd*, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_is)(LPTSTR);</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">//\tLRESULT (AFX_MSG_CALL CWnd::*pfn_lwl)(WPARAM, LPARAM);</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">//\tLRESULT (AFX_MSG_CALL CWnd::*pfn_lwwM)(UINT, UINT, CMenu*);</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vv)(void);</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vw)(UINT);</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vww)(UINT, UINT);</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vvii)(int, int);</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwww)(UINT, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwii)(UINT, int, int);</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwl)(WPARAM, LPARAM);</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vbWW)(BOOL, CWnd*, CWnd*);</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vD)(CDC*);</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vM)(CMenu*);</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vMwb)(CMenu*, UINT, BOOL);</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vW)(CWnd*);</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vWww)(CWnd*, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vWp)(CWnd*, CPoint);</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vWh)(CWnd*, HANDLE);</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwW)(UINT, CWnd*);</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwWb)(UINT, CWnd*, BOOL);</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwwW)(UINT, UINT, CWnd*);</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwwx)(UINT, UINT);</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vs)(LPTSTR);</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vOWNER)(int, LPTSTR);   // force return TRUE</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iis)(int, LPTSTR);</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token comment\">//\tUINT    (AFX_MSG_CALL CWnd::*pfn_wp)(CPoint);</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token comment\">//\tUINT    (AFX_MSG_CALL CWnd::*pfn_wv)(void);</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vPOS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WINDOWPOS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vCALC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> NCCALCSIZE_PARAMS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vwp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vwwh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t<span class=\"token function\">BOOL</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_bwsp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vws)(UINT, LPCTSTR);</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>前面我们知道 MFC 有三大类消息，这里是判断了消息的类型，不同的类型的消息用不同的处理方法。</p>\n<h4 id=\"获取标准消息\"><a class=\"anchor\" href=\"#获取标准消息\">#</a> 获取标准消息</h4>\n<p>接下来看后面的代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> pMessageMap<span class=\"token punctuation\">;</span> pMessageMap <span class=\"token operator\">=</span> <span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>这里获取了 MFC 的标准消息，也就是我们定义的要处理的消息映射和其对应的消息处理函数。</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>UINT iHash<span class=\"token punctuation\">;</span> iHash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>pMessageMap<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> message<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>iHashMax<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span>CRIT_WINMSGCACHE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tAFX_MSG_CACHE<span class=\"token operator\">*</span> pMsgCache<span class=\"token punctuation\">;</span> pMsgCache <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>_afxMsgCache<span class=\"token punctuation\">[</span>iHash<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY<span class=\"token operator\">*</span> lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> pMsgCache<span class=\"token operator\">-></span>nMsg <span class=\"token operator\">&amp;&amp;</span> pMessageMap <span class=\"token operator\">==</span> pMsgCache<span class=\"token operator\">-></span>pMessageMap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// cache hit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tlpEntry <span class=\"token operator\">=</span> pMsgCache<span class=\"token operator\">-></span>lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpEntry <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">// cache hit, and it needs to be handled</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LDispatch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LDispatchRegistered<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// not in cache, look for it</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tpMsgCache<span class=\"token operator\">-></span>nMsg <span class=\"token operator\">=</span> message<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpMsgCache<span class=\"token operator\">-></span>pMessageMap <span class=\"token operator\">=</span> pMessageMap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">/* pMessageMap already init'ed */</span><span class=\"token punctuation\">;</span> pMessageMap<span class=\"token operator\">-></span>pfnGetBaseMap <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tpMessageMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pMessageMap<span class=\"token operator\">-></span>pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token comment\">// Note: catch not so common but fatal mistake!!</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token comment\">//      BEGIN_MESSAGE_MAP(CMyWnd, CMyWnd)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pMessageMap <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pMessageMap<span class=\"token operator\">-></span>pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// constant window message</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lpEntry <span class=\"token operator\">=</span> <span class=\"token function\">AfxFindMessageEntry</span><span class=\"token punctuation\">(</span>pMessageMap<span class=\"token operator\">-></span>lpEntries<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t\tmessage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t\tpMsgCache<span class=\"token operator\">-></span>lpEntry <span class=\"token operator\">=</span> lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">goto</span> LDispatch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// registered windows message</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\tlpEntry <span class=\"token operator\">=</span> pMessageMap<span class=\"token operator\">-></span>lpEntries<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lpEntry <span class=\"token operator\">=</span> <span class=\"token function\">AfxFindMessageEntry</span><span class=\"token punctuation\">(</span>lpEntry<span class=\"token punctuation\">,</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\t\tUINT<span class=\"token operator\">*</span> pnID <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>lpEntry<span class=\"token operator\">-></span>nSig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pnID <span class=\"token operator\">>=</span> <span class=\"token number\">0xC000</span> <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>pnID <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">// must be successfully registered</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pnID <span class=\"token operator\">==</span> message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t\t\t\tpMsgCache<span class=\"token operator\">-></span>lpEntry <span class=\"token operator\">=</span> lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t\t\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> LDispatchRegistered<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t\t\tlpEntry<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// keep looking past this one</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\tpMsgCache<span class=\"token operator\">-></span>lpEntry <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这一段代码就是为了找我们  <code>AFX_MSGMAP</code>  结构中的  <code>AFX_MSGMAP_ENTRY</code>  直到其有值，然后跳转到  <code>LDispatch</code>  或  <code>LDispatchRegistered</code>  处理。</p>\n<h4 id=\"调用消息处理函数\"><a class=\"anchor\" href=\"#调用消息处理函数\">#</a> 调用消息处理函数</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tmmf<span class=\"token punctuation\">.</span>pfn <span class=\"token operator\">=</span> lpEntry<span class=\"token operator\">-></span>pfn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>lpEntry<span class=\"token operator\">-></span>nSig<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">case</span> AfxSig_l_p<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tCPoint <span class=\"token function\">point</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tlResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_l_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">case</span> AfxSig_b_D_v<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_b_D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CDC</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">reinterpret_cast</span><span class=\"token operator\">&lt;</span>HDC<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">case</span> AfxSig_l_D_u<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_l_D_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CDC</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">reinterpret_cast</span><span class=\"token operator\">&lt;</span>HDC<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  …………</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  …………</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  …………</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  …………</pre></td></tr></table></figure><p>确定了调用什么类型的函数指针，也就是确定了消息处理函数所对应的返回值和参数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> AfxSig_v_u_p<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\tCPoint <span class=\"token function\">point</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_v_u_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>UINT<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>前面已经给共用体类型的  <code>mmf</code>  变量赋值了，是  <code>OnLButtonDown</code>  函数的地址，然后调用  <code>mmf</code>  中和  <code>OnLButtonDown</code>  函数返回值和参数一样的函数指针，调用了  <code>OnLButtonDown</code>  函数。</p>\n<h2 id=\"总结-2\"><a class=\"anchor\" href=\"#总结-2\">#</a> 总结</h2>\n<p>学习这种设计思想。</p>\n<p>至此我们了解了 MFC 的消息映射机制的原理，其利用了结构体  <code>AFX_MSGM</code>   和结构体  <code>AFX_MSGMAP_ENTRY</code>  与共同体  <code>MessageMapFunctions</code>  ，来处理许许多多不同的消息处理函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP_ENTRY</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    UINT nMessage<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//windows message # Windows 消息类型 ID</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    UINT nCode<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//control code or WM_NOTIFY code #对于窗口消息该值为 0，处理命令消息和控件通知的函数使用与此相同的消息映像。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    UINT nID<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//control ID (or 0 for windows messages) #命令消息 ID 的起始范围</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    UINT nLastID<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//used for entries specifying a range of control id's #命令消息 ID 范围的终点</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    UINT nSig<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//signature type (action) or pointer to message #消息的动作标识 enum AfxSig 里面的成员</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    AFX_PMSG pfn<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//routine to call (or special value) #响应消息时应执行的函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 指向其父类的 GetThisMessageMap 的函数指针</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY<span class=\"token operator\">*</span> lpEntries<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"wm_commadwm_notify消息的处理流程\"><a class=\"anchor\" href=\"#wm_commadwm_notify消息的处理流程\">#</a> WM_COMMAD (WM_NOTIFY) 消息的处理流程</h1>\n<p>在  <code>OnWndMsg</code>  中判断了消息是否是  <code>WM_COMMAND</code>  如果是就调用  <code>OnCommand</code>  函数去处理，而 <code>OnCommand</code>  函数也是一个虚函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// special case for commands</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_COMMAND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OnCommand</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\tlResult <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来分析一下  <code>OnCommand</code>  函数。</p>\n<p>暂时鸽了，详细参见《深入浅出 MFC》一书。</p>\n",
            "tags": [
                "MFC命令传递"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-04%E6%B6%88%E6%81%AF%E6%98%A0%E5%B0%84/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-04%E6%B6%88%E6%81%AF%E6%98%A0%E5%B0%84/",
            "title": "MFC六大核心机制-04消息映射",
            "date_published": "2022-06-01T17:27:17.000Z",
            "content_html": "<h1 id=\"什么是消息映射\"><a class=\"anchor\" href=\"#什么是消息映射\">#</a> 什么是消息映射</h1>\n<p>消息映射是 MFC 内建的一个消息分派机制，只要利用数个宏以及固定形式的写法（类似于填表格）就可以让我们的框架知道一旦消息发生，该往哪一个类去传递，每一个类只能拥有一个消息映射表格，也可以没有。</p>\n<h1 id=\"本节课需要掌握的知识点\"><a class=\"anchor\" href=\"#本节课需要掌握的知识点\">#</a> 本节课需要掌握的知识点</h1>\n<p>1、本节必须掌握的知识点</p>\n<p>三个关键的宏  <code>DECLARE_MESSAGE_MAP</code>  、  <code>BEGIN_MESSAGE_MAP</code>  和 <code>END_MESSAGE_MAP</code> <br />\n 如何添加一个消息？</p>\n<p>2、需要简单了解的内容</p>\n<p><code>AFX_MSGMAP_ENTRY</code>  结构和  <code>AFX_MSGMAP</code> <br />\n <code>MessageMapFunctions</code></p>\n<h1 id=\"消息映射\"><a class=\"anchor\" href=\"#消息映射\">#</a> 消息映射</h1>\n<p>我们来学习 MFC 消息映射的本质。</p>\n<h2 id=\"添加消息\"><a class=\"anchor\" href=\"#添加消息\">#</a> 添加消息</h2>\n<p>我们还是使用 01 中的代码为基础：</p>\n<p>Hello.h</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;afxwin.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinApp</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Hello.cpp</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Hello.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMyApp theApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>BOOL <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm_pMainWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>m_nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tWS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_THICKFRAME <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_VSCROLL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// 左上角，既起始位置是（400,300），右下角（800,700）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 700 -300 是高度  800-400 是宽度</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来演示添加一个消息。</p>\n<p>我们还是直接利用 MFC 的宏：<br />\n在 Hello.h 中的 <code>CMainWindow</code>  类中做以下修改：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 消息映射</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">DECLARE_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 消息函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tafx_msg <span class=\"token keyword\">void</span> <span class=\"token function\">OnLButtonDown</span><span class=\"token punctuation\">(</span>UINT nFlags<span class=\"token punctuation\">,</span> CPoint point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tafx_msg <span class=\"token keyword\">void</span> <span class=\"token function\">OnPaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 Hello.cpp 中添加以下代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">OnLButtonDown</span><span class=\"token punctuation\">(</span>UINT nFlags<span class=\"token punctuation\">,</span> CPoint point<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Message!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">OnPaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tCPaintDC <span class=\"token function\">dc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 绘制文本</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tdc<span class=\"token punctuation\">.</span><span class=\"token function\">DrawText</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello OnPaint!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 显示内容</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 显示位置</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tDT_SINGLELINE\t\t\t<span class=\"token comment\">// 单行显示</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">BEGIN_MESSAGE_MAP</span><span class=\"token punctuation\">(</span>CMainWindow<span class=\"token punctuation\">,</span> CFrameWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 写消息</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">ON_WM_LBUTTONDOWN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">ON_WM_PAINT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">END_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在窗口中单击鼠标左键结果：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>按照这样的格式我们想添加什么消息处理都可。<br />\n但是因为是宏，使用简单，但不利于我们去了解基本原理。<br />\n例如这个左键按下的消息处理函数  <code>OnLButtonDown</code> ，这个函数名为什么要这样写？不这么写可不可以？所以我们还需要通过转换宏去了解本质。</p>\n<h2 id=\"转换宏\"><a class=\"anchor\" href=\"#转换宏\">#</a> 转换宏</h2>\n<p>我们把上面例子中所使用的的宏都给展开。</p>\n<p>我在 VS2019 中所查看的定义：</p>\n<h3 id=\"宏declare_message_map\"><a class=\"anchor\" href=\"#宏declare_message_map\">#</a> 宏 DECLARE_MESSAGE_MAP ()</h3>\n<p>转换为:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span><span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其作用是在类中定义了两个保护成员函数 <code>GetThisMessageMap</code>  和 <code>GetMessageMap</code> 。</p>\n<h3 id=\"宏begin_message_map-on_wm_lbuttondown-end_message_map\"><a class=\"anchor\" href=\"#宏begin_message_map-on_wm_lbuttondown-end_message_map\">#</a> 宏 BEGIN_MESSAGE_MAP、ON_WM_LBUTTONDOWN、END_MESSAGE_MAP</h3>\n<p>接下来转换另外的宏：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">BEGIN_MESSAGE_MAP</span><span class=\"token punctuation\">(</span>theClass<span class=\"token punctuation\">,</span> baseClass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 写消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ON_WM_LBUTTONDOWN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">END_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>BEGIN_MESSAGE_MAP(theClass, baseClass)</code>  转换为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PTM_WARNING_DISABLE </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> theClass<span class=\"token operator\">::</span><span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> PASCAL theClass<span class=\"token operator\">::</span><span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> theClass ThisClass<span class=\"token punctuation\">;</span>\t\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> baseClass TheBaseClass<span class=\"token punctuation\">;</span>\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>disable<span class=\"token operator\">:</span> <span class=\"token number\">4640</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* message maps can only be called by single threaded message pump */</span> \\</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY _messageEntries<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr></table></figure><p>我们暂时忽略掉处理警告的代码。</p>\n<p><code>BEGIN_MESSAGE_MAP</code>  宏，定义了两个函数，一个函数名为 <code>GetMessageMap</code> ，其功能是调用 <code>GetThisMessageMap</code> ，另一个函数便是 <code>GetThisMessageMap</code> , 这个函数中定义了一个 <code>AFX_MSGMAP_ENTRY</code>  类型的数组。</p>\n<hr />\n<p>接下转换 <code>ON_WM_LBUTTONDOWN()</code> ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> WM_LBUTTONDOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_vwp<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>AFX_PMSGW<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>ThisClass <span class=\"token operator\">::</span> OnLButtonDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><hr />\n<p>继续转换 <code>END_MESSAGE_MAP()</code>  ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_end<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>pop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP messageMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">&amp;</span>TheBaseClass<span class=\"token operator\">::</span>GetThisMessageMap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_messageEntries<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>messageMap<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PTM_WARNING_RESTORE</pre></td></tr></table></figure><p><code>END_MESSAGE_MAP</code>  负责 <code>GetThisMessageMap</code>  函数的收尾</p>\n<p>而我们使用的宏：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">BEGIN_MESSAGE_MAP</span><span class=\"token punctuation\">(</span>CMainWindow<span class=\"token punctuation\">,</span> CFrameWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 写消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ON_WM_LBUTTONDOWN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">END_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>便可转换为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PTM_WARNING_DISABLE </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> PASCAL <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> CMainWindow ThisClass<span class=\"token punctuation\">;</span>\t\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> CFrameWnd TheBaseClass<span class=\"token punctuation\">;</span>\t\t\t\t\t  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>disable<span class=\"token operator\">:</span> <span class=\"token number\">4640</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* message maps can only be called by single threaded message pump */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY _messageEntries<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span> WM_LBUTTONDOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_vwp<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>AFX_PMSGW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ThisClass<span class=\"token operator\">::</span>OnLButtonDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_end<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>pop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP messageMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">&amp;</span>TheBaseClass<span class=\"token operator\">::</span>GetThisMessageMap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_messageEntries<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>messageMap<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>PTM_WARNING_RESTORE</pre></td></tr></table></figure><p>如上代码转换完成之后就可以很清晰的知道使用宏的时候鼠标左键按下必须使用  <code>OnLButtonDown</code>  这个函数名是因为这里是写死在代码中的，没办法改变；<br />\n我们还可以很清晰的看见  <code>_messageEntries</code>  这个数组就是存放着我们的消息，这就是一个消息映射的表格，而这个数组是一个结构体数组，所以我们来看一下  <code>AFX_MSGMAP_ENTRY</code>  这个结构体。</p>\n<h2 id=\"结构体-afx_msgmap_entry\"><a class=\"anchor\" href=\"#结构体-afx_msgmap_entry\">#</a> 结构体 AFX_MSGMAP_ENTRY</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP_ENTRY</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    UINT nMessage<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//windows message # Windows 消息类型 ID</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    UINT nCode<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//control code or WM_NOTIFY code #对于窗口消息该值为 0，处理命令消息和控件通知的函数使用与此相同的消息映像。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    UINT nID<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//control ID (or 0 for windows messages) #命令消息 ID 的起始范围</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    UINT nLastID<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//used for entries specifying a range of control id's #命令消息 ID 范围的终点</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    UINT nSig<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//signature type (action) or pointer to message #消息的动作标识 enum AfxSig 里面的成员</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    AFX_PMSG pfn<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//routine to call (or special value) #响应消息时应执行的函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>根据注释可以非常清晰的看见每个参数的意义，主要说下后两个参数，  <code>AFX_PMSG pfn</code>  为响应消息时执行的函数，这里也就是  <code>OnLButtonDown</code>  函数的地址， <code>UINT nSig</code>  为消息的动作标识  <code>enum AfxSig </code> 里面的成员，在当前值为 <code>AfxSig_vwp</code> ，这是一个宏，我们可以跟进查看一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AfxSig_vwp <span class=\"token operator\">=</span> AfxSig_v_u_p<span class=\"token punctuation\">,</span>      <span class=\"token comment\">// void (UINT, CPoint)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 54</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>AfxSig_v_u_p<span class=\"token punctuation\">,</span>\t\t\t\t\t<span class=\"token comment\">// void (UINT, CPoint)</span></pre></td></tr></table></figure><p>它表示着  <code>AFX_PMSG pfn</code> （响应消息时执行的函数）的返回值和参数的格式：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">OnLButtonDown</span><span class=\"token punctuation\">(</span>UINT nFlags<span class=\"token punctuation\">,</span> CPoint point<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Message!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>从 MFC 的源码中我们可以发现 <code>AFX_MSGMAP_ENTRY</code>  结构数组的最后一个成员全是 <code>0</code> 。</p>\n<p>此外还有另一个结构体  <code>AFX_MSGMAP</code></p>\n<h2 id=\"结构体-afx_msgm\"><a class=\"anchor\" href=\"#结构体-afx_msgm\">#</a> 结构体 AFX_MSGM</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY<span class=\"token operator\">*</span> lpEntries<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个结构体有两个成员，一个是指向其父类的 <code>GetThisMessageMap</code>  的函数指针，另一个是指向 当前的 <code>AFX_MSGMAP_ENTRY</code>  结构体的指针。</p>\n<h1 id=\"mfc的三大类消息\"><a class=\"anchor\" href=\"#mfc的三大类消息\">#</a> MFC 的三大类消息</h1>\n<ol>\n<li>标准消息</li>\n</ol>\n<p>任何以 WM 打头的消息都属于标准消息 (除 WM_COMMAND) 以外。<br />\n这类消息的响应函数名都被 MFC 规定好了。</p>\n<ol start=\"2\">\n<li>WM_COMMAND 命令消息</li>\n</ol>\n<p>这是来自菜单、工具条按钮、加速键等用户接口对象的 WM_COMMAND 通知消息，属于应用程序自己定义的消息。通过消息映射机制，MFC 框架把命令按一定的路径分发给多种类型的对象（具备消息处理能力）处理，如文档、窗口、应用程序、文档模板等对象。</p>\n<ol start=\"3\">\n<li>控件通知</li>\n</ol>\n<p>通常，控件通知在某些重要事件发生时，由控件窗口发送到父窗口，如打开一个组合框。控件通知为父窗口进一步控制子窗口提供了机会。例如，打开一个组合框时，父窗口可以用组合框初建时得不到的消息填充它。</p>\n<p>BN_XXXX 是 CButton 产生的消息，EN_XXXX 是 CEdit 产生的消息，等等。</p>\n<p>好多消息都还没有学，后面会学习的，暂时有个大概的理解。</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>消息映射的内部实现将在 MFC 的命令传递中详细的学习。</p>\n<p>这里需要记住<strong>能处理消息映射的类必须从  <code>CCmdTarget</code>  类派生。</strong>，可以一层一层的跟一下 MFC 源码。</p>\n<p>另外学习 MFC 的核心机制，就是学习微软的程序设计，学习它的设计思想。</p>\n<h1 id=\"课后作业\"><a class=\"anchor\" href=\"#课后作业\">#</a> 课后作业</h1>\n<ol>\n<li>新建一个类，继承于 CMainWnd (CNewWnd)</li>\n<li>给 CMainWnd 添加 鼠标左键点击事件 创建进新的 CNewWnd 窗口。</li>\n<li>给新的窗口添加鼠标右键事件 弹出 MessageBox</li>\n</ol>\n<p>不难。</p>\n",
            "tags": [
                "MFC消息映射",
                "结构体AFX_MSGMAP_ENTRY",
                "结构体AFX_MSGM",
                "MFC的三大类消息"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-03%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-03%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA/",
            "title": "MFC六大核心机制-03动态创建",
            "date_published": "2022-05-22T09:10:10.000Z",
            "content_html": "<h1 id=\"为什么要有动态创建\"><a class=\"anchor\" href=\"#为什么要有动态创建\">#</a> 为什么要有动态创建？</h1>\n<p>面向对象术语中有一个名为 persistence，意思是永久保存。 放在 RAM 中的东西， 生命受到电力的左右， 不可能永久保存； 唯一的办法是把它写到文件去。</p>\n<p>看起来永久保存与本节的主题「动态生成」 似乎没有什么干连。 有！ 你把你的数据储存到文件， 这些数据很可能（通常是） 对象中的成员变量； 我把它读出来后， 势必要依据文件上的记载， 重新 new 出那些个对象来。 问题在于， 即使我的程序有那些类定义（就算我的程序和你的程序有一样的内容好了） ， 我能够这么做吗：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> className<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 从文件（或使用者输入） 获得一个类名称</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CObject<span class=\"token operator\">*</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> classname<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这一行行不通</span></pre></td></tr></table></figure><p>首先，  <code>new classname</code>  这个动作就过不了关。 其次， 就算过得了关， new 出来的对象究竟该是什么类类型？</p>\n<p>但我就是没办法恢复你原来的状态 —— 除非我的程序能够「动态生成」。MFC 支持动态生成， 靠的是一组的宏（  <code>DECLARE_DYNCREATE</code>  和  <code>IMPLEMENT_DYNCREATE</code>  ） 和  <code>CRuntimeClass</code>  类。</p>\n<h1 id=\"本节需要掌握的知识点\"><a class=\"anchor\" href=\"#本节需要掌握的知识点\">#</a> 本节需要掌握的知识点</h1>\n<p>1、本节必须掌握的知识点</p>\n<p>动态创建的作用</p>\n<p>二个关键的宏:</p>\n<p><code>DECLARE_DYNCREATE</code> <br />\n <code>IMPLEMENT_DYNCREATE</code></p>\n<p>2、需要简单了解的内容</p>\n<p><code>CRuntimeClass::CreateObject</code> （动态创建函数）</p>\n<h1 id=\"动态创建\"><a class=\"anchor\" href=\"#动态创建\">#</a> 动态创建</h1>\n<p>动态创建就是为了在程序执行期间动态获得的一个类名称。</p>\n<p>首先继续查看  <code>CRuntimeclass</code>  结构体:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">CRuntimeClass</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Attributes</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPCSTR m_lpszClassName<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 类名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">int</span> m_nObjectSize<span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 类的大小</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tUINT m_wSchema<span class=\"token punctuation\">;</span> \t\t\t\t<span class=\"token comment\">// 加载类的模式编号</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnCreateObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 函数指针，定义了一个函数指针 m_pfnCreateObject 用来存放需要支持动态创建类的 CreateObject 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnGetBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pBaseClass<span class=\"token punctuation\">;</span>  \t<span class=\"token comment\">// 父类指针</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// Operations</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 动态创建函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tBOOL <span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pBaseClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 判断函数，判断是否父类</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// dynamic name lookup and creation</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// Implementation</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">Store</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">,</span> UINT<span class=\"token operator\">*</span> pwSchemaNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// CRuntimeClass objects linked together in simple list</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pNextClass<span class=\"token punctuation\">;</span>        \t<span class=\"token comment\">// 指向下一个 CRuntimeClass 结构体指针</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_CLASSINIT<span class=\"token operator\">*</span> m_pClassInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中我们用的到的就是：</p>\n<p><code>CObject* (PASCAL* m_pfnCreateObject)(); // 函数指针，定义了一个函数指针m_pfnCreateObject用来存放需要支持动态创建类的CreateObject函数</code> <br />\n <code>CObject* CreateObject();  // 动态创建函数</code></p>\n<h2 id=\"使用动态创建\"><a class=\"anchor\" href=\"#使用动态创建\">#</a> 使用动态创建</h2>\n<p>跟进  <code>CFramWnd</code>  类、  <code>CWinApp</code>  类来看一下谁支持动态创建，也就是谁使用了相关的宏：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CWinApp</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinThread</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">DECLARE_DYNAMIC</span><span class=\"token punctuation\">(</span>CWinApp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CFrameWnd</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWnd</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">DECLARE_DYNCREATE</span><span class=\"token punctuation\">(</span>CFrameWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p><code>CFrameWnd</code>  类使用了  <code>DECLARE_DYNCREATE</code>  宏，也就表示其支持动态创建。</p>\n<p>所以我们可以在其派生的  <code>CMainWindow</code>  类也使用动态创建，这里宏的使用和 RTTI 宏的使用是一样的。<br />\n在类中添加如下语句  <code>DECLARE_DYNCREATE(CMainWindow)</code> <br />\n 在类外  <code>IMPLEMENT_DYNCREATE(CMainWindow, CFrameWnd);</code></p>\n<p>然后在  <code>CMyApp::InitInstance()</code>  函数中把  <code>m_pMainWnd = new CMainWindow;</code>  替换成  <code>m_pMainWnd = (CWnd*)(RUNTIME_CLASS(CMainWindow)-&gt;CreateObject());</code></p>\n<p>运行程序，窗口正常创建出来了。</p>\n<p>接下来分析一下动态创建用的宏。</p>\n<h2 id=\"宏declare_dyncreate\"><a class=\"anchor\" href=\"#宏declare_dyncreate\">#</a> 宏 DECLARE_DYNCREATE</h2>\n<p>在 VS2019 中跟进一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">DECLARE_DYNCREATE</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">DECLARE_DYNAMIC</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>发现宏  <code>DECLARE_DYNAMIC</code>  这说明动态创建也支持 RTTI。</p>\n<p>以  <code>DECLARE_DYNCREATE(CMainWindow);</code>  为例，将其展开：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass classCMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"宏implement_dyncreate\"><a class=\"anchor\" href=\"#宏implement_dyncreate\">#</a> 宏 IMPLEMENT_DYNCREATE</h2>\n<p>在 VS2019 中跟进一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">IMPLEMENT_DYNCREATE</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token expression\">CObject<span class=\"token operator\">*</span> PASCAL class_name<span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> class_name<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token function\">IMPLEMENT_RUNTIMECLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">,</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token expression\">class_name<span class=\"token operator\">::</span>CreateObject<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>发现其  <code>IMPLEMENT_RUNTIMECLASS</code>  与前面使用 RTTI 时的第四个参数不一样了。</p>\n<p>以  <code>IMPLEMENT_DYNCREATE(CMainWindow, CFrameWnd);</code>  为例，将其展开：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>selectany<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> CRuntimeClass CMainWindow<span class=\"token operator\">::</span>classCMainWindow <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"CMainWindow\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCMainWindow<span class=\"token operator\">::</span>CreateObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CFrameWnd<span class=\"token operator\">::</span>classCFrameWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CMainWindow<span class=\"token operator\">::</span>classCMainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"分析动态创建\"><a class=\"anchor\" href=\"#分析动态创建\">#</a> 分析动态创建</h2>\n<p>分析一下  <code>CMyApp::InitInstance()</code>  函数中的  <code>m_pMainWnd = (CWnd*)(((CRuntimeClass*)(&amp;CMainWindow::classCMainWindow))-&gt;CreateObject());</code></p>\n<p>在 VS2019 中下断点跟进查看：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CObject<span class=\"token operator\">*</span> <span class=\"token class-name\">CRuntimeClass</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_pfnCreateObject <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: Trying to create object which is not \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DECLARE_DYNCREATE \\nor DECLARE_SERIAL: %hs.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tm_lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> pObject <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tTRY</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tpObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>m_pfnCreateObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tEND_TRY</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> pObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先进入了  <code>CRuntimeClass::CreateObject()</code>  然后调用了函数指针  <code>pObject = (*m_pfnCreateObject)();</code>  既调用了我们的  <code>CreateObject</code>  函数。</p>\n<p>设计的非常巧妙。</p>\n<h2 id=\"课后作业\"><a class=\"anchor\" href=\"#课后作业\">#</a> 课后作业</h2>\n<p>在 CMainWindow 里面定义一个函数。<br />\n <code>CreateObjectByName(THCAR* ClassName)</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 使用宏动态创建对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">//DECLARE_DYNCREATE(CMainWindow);</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//public:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//\tstatic const CRuntimeClass classCMainWindow;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//\tvirtual CRuntimeClass* GetRuntimeClass() const;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//\tstatic CObject* __stdcall CreateObject();</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 自己实现通过名字去动态创建对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass classCMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> <span class=\"token function\">CreateObjectByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span> runtimeClassName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CObject<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObjectByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> pClass <span class=\"token operator\">=</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CMainWindow<span class=\"token operator\">::</span>classCMainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> pClass<span class=\"token operator\">-></span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span> runtimeClassName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> baseRuntimeClass <span class=\"token operator\">=</span> runtimeClassName<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>runtimeClassName<span class=\"token operator\">-></span>m_lpszClassName <span class=\"token operator\">==</span> className<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> runtimeClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>baseRuntimeClass<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span>baseRuntimeClass<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>selectany<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> CRuntimeClass CMainWindow<span class=\"token operator\">::</span>classCMainWindow <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token string\">\"CMainWindow\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tCMainWindow<span class=\"token operator\">::</span>CreateObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CFrameWnd<span class=\"token operator\">::</span>classCFrameWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n",
            "tags": [
                "MFC动态创建"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-02MFC%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E5%9E%8B%E8%AF%86%E5%88%AB%EF%BC%88RTTI%EF%BC%89/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-02MFC%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E5%9E%8B%E8%AF%86%E5%88%AB%EF%BC%88RTTI%EF%BC%89/",
            "title": "MFC六大核心机制-02MFC运行时类型识别（RTTI）",
            "date_published": "2022-05-16T11:40:41.000Z",
            "content_html": "<h1 id=\"什么是rtti\"><a class=\"anchor\" href=\"#什么是rtti\">#</a> 什么是 RTTI</h1>\n<p>MFC 运行时类型识别（英文：Runtime Type Information，缩写：RTTI），能够使用基类的指针或引用来检查这些指针或引用所指的对象的实际派生类，简单的意思就是它可以帮助我们在程序运行的过程中了解到某个对象所属类。</p>\n<blockquote>\n<p>简单的来讲运行时类型识别（RTTI）即是在程序运行的过程中实现对对象类型的识别，因为在大多数情况下，程序中的对象等都是在编译时就已知该对象的数据类型，所以要实现运行时对象类型识别则就需要花费一番心思。</p>\n</blockquote>\n<h2 id=\"本节需要掌握的知识点\"><a class=\"anchor\" href=\"#本节需要掌握的知识点\">#</a> 本节需要掌握的知识点</h2>\n<p>1、本节必须掌握的知识点</p>\n<p>MFC 为什么要自己去构建 RTTI？</p>\n<p>关键的宏：<br />\n <code>DECLARE_DYNAMIC</code> <br />\n <code>IMPLEMENT_DYNAMIC</code> <br />\n <code>RUNTIME_CLASS</code> <br />\n 关键的结构体  <code>CRuntimeClass</code></p>\n<p>2、需要简单了解的内容</p>\n<p><code>static</code>  关键字的作用<br />\n <code>const</code>  关键字的作用<br />\n C++ RTTI  <code>typeid</code>  操作符</p>\n<h2 id=\"使用编译器自带的rtti\"><a class=\"anchor\" href=\"#使用编译器自带的rtti\">#</a> 使用编译器自带的 RTTI</h2>\n<p>这是 VS2019 的 RTTI：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>但是后面我在测试使用 <code>typeid</code>  时发现开不开这个都行。</p>\n<p>需要包含  <code>typeinfo</code>  头文件<br />\n <code>typeid(类名)</code> <br />\n <code>typeid(对象)</code></p>\n<p>如下代码简单用一下 typeid，我们定一个了一个类 CAnimal 并创建了一个对象 pAnimal，使用 typeid 进行比较发现两者都属于同一个类：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;typeinfo></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CAnimal</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token operator\">~</span><span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">CAnimal</span><span class=\"token operator\">::</span><span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token class-name\">CAnimal</span><span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tCAnimal pAnimal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// C++ rtti 的简单使用</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeid</span><span class=\"token punctuation\">(</span>pAnimal<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeid</span><span class=\"token punctuation\">(</span>CAnimal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"pAnimal 是属于CAnimal的对象\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>执行结果：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"static关键词的作用\"><a class=\"anchor\" href=\"#static关键词的作用\">#</a> static 关键词的作用</h2>\n<p>当用 static 关键词定义一个变量，该变量则存储在全局数据区而不是局部的，如果 static 关键词的变量为某类的成员，则该成员与类进行关联，但并不会与类创建的对象进行关联，也就表示我们不需要创建对象就可以使用这个成员，所以我们想要使用的话就要通过 <code>类名::成员名</code> 的方式去使用，并且我们不可以在类的内部去赋值初始化，只可以在外部。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h2 id=\"const关键词的作用\"><a class=\"anchor\" href=\"#const关键词的作用\">#</a> const 关键词的作用</h2>\n<p>使用 const 关键词定义的成员，同样没办法直接初始化，需要在初始化列表中进行初始化：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h2 id=\"static和const关键词一起使用\"><a class=\"anchor\" href=\"#static和const关键词一起使用\">#</a> static 和 const 关键词一起使用</h2>\n<p>如果一个成员使用了 static const 双关键词，我们还是按照 static 关键词的方法去使用，但是在初始化的时候需要加上 const 关键词：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h2 id=\"mfc为什么要自己去构建rtti\"><a class=\"anchor\" href=\"#mfc为什么要自己去构建rtti\">#</a> MFC 为什么要自己去构建 RTTI</h2>\n<p>在 MFC 出来的时候 C++ 并没有 RTTI 这个概念，所以 MFC 自己设计了这样一套东西，其依靠的就是两个宏：  <code>DECLARE_DYNAMIC</code>  、  <code>IMPLEMENT_DYNAMIC</code>  ，其中  <code>IMPLEMENT_DYNAMIC</code>  宏也包含了一个关键的宏  <code>RUNTIME_CLASS</code>  以及关键结构体  <code>CRuntime Class</code>  。</p>\n<h2 id=\"mfc中rtti的本质\"><a class=\"anchor\" href=\"#mfc中rtti的本质\">#</a> MFC 中 RTTI 的本质</h2>\n<p>通过前面的介绍我们知道了 RTTI 的核心就是知道<strong>某个对象是属于某个类</strong></p>\n<p>这里我们继续使用前面我们手动创建 MFC 的代码：</p>\n<p>Hello.h:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;afxwin.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinApp</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Hello.cpp:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Hello.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMyApp theApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>BOOL <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm_pMainWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>m_nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tWS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_THICKFRAME <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_VSCROLL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// 左上角，既起始位置是（400,300），右下角（800,700）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 700 -300 是高度  800-400 是宽度</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>那么我们想知道我们的  <code>theApp</code>  是属于那个类的，我们该怎么做呢？</p>\n<p>接下来我们参考 MFC 是如何实现 RTTI 的，我们跟着模仿一个。</p>\n<p>我们先看一下  <code>CWinApp</code>  类:</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>F12 跟进去后可以看到宏  <code>DECLARE_DYNAMIC</code></p>\n<p>我们修改为我们的  <code>DECLARE_DYNAMIC(CMyApp)</code>  , 但这个时候仍然无法编译，我们还缺少另一个宏 <code>IMPLEMENT_DYNAMIC(CMyApp, CWinApp);</code> ，把这句代码放到 Hello.cpp 中的  <code>CMyApp theApp;</code>  前面即可。</p>\n<p>这样我们的代码就有了运行时类型识别的功能了。</p>\n<p>接下来使用  <code>IsKindOf()</code>  函数。</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>如图所示，成功！</p>\n<p>接下来了解几个宏。</p>\n<h3 id=\"宏runtime_class\"><a class=\"anchor\" href=\"#宏runtime_class\">#</a> 宏 RUNTIME_CLASS</h3>\n<p>在 VS2019 中的宏定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">RUNTIME_CLASS</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span> <span class=\"token function\">_RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">_RUNTIME_CLASS</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>class_name<span class=\"token operator\">::</span><span class=\"token keyword\">class</span></span><span class=\"token punctuation\">##</span><span class=\"token expression\">class_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>其中两个 #号则代表拼接符，一个 #号则表示转为字符串。<br />\n也就是说  <code>RUNTIME_CLASS(CWinApp)</code>  这一段代码可以转换为  <code>((CRuntimeClass*)(&amp;CWinApp::classCWinApp))</code></p>\n<p>这段代码代表着 <strong>取一个类的成员的地址并将其转化为  <code>CRuntimeClass</code>  类型的指针</strong>，而  <code>CRuntimeClass</code>  的结构如下：</p>\n<h3 id=\"cruntimeclass-结构体\"><a class=\"anchor\" href=\"#cruntimeclass-结构体\">#</a> CRuntimeClass 结构体</h3>\n<p>在 VS2019 中的定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">CRuntimeClass</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Attributes</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPCSTR m_lpszClassName<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 类名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">int</span> m_nObjectSize<span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 类的大小</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tUINT m_wSchema<span class=\"token punctuation\">;</span> \t\t\t\t<span class=\"token comment\">// 加载类的模式编号</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnCreateObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 函数指针，定义了一个函数指针 m_pfnCreateObject 用来存放需要支持动态创建类的 CreateObject 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnGetBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pBaseClass<span class=\"token punctuation\">;</span>  \t<span class=\"token comment\">// 父类指针</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// Operations</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 动态创建函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tBOOL <span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pBaseClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 判断函数，判断是否父类</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// dynamic name lookup and creation</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// Implementation</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">Store</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">,</span> UINT<span class=\"token operator\">*</span> pwSchemaNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// CRuntimeClass objects linked together in simple list</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pNextClass<span class=\"token punctuation\">;</span>        \t<span class=\"token comment\">// 指向下一个 CRuntimeClass 结构体指针</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_CLASSINIT<span class=\"token operator\">*</span> m_pClassInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接下来继续查看宏  <code>DECLARE_DYNAMIC</code></p>\n<h3 id=\"宏declare_dynamic\"><a class=\"anchor\" href=\"#宏declare_dynamic\">#</a> 宏 DECLARE_DYNAMIC</h3>\n<p>在 VS2019 中的宏定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">DECLARE_DYNAMIC</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token expression\"><span class=\"token keyword\">public</span><span class=\"token operator\">:</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass <span class=\"token keyword\">class</span></span><span class=\"token punctuation\">##</span><span class=\"token expression\">class_name<span class=\"token punctuation\">;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token keyword\">virtual</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> </span></span>\\</pre></td></tr></table></figure><p>所以  <code>DECLARE_DYNAMIC(CMyApp)</code>  便可转变为:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass classCMyApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>可以发现这句宏的作用就是声明了一个  <code>public</code>  的  <code>CRuntimeClass</code>  类型的变量：  <code>class##class_name</code> ，并且声明了一个名叫  <code>GetRuntimeClass</code>  的虚函数。</p>\n<p>而声明了一个  <code>static</code>  类型的类的成员变量，<strong>就必须要在类的外面进行初始化</strong>，由此我们有额可以想到宏  <code>IMPLEMENT_DYNAMIC</code>  的含义。</p>\n<h3 id=\"宏implement_dynamic\"><a class=\"anchor\" href=\"#宏implement_dynamic\">#</a> 宏 IMPLEMENT_DYNAMIC</h3>\n<p>在 VS2019 中的宏定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">IMPLEMENT_DYNAMIC</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token function\">IMPLEMENT_RUNTIMECLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">,</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">IMPLEMENT_RUNTIMECLASS</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">,</span> wSchema<span class=\"token punctuation\">,</span> pfnNew<span class=\"token punctuation\">,</span> class_init<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token expression\">AFX_COMDAT <span class=\"token keyword\">const</span> CRuntimeClass class_name<span class=\"token operator\">::</span><span class=\"token keyword\">class</span></span><span class=\"token punctuation\">##</span><span class=\"token expression\">class_name <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">class</span><span class=\"token expression\">_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">class_name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> wSchema<span class=\"token punctuation\">,</span> pfnNew<span class=\"token punctuation\">,</span> </span></span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token expression\"><span class=\"token function\">RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>base_class_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> class_init <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token expression\">CRuntimeClass<span class=\"token operator\">*</span> class_name<span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token function\">RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></span></span></pre></td></tr></table></figure><p>里面又包含了另一个宏  <code>IMPLEMENT_RUNTIMECLASS</code></p>\n<p>所以  <code>IMPLEMENT_DYNAMIC(CMyApp, CWinApp);</code>  可以转换为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>selectany<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> CRuntimeClass CMyApp<span class=\"token operator\">::</span>classCMyApp <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token string\">\"CMyApp\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CWinApp<span class=\"token operator\">::</span>classCWinApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token comment\">// 最后的 const 表示对该成员无法更改</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CMyApp<span class=\"token operator\">::</span>classCMyApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"分析-iskindof-函数\"><a class=\"anchor\" href=\"#分析-iskindof-函数\">#</a> 分析 IsKindOf 函数</h3>\n<p>在 VS 中跟进一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CObject</span><span class=\"token operator\">::</span><span class=\"token function\">IsKindOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// it better be in valid memory, at least for CObject size</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxIsValidAddress</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// simple SI case</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> pClassThis <span class=\"token operator\">=</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span>pClassThis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> pClassThis<span class=\"token operator\">-></span><span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span>pClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>调用了当前类的  <code>GetRuntimeClass()</code>  函数，既返回当前类中的  <code>CRuntimeClass</code>  指针类型的成员，然后调用了其的  <code>IsDerivedFrom</code>  函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CRuntimeClass</span><span class=\"token operator\">::</span><span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pBaseClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxIsValidAddress</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span>pBaseClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxIsValidAddress</span><span class=\"token punctuation\">(</span>pBaseClass<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// simple SI case</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pClassThis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pClassThis <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pClassThis <span class=\"token operator\">==</span> pBaseClass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pClassThis<span class=\"token operator\">-></span>m_pfnGetBaseClass <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tpClassThis <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pClassThis<span class=\"token operator\">-></span>m_pfnGetBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpClassThis <span class=\"token operator\">=</span> pClassThis<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// walked to the top, no match</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>取当前的  <code>CRuntimeClass</code>  ，因为它是 const 类型，所以也要加 const 关键字，然后进入一个循环，一直取当前类的  <code>CRuntimeClass</code>  类型的父类指针。</p>\n<h2 id=\"课后练习\"><a class=\"anchor\" href=\"#课后练习\">#</a> 课后练习</h2>\n<ol>\n<li>让我们的第二个类也支持 RTTI</li>\n<li>分别自写函数打印出它的父类的  <code>CRuntime</code>  信息</li>\n</ol>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PrintCRuntimeInfo</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span> pClass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">char</span> chInput<span class=\"token punctuation\">[</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"--------------------------------------\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_lpszClassName:[%s]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_nObjectSize:[%d]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_nObjectSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_wSchema:[%#010X]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_wSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_pBaseClass:[%p]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tpClass <span class=\"token operator\">=</span> pClass<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image010.png\" alt=\"\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheXVoYWl0YW5nMS9hcnRpY2xlL2RldGFpbHMvMTEyMjIxMzU0\">https://blog.csdn.net/dayuhaitang1/article/details/112221354</span></p>\n",
            "tags": [
                "MFC运行时类型识别",
                "关键字static",
                "关键字const"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-01MFC%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-01MFC%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%87%E7%A8%8B/",
            "title": "MFC六大核心机制-01MFC初始化过程",
            "date_published": "2022-04-05T11:17:06.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>MFC 共有六大核心机制分别是：</p>\n<ul>\n<li>MFC 程序的初始化过程</li>\n<li>RTTI（Runtime Type Information） 运行时类型信息</li>\n<li>Dynamic Creation 动态创建</li>\n<li>Persistence 永久保存</li>\n<li>Message Mapping 消息映射</li>\n<li>Message Routing 消息循环</li>\n</ul>\n<p>这次学习的 MFC 教程应该是以《深入浅出 MFC》这本书讲解的。</p>\n<h1 id=\"mfc的本质\"><a class=\"anchor\" href=\"#mfc的本质\">#</a> MFC 的本质</h1>\n<p>因为没有系统的学习 MFC，现在写代码出错了都不知道怎么调试。所以准备学一下 MFC 的本质。知其然知其所以然！</p>\n<p>MFC (Microsoft Foundation Classes) 是由微软提供的放置 WINAPI 的面向对象的包装的 C++ 类库。<br />\nMFC6.0 中大约封装了 200 个类，分别封装了 WINAPI 和 WINSDK 中的结构和过程。<br />\n另外 MFC 还提供了一个应用程序框架。例如程序向导和类向导自动生成的代码，这样大大减少了程序员的工作量，提高了开发效率。</p>\n<p><strong>MFC 的本质就是 win32 的封装。</strong></p>\n<h1 id=\"第一个mfc程序\"><a class=\"anchor\" href=\"#第一个mfc程序\">#</a> 第一个 MFC 程序</h1>\n<p>由于根据项目引导生成的代码繁杂冗余，所以我们可以自己来手写 MFC 来创建 Windows 窗口程序，这样就可以避免一些不必要的代码。</p>\n<p>本节需要掌握的知识点：<br />\nA: CWinApp 可以覆盖的虚函数 InitInstance<br />\nB: CWinApp 成员变量 m_pMainWnd<br />\nC: CFramWnd 的成员函数 create 以及参数</p>\n<p>需要简单了解的内容</p>\n<p>A: 通过 MSDN 去查看 MFC 的层次结构图<br />\n B: 对 CWinApp 有个初步的认识<br />\n C: 对 CFramWnd 有个初步认识</p>\n<h2 id=\"mfc的层次结构图\"><a class=\"anchor\" href=\"#mfc的层次结构图\">#</a> MFC 的层次结构图</h2>\n<p>在 MSDN Library 中搜索 hierarchy chart 即可获得 MFC 的层次结构图：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>本章我们只需要了解 CWinApp、CFramWnd。</p>\n<h2 id=\"cwinapp类\"><a class=\"anchor\" href=\"#cwinapp类\">#</a> CWinApp 类</h2>\n<p>CWinApp 类是派生 Windows 应用程序对象的基类。应用程序对象提供了用于初始化应用程序 (及其每个实例) 和运行应用程序的成员函数。</p>\n<p>每个使用 MFC 的应用程序只能包含一个派生自 CWinApp 的对象。这个对象是在其他 c++ 全局对象被构造时被构造的，并且在 Windows 调用 WinMain 函数时已经可用，这个函数是由 MFC 库提供的。在全局级别声明你的派生 CWinApp 对象。</p>\n<p>当您从 CWinApp 派生应用程序类时，覆盖  <code>InitInstance</code>  成员函数以创建应用程序的主窗口对象。<br />\n他还有一个成员变量  <code>m_pMainWnd</code>  用来记录创建的主窗口对象。</p>\n<p>除了 CWinApp 成员函数之外， Microsoft 基础类库还提供了以下全局函数来访问  <code>CWinApp</code>  对象和其他全局信息：</p>\n<p><code>AfxGetApp</code>  获取一个指向  <code>CWinApp</code>  对象的指针。<br />\n <code>AfxGetInstanceHandle</code>  获取当前应用程序实例的句柄。<br />\n <code>AfxGetResourceHandle</code>  获取应用程序资源的句柄。<br />\n <code>AfxGetAppName</code>  获取指向包含应用程序名称的字符串的指针。或者，，如果您有一个指向 CWinApp 对象的指针，请使用  <code>m_pszExeName</code>  获取应用程序的名称。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>CWinApp 类代表一个程序本身。</p>\n<h2 id=\"cframewnd类\"><a class=\"anchor\" href=\"#cframewnd类\">#</a> CFrameWnd 类</h2>\n<p>CFrameWnd 类提供了 Windows 单文档界面（SDI）重叠或弹出框架窗口的功能，以及用于管理窗口的成员。</p>\n<p>要为应用程序创建有用的框架窗口，请从 CFrameWnd 派生类。向派生类添加成员变量以存储特定于您的应用程序的数据。在派生类中实现消息处理程序成员函数和消息映射，以指定在将消息定向到窗口时会发生什么。</p>\n<p>有三种方法来构造框架窗口：</p>\n<p>1. 使用 Create 直接构造它 （本节需要掌握的内容）<br />\n2. 使用 LoadFrame 直接构造它（后续会学）<br />\n3. 使用文档模板间接构建它 （后续会学）</p>\n<p>注：我们可以认为 CFrameWnd 类取代了窗口过程函数。</p>\n<p>Create 成员函数<br />\n CFrameWnd :: Create 成员函数语法格式如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>LPCTSTR lpszClassName<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 如果类名为 NULL，则以 MFC 内建的窗口类产生一个标准的外框窗口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>           LPCTSTR lpszWindowName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>           DWORD dwStyle <span class=\"token operator\">=</span> WS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           <span class=\"token keyword\">const</span> RECT<span class=\"token operator\">&amp;</span> rect <span class=\"token operator\">=</span> rectDefault<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           CWnd<span class=\"token operator\">*</span> pParentWnd <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// != NULL for popups</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>           LPCTSTR lpszMenuName <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          DWORD dwExStyle <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         CCreateContext<span class=\"token operator\">*</span> pContext <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 返回值：非零表示初始化成功，否则为 0</span></pre></td></tr></table></figure><p>通过两个步骤构造一个 CFrameWnd 对象：</p>\n<p>首先调用构造函数，它构造 CFrameWnd 类的对象，然后调用 Create 成员方法，创建 Windows 框架窗口并将其附加到 CFrameWnd 类的对象；</p>\n<p>创建初始化窗口的类名和窗口名称，并注册其样式，父级和关联菜单的默认值。</p>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<ol>\n<li>基于 MFC 的窗口程序必须也只能有一个由从 CWinApp 派生的对象。</li>\n<li>我们必须覆盖 CWinApp 的虚函数 InitInstance 在里面创建窗口，并把窗口对象保存在它的成员变量  <code>m_pMainWnd</code>  。</li>\n<li>创建窗口是通过派生  <code>CFrameWnd</code>  对象，在它的构造函数里面调用成员函数 <code>create</code> 。</li>\n</ol>\n<p>手动编写 MFC 程序的几个注意事项（这是 VC6）：</p>\n<ol>\n<li>使用 Win32 Application 去创建项目</li>\n<li>项目需要包含 MFC 运行库，VC6 设置：Project → Setting → General → Use MFC In Static Library</li>\n<li>使用头文件 afxwin.h</li>\n</ol>\n<h2 id=\"手动创建一个mfc程序\"><a class=\"anchor\" href=\"#手动创建一个mfc程序\">#</a> 手动创建一个 MFC 程序</h2>\n<p>这里我用的编译器是 VS2019，步骤如下：<br />\n创建一个  <code>Windows桌面项目</code>  选择  <code>桌面应用程序</code>  ：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>使用 MFC 静态库：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>接下来添加代码：</p>\n<p>Hello.h</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;afxwin.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinApp</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Hello.cpp</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Hello.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMyApp theApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>BOOL <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm_pMainWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>m_nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tWS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_THICKFRAME <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_VSCROLL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// 左上角，既起始位置是（400,300），右下角（800,700）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 700 -300 是高度  800-400 是宽度</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>为什么代码里没有 WinMain？MFC 没有 WinMain 函数吗？其实 MFC 是在内部接管了 WinMain，我们可以认为 CWinApp 就是 WinMain，只不过我们没法很直观的看见 WinMain 函数。</p>\n<h1 id=\"mfc的初始化过程1\"><a class=\"anchor\" href=\"#mfc的初始化过程1\">#</a> MFC 的初始化过程 1</h1>\n<p>上面我们手动创建了一个 MFC 程序，但并没有 WinMain 函数，整个程序唯一的语句也就是  <code>CMyApp theApp;</code>  这是具有全局有效性、用来实例对象化的语句。这是  <code>CWinApp</code>  的派生类的全局对象，那么到底是什么启动的程序的运行？应用程序对象又是在什么时候其作用的呢？其实回答这些问题的最好方法就是取看一下 MFC 的主框架源码，但暂时我们还不能这么去做，因为主框架的源码太过于庞大。<br />\n这节我们把我的重点突出来。</p>\n<h2 id=\"通过代码来模拟mfc的初始化过程\"><a class=\"anchor\" href=\"#通过代码来模拟mfc的初始化过程\">#</a> 通过代码来模拟 MFC 的初始化过程</h2>\n<ol>\n<li>本节必须掌握的知识点</li>\n</ol>\n<ul>\n<li>\n<p>为什么要声明全局的应用程序对象 (CWinApp)</p>\n</li>\n<li>\n<p>学会使用类视图快速添加类</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>需要简单了解的内容</li>\n</ol>\n<ul>\n<li>\n<p>CWinApp 的层次结构</p>\n</li>\n<li>\n<p>CFramWnd 的层次结构</p>\n</li>\n</ul>\n<h2 id=\"代码模拟\"><a class=\"anchor\" href=\"#代码模拟\">#</a> 代码模拟</h2>\n<p>用代码模拟 MFC 的初始化过程，我们基于上一章中手动编写的 MFC 代码来模拟。</p>\n<p>我们继承两个类 CWinApp、CFrameWnd，这两个类的层次结构如下：</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>所以在这里我们需要重写 CObject、CCmdTarget、CWinThread、CWnd、CWinApp、CFrameWnd 这几个类...</p>\n<p>仅仅是模拟代码，不用写实际功能，写上构造、析构函数即可。</p>\n<p>这里要记住：<strong>全局变量和全局对象总是在任何其他代码前执行</strong></p>\n<p>结果：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<h1 id=\"mfc初始化过程2\"><a class=\"anchor\" href=\"#mfc初始化过程2\">#</a> MFC 初始化过程 2</h1>\n<p>继续进行 MFC 初始化模拟。</p>\n<p>在上一节中我们知道了一个全局对象或一个全局变量的实现是早于 WinMain 的，所以我们构造了 CWinApp 对象，先调用它的构造函数然后才进入 WinMain，这样做的好处是什么呢？我们要在 WinMain 执行之前要做的事情都可以这样处理。</p>\n<p>注意： WinMian 在 MFC 中并不是封装在类中，因为它是由系统调用的。</p>\n<h2 id=\"mfc是如何使用应用程序对象\"><a class=\"anchor\" href=\"#mfc是如何使用应用程序对象\">#</a> MFC 是如何使用应用程序对象</h2>\n<p>需要简单了解的内容</p>\n<p>CWinApp 类的二个可以覆盖的虚函数</p>\n<p><code>virtual BOOL InitInstance();</code></p>\n<p><code>virtual int Run();</code></p>\n<h2 id=\"代码模拟-2\"><a class=\"anchor\" href=\"#代码模拟-2\">#</a> 代码模拟</h2>\n<p>在上一章的模拟代码中我们相比于使用 MFC，还少了很多东西，比如  <code>InitInstance</code>  、  <code>m_pMainWnd</code>  等等。</p>\n<p>在上一章节中我们是将  <code>InitInstance</code>  这个虚函数删除的，在本章中我们可以基于上一章节的代码重新定义一下该虚函数，在原 MFC 中（这里我们是模拟）这个虚函数在三个类中都存在：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>我们已经了解层次结构所以直接在最高一层去定义，也就是  <code>CWinThread</code>  这个类中去定义即可  <code>virtual bool InitInstance() = 0;</code>  为了省事可以定义为纯虚函数。<br />\n <code>m_pMainWnd</code>  同样在  <code>CWinThread</code>  类中，我们也模拟着在我们的代码中定义一下： <code>CWnd* m_pMainWnd;</code>  这里注意包含头文件。</p>\n<p>接下来在要做的事情和用 MFC 写的一样，在我们的  <code>InitInstance</code>  函数中：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"CMyApp::InitInstance 函数\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tm_pMainWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CFrameWnd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>继续执行一下代码：</p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<p>我们发现并没有调用我们的  <code>InitInstance</code>  函数，由此可以推断出，  <code>InitInstance</code>  函数是在 WinMain 中调用的，我们添加代码 <code>theApp.InitInstance();</code></p>\n<p><img data-src=\"image010.png\" alt=\"\" /></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CObject 构造函数</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CCmdTarget 构造函数</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CWinThread 构造函数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>CWinApp 构造函数</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CMyApp 构造函数</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>WinMiam 函数</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>CMyApp::InitInstance 函数</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>CObject 构造函数</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>CCmdTarget 构造函数</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>CWnd 构造函数</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>CFrameWnd 构造函数</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>CMainWindow 构造函数</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Create 函数</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>CMyApp 析构函数</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>CWinApp 析构函数</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>CWinThread 析构函数</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>CCmdTarget 析构函数</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>CObject 析构函数</pre></td></tr></table></figure><p>以上就是简化版的 MFC 执行流程。</p>\n<p>但我们这里还有一个问题就是，我们在模拟 WinMain 函数中是直接用 <strong>应用程序对象</strong> 去调用的 <code>InitInstance</code> ，但在实际中，WinMain 并不是我们写的，它是如何调用 <code>InitInstance</code>  的呢？</p>\n<p>在前面 <code>CWinApp</code>  类的介绍中，我们有一个全局函数  <code>AfxGetApp</code>  获取一个指向  <code>CWinApp</code>  对象的指针。那么我们也可以简单的模拟一下：</p>\n<p>在 CMyApp 类中：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinApp</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tCMyApp<span class=\"token operator\">*</span> m_pCurrentApp<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 当前应用程序的指针</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">CMyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token operator\">~</span><span class=\"token function\">CMyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在其构造函数中：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">CMyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"CMyApp 构造函数\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tm_pCurrentApp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在主程序中定义：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"CMyApp.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMyApp theApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CMyApp<span class=\"token operator\">*</span> <span class=\"token function\">AfxGetApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> theApp<span class=\"token punctuation\">.</span>m_pCurrentApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span>  <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"WinMiam 函数\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">//theApp.InitInstance();</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tCMyApp<span class=\"token operator\">*</span> pApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tpApp <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tpApp<span class=\"token operator\">-></span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image011.png\" alt=\"\" /></p>\n<p>这样差不多既是 MFC 的执行流程了，主要是了解一个大概，后面看 MFC 的源码就清晰多了。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl1ZmVpMTk4My9wLzcxMzEwMDIuaHRtbA==\">https://www.cnblogs.com/liufei1983/p/7131002.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naDBzdC5jbi9CaW5hcnktTGVhcm5pbmcvTUZDLmh0bWw=\">https://gh0st.cn/Binary-Learning/MFC.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20venBjaGNiZC9wLzEyMjY2MDczLmh0bWw=\">https://www.cnblogs.com/zpchcbd/p/12266073.html</span></p>\n",
            "tags": [
                "MFC的本质",
                "MFC的层次结构图",
                "手动创建一个MFC程序",
                "MFC的初始化过程"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC-06ListCtrl%E9%AB%98%E7%BA%A7%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC-06ListCtrl%E9%AB%98%E7%BA%A7%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/",
            "title": "MFC-06ListCtrl高级列表控件",
            "date_published": "2022-03-22T06:44:32.000Z",
            "content_html": "<h1 id=\"listctrl高级列表控件\"><a class=\"anchor\" href=\"#listctrl高级列表控件\">#</a> ListCtrl 高级列表控件</h1>\n<p>ListCtrl 高级列表控件也是我们平时编程过程中很常用的一个控件，一般涉及到报表展示、记录展示之类的，都需要 ListCtrl 高级列表控件。例如：任务管理器啊，文件列表啊，等等都是 ListCtrl 高级列表控件来实现的。</p>\n<h2 id=\"控件的风格样式\"><a class=\"anchor\" href=\"#控件的风格样式\">#</a> 控件的风格样式</h2>\n<p>LVS_ICON: 为每个 item 显示大图标<br />\n LVS_SMALLICON: 为每个 item 显示小图标<br />\n LVS_LIST: 显示一列带有小图标的 item<br />\nLVS_REPORT: 显示 item 详细资料</p>\n<p>直观的理解：Windows 资源管理器，“查看” 标签下的 “大图标，小图标，列表，详细资料”</p>\n<p><img data-src=\"image001.png\" alt=\"\" /><br />\n<img data-src=\"image002.png\" alt=\"\" /><br />\n<img data-src=\"image003.png\" alt=\"\" /><br />\n<img data-src=\"image004.png\" alt=\"\" /></p>\n<p>具体可以通过代码指定控件的风格样式：</p>\n<p>先创建一个  <code>CListCtrl</code>  类型的变量  <code>m_ListCtrl</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LONG lStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>lStyle<span class=\"token operator\">=</span><span class=\"token function\">GetWindowLong</span><span class=\"token punctuation\">(</span>m_ListCtrl<span class=\"token punctuation\">.</span>m_hWnd<span class=\"token punctuation\">,</span> GWL_STYLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取当前窗口 style</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>lStyle <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>LVS_TYPEMASK<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 清除显示方式位</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>lStyle <span class=\"token operator\">|=</span> LVS_REPORT<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置 style</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">SetWindowLong</span><span class=\"token punctuation\">(</span>m_ListCtrl<span class=\"token punctuation\">.</span>m_hWnd<span class=\"token punctuation\">,</span> GWL_STYLE<span class=\"token punctuation\">,</span> lStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置 style</span></pre></td></tr></table></figure><p>也可以方便点，从控件的属性中直接修改：<br />\n对应控件的 View 属性：Icon、Small Icon、List、Report 四项。</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>我们主要学习 LVS_REPORT 格式，也就是报表样式。</p>\n<h2 id=\"扩展样式设置\"><a class=\"anchor\" href=\"#扩展样式设置\">#</a> 扩展样式设置</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DWORD dwStyle <span class=\"token operator\">=</span> m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetExtendedStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取当前扩展样式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dwStyle <span class=\"token operator\">|=</span> LVS_EX_FULLROWSELECT<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 选中某行使整行高亮（report 风格时）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dwStyle <span class=\"token operator\">|=</span> LVS_EX_GRIDLINES<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 网格线（report 风格时）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>dwStyle <span class=\"token operator\">|=</span> LVS_EX_CHECKBOXES<span class=\"token punctuation\">;</span> <span class=\"token comment\">//item 前生成 checkbox 控件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">SetExtendedStyle</span><span class=\"token punctuation\">(</span>dwStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置扩展风格</span></pre></td></tr></table></figure><h2 id=\"数据插入\"><a class=\"anchor\" href=\"#数据插入\">#</a> 数据插入</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 插入数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">InsertColumn</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> LVCFMT_LEFT<span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 插入列</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">InsertColumn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名称\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> LVCFMT_LEFT<span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 直接插入</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> nRow <span class=\"token operator\">=</span> m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 插入行</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span>nRow<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C++\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 设置数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//LVITEM 结构插入</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>LVITEM item <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>item<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 行号</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>item<span class=\"token punctuation\">.</span>mask <span class=\"token operator\">=</span> LVIF_TEXT<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*LVIF_IMAGE 支持图标 */</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>item<span class=\"token punctuation\">.</span>cchTextMax <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 插入字符串长度</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>item<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>nRow <span class=\"token operator\">=</span> m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemText</span><span class=\"token punctuation\">(</span>nRow<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MFC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"选中和取消选中item\"><a class=\"anchor\" href=\"#选中和取消选中item\">#</a> 选中和取消选中 Item</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> nIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 选中</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemState</span><span class=\"token punctuation\">(</span>nIndex<span class=\"token punctuation\">,</span>LVIS_SELECTED<span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>LVIS_FOCUSED<span class=\"token punctuation\">,</span>LVIS_SELECTED<span class=\"token operator\">|</span>LVIS_FOCUSED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 取消选中</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">SetItemState</span><span class=\"token punctuation\">(</span>nIndex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>LVIS_SELECTED<span class=\"token operator\">|</span>LVIS_FOCUSED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>一直选中 Item: 选中  <code>style</code>  中的  <code>Show selection always</code> , 或者添加扩展样式  <code>LVS_SHOWSELALWAYS</code></p>\n<h2 id=\"得到clistctrl中所有行的checkbox的状态\"><a class=\"anchor\" href=\"#得到clistctrl中所有行的checkbox的状态\">#</a> 得到 CListCtrl 中所有行的 checkbox 的状态</h2>\n<p>要开启  <code>LVS_EX_CHECKBOXES</code>  样式。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CString str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemState</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> LVIS_SELECTED<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  LVIS_SELECTED <span class=\"token operator\">||</span> m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetCheck</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    str<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第%d行的checkbox为选中状态\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"得到clistctrl中所有选中行的序号\"><a class=\"anchor\" href=\"#得到clistctrl中所有选中行的序号\">#</a> 得到 CListCtrl 中所有选中行的序号</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 方法一：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CString str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemState</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> LVIS_SELECTED<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LVIS_SELECTED <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    str<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"选中了第%d行\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 方法二：</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>POSITION pos<span class=\"token operator\">=</span>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetFirstSelectedItemPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pos<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">TRACE0</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No items were selected!/n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">int</span> nItem<span class=\"token operator\">=</span>m_ListCtrl<span class=\"token punctuation\">.</span><span class=\"token function\">GetNextSelectedItem</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">TRACE1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Item %d was selected!/n\"</span><span class=\"token punctuation\">,</span> nItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 添加其他操作</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"得到单击的clistctrl的行列号\"><a class=\"anchor\" href=\"#得到单击的clistctrl的行列号\">#</a> 得到单击的 CListCtrl 的行列号</h2>\n<p>添加 listctrl 控件的  <code>NM_CLICK</code>  消息相应函数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMFCCStringDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnNMClickList1</span><span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span> pNMHDR<span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span> pResult<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLPNMITEMACTIVATE pNMItemActivate <span class=\"token operator\">=</span> <span class=\"token keyword\">reinterpret_cast</span><span class=\"token operator\">&lt;</span>LPNMITEMACTIVATE<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>pNMHDR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">//// 方法一:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//DWORD dwPos = GetMessagePos();</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">//CPoint point(LOWORD(dwPos), HIWORD(dwPos));</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">//m_ListCtrl.ScreenToClient(&amp;point);</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">//LVHITTESTINFO lvinfo;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">//lvinfo.pt = point;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">//lvinfo.flags = LVHT_ABOVE;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">//int nItem = m_ListCtrl.SubItemHitTest(&amp;lvinfo);</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">//if (nItem != -1)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">//\tCString strtemp;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">//\tstrtemp.Format (_T (\"单击的是第 % d 行第 % d 列\"), lvinfo.iItem, lvinfo.iSubItem);</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">//\tAfxMessageBox(strtemp);</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\">// 方法二:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tNM_LISTVIEW<span class=\"token operator\">*</span> pNMListView <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>NM_LISTVIEW<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNMHDR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pNMListView<span class=\"token operator\">-></span>iItem <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tCString strtemp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tstrtemp<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单击的是第%d行第%d列\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pNMListView<span class=\"token operator\">-></span>iItem<span class=\"token punctuation\">,</span> pNMListView<span class=\"token operator\">-></span>iSubItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span>strtemp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token operator\">*</span>pResult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image009.png\" alt=\"\" /></p>\n<h2 id=\"右键点击clistctrl的item弹出菜单\"><a class=\"anchor\" href=\"#右键点击clistctrl的item弹出菜单\">#</a> 右键点击 CListCtrl 的 item 弹出菜单</h2>\n<p>添加一个菜单资源</p>\n<p><img data-src=\"image011.png\" alt=\"\" /></p>\n<p>对菜单进行编辑：</p>\n<p><img data-src=\"image012.png\" alt=\"\" /></p>\n<p>添加 CListCtrl 控件的 NM_RCLICK 消息相应函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMFCCStringDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnNMRClickList1</span><span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span> pNMHDR<span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span> pResult<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLPNMITEMACTIVATE pNMItemActivate <span class=\"token operator\">=</span> <span class=\"token keyword\">reinterpret_cast</span><span class=\"token operator\">&lt;</span>LPNMITEMACTIVATE<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>pNMHDR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tNM_LISTVIEW<span class=\"token operator\">*</span> pNMListView <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>NM_LISTVIEW<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNMHDR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pNMListView<span class=\"token operator\">-></span>iItem <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tDWORD dwPos <span class=\"token operator\">=</span> <span class=\"token function\">GetMessagePos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tCPoint <span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>dwPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>dwPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tCMenu menu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">VERIFY</span><span class=\"token punctuation\">(</span>menu<span class=\"token punctuation\">.</span><span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span>IDR_MENU1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tCMenu<span class=\"token operator\">*</span> popup <span class=\"token operator\">=</span> menu<span class=\"token punctuation\">.</span><span class=\"token function\">GetSubMenu</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>popup <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tpopup<span class=\"token operator\">-></span><span class=\"token function\">TrackPopupMenu</span><span class=\"token punctuation\">(</span>TPM_LEFTALIGN <span class=\"token operator\">|</span> TPM_RIGHTBUTTON<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\tpoint<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token operator\">*</span>pResult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image013.png\" alt=\"\" /></p>\n<h3 id=\"添加右键响应函数\"><a class=\"anchor\" href=\"#添加右键响应函数\">#</a> 添加右键响应函数</h3>\n<p>为菜单添加消息事件处理函数：</p>\n<p><img data-src=\"image014.png\" alt=\"\" /></p>\n<p><img data-src=\"image015.png\" alt=\"\" /></p>\n<p><img data-src=\"image016.png\" alt=\"\" /></p>\n<h1 id=\"结尾\"><a class=\"anchor\" href=\"#结尾\">#</a> 结尾</h1>\n<p>ListControl 还有很多功能，等用到了再学了。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaF8yMDEzL2FydGljbGUvZGV0YWlscy80NDYyNDIzOQ==\">https://blog.csdn.net/lsh_2013/article/details/44624239</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDk4MjYxL2FydGljbGUvZGV0YWlscy8xMDg3MTkyMjg=\">https://blog.csdn.net/qq_41498261/article/details/108719228</span></p>\n",
            "tags": [
                "ListCtrl"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC-05Tab%E6%A0%87%E7%AD%BE%E6%8E%A7%E4%BB%B6/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC-05Tab%E6%A0%87%E7%AD%BE%E6%8E%A7%E4%BB%B6/",
            "title": "MFC-05Tab标签控件",
            "date_published": "2022-03-22T06:43:28.000Z",
            "content_html": "<h1 id=\"tab标签控件\"><a class=\"anchor\" href=\"#tab标签控件\">#</a> Tab 标签控件</h1>\n<p>添加 Tab Control 控件</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>我们为了使用方便先给这个标签页添加一个类型变量  <code>m_Tab1</code>  。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>在工程中添加子对话框，有几个标签页插入几个子对话框，并且修改对话框资源属性，把 边框改为  <code>None</code>  把样式改为  <code>Child</code>  英文是  <code>Border：None</code>   <code>Style：Child</code> 。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>然后对着子对话框右键选择添加类，这里类名随便起，基类就选择  <code>CDialog</code>  了。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>在主对话框类声明中加入子对话框的实例化对象：  <code>CPage1 m_CPage1</code>  ， 记得包含进我们为子对话框新建的类的声明文件。</p>\n<p>以上步骤我们重复一次再创建一个  <code>CPage2 m_CPage2</code> 。</p>\n<p>现在我们开始显示这两个标签页。</p>\n<p>在主对话框初始化的地方添加如下代码:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 添加标签页</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tm_Tab1<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一页\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tm_Tab1<span class=\"token punctuation\">.</span><span class=\"token function\">InsertItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二页\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tm_CPage1<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>IDD_DIALOG1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m_Tab1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tm_CPage2<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>IDD_DIALOG2<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m_Tab1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 调整子对话框大小及位置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tCRect rc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tm_Tab1<span class=\"token punctuation\">.</span><span class=\"token function\">GetClientRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tCRect rcTabItem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tm_Tab1<span class=\"token punctuation\">.</span><span class=\"token function\">GetItemRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rcTabItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\trc<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+=</span> rcTabItem<span class=\"token punctuation\">.</span><span class=\"token function\">Height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\trc<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\trc<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">-=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\trc<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tm_CPage1<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tm_CPage2<span class=\"token punctuation\">.</span><span class=\"token function\">MoveWindow</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token comment\">// 设置默认的标签页</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tm_CPage1<span class=\"token punctuation\">.</span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tm_Tab1<span class=\"token punctuation\">.</span><span class=\"token function\">SetCurFocus</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>当然这个过程也可以封装一下方便以后自己调用。</p>\n<p>然后给标签页控件添加 消息处理函数</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>函数为:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMFCCStringDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnTcnSelchangeTab1</span><span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span> pNMHDR<span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span> pResult<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>m_Tab1<span class=\"token punctuation\">.</span><span class=\"token function\">GetCurSel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tm_CPage1<span class=\"token punctuation\">.</span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tm_CPage2<span class=\"token punctuation\">.</span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_HIDE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tm_CPage1<span class=\"token punctuation\">.</span><span class=\"token function\">SetFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tm_CPage2<span class=\"token punctuation\">.</span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tm_CPage1<span class=\"token punctuation\">.</span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_HIDE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tm_CPage2<span class=\"token punctuation\">.</span><span class=\"token function\">SetFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token operator\">*</span>pResult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当显示第 X 页的时候，要把其他页给隐藏了。</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>当然也可以进行美化。</p>\n",
            "tags": [
                "Tab"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC-04ComboBox%E6%8E%A7%E4%BB%B6/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC-04ComboBox%E6%8E%A7%E4%BB%B6/",
            "title": "MFC-04ComboBox控件",
            "date_published": "2022-03-20T09:07:32.000Z",
            "content_html": "<h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n",
            "tags": [
                "Combo Box"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC-03Edit%E7%BC%96%E8%BE%91%E6%A1%86%E6%8E%A7%E4%BB%B6/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC-03Edit%E7%BC%96%E8%BE%91%E6%A1%86%E6%8E%A7%E4%BB%B6/",
            "title": "MFC-03Edit编辑框控件",
            "date_published": "2022-03-20T09:05:37.000Z",
            "content_html": "<h1 id=\"edit控件\"><a class=\"anchor\" href=\"#edit控件\">#</a> Edit 控件</h1>\n<h2 id=\"设置编辑框控件内的文本内容\"><a class=\"anchor\" href=\"#设置编辑框控件内的文本内容\">#</a> 设置编辑框控件内的文本内容</h2>\n<p>这些方法哪一个都可以：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"获取编辑框控件内的文本内容\"><a class=\"anchor\" href=\"#获取编辑框控件内的文本内容\">#</a> 获取编辑框控件内的文本内容</h2>\n<p>这些方法都可以：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"编辑框控件的属性介绍\"><a class=\"anchor\" href=\"#编辑框控件的属性介绍\">#</a> 编辑框控件的属性介绍</h2>\n<p>a、让编辑框文本为只读模式；<br />\nb、让编辑框文本为密码模式；<br />\nd、让编辑框支持多行显示，即：自动换行；<br />\ne、让编辑框显示滚动条；<br />\nf、让编辑框只能接受数字输入；<br />\ng、让编辑框只能输入指定范围的数组；</p>\n<p>以上这些属性都可以在编辑框的属性中设置。</p>\n<p>但如果还有其他方面的限制要求，那只能是利用接下来要讲解的事件通知的方式来处理了。</p>\n<h2 id=\"事件通知\"><a class=\"anchor\" href=\"#事件通知\">#</a> 事件通知</h2>\n<p>先认识两个消息事件。</p>\n<p><code>EN_CHANGE</code>  : 当编辑框中的文本被修改，新的文本显示之 “后” 发送此消息<br />\n <code>EN_UPDATE</code>  : 当编辑框中的文本被修改，新的文本显示之 “前” 发送此消息</p>\n<p>当编辑框内的文本内容发生变化时通知我，响应  <code>EN_CHANGE</code>  事件；</p>\n<p>添加事件处理程序：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>这是一个非常常用是消息事件，下面我们利用它来实现一些功能。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使文本框中只能写入 ABC </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>BOOL flag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CString str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">GetWindowText</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 不等于的话就把文字给替换了</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    flag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    str<span class=\"token punctuation\">.</span><span class=\"token function\">SetAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  str<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因为  <code>SetWindowText</code>  函数会触发  <code>EN_CHANGE</code>  消息，所以要加一个判断的标志，判断是否需要替换。</p>\n<h2 id=\"编辑框控件的长度限制\"><a class=\"anchor\" href=\"#编辑框控件的长度限制\">#</a> 编辑框控件的长度限制</h2>\n<p>默认情况下编辑框控件的文本长度有限制，可以调用这个函数获取一下：</p>\n<p><code>UINT nLimitLen = m_Edit.GetLimitText();</code></p>\n<p>看到多少了吧？要解除这个限制呢，或者改成更大一些？</p>\n<p><code>m_Edit.SetLimitText(0);</code></p>\n<h2 id=\"向编辑框的结尾增加数据\"><a class=\"anchor\" href=\"#向编辑框的结尾增加数据\">#</a> 向编辑框的结尾增加数据</h2>\n<p>现在点击添加文本就会添加到已有文本的后面了。</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<h2 id=\"始终显示最新的数据光标定位到文本结尾\"><a class=\"anchor\" href=\"#始终显示最新的数据光标定位到文本结尾\">#</a> 始终显示最新的数据（光标定位到文本结尾）</h2>\n<p>我们发现向文本框中写入文本时光标一直在最前方，不合逻辑。</p>\n<p>我们可以在每次输入完信息后，让光标定位到结尾。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">SetFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">SetSel</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在  <code>EN_CHANGE</code>  消息处理函数最后加入以上两行代码就行了。</p>\n<h1 id=\"使用编辑框打开文件资源管理器\"><a class=\"anchor\" href=\"#使用编辑框打开文件资源管理器\">#</a> 使用编辑框打开文件资源管理器</h1>\n<p>这个涉及了  <code>CFileDialog</code>  类。</p>\n<pre><code class=\"language-cpp\">\n</code></pre>\n",
            "tags": [
                "Edit"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC-02%E5%8D%95%E9%80%89%E6%A1%86%E4%B8%8E%E5%A4%8D%E9%80%89%E6%A1%86%E4%BB%B6/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC-02%E5%8D%95%E9%80%89%E6%A1%86%E4%B8%8E%E5%A4%8D%E9%80%89%E6%A1%86%E4%BB%B6/",
            "title": "MFC-02单选框与复选框件",
            "date_published": "2022-03-19T08:08:56.000Z",
            "content_html": "<h1 id=\"单选框件的基本使用\"><a class=\"anchor\" href=\"#单选框件的基本使用\">#</a> 单选框件的基本使用</h1>\n<p>我们先添加两个单选框：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>若是没有选择，我们设置默认为男：</p>\n<p>在对话框初始化的地方添加代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 单选框也是按钮 也是 CButton 类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CButton<span class=\"token operator\">*</span> pNan <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CButton<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>IDC_RADIO1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pNan<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// BST_CHECKED 选中状态</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  pNan<span class=\"token operator\">-></span><span class=\"token function\">SetCheck</span><span class=\"token punctuation\">(</span>BST_CHECKED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里有个分组的问题，如果有多组单选按钮：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>那么我们只能选择其中的一个。</p>\n<p>这里就要注意了一下两点了。</p>\n<ol>\n<li>要求一组内的单选框按钮控件 ID 必须由小到大排列，中间不能夹杂其他组的单选框按钮。</li>\n<li>若有多组，则组内第一个单选框按钮的 Group 属性为 True，其他为 False。</li>\n</ol>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p><strong>另一种方法选中组内某个单选框按钮：</strong></p>\n<p><code>void CheckRadioButton(int nIDFirstButton, int nIDLastButton,\tint nIDCheckButton);</code></p>\n<p>参数分别是： 组内的第一个单选框按钮 ID 组内的最后一个单选框按钮 ID 要设置选中专状态的单选框 ID 。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p><strong>获得当前当前选中的单选框按钮控件：</strong></p>\n<p>虽然我们可以先获取控件的指针，然后调用 GetCheck 函数判断：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>但如果有十多个甚至更多的选项，我们一个一个取判断就很麻烦了。</p>\n<p>所以我们用这个函数   <code>int nCheckId = GetCheckedRadioButton(IDC_RADIO1, IDC_RADIO2);</code></p>\n<p><code>GetCheckedRadioButton</code>   传入第一个单选框的 ID 和最后一个单选框的 ID 这个函数会判断这些 ID 范围内的单选框的选中状态，并且会返回按钮中当前选中的单选按钮的 ID。</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<h1 id=\"复选框的基本使用\"><a class=\"anchor\" href=\"#复选框的基本使用\">#</a> 复选框的基本使用</h1>\n<ol>\n<li>勾选复选框控件：</li>\n</ol>\n<p>::SendMessage(::GetDlgItem(m_hWnd, IDC_CHECK1), BM_SETCHECK, BST_CHECKED, 0);<br />\nGetDlgItem(IDC_CHECK1)-&gt;SendMessage(BM_SETCHECK, BST_CHECKED, 0);<br />\nm_Check.SetCheck(BST_CHECKED);</p>\n<p>三种方法任意一种都可以！</p>\n<p>备注：取消勾选的话只需要把  <code>BST_CHECKED</code>  改成  <code>BST_UNCHECKED</code>  就可以了！</p>\n<ol start=\"2\">\n<li>获取复选框的勾选状态：<br />\nUINT nCheckState = ::SendMessage(::GetDlgItem(m_hWnd, IDC_CHECK1), BM_GETCHECK, 0, 0);<br />\nnCheckState = GetDlgItem(IDC_CHECK1)-&gt;SendMessage(BM_GETCHECK, 0, 0);<br />\nnCheckState = m_Check.GetCheck();<br />\n 三种方法任意一种都可以！</li>\n</ol>\n<p>如果返回值 nCheckState 的值为 BST_CHECKED，那么就是勾选状态。如果值为 BST_UNCHECKED，那么就是非勾选状态。</p>\n<p>都是一些简单的设置：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /><br />\n<img data-src=\"image008.png\" alt=\"\" /><br />\n<img data-src=\"image009.png\" alt=\"\" /><br />\n<img data-src=\"image010.png\" alt=\"\" /></p>\n",
            "tags": [
                "单选框",
                "复选框件"
            ]
        },
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC-01%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC-01%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/",
            "title": "MFC-01按钮控件",
            "date_published": "2022-03-18T11:42:30.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>之前学习了 win32 的窗口编程，如今想进一步学习一下，C++ 的图形化编程。</p>\n<h1 id=\"创建一个mfc对话框工程\"><a class=\"anchor\" href=\"#创建一个mfc对话框工程\">#</a> 创建一个 MFC 对话框工程</h1>\n<p>这里我遇到了一个问题，用 VS2019 创建 MFC 工程，<strong>对 COM 组件的调用返回了错误 HRESULT E_FAIL</strong> 上网查了些文章，按着方法也照做了，可是还是不行，后来找到了原因，是因为项目名字中有下划线……，为了保险起见，我把放 MFC 代码的文件夹也取消下划线了。</p>\n<p>因为是初学者，暂时先设置成这样：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h1 id=\"button控件\"><a class=\"anchor\" href=\"#button控件\">#</a> button 控件</h1>\n<p>因为之前有 win32 的基础，所以只记下没有学过的一些内容。</p>\n<h2 id=\"禁用按钮\"><a class=\"anchor\" href=\"#禁用按钮\">#</a> 禁用按钮</h2>\n<p>相关函数：  <code>EnableWindow</code></p>\n<p>主要代码如下，不要在意函数名。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMFCCStringDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedButton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// MFC 获取控件句柄</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 此函数有两个重名的，在全局上有一个，在 MFC 中也有，我们这里调用全局的，加上全局作用域</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// win32 sdk api</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tHWND hButton2 <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_BTN_Test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hButton2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token operator\">::</span><span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span>hButton2<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMFCCStringDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedButton4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\">// 这次使用 MFC 的函数</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tCWnd<span class=\"token operator\">*</span> pButtonCWnd <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>IDC_BTN_Test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pButtonCWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tpButtonCWnd<span class=\"token operator\">-></span><span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token comment\">//::EnableWindow(pButtonCWnd->GetSafeHwnd(), TRUE);</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>点击之后变成了这样：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"绑定控件类型变量\"><a class=\"anchor\" href=\"#绑定控件类型变量\">#</a> 绑定控件类型变量</h2>\n<p>我们想对按钮控件启用或者禁用之前必须先获得按钮控件的窗口句柄，也就是说如果以后要对这个按钮控件进行任何操作，都得先获取他的窗口句柄，之后才能操作，也就是都得调用这句话：HWND hBtn = ::GetDlgItem (m_hWnd, IDC_BTN_1);</p>\n<p>比较麻烦，有什么简单点的办法吗？这就需要了解绑定控件类型变量了。</p>\n<p>选择控件对其点击右键， 选择添加变量，就会出现如下界面：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>用看控件类型变量来实现上面的禁用操作：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMFCCStringDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedButton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">//// MFC 获取控件句柄</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//// 此函数有两个重名的，在全局上有一个，在 MFC 中也有，我们这里调用全局的，加上全局作用域</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">//// win32 sdk api</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">//HWND hButton2 = ::GetDlgItem(GetSafeHwnd(), IDC_BTN_Test);</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">//if (hButton2)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">//\t::EnableWindow(hButton2, FALSE);</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tBTN_Test<span class=\"token punctuation\">.</span><span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMFCCStringDlg</span><span class=\"token operator\">::</span><span class=\"token function\">OnBnClickedButton4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token comment\">// TODO: 在此添加控件通知处理程序代码</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">//// 这次使用 MFC 的函数</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">//CWnd* pButtonCWnd = GetDlgItem(IDC_BTN_Test);</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">//if (pButtonCWnd)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">//\tpButtonCWnd->EnableWindow(TRUE);</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">//\t//::EnableWindow(pButtonCWnd->GetSafeHwnd(), TRUE);</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// 有缺省值 默认为 1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tBTN_Test<span class=\"token punctuation\">.</span><span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"控件的美化\"><a class=\"anchor\" href=\"#控件的美化\">#</a> 控件的美化</h2>\n<p>简单了解一下了。</p>\n<p>先把要设置的按钮行为属性中的 <strong>所有者描述</strong> 改为 TURE，英文是 Owner Draw。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>因为要自己绘图，直接在网上用现成的了：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kZXByb2plY3QuY29tL0FydGljbGVzLzUwMzEvTWFraW5nLUNvb2wtQnV0dG9uLXVzaW5nLUltYWdlcw==\">https://www.codeproject.com/Articles/5031/Making-Cool-Button-using-Images</span></p>\n<p>结果如下：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n",
            "tags": [
                "button"
            ]
        }
    ]
}