{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"共享物理页\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MemoryManagement/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86-03Mapped%20Memory/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MemoryManagement/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86-03Mapped%20Memory/",
            "title": "内存管理-03Mapped Memory",
            "date_published": "2022-04-15T07:16:58.000Z",
            "content_html": "<h1 id=\"mapped-memory\"><a class=\"anchor\" href=\"#mapped-memory\">#</a> Mapped Memory</h1>\n<p>前面了解了私有内存，接下来认识一下映射内存，这种内存的好处是可以跟其他进程共享物理页。</p>\n<p>在前面的用 <code>!vad</code>  查看内存结构中，可以发现后面有文件路径的就是映射内存。</p>\n<p>可以共享一个物理页，也可以共享一份文件。</p>\n<h2 id=\"实验演示\"><a class=\"anchor\" href=\"#实验演示\">#</a> 实验演示</h2>\n<h3 id=\"共享物理页\"><a class=\"anchor\" href=\"#共享物理页\">#</a> 共享物理页</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BUFSIZ</span> <span class=\"token expression\"><span class=\"token number\">0x200</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MapFileName</span> <span class=\"token string\">\"SharedMemory\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 内核对象：1、物理页  2、文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHANDLE g_hMapFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tINVALID_HANDLE_VALUE<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tPAGE_READWRITE<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>BUFSIZ<span class=\"token punctuation\">,</span>MapFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 将物理页与线性地址进行映射</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tLPTSTR g_lpBuff <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tg_hMapFile<span class=\"token punctuation\">,</span>FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>BUFSIZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>g_lpBuff <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A进程写入地址：%p，内容：%x\\t\\n\"</span><span class=\"token punctuation\">,</span>g_lpBuff<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>g_lpBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>接下来我们观察内存结构</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd&gt; !vad 0x8a098e90</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>VAD   Level     Start       End Commit</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>89acf150  8       3a0       3a0      0 Mapped       READWRITE          Pagefile section, shared commit 0x1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>……</pre></td></tr></table></figure><p>可以看到是一个页的大小。所以映射内存也是以页为单位的。</p>\n<p>接下来在 B 进程中读取一下共享内存</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BUFSIZ</span> <span class=\"token expression\"><span class=\"token number\">0x200</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MapFileName</span> <span class=\"token string\">\"SharedMemory\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 内核对象：1、物理页  2、文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHANDLE g_hMapFile <span class=\"token operator\">=</span> <span class=\"token function\">OpenFileMapping</span><span class=\"token punctuation\">(</span>FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span>FALSE<span class=\"token punctuation\">,</span>MapFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 将物理页与线性地址进行映射</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tLPTSTR g_lpBuff <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tg_hMapFile<span class=\"token punctuation\">,</span>FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>BUFSIZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B进程读地址：%p，内容：%x\\t\\n\"</span><span class=\"token punctuation\">,</span>g_lpBuff<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>g_lpBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>查看 B 进程的内存结构：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd&gt; !vad 0x8a05b8b8</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>VAD   Level     Start       End Commit</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>8a0ff3b0  8       3a0       3a0      0 Mapped       READWRITE          Pagefile section, shared commit 0x1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>……</pre></td></tr></table></figure><p>可以看到也是一个页的大小。</p>\n<h3 id=\"共享文件\"><a class=\"anchor\" href=\"#共享文件\">#</a> 共享文件</h3>\n<p>文件映射进内存</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MapFileName</span> <span class=\"token string\">\"SharedMemory\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tHANDLE g_hFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token string\">\"C:\\\\Hello.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tGENERIC_READ<span class=\"token operator\">|</span>GENERIC_WRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tFILE_SHARE_READ<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tOPEN_ALWAYS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tFILE_ATTRIBUTE_NORMAL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tHANDLE g_hMapFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileMapping</span><span class=\"token punctuation\">(</span>g_hFile<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>PAGE_READWRITE<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> BUFSIZ<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">void</span><span class=\"token operator\">*</span> g_lpBuff <span class=\"token operator\">=</span> <span class=\"token function\">MapViewOfFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tg_hMapFile<span class=\"token punctuation\">,</span>FILE_MAP_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>BUFSIZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共享内存地址：%p\\t\\n\"</span><span class=\"token punctuation\">,</span>g_lpBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>观察内存结构:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd&gt; !vad 0x8a0a6b00</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>VAD   Level     Start       End Commit</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>89ad82d8  8       3a0       3a0      0 Mapped       READWRITE          \\Hello.exe</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>89ac3e88  3     7c800     7c91d      6 Mapped  Exe  EXECUTE_WRITECOPY  \\WINDOWS\\system32\\kernel32.dll</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>89e0fbc0  2     7c920     7c9b2      5 Mapped  Exe  EXECUTE_WRITECOPY  \\WINDOWS\\system32\\ntdll.dll</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>……</pre></td></tr></table></figure><p>可以看到在我们映射的  <code>Hello.exe</code>  文件。这种共享文件特别适合那种大的文件。</p>\n<p>** 细心的人可能发现了。** 我们的文件是  <code>READWRITE</code>  而有的是  <code>EXECUTE_WRITECOPY</code> ?</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\\\Hello.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>观察内存结构:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd&gt; !vad 0x89ad1e98</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>VAD   Level     Start       End Commit</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>89ac98d0  8       3a0       3aa      4 Mapped  Exe  EXECUTE_WRITECOPY  \\Hello.exe</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>89d0ec98  8     77fc0     77fd0      2 Mapped  Exe  EXECUTE_WRITECOPY  \\WINDOWS\\system32\\secur32.dll</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>89ad18c8  3     7c800     7c91d      6 Mapped  Exe  EXECUTE_WRITECOPY  \\WINDOWS\\system32\\kernel32.dll</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>8a15c988  2     7c920     7c9b2      5 Mapped  Exe  EXECUTE_WRITECOPY  \\WINDOWS\\system32\\ntdll.dll</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>……</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>……</pre></td></tr></table></figure><p>通过这些我们应该明白了什么是  <code>LoadLibrary</code>  。跟映射文件唯一的区别就是属性， <code>LoadLibrary</code>  的属性只有一种就是  <code>EXECUTE_WRITECOPY</code> 。</p>\n<p>当了解这些后我们对内存就会了如指掌，如果想模块隐藏只能申请一块私有内存然后在里面填写数据，拉伸、抹去 PE 指纹，这样想要检测就很难了。</p>\n",
            "tags": [
                "共享物理页",
                "共享文件",
                "LoadLibrary的本质"
            ]
        }
    ]
}