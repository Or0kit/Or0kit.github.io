{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"扩大节\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/WindowsPE/%E6%89%A9%E5%A4%A7%E8%8A%82/",
            "url": "https://or0kit.github.io/Bin/WindowsPE/%E6%89%A9%E5%A4%A7%E8%8A%82/",
            "title": "扩大节",
            "date_published": "2021-05-03T09:26:17.000Z",
            "content_html": "<h1 id=\"为什么扩大节\"><a class=\"anchor\" href=\"#为什么扩大节\">#</a> 为什么扩大节？</h1>\n<p><code>我们可以在任意空白区添加自己的代码，但如果添加的代码比较多，空白区不够怎么办？</code> <br />\n无法新增节表的时候，就要扩大最后一个节了。</p>\n<p>上面我们讲了，空白区添加我们的代码。但是有的时候。我们的空白区不够了怎么办。所以需要进行扩大节.</p>\n<p>扩大节其实很简单。修改节数据对齐后的大小即可。并且在 PE 文件中添加 0 数据进行填充即可.</p>\n<p>首先看一下我们的节表</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_SECTION_HEADER</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    BYTE    Name<span class=\"token punctuation\">[</span>IMAGE_SIZEOF_SHORT_NAME<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//8 个字节名字。自己可以起。编译器也可以给定。不重要.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            DWORD   PhysicalAddress<span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            DWORD   VirtualSize<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 节数据没有对齐后的大小。也就是没有对齐。节数据有多大.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> Misc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    DWORD   VirtualAddress<span class=\"token punctuation\">;</span>　　　　　　　　　　<span class=\"token comment\">// 加载到内存中的第一个字节的地址。也就是虚拟地址。节在内存中哪里开始。内存中的 VA + ImageBase 才是真正的节开始位置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    DWORD   SizeOfRawData<span class=\"token punctuation\">;</span>　　　　　　　　　　 <span class=\"token comment\">// 修改这个属性的值，即可扩大节。并且在 PE 文件中添加相应的 0 数据进行填充.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    DWORD   PointerToRawData<span class=\"token punctuation\">;</span>　　　　　　　　  <span class=\"token comment\">// 在文件中的偏移。是文件对齐成员倍数.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    DWORD   PointerToRelocations<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 一下都是调试相关.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    DWORD   PointerToLinenumbers<span class=\"token punctuation\">;</span>           <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    WORD    NumberOfRelocations<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    WORD    NumberOfLinenumbers<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    DWORD   Characteristics<span class=\"token punctuation\">;</span>　　　　　　　　　　<span class=\"token comment\">// 节的属性</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_SECTION_HEADER<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"扩大哪一个节呢\"><a class=\"anchor\" href=\"#扩大哪一个节呢\">#</a> 扩大哪一个节呢？</h1>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>若是扩大前面几个节，则后面的节都要改动。所以一般扩大最后一个节。</p>\n<h1 id=\"扩大节的步骤\"><a class=\"anchor\" href=\"#扩大节的步骤\">#</a> 扩大节的步骤</h1>\n<ol>\n<li>\n<p>分配一块新的空间，大小为 <code>S</code></p>\n</li>\n<li>\n<p>将最后一个节的 SizeOfRawData 和 VirtualSize 改为 N<br />\n <code>N = (SizeOfRawData或者VirtualSize内存对齐后的值) + S</code></p>\n</li>\n<li>\n<p>修改 SizeOflmage 大小</p>\n</li>\n</ol>\n<h1 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LPVOID <span class=\"token function\">IncreaseSection</span><span class=\"token punctuation\">(</span>LPVOID pFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">size_t</span> ExtendSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 计算 PE 文件在内存中的大小</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token class-name\">size_t</span> Size <span class=\"token operator\">=</span> <span class=\"token function\">CalcSize</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tLPVOID pNewBuffer <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>Size <span class=\"token operator\">+</span> ExtendSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pNewBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新增节，开辟pNewImageBuffer内存失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewBuffer<span class=\"token punctuation\">,</span> pFileBuffer<span class=\"token punctuation\">,</span> Size <span class=\"token operator\">+</span> ExtendSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\">// 判断节表后的空白区是否足够 80 字节，若不够则移动 NT 头</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pOptionHeader<span class=\"token operator\">-></span>SizeOfHeaders <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>pSectionHeader<span class=\"token punctuation\">[</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tDWORD dwRet <span class=\"token operator\">=</span> <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"节表空间不足，NT头和节表向低地址移动了 %d 字节\\n\"</span><span class=\"token punctuation\">,</span> dwRet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwRet <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动后仍没有足够的80字节空间插入新节表\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token comment\">// 更新指针</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token comment\">// 在节表最后新增一个节表 并修正新增节表的属性</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tPWORD pNumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 节的数量</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tPIMAGE_SECTION_HEADER pLastSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最后一个节表</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tPIMAGE_SECTION_HEADER pNewSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新节表插入点</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">//1、Name: 名字随便修改，不能超过八个字节。</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">,</span> <span class=\"token string\">\".newsec\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token comment\">//2、VirtualSize : 申请的新节空间大小，比如 1000</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize <span class=\"token operator\">=</span> ExtendSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">//3、VirtualAddress : 等于上一个节的 VirtualAddress + SizeOfRawData。 这个成员指定了这个节在内存哪里展开。所以需要修改。</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">=</span> pLastSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token comment\">//4、SizeOfRawData：设置可以和 VirtualSize 一样，比如 0x1000。我们新增的节，自己需要在 PE 文件添加一段节数据，数据的大小按照文件对齐添加，并且填写到这个成员中。</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>SizeOfRawData <span class=\"token operator\">=</span> ExtendSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token comment\">//5、PointerToRawData：等于上一个节的 PointerToRawData + SizeOfRawData。我们指定了内存中从哪里展开节。那么也需要指定这个节在文件中在哪里展开</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">=</span> pLastSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">//6、PointerToRelocation：设置成零</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token comment\">//7、PointerToLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token comment\">//8、NumberOfLineRelocations：设置成零</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token comment\">//9、NumberOfLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">//10、Characteristics：块属性 </span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">=</span> pSectionHeader<span class=\"token operator\">-></span>Characteristics<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token comment\">// 修改标准 PE 头中节的数量</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tpFileHeader<span class=\"token operator\">-></span>NumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token comment\">// 修改 SizeOfImage 的大小</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tpOptionHeader<span class=\"token operator\">-></span>SizeOfImage <span class=\"token operator\">+=</span> <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize<span class=\"token punctuation\">,</span> pOptionHeader<span class=\"token operator\">-></span>SectionAlignment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token comment\">//WritePeFile(pNewImageBuffer);</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token keyword\">return</span> pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "扩大节"
            ]
        }
    ]
}