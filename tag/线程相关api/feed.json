{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"线程相关api\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E7%BA%BF%E7%A8%8B/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E7%BA%BF%E7%A8%8B/",
            "title": "Win线程",
            "date_published": "2021-05-26T11:49:21.000Z",
            "content_html": "<h1 id=\"什么是线程\"><a class=\"anchor\" href=\"#什么是线程\">#</a> 什么是线程</h1>\n<ul>\n<li>线程是附属在进程上的执行实体，是代码的执行流程</li>\n<li>一个进程课以包含多个线程，但一个进程至少要包含一个线程。</li>\n</ul>\n<p>滴水老师：进程是一种空间上的概念，它代表的是 4GB 的虚拟内存。线程是一种时间上的概念，线程就是当前正在运行的代码。</p>\n<h1 id=\"创建线程\"><a class=\"anchor\" href=\"#创建线程\">#</a> 创建线程</h1>\n<h2 id=\"createthread函数\"><a class=\"anchor\" href=\"#createthread函数\">#</a> CreateThread 函数</h2>\n<p>返回值：函数成功，返回线程句柄；函数失败返回 false。若不想返回线程 ID, 设置值为 NULL。<br />\n函数说明：<br />\n创建一个线程。<br />\n语法：<br />\n <code>hThread = CreateThread (&amp;security_attributes, dwStackSize, ThreadProc,pParam, dwFlags, &amp;idThread);</code></p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WINBASEAPI</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>_Ret_maybenull_</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>HANDLE</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>WINAPI</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 安全设置</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t_In_ SIZE_T dwStackSize<span class=\"token punctuation\">,</span>\t\t\t\t\t\t\t\t<span class=\"token comment\">// 堆栈大小</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t_In_ LPTHREAD_START_ROUTINE lpStartAddress<span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\">// 要执行的线程函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t_In_opt_ __drv_aliasesMem LPVOID lpParameter<span class=\"token punctuation\">,</span>\t\t\t<span class=\"token comment\">// 要执行的线程函数的参数，类型为 LPVOID</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t_In_ DWORD dwCreationFlags<span class=\"token punctuation\">,</span>\t\t\t\t\t\t\t\t<span class=\"token comment\">// 启动选项</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t_Out_opt_ LPDWORD lpThreadId\t\t\t\t\t\t\t<span class=\"token comment\">// 输出线程 ID</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">// 函数返回线程的句柄</span></pre></td></tr></table></figure><h2 id=\"参数说明\"><a class=\"anchor\" href=\"#参数说明\">#</a> 参数说明</h2>\n<p>关于这个函数的说明，百度百科很详细<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DcmVhdGVUaHJlYWQvODIyMjY1Mg==\"> https://baike.baidu.com/item/CreateThread/8222652</span></p>\n<h3 id=\"lpthreadattributes\"><a class=\"anchor\" href=\"#lpthreadattributes\">#</a> lpThreadAttributes</h3>\n<p>lpThreadAttributes：指向 SECURITY_ATTRIBUTES 型态的结构的指针。在 Windows 98 中忽略该参数。在 Windows NT 中，NULL 使用默认安全性，不可以被子线程继承，否则需要定义一个结构体将它的 bInheritHandle 成员初始化为 TRUE<br />\ndwStackSize，设置初始栈的大小，以字节为单位，如果为 0，那么默认将使用与调用该函数的线程相同的栈空间大小。任何情况下，Windows 根据需要动态延长堆栈的大小。</p>\n<h3 id=\"lpstartaddress\"><a class=\"anchor\" href=\"#lpstartaddress\">#</a> lpStartAddress</h3>\n<p>lpStartAddress，指向线程函数的指针，形式：@函数名，函数名称没有限制，<br />\n线程有两种声明方式<br />\n（1）DWORD WINAPI 函数名 (LPVOID lpParam); // 标准格式</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DWORD WINAPI 函数名 <span class=\"token punctuation\">(</span>LPVOID lpParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> 函数名<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>（2）void 函数名 ();<br />\n 使用 void 函数名 () 此种线程声明方式时，lpStartAddress 需要加入 LPTHREAD_START_ROUTINE 转换，如</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> 函数名<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>函数名<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"lpparameter\"><a class=\"anchor\" href=\"#lpparameter\">#</a> lpParameter</h3>\n<p>lpParameter：向线程函数传递的参数，是一个指向结构的指针，不需传递参数时，为 NULL。</p>\n<h3 id=\"dwcreationflags\"><a class=\"anchor\" href=\"#dwcreationflags\">#</a> dwCreationFlags</h3>\n<p>dwCreationFlags ：线程标志，可取值如下<br />\n（1）CREATE_SUSPENDED (0x00000004)：创建一个挂起的线程，<br />\n（2）0：表示创建后立即激活。<br />\n（3）STACK_SIZE_PARAM_IS_A_RESERVATION (0x00010000)：dwStackSize 参数指定初始的保留堆栈 的大小，否则，dwStackSize 指定提交的大小。该标记值在 Windows 2000/NT and Windows Me/98/95 上不支持。</p>\n<h3 id=\"lpthreadid\"><a class=\"anchor\" href=\"#lpthreadid\">#</a> lpThreadId</h3>\n<p>lpThreadId: 保存新线程的 id。</p>\n<h2 id=\"实例代码\"><a class=\"anchor\" href=\"#实例代码\">#</a> 实例代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 强转传递的参数的类型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lpParameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">//cout &lt;&lt; *p &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"子+++++\"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 参数</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tHANDLE hThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">//1. 返回的是线程句柄</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">//2. 第三个参数是要执行的线程函数</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">//3. 第四个参数是要执行的线程函数的参数，类型为 LPVOID</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token comment\">//hThread </span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">//cout &lt;&lt; hThread &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"父------%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"线程控制api\"><a class=\"anchor\" href=\"#线程控制api\">#</a> 线程控制 API</h1>\n<h2 id=\"如何让线程停下来\"><a class=\"anchor\" href=\"#如何让线程停下来\">#</a> 如何让线程停下来</h2>\n<p>让自己停下来:<br />\n <code>Sleep()</code> <br />\n 让别人停下来:<br />\n <code>SuspendThread()</code> <br />\n 线程恢复:<br />\n <code>ResumeThread()</code></p>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lpParameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"+++++%d \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\thThread <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">SuspendThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 挂起线程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">ResumeThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t   <span class=\"token comment\">// 恢复线程</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 防止主线程结束</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"相关函数\"><a class=\"anchor\" href=\"#相关函数\">#</a> 相关函数</h2>\n<p>在多线程下面，有时候我们会希望等待某一线程完成了再继续做其他事情，要实现这个目的，可以使用 Windows API 函数 <code>WaitForSingleObject</code> ，或者 <code>WaitForMultipleObjects</code> 。这两个函数都会等待  <code>Object</code>  被标为有信号 (signaled) 时才返回的。<br />\n那么，什么是信号呢？<br />\n简单来说，Windows 下创建的 <code>Object</code>  都会被赋予一个状态量。如果 <code>Object</code>  被激活了，或者正在使用，那么该 <code>Object</code>  就是无信号，也就是不可用；另一方面，如果 <code>Object</code>  可用了，那么它就恢复有信号了。<br />\n这两个函数的优点是它们在等待的过程中会进入一个非常高效沉睡状态，只占用极少的 CPU 时间片。（这两个函数都是在内核状态下等待内核对象，不切换到用户模式下，因而效率很高）</p>\n<h3 id=\"waitforsingleobject\"><a class=\"anchor\" href=\"#waitforsingleobject\">#</a> WaitForSingleObject</h3>\n<ol>\n<li>格式</li>\n</ol>\n<p><code>DWORD WaitForSingleObject( HANDLE hHandle, DWORDdwMilliseconds);</code></p>\n<p>有两个参数，分别是 <code>THandle</code>  和 <code>Timeout</code>  (毫秒单位)。</p>\n<p>如果想要等待一条线程，那么你需要指定线程的 <code>Handle</code> ，以及相应的 <code>Timeout</code>  时间。当然，如果你想无限等待下去， <code>Timeout</code>  参数可以指定系统常量 <code>INFINITE</code> 。</p>\n<ol start=\"2\">\n<li>使用对象</li>\n</ol>\n<p>它可以等待如下几种类型的对象：</p>\n<p><code>Event</code> ， <code>Mutex</code> ， <code>Semaphore</code> ， <code>Process</code> ， <code>Thread</code></p>\n<ol start=\"3\">\n<li>返回类型</li>\n</ol>\n<p>有三种返回类型：</p>\n<p><code>WAIT_OBJECT_0</code> , 表示等待的对象有信号（对线程来说，表示执行结束）；</p>\n<p><code>WAIT_TIMEOUT</code> , 表示等待指定时间内，对象一直没有信号（线程没执行完）；</p>\n<p><code>WAIT_ABANDONED</code>  表示对象有信号，但还是不能执行  一般是因为未获取到锁或其他原因</p>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span> LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\thThread<span class=\"token operator\">=</span><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>FunProc<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tDWORD dwRet<span class=\"token operator\">=</span><span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dwRet<span class=\"token operator\">==</span>WAIT_OBJECT_0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建的线程执行结束\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dwRet<span class=\"token operator\">==</span>WAIT_TIMEOUT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"等待超时\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dwRet<span class=\"token operator\">==</span>WAIT_ABANDONED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Abandoned\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span> LPVOID lpParameter <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d  \"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"waitformultipleobjecct\"><a class=\"anchor\" href=\"#waitformultipleobjecct\">#</a> WaitForMultipleObjecct</h3>\n<p>相对来说， <code>WaitForMultipleObjects</code>  要复杂点点</p>\n<p>格式为：</p>\n<p><code>DWORD WaitForMultipleObjects(DWORD nCount, CONST HANDLE *lpHandles, BOOL bWaitAll, DWORD dwMilliseconds);</code></p>\n<p>四个参数分别是：</p>\n<ol>\n<li><code>nCount</code> ，DWORD 类型，用于指定句柄数组的数量</li>\n<li><code>lphObjects</code> ，Pointer 类型，用于指定句柄数组的内存地址</li>\n<li><code>bWaitAll</code> ，Bool 类型，  <code>TRUE</code>  表示函数等待所有指定句柄的 <code>Object</code>  有信号为止， <code>FALSE</code>  当有其中一个信号量有效时就向下执行</li>\n<li><code>dwTimeout</code> ，DWORD 类型，用于指定等待的 Timeout 时间，单位毫秒，可以是 <code>INFINITE</code></li>\n</ol>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">WaitForMultipleObjects</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> hThread<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 线程执行结束后打印</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"End of thread execution!!!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**************%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"terminatethread\"><a class=\"anchor\" href=\"#terminatethread\">#</a> TerminateThread</h3>\n<p>TerminateThread 在线程外终止一个线程，用于强制终止线程。</p>\n<h4 id=\"声明\"><a class=\"anchor\" href=\"#声明\">#</a> 声明</h4>\n<p><code>BOOLTerminateThread( HANDLEhThread,DWORDdwExitCode);</code></p>\n<h4 id=\"参数详解\"><a class=\"anchor\" href=\"#参数详解\">#</a> 参数详解</h4>\n<p><code>HANDLE hThread</code> ：被终止的线程的句柄，为 <code>CWinThread</code>  指针。<br />\n <code>DWORD dwExitCode</code> ：退出码。</p>\n<h4 id=\"返回值\"><a class=\"anchor\" href=\"#返回值\">#</a> 返回值</h4>\n<p>函数执行成功则返回非零值，执行失败返回 0。调用 GetLastError 获得返回的值。</p>\n<hr />\n<p><span class=\"label danger\">💔注意</span><br />\n TerminateThread 强烈不建议使用，因为这个函数的执行是异步的，<br />\n你无法保证调用之后会立即退出，同时线程的堆栈均不会被销毁，<br />\n导致内存泄露。如果调用了这个函数，请确保使用 WaitForSingleObject 来等待线程对象的结束。</p>\n<h3 id=\"getexitcodethread\"><a class=\"anchor\" href=\"#getexitcodethread\">#</a> GetExitCodeThread</h3>\n<p>GetExitCodeThread () 将传回线程函数的返回值。然而，GetExitCodeThread () 的一个糟糕行为是，当线程还在进行，尚未有所谓结束代码时，它会传回 TRUE 表示成功。如果这样，IpExitCode 指向的内存区域中应该放的是 STILL-ACTIVE, 你必须小心这种行为，也就是说你不可能从其返回值中知道 “到底是线程还在运行呢，还是它已结束，但返回值为 STILL_ACTIVE”。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL   <span class=\"token function\">GetExitCodeThread</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HANDLE    hThread<span class=\"token punctuation\">,</span>                 <span class=\"token comment\">//in, 线程 handle, 也就是 CreateThread () 的返回值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LPDWORD   lpExitCode               <span class=\"token comment\">//out, 存储线程结束代码，也就是线程的返回值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>说明：此函数调用成功返回 <code>TRUE</code> , 失败返回 <code>FALSE</code> , 只表示这个函数是否调用成功而己，不能根据返回值来判断一个线程是否结束，而要根据 <code>lpExitCode</code>  的值来确定。</p>\n<p><code>lpExitCode</code>  值为 <code>STILL_ACTIVE</code>  表示线程正在运行，若线程己经结束，则 <code>lpExitCode</code>  中存储指定线程的返回值.</p>\n<hr />\n<p><span class=\"label info\">示例</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tDWORD  dwResult<span class=\"token punctuation\">,</span> dwResult1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">WaitForMultipleObjects</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> hThread<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">GetExitCodeThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">GetExitCodeThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwResult1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 线程执行结束后打印</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"End of thread execution!!!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">// 打印返回值</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Thread return: \"</span><span class=\"token operator\">&lt;&lt;</span> dwResult <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Thread1 return: \"</span> <span class=\"token operator\">&lt;&lt;</span> dwResult1 <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**************%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"context-结构体\"><a class=\"anchor\" href=\"#context-结构体\">#</a> CONTEXT 结构体</h1>\n<p>当线程进行切换的时候，上一个未执行完毕的线程的状态会保存在 CONTEXT 结构体中。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_CONTEXT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD           ContextFlags    <span class=\"token comment\">// -|               +00h</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    DWORD           Dr0             <span class=\"token comment\">//  |               +04h</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD           Dr1             <span class=\"token comment\">//  |               +08h</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    DWORD           Dr2             <span class=\"token comment\">//  > 调试寄存器     +0Ch</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    DWORD           Dr3             <span class=\"token comment\">//  |               +10h</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    DWORD           Dr6             <span class=\"token comment\">//  |               +14h</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    DWORD           Dr7             <span class=\"token comment\">// -|               +18h</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    FLOATING_SAVE_AREA FloatSave<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 浮点寄存器区      +1Ch~~~88h</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    DWORD           SegGs           <span class=\"token comment\">//-|                +8Ch</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    DWORD           SegFs           <span class=\"token comment\">// |\\ 段寄存器       +90h</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    DWORD           SegEs           <span class=\"token comment\">// |/               +94h</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    DWORD           SegDs           <span class=\"token comment\">//-|                +98h</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    DWORD           Edi             <span class=\"token comment\">//________          +9Ch</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    DWORD           Esi             <span class=\"token comment\">// |  通用          +A0h</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    DWORD           Ebx             <span class=\"token comment\">// |   寄           +A4h</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    DWORD           Edx             <span class=\"token comment\">// |   存           +A8h</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    DWORD           Ecx             <span class=\"token comment\">// |   器           +ACh</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    DWORD           Eax             <span class=\"token comment\">//_|___组_          +B0h</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    DWORD           Ebp             <span class=\"token comment\">//++++++            +B4h</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    DWORD           Eip             <span class=\"token comment\">// | 控制            +B8h</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    DWORD           SegCs           <span class=\"token comment\">// | 寄存            +BCh</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    DWORD           EFlag           <span class=\"token comment\">// | 器组            +C0h</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    DWORD           Esp             <span class=\"token comment\">// |                +C4h</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    DWORD           SegSs           <span class=\"token comment\">//++++++            +C8h</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    BYTE    ExtendedRegisters<span class=\"token punctuation\">[</span>MAXIMUM_SUPPORTED_EXTENSION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CONTEXT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">typedef</span>     CONTEXT     <span class=\"token operator\">*</span>PCONTEXT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>     <span class=\"token macro-name\">MAXIMUM_SUPPORTED_EXTENSION</span>     <span class=\"token expression\"><span class=\"token number\">512</span></span></span></pre></td></tr></table></figure><h2 id=\"获取和设置线程上下文\"><a class=\"anchor\" href=\"#获取和设置线程上下文\">#</a> 获取和设置线程上下文</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>BOOL <span class=\"token function\">GetThreadContext</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">,</span> \t\t<span class=\"token comment\">// handle to thread with context</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPCONTEXT IpContext \t<span class=\"token comment\">// context structure</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 设置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>BOOL <span class=\"token function\">SetThreadContext</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">,</span>\t     \t<span class=\"token comment\">// handle to thread</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tCONST CONTEXT <span class=\"token operator\">*</span>lpContext    <span class=\"token comment\">//context structure</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 声明函数  创建线程</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHANDLE hThread<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tCONTEXT context<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\thThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FunProc1<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">SuspendThread</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 需要哪个值赋给哪个值</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tcontext<span class=\"token punctuation\">.</span>ContextFlags <span class=\"token operator\">=</span> CONTEXT_INTEGER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">GetThreadContext</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EAX:%#X\\nECX:%#X\\n\"</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>Eax<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>Ecx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**************%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>DWORD WINAPI <span class=\"token function\">FunProc1</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------%d  \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9iYWkxNTkzL2FydGljbGUvZGV0YWlscy82NjcyMTkz\">https://blog.csdn.net/xiaobai1593/article/details/6672193</span></p>\n",
            "tags": [
                "创建线程",
                "线程控制",
                "线程相关API",
                "线程上下文",
                "CONTEXT结构体"
            ]
        }
    ]
}