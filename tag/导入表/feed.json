{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"导入表\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/WindowsPE/%E5%AF%BC%E5%85%A5%E8%A1%A8/",
            "url": "https://or0kit.github.io/Bin/WindowsPE/%E5%AF%BC%E5%85%A5%E8%A1%A8/",
            "title": "导入表",
            "date_published": "2021-05-07T12:23:15.000Z",
            "content_html": "<h1 id=\"定位导入表流程\"><a class=\"anchor\" href=\"#定位导入表流程\">#</a> 定位导入表流程</h1>\n<ol>\n<li>找到扩展 PE 头的最后一个成员 DataDirectory</li>\n<li>获取 DataDirectory [1]</li>\n<li>通过 DataDirectory [1].VirtualAddress 得到导入表的 RVA</li>\n<li>将导出表的 RVA 转换为 FOA，在文件中定位到导入表</li>\n</ol>\n<h1 id=\"导入表的个数\"><a class=\"anchor\" href=\"#导入表的个数\">#</a> 导入表的个数</h1>\n<p>与导出表不同，导入表通常要包含多个模块，而不像导出表只需要提供本 PE 文件需要提供的导出函数即可</p>\n<p>因此，导出表只有一个，但<strong>导入表则可能有多个</strong></p>\n<p>当程序 <strong>运行时</strong> ，需要依赖几个模块，就对应有几张导入表。</p>\n<h1 id=\"导入表的结构\"><a class=\"anchor\" href=\"#导入表的结构\">#</a> 导入表的结构</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_IMPORT_DESCRIPTOR</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        DWORD   Characteristics<span class=\"token punctuation\">;</span>           \t\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        DWORD   OriginalFirstThunk<span class=\"token punctuation\">;</span>         \t\t\t\t\t\t<span class=\"token comment\">//RVA 指向 IMAGE_THUNK_DATA 结构数组</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    DWORD   TimeDateStamp<span class=\"token punctuation\">;</span>               \t\t\t\t\t\t<span class=\"token comment\">// 时间戳</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    DWORD   ForwarderChain<span class=\"token punctuation\">;</span>              \t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    DWORD   Name<span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\">//RVA, 指向 dll 名字，该名字已 0 结尾</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    DWORD   FirstThunk<span class=\"token punctuation\">;</span>                 \t\t\t\t\t\t<span class=\"token comment\">//RVA, 指向 IMAGE_THUNK_DATA 结构数组</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">typedef</span> IMAGE_IMPORT_DESCRIPTOR UNALIGNED <span class=\"token operator\">*</span>PIMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>Characteristics</code> ：如果这个表是数组的最后一个则为 0，否则  <code>OriginalFirstThunk</code>  保存一个入口点地址，指向一个  <code>IMAGE_THUNK_DATA</code>  数组。</p>\n<h2 id=\"结构体分析\"><a class=\"anchor\" href=\"#结构体分析\">#</a> 结构体分析</h2>\n<table>\n<thead>\n<tr>\n<th>成员</th>\n<th>数据宽度</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Characteristics</td>\n<td>DWORD (4 字节)</td>\n<td>标志 为 0 表示结束 没有导入描述符了</td>\n</tr>\n<tr>\n<td>OriginalFirstThunk</td>\n<td>DWORD (4 字节)</td>\n<td>RVA 指向 IMAGE_THUNK_DATA 结构数组 (桥 1)</td>\n</tr>\n<tr>\n<td>TimeDateStamp</td>\n<td>DWORD (4 字节)</td>\n<td>时间戳</td>\n</tr>\n<tr>\n<td>ForwarderChain</td>\n<td>DWORD (4 字节)</td>\n<td>链表的前一个结构</td>\n</tr>\n<tr>\n<td>Name</td>\n<td>DWORD (4 字节)</td>\n<td>RVA，指向 DLL 名字，该名字以 ''\\0'' 结尾</td>\n</tr>\n<tr>\n<td>FirstThunk</td>\n<td>DWORD (4 字节)</td>\n<td>RVA 指向 IMAGE_THUNK_DATA 结构数组 (桥 2)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"characteristics\"><a class=\"anchor\" href=\"#characteristics\">#</a> Characteristics</h3>\n<p>标志 为 0 表示结束 没有导入描述符了</p>\n<h3 id=\"originalfirstthunk\"><a class=\"anchor\" href=\"#originalfirstthunk\">#</a> OriginalFirstThunk</h3>\n<h4 id=\"image_thunk_data结构\"><a class=\"anchor\" href=\"#image_thunk_data结构\">#</a> IMAGE_THUNK_DATA 结构</h4>\n<p>在介绍  <code>OriginalFirstThunk</code>  之前，要先了解一下  <code>OriginalFirstThunk</code>  和  <code>FirstThunk</code>  所指向的结构数组</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_WIN64</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    …</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">typedef</span> IMAGE_THUNK_DATA64              IMAGE_THUNK_DATA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">typedef</span> PIMAGE_THUNK_DATA64             PIMAGE_THUNK_DATA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    …</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    …</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">typedef</span> IMAGE_THUNK_DATA32              IMAGE_THUNK_DATA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">typedef</span> PIMAGE_THUNK_DATA32             PIMAGE_THUNK_DATA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    …</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_THUNK_DATA64</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ULONGLONG ForwarderString<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// PBYTE </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        ULONGLONG Function<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// PDWORD</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ULONGLONG Ordinal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ULONGLONG AddressOfData<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// PIMAGE_IMPORT_BY_NAME</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> u1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_THUNK_DATA64<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">typedef</span> IMAGE_THUNK_DATA64 <span class=\"token operator\">*</span> PIMAGE_THUNK_DATA64<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_THUNK_DATA32</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        DWORD ForwarderString<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// PBYTE </span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        DWORD Function<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// PDWORD</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        DWORD Ordinal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        DWORD AddressOfData<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// PIMAGE_IMPORT_BY_NAME</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> u1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_THUNK_DATA32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">typedef</span> IMAGE_THUNK_DATA32 <span class=\"token operator\">*</span> PIMAGE_THUNK_DATA32<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>IMAGE_THUNK_DATA</code>  是一个 4 字节的数据，如果最高位是 1，那么低 31 位就是函数的导出序号；<br />\n如果最高位是 0，那么它的值是一个 RVA，指向一个  <code>IMAGE_IMPORT_BY_NAME</code>  结构。</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>指向的数组中每一项为一个结构，此结构名称是  <code>IMAGE_THUNK_DATA</code></p>\n<p><strong>数组最后以一个内容全为 0 的 IMAGE_THUNK_DATA 作为结束</strong></p>\n<p><code>IMAGE_THUNK_DATA</code>  实际上只是一个  <code>DWORD</code> ，但在不同的时刻却拥有不同的解释</p>\n<p>IMAGE_THUNK_DATA 有两种解释：</p>\n<ul>\n<li>DWORD 最高位为 0，那么该数值是一个 RVA，指向_IMAGE_IMPORT_BY_NAME 结构，表明函数是以<strong>字符串类型的函数名导入的</strong></li>\n<li>DWORD 最高位为 1，那么该数值的低 31 位就是函数的<strong>导出函数的序号</strong></li>\n</ul>\n<p>_IMAGE_IMPORT_BY_NAME 结构：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_IMPORT_BY_NAME</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    WORD    Hint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    BYTE    Name<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_IMPORT_BY_NAME<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PIMAGE_IMPORT_BY_NAME<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中低地址的  <code>Hint</code>  是导出序号，然而这个值可能并不准确，有些编译器会把它设置成 0，我们只需要关注  <code>Name</code> ，这个是一个以长度不定，以  <code>\\0</code>  结尾字符串，表示函数名。</p>\n<hr />\n<blockquote>\n<p>这里不难发现，IMAGE_THUNK_DATA 最终提供的数据也只有 2 个：</p>\n</blockquote>\n<ul>\n<li>DWORD 最高位为 0 时：需要导入函数的名称（Hint 不一定准确，所以不使用）</li>\n<li>DWORD 最高位为 1 时：需要导入的函数在导出表中的序号</li>\n</ul>\n<p>正好对应了在<strong>导出表</strong>中获得导出函数所需的两种方法：</p>\n<ol>\n<li>根据函数名称获取导出函数地址</li>\n<li>根据函数序号获取导出函数地址</li>\n</ol>\n<h3 id=\"originalfirstthunk-2\"><a class=\"anchor\" href=\"#originalfirstthunk-2\">#</a> OriginalFirstThunk</h3>\n<p>因为它是指向另外数据结构的通路，因此简称为桥 1。该字段指向一个包含了一系列结构的数组：IMAGE_THUNK_DATA</p>\n<p>桥 1 所指向的地址列表被定义为： <strong>INT</strong> （Import Name Table） 导入名称表</p>\n<hr />\n<h3 id=\"timedatestamp\"><a class=\"anchor\" href=\"#timedatestamp\">#</a> TimeDateStamp</h3>\n<p>时间戳，一般不用，大多情况下都为 0。如果该导入表项被绑定，那么绑定后的这个时间戳就被设置为对应 DLL 文件的时间戳。操作系统在加载时，可以通过这个时间戳来判断绑定的信息是否过时</p>\n<hr />\n<h3 id=\"forwarderchain\"><a class=\"anchor\" href=\"#forwarderchain\">#</a> ForwarderChain</h3>\n<p>链表的前一个结构</p>\n<hr />\n<h3 id=\"name\"><a class=\"anchor\" href=\"#name\">#</a> Name</h3>\n<p>这里的 Name 是一个 RVA，它指向该结构对应的 DLL 文件的名称，而这个名称是以 &quot;\\0&quot; 结尾的 ANSI 字符串</p>\n<p>ANSI 编码是一种对 ASCII 码的拓展</p>\n<hr />\n<h3 id=\"firstthunk\"><a class=\"anchor\" href=\"#firstthunk\">#</a> FirstThunk</h3>\n<p>与 OriginalFirstThunk 相同，它指向的链表定义了针对 Name 这个动态链接库引入的所有导入函数，简称桥 2</p>\n<p>桥 2 所指向的地址列表被定义为： <strong>IAT</strong> （Import Adress Table） 导入地址表</p>\n<h2 id=\"导入表的双桥结构\"><a class=\"anchor\" href=\"#导入表的双桥结构\">#</a> 导入表的双桥结构</h2>\n<p>桥 1 和桥 2 最终的目的地是一致的，都指向了引入函数的 &quot;编号 — 名称&quot;（Hint/Name）描述部分</p>\n<p>桥 1 到目的地的过程中，经过了：INT（Import Name Table）导入名称表</p>\n<p>而桥 2 到目的地的过程中，经过了：IAT (Import Address Table) 导入地址表</p>\n<h3 id=\"pe文件加载前后对比\"><a class=\"anchor\" href=\"#pe文件加载前后对比\">#</a> PE 文件加载前后对比</h3>\n<p><strong>PE 文件加载前</strong></p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p><strong>PE 文件加载后</strong></p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<blockquote>\n<p>滴水课件中的图解</p>\n</blockquote>\n<p><strong>PE 文件加载前</strong></p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p><strong>PE 文件加载后</strong></p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>结论：</p>\n<ul>\n<li>在 PE 文件加载前：桥 1 指向的 INT 和桥 2 指向的 IAT 的数据值是<strong>相同</strong>的，但是其<strong>存储位置是不同的</strong></li>\n<li>在 PE 文件加载后：桥 1 指向的 INT <strong>不变</strong> ，但桥 2 指向的 IAT 的数据值<strong>变为了函数相应的 RVA 地址</strong></li>\n</ul>\n<p>PS：函数相应的 RVA 地址是根据原本 IAT 中的函数名称去一一寻找其他模块的导出表获取的。</p>\n<p>英语单词：<br />\n <code>Thunk 英 /θʌŋk/ [计算机科学技术] 形实转换程序、形实替换程序、形实转换程序、替换程式</code></p>\n<h2 id=\"iat-表\"><a class=\"anchor\" href=\"#iat-表\">#</a> IAT 表</h2>\n<p>PE 文件运行之前在文件中的时候，IAT 表和 INT 表一样，里面存储的要么是函数名，要么是导出序号。加载的时候操作系统会把 IAT 表里的值修改成函数真正在 DLL 中的地址，具体步骤是：操作系统首先将 exe 和所有 dll 加载到 4GB 虚拟内存中，然后遍历导入表，根据 DLL 名字调用 LoadLibrary 获取模块句柄 HMODULE，然后调用 GetProcAddress 获取函数地址，然后将函数地址写入到 IAT 表里。</p>\n<h1 id=\"代码解析导入表\"><a class=\"anchor\" href=\"#代码解析导入表\">#</a> 代码解析导入表</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PrintImportTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    PIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//DOS 头 指针</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    PIMAGE_NT_HEADERS32 pNtHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NT 头 指针</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    PIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 文件头 指针</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    PIMAGE_OPTIONAL_HEADER pOptionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 可选头 指针</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    PIMAGE_DATA_DIRECTORY pDirectory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 数据目录 指针</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    PIMAGE_IMPORT_DESCRIPTOR pImportDesctory <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 导出表 指针</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">size_t</span> MoudleNum <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 导入表中的模块数目</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    PIMAGE_THUNK_DATA pImageThunkFoa <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                      pImageThunkRva <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                      pIAT           <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 指向 IMAGE_THUNK_DATA</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    PIMAGE_IMPORT_BY_NAME pIBN <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 按名字导出</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 定位导入表的位置</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    pNtHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNtHeader <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>IMAGE_SIZEOF_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    pDirectory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DATA_DIRECTORY<span class=\"token punctuation\">)</span>pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    pImportDesctory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_IMPORT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 计算导出模块数目。减一是不算上最后一个全为 0 的导入表</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    MoudleNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_IMPORT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Size <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_IMPORT_DESCRIPTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"导入模块数目：%d\\r\\n\"</span><span class=\"token punctuation\">,</span> MoudleNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// 解析导出表 --INT 表</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">size_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> MoudleNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">//printf (\"查看标志 (Characteristics) 是否有值：%#010X\\r\\n\",(pImportDesctory + i)->Characteristics);</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\\n&lt;&lt;----------模块名字(Name)：%s\\---------->>\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Name<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        pImageThunkRva <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_THUNK_DATA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>OriginalFirstThunk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(OriginalFirstThunk)(RVA)的值:%#010X\\r\\n\"</span><span class=\"token punctuation\">,</span> pImageThunkRva<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"时间戳(TimeDateStamp):%#010X\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>TimeDateStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上一个链表(ForwarderChain):%#010X\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>ForwarderChain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(FirstThunk)(RVA):%#010X\\r\\n\\n\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>FirstThunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        pImageThunkFoa <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_THUNK_DATA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>OriginalFirstThunk<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;&lt;----------解析导入模块[%s]中的INT表---------->>\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Name<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pImageThunkFoa<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token comment\">// IMAGE_THUNK_DATA32 是一个 4 字节数据</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token comment\">// 如果最高位是 1，那么除去最高位就是导出序号</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">// 如果最高位是 0，那么这个值是 RVA 指向 IMAGE_IMPORT_BY_NAME</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pImageThunkFoa<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;&lt;-按序号导入->> Ordinal:[%#06X]\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pImageThunkFoa<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x7FFFFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                pIBN <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_IMPORT_BY_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pImageThunkFoa<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;&lt;-按名字导入->>Hint:[%#06X] Name:[%s]\\n\"</span><span class=\"token punctuation\">,</span> pIBN<span class=\"token operator\">-></span>Hint<span class=\"token punctuation\">,</span> pIBN<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            pImageThunkFoa<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        pIAT <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_THUNK_DATA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>FirstThunk<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;&lt;----------解析导入模块[%s]中的IAT表---------->>\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pImportDesctory <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Name<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pIAT<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token comment\">// IMAGE_THUNK_DATA32 是一个 4 字节数据</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">// 如果最高位是 1，那么除去最高位就是导出序号</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token comment\">// 如果最高位是 0，那么这个值是 RVA 指向 IMAGE_IMPORT_BY_NAME</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pIAT<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x80000000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;&lt;-按序号导入->> Ordinal:[%#06X]\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pIAT<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x7FFFFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                pIBN <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_IMPORT_BY_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pIAT<span class=\"token punctuation\">,</span> pBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;&lt;-按名字导入->>Hint:[%#06X] Name:[%s]\\n\"</span><span class=\"token punctuation\">,</span> pIBN<span class=\"token operator\">-></span>Hint<span class=\"token punctuation\">,</span> pIBN<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            pIAT<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>此函数仅解析了 INT 表，IAT 表暂时没有解析，不过都一样的，改一下就好了。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuNTJwb2ppZS5jbi90aHJlYWQtMTQxMzIyMC0xLTEuaHRtbA==\">https://www.52pojie.cn/thread-1413220-1-1.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA2MjY5NzU3\">https://blog.csdn.net/Kwansy/article/details/106269757</span></p>\n",
            "tags": [
                "导入表"
            ]
        }
    ]
}