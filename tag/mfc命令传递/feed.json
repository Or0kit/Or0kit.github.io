{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"mfc命令传递\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-05%E5%91%BD%E4%BB%A4%E4%BC%A0%E9%80%92/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-05%E5%91%BD%E4%BB%A4%E4%BC%A0%E9%80%92/",
            "title": "MFC六大核心机制-05命令传递",
            "date_published": "2022-06-03T14:24:47.000Z",
            "content_html": "<h1 id=\"什么是命令传递\"><a class=\"anchor\" href=\"#什么是命令传递\">#</a> 什么是命令传递</h1>\n<p>消息会按照规定的路线，游走于各个对象之间，直到找到它的消息处理函数；如果找不到，则最终把它交给 <code>::DefWindowPro</code>  函数去处理。</p>\n<h2 id=\"本节需要掌握的知识点\"><a class=\"anchor\" href=\"#本节需要掌握的知识点\">#</a> 本节需要掌握的知识点</h2>\n<p>1、本节必须掌握的知识点</p>\n<p><strong>通过单步调试，熟悉窗口过程处理函数在 MFC 的实现和命令传递的方式</strong></p>\n<p>2、需要简单了解的内容</p>\n<p><code>MessageMapFunctions</code></p>\n<h1 id=\"找到mfc的窗口的消息处理函数\"><a class=\"anchor\" href=\"#找到mfc的窗口的消息处理函数\">#</a> 找到 MFC 的窗口的消息处理函数</h1>\n<h2 id=\"create-函数\"><a class=\"anchor\" href=\"#create-函数\">#</a> Create 函数</h2>\n<p>通过  <code>Create</code>  函数来看窗口创建流程</p>\n<p>之前我们了解过  <code>Create</code>  函数，其第一个参数（类名）为 NULL，则以 MFC 内建的窗口类产生一个标准的外框窗口，既然它有窗口类那肯定就有窗口过程处理函数，我们需要从这个函数入手下断点去跟进。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tWS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_THICKFRAME <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_VSCROLL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">// 左上角，既起始位置是（400,300），右下角（800,700）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// 700 -300 是高度  800-400 是宽度</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>单步跟进后，进入 <code>CFrameWnd::Create</code> ，  <code>Create</code>  函数是一个虚函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CFrameWnd</span><span class=\"token operator\">::</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>LPCTSTR lpszClassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tLPCTSTR lpszWindowName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tDWORD dwStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> RECT<span class=\"token operator\">&amp;</span> rect<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tCWnd<span class=\"token operator\">*</span> pParentWnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tLPCTSTR lpszMenuName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tDWORD dwExStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tCCreateContext<span class=\"token operator\">*</span> pContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tHMENU hMenu <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpszMenuName <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">// load in a menu that will get destroyed when window gets destroyed</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tHINSTANCE hInst <span class=\"token operator\">=</span> <span class=\"token function\">AfxFindResourceHandle</span><span class=\"token punctuation\">(</span>lpszMenuName<span class=\"token punctuation\">,</span> ATL_RT_MENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>hMenu <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">LoadMenu</span><span class=\"token punctuation\">(</span>hInst<span class=\"token punctuation\">,</span> lpszMenuName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Warning: failed to load menu for CFrameWnd.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token function\">PostNcDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// perhaps delete the C++ object</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tm_strTitle <span class=\"token operator\">=</span> lpszWindowName<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// save title for later</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">CreateEx</span><span class=\"token punctuation\">(</span>dwExStyle<span class=\"token punctuation\">,</span> lpszClassName<span class=\"token punctuation\">,</span> lpszWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\trect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> rect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">-</span> rect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tpParentWnd<span class=\"token operator\">-></span><span class=\"token function\">GetSafeHwnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Warning: failed to create CFrameWnd.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hMenu <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token function\">DestroyMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"createex-函数\"><a class=\"anchor\" href=\"#createex-函数\">#</a> CreateEx 函数</h2>\n<p>而后会进入  <code>CreateEx</code>  函数中：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">CreateEx</span><span class=\"token punctuation\">(</span>DWORD dwExStyle<span class=\"token punctuation\">,</span> LPCTSTR lpszClassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tLPCTSTR lpszWindowName<span class=\"token punctuation\">,</span> DWORD dwStyle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nHeight<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tHWND hWndParent<span class=\"token punctuation\">,</span> HMENU nIDorHMenu<span class=\"token punctuation\">,</span> LPVOID lpParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>lpszClassName <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> <span class=\"token function\">AfxIsValidString</span><span class=\"token punctuation\">(</span>lpszClassName<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">AfxIsValidAtom</span><span class=\"token punctuation\">(</span>lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">ENSURE_ARG</span><span class=\"token punctuation\">(</span>lpszWindowName <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> <span class=\"token function\">AfxIsValidString</span><span class=\"token punctuation\">(</span>lpszWindowName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// allow modification of several common create parameters</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCREATESTRUCT cs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>dwExStyle <span class=\"token operator\">=</span> dwExStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>lpszClass <span class=\"token operator\">=</span> lpszClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>lpszName <span class=\"token operator\">=</span> lpszWindowName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> dwStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> nWidth<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>cy <span class=\"token operator\">=</span> nHeight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>hwndParent <span class=\"token operator\">=</span> hWndParent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>hMenu <span class=\"token operator\">=</span> nIDorHMenu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetInstanceHandle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>lpCreateParams <span class=\"token operator\">=</span> lpParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">PreCreateWindow</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token function\">PostNcDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">AfxHookWindowCreate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tHWND hWnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindowEx</span><span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">.</span>dwExStyle<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>lpszClass<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\tcs<span class=\"token punctuation\">.</span>lpszName<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>cx<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>cy<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\tcs<span class=\"token punctuation\">.</span>hwndParent<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>hMenu<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>hInstance<span class=\"token punctuation\">,</span> cs<span class=\"token punctuation\">.</span>lpCreateParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_DEBUG</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Warning: Window creation failed: GetLastError returns 0x%8.8X\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">AfxUnhookWindowCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token function\">PostNcDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// cleanup if CreateWindowEx fails too soon</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>hWnd <span class=\"token operator\">==</span> m_hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// should have been set in send msg hook</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>跟进  <code>CreateEx</code>  函数，其一开始对一些信息进行了填充，这个信息传递给了  <code>PreCreateWindow</code>  函数。</p>\n<p><code>CREATESTRUCT</code>  结构体的介绍如下，此结构也是分为 A 和 W 版本。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagCREATESTRUCTA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    LPVOID      lpCreateParams<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建参数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HINSTANCE   hInstance<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口模块的句柄</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    HMENU       hMenu<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口使用的菜单句柄</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    HWND        hwndParent<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果该窗口是一个子窗口，则为父窗口的句柄；如果该窗口是自有的，这个成员标识了所有者窗口；如果该窗口不是一个子窗口或自有窗口，这个成员是 NULL。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span>         cy<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的高度，单位是像素。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span>         cx<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的宽度，单位是像素。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span>         y<span class=\"token punctuation\">;</span> <span class=\"token comment\">//y 坐标，如果窗口是一个子窗口，坐标是相对于父窗口的，否则，坐标是相对于屏幕原点的。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span>         x<span class=\"token punctuation\">;</span> <span class=\"token comment\">//x 坐标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    LONG        style<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的样式</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    LPCSTR      lpszName<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的名称</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    LPCSTR      lpszClass<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 窗口的类名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    DWORD       dwExStyle<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 扩展窗口样式</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CREATESTRUCTA<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>LPCREATESTRUCTA<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"precreatewindow-函数\"><a class=\"anchor\" href=\"#precreatewindow-函数\">#</a> PreCreateWindow 函数</h2>\n<p>跟进  <code>PreCreateWindow</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CFrameWnd</span><span class=\"token operator\">::</span><span class=\"token function\">PreCreateWindow</span><span class=\"token punctuation\">(</span>CREATESTRUCT<span class=\"token operator\">&amp;</span> cs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">.</span>lpszClass <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token function\">VERIFY</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxDeferRegisterClass</span><span class=\"token punctuation\">(</span>AFX_WNDFRAMEORVIEW_REG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">//_afxWndFrameOrView 在 AfxDeferRegisterClass 函数中被处理了。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tcs<span class=\"token punctuation\">.</span>lpszClass <span class=\"token operator\">=</span> _afxWndFrameOrView<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// COLOR_WINDOW background</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 窗口风格的扩展</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cs<span class=\"token punctuation\">.</span>style <span class=\"token operator\">&amp;</span> FWS_ADDTOTITLE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tcs<span class=\"token punctuation\">.</span>style <span class=\"token operator\">|=</span> FWS_PREFIXTITLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tcs<span class=\"token punctuation\">.</span>dwExStyle <span class=\"token operator\">|=</span> WS_EX_CLIENTEDGE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们可以看见如果窗口名称为空则帮我去注册一个默认的窗口类。</p>\n<h2 id=\"afxenddeferregisterclass-函数\"><a class=\"anchor\" href=\"#afxenddeferregisterclass-函数\">#</a> AfxEndDeferRegisterClass 函数</h2>\n<p>其使用的是  <code>AfxDeferRegisterClass</code>  ，这是一个宏，其背后就是  <code>AfxEndDeferRegisterClass</code>  这个函数，跟进后就可以看到：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>这里知道了消息处理函数是  <code>DefWindowProc</code></p>\n<h2 id=\"afxhookwindowcreate-函数\"><a class=\"anchor\" href=\"#afxhookwindowcreate-函数\">#</a> AfxHookWindowCreate 函数</h2>\n<p>但通过阅读代码我们发现这个函数不是我们想要知道其是如何处理消息的函数，继续跟进，跟到  <code>CreateEx</code>  函数里面会有一个  <code>AfxHookWindowCreate</code>  函数，通过这个名字我们就知道什么意思了，其就表示在窗口创建之前挂了一个钩子（HOOK），跟进这个函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> AFXAPI <span class=\"token function\">AfxHookWindowCreate</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span> pWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t_AFX_THREAD_STATE<span class=\"token operator\">*</span> pThreadState <span class=\"token operator\">=</span> _afxThreadState<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">==</span> pWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tpThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">SetWindowsHookEx</span><span class=\"token punctuation\">(</span>WH_CBT<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t_AfxCbtFilterHook<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">::</span><span class=\"token function\">GetCurrentThreadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token function\">AfxThrowMemoryException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd<span class=\"token operator\">-></span>m_hWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// only do once</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// hook not already in progress</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tpThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">=</span> pWnd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到其挂钩子的函数是  <code>SetWindowsHookEx</code>  （其第一个参数是  <code>WH_CBT</code>  ，这是一个宏，其就是一个钩子，其表示可以监听窗口激活、产生、释放（关闭）、最小化、最大化或改变；那么在这些事件之前就会调用函数   <code>_AfxCbtFilterHook</code>  ，也就是第二个参数），相当于安装了一个  <code>WH_CBT</code>  类型的钩子函数  <code>_AfxCbtFilterHook</code>  。</p>\n<h2 id=\"_afxcbtfilterhook-函数\"><a class=\"anchor\" href=\"#_afxcbtfilterhook-函数\">#</a> _AfxCbtFilterHook 函数</h2>\n<p>我们查看  <code>_AfxCbtFilterHook</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">_AfxCbtFilterHook</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> code<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t_AFX_THREAD_STATE<span class=\"token operator\">*</span> pThreadState <span class=\"token operator\">=</span> _afxThreadState<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">!=</span> HCBT_CREATEWND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// wait for HCBT_CREATEWND just pass others on...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">CallNextHookEx</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\twParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>lParam <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tLPCREATESTRUCT lpcs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPCBT_CREATEWND<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>lpcs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>lpcs <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tCWnd<span class=\"token operator\">*</span> pWndInit <span class=\"token operator\">=</span> pThreadState<span class=\"token operator\">-></span>m_pWndInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tBOOL bContextIsDLL <span class=\"token operator\">=</span> afxContextIsDLL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pWndInit <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>lpcs<span class=\"token operator\">-></span>style <span class=\"token operator\">&amp;</span> WS_CHILD<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bContextIsDLL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// Note: special check to avoid subclassing the IME window</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_afxDBCS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token comment\">// check for cheap CS_IME style first...</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetClassLong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span>wParam<span class=\"token punctuation\">,</span> GCL_STYLE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> CS_IME<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">goto</span> lCallNextHook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token comment\">// get class name of the window that is being created</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\tLPCTSTR pszClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\tTCHAR szClassName<span class=\"token punctuation\">[</span><span class=\"token function\">_countof</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ime\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">DWORD_PTR</span><span class=\"token punctuation\">(</span>lpcs<span class=\"token operator\">-></span>lpszClass<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\tpszClassName <span class=\"token operator\">=</span> lpcs<span class=\"token operator\">-></span>lpszClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\tszClassName<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>disable<span class=\"token operator\">:</span> <span class=\"token number\">4302</span><span class=\"token punctuation\">)</span> </span><span class=\"token comment\">// 'type cast' : truncation from 'LPCSTR' to 'ATOM'</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t<span class=\"token function\">GlobalGetAtomName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ATOM<span class=\"token punctuation\">)</span>lpcs<span class=\"token operator\">-></span>lpszClass<span class=\"token punctuation\">,</span> szClassName<span class=\"token punctuation\">,</span> <span class=\"token function\">_countof</span><span class=\"token punctuation\">(</span>szClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>pop<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\tpszClassName <span class=\"token operator\">=</span> szClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token comment\">// a little more expensive to test this way, but necessary...</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">::</span><span class=\"token function\">AfxInvariantStrICmp</span><span class=\"token punctuation\">(</span>pszClassName<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">goto</span> lCallNextHook<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>wParam <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// should be non-NULL HWND</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tHWND hWnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span>wParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tWNDPROC oldWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pWndInit <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token function\">AFX_MANAGE_STATE</span><span class=\"token punctuation\">(</span>pWndInit<span class=\"token operator\">-></span>m_pModuleState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token comment\">// the window should not be in the permanent map at this time</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandlePermanent</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token comment\">// connect the HWND to pWndInit...</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\tpWndInit<span class=\"token operator\">-></span><span class=\"token function\">Attach</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token comment\">// allow other subclassing to occur first</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\tpWndInit<span class=\"token operator\">-></span><span class=\"token function\">PreSubclassWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\tWNDPROC <span class=\"token operator\">*</span>pOldWndProc <span class=\"token operator\">=</span> pWndInit<span class=\"token operator\">-></span><span class=\"token function\">GetSuperWndProcAddr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pOldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t<span class=\"token comment\">// subclass the window with standard AfxWndProc</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\tWNDPROC afxWndProc <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetAfxWndProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\toldWndProc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">SetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>afxWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> afxWndProc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t<span class=\"token operator\">*</span>pOldWndProc <span class=\"token operator\">=</span> oldWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\tpThreadState<span class=\"token operator\">-></span>m_pWndInit <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bContextIsDLL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// should never get here</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token keyword\">static</span> ATOM s_atomMenu <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t<span class=\"token keyword\">bool</span> bSubclass <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_atomMenu <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t\tWNDCLASSEX wc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WNDCLASSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\twc<span class=\"token punctuation\">.</span>cbSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WNDCLASSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t\ts_atomMenu <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ATOM<span class=\"token punctuation\">)</span><span class=\"token function\">GetClassInfoEx</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#32768\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token comment\">// Do not subclass menus.</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_atomMenu <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t\tATOM atomWnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ATOM<span class=\"token punctuation\">)</span><span class=\"token operator\">::</span><span class=\"token function\">GetClassLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GCW_ATOM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>atomWnd <span class=\"token operator\">==</span> s_atomMenu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t\t\tbSubclass <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\tTCHAR szClassName<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">::</span><span class=\"token function\">GetClassName</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> szClassName<span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t\tszClassName<span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">_tcscmp</span><span class=\"token punctuation\">(</span>szClassName<span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#32768\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t\t\t\tbSubclass <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bSubclass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// subclass the window with the proc which does gray backgrounds</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t\toldWndProc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">GetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">GetProp</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> _afxOldWndProc<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">SetProp</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> _afxOldWndProc<span class=\"token punctuation\">,</span> oldWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">GetProp</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> _afxOldWndProc<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> oldWndProc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">GlobalAddAtom</span><span class=\"token punctuation\">(</span>_afxOldWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">SetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>_AfxActivationWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>oldWndProc <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>lCallNextHook<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\tLRESULT lResult <span class=\"token operator\">=</span> <span class=\"token function\">CallNextHookEx</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\twParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bContextIsDLL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t<span class=\"token operator\">::</span><span class=\"token function\">UnhookWindowsHookEx</span><span class=\"token punctuation\">(</span>pThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\tpThreadState<span class=\"token operator\">-></span>m_hHookOldCbtFilter <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token keyword\">return</span> lResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>函数中的关键点就是：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// subclass the window with standard AfxWndProc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t\tWNDPROC afxWndProc <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetAfxWndProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\toldWndProc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>WNDPROC<span class=\"token punctuation\">)</span><span class=\"token function\">SetWindowLongPtr</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> GWLP_WNDPROC<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>afxWndProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>把老的消息处理函数替换成了  <code>AfxGetAfxWndProc</code>  函数的返回值。</p>\n<h2 id=\"afxgetafxwndproc-函数\"><a class=\"anchor\" href=\"#afxgetafxwndproc-函数\">#</a> AfxGetAfxWndProc 函数</h2>\n<p>继续跟进  <code>AfxGetAfxWndProc</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// always indirectly accessed via AfxGetAfxWndProc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>WNDPROC AFXAPI <span class=\"token function\">AfxGetAfxWndProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL    </span><span class=\"token comment\">// 如果是动态库的话调用这个</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">AfxGetModuleState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>m_pfnAfxWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span>            <span class=\"token comment\">// 静态库调用这个</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>AfxWndProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>发现其会判断是否定义了_AFXDLL 宏，经查阅发现这是判断是否使用了动态链接库，而我们现在使用的是静态链接库，所以返回的就是   <code>AfxWndProc</code>  这个函数的地址。</p>\n<h2 id=\"afxwndproc-函数\"><a class=\"anchor\" href=\"#afxwndproc-函数\">#</a> AfxWndProc 函数</h2>\n<p>查看  <code>AfxWndProc</code>  函数:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">AfxWndProc</span><span class=\"token punctuation\">(</span>HWND hWnd<span class=\"token punctuation\">,</span> UINT nMsg<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// special message which identifies the window as using AfxWndProc</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nMsg <span class=\"token operator\">==</span> WM_QUERYAFXWNDPROC<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// all other messages route through message map</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tCWnd<span class=\"token operator\">*</span> pWnd <span class=\"token operator\">=</span> <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandlePermanent</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pWnd<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> pWnd<span class=\"token operator\">-></span>m_hWnd <span class=\"token operator\">==</span> hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pWnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> pWnd<span class=\"token operator\">-></span>m_hWnd <span class=\"token operator\">!=</span> hWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">::</span><span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> nMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">AfxCallWndProc</span><span class=\"token punctuation\">(</span>pWnd<span class=\"token punctuation\">,</span> hWnd<span class=\"token punctuation\">,</span> nMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>这样就是 Crate 的完整创建流程，首先它为我们创建了一个窗口类，填充了默认的窗口处理函数、风格、背景等等，然后通过一个  <code>SetWindowsHookEx</code> ，把我们默认的消息处理函数，替换为了  <code>AfxWndProc</code>  函数</p>\n<h1 id=\"标准消息的处理流程\"><a class=\"anchor\" href=\"#标准消息的处理流程\">#</a> 标准消息的处理流程</h1>\n<p>这里以 MFC 的三大类消息中的标准消息为主，去探寻 MFC 的消息处理流程了。</p>\n<h2 id=\"验证消息处理函数\"><a class=\"anchor\" href=\"#验证消息处理函数\">#</a> 验证消息处理函数</h2>\n<p>在消息处理函数  <code>OnLButtonDown</code>  中下断点：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>进入上层调用函数  <code>OnWndMsg</code>  中：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>继续执行，直到进入函数  <code>OnWndMsg</code>  的上层调用函数  <code>WindowProc</code>  中：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>继续执行，直到进入函数  <code>WindowProc</code>  的上层调用函数  <code>AfxCallWndProc</code>  中：</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>继续执行，直到进入函数  <code>AfxCallWndProc</code>  的上层调用函数  <code>AfxWndProc</code>  中：</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>由此可知我们找的消息处理函数是正确的。</p>\n<h2 id=\"分析处理流程\"><a class=\"anchor\" href=\"#分析处理流程\">#</a> 分析处理流程</h2>\n<p>在  <code>AfxCallWndProc</code>  中下条件断点：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>我们可以看见消息是通过  <code>WindowProc</code>  函数的，这个函数是一个虚函数，也就表示我们可以在类中改写这个函数，但是这里我们没有改写其调用的就是  <code>CWnd::WindowProc</code>  。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">virtual</span> LRESULT <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">OnWndMsg</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span> pResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在  <code>WindowProc</code>  中调用了  <code>OnWndMsg</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// OnWndMsg does most of the work, except for DefWindowProc call</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLRESULT lResult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">OnWndMsg</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> lResult<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"onwndmsg-分析\"><a class=\"anchor\" href=\"#onwndmsg-分析\">#</a> OnWndMsg 分析</h3>\n<h4 id=\"判断消息类型\"><a class=\"anchor\" href=\"#判断消息类型\">#</a> 判断消息类型</h4>\n<p>接下来进入  <code>OnWndMsg</code>  查看，发现这个函数超级长，这里先放一小段：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">OnWndMsg</span><span class=\"token punctuation\">(</span>UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span> pResult<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLRESULT lResult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">union</span> MessageMapFunctions mmf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tmmf<span class=\"token punctuation\">.</span>pfn <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tCInternalGlobalLock winMsgLock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// special case for commands</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_COMMAND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OnCommand</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tlResult <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_CREATE <span class=\"token operator\">&amp;&amp;</span> m_pDynamicLayout <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">ASSERT_VALID</span><span class=\"token punctuation\">(</span>m_pDynamicLayout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>m_pDynamicLayout<span class=\"token operator\">-></span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">delete</span> m_pDynamicLayout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tm_pDynamicLayout <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token function\">InitDynamicLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// special case for notifies</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_NOTIFY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\tNMHDR<span class=\"token operator\">*</span> pNMHDR <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pNMHDR<span class=\"token operator\">-></span>hwndFrom <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">OnNotify</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token comment\">// special case for activation</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_ACTIVATE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token function\">_AfxHandleActivate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CWnd</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// special case for set cursor HTERROR</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_SETCURSOR <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token function\">_AfxHandleSetCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">HIWORD</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>   <span class=\"token comment\">// special case for windows that contain windowless ActiveX controls</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>   BOOL bHandled<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>   bHandled <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>m_pCtrlCont <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>m_pCtrlCont<span class=\"token operator\">-></span>m_nWindowlessControls <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">>=</span> WM_MOUSEFIRST<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;=</span> AFX_WM_MOUSELAST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">>=</span> WM_KEYFIRST<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;=</span> WM_IME_KEYLAST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">>=</span> WM_IME_SETCONTEXT<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;=</span> WM_IME_KEYUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t bHandled <span class=\"token operator\">=</span> m_pCtrlCont<span class=\"token operator\">-></span><span class=\"token function\">HandleWindowlessMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHandled<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t  <span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意联合体  <code>MessageMapFunctions</code> ，这是我在 VS2019 中查看的定义：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">union</span> MessageMapFunctions</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tAFX_PMSG pfn<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// generic member function pointer</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_W_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_W_COPYDATASTRUCT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> COPYDATASTRUCT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_HELPINFO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPHELPINFO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">HBRUSH</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_B_D_W_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token function\">HBRUSH</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_B_D_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_u_W_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_W_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPCTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_w_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WPARAM<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_u_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_b_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_h_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">,</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">HCURSOR</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_C_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT_PTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_i_i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_i_i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_w_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WPARAM<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_b_W_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_M_u_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_W_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u_W<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPCTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_i_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_i_i_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> LPTSTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_b_NCCALCSIZEPARAMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> NCCALCSIZE_PARAMS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_v_WINDOWPOS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WINDOWPOS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> HMENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_pr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_u_s_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_MOUSEHWHEEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_W_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u_M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_v_MENUGETOBJECTINFO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>MENUGETOBJECTINFO<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_M_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CMenu<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_LPMDINEXTMENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPMDINEXTMENU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_APPCOMMAND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_RAWINPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> HRAWINPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token function\">UINT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_u_u_l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_MOUSE_XBUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_MOUSE_NCXBUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_INPUTLANGCHANGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_u_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_INPUTDEVICECHANGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token function\">LRESULT</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_l_D_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CDC<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_F_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CFont<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token function\">HANDLE</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_h_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token function\">HANDLE</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_h_b_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_b_v_ii<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token function\">HANDLE</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_h_h_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_v_W_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CWnd<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> BOOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token comment\">// type safe variant for thread messages</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWinThread<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_THREAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WPARAM<span class=\"token punctuation\">,</span> LPARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token comment\">// specific type safe variants for WM_COMMAND and WM_NOTIFY messages</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_v_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_b_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_v_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_b_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_v_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_b_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_v_u_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnNotify_b_u_NMHDR_pl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> NMHDR<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> LRESULT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmdUI_v_C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CCmdUI<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmdUI_v_C_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CCmdUI<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_v_pv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token function\">BOOL</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CCmdTarget<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfnCmd_b_pv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\">//OLD</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token comment\">// specific type safe variants for WM-style messages</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bD)(CDC*);</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bb)(BOOL);</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bWww)(CWnd*, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bHELPINFO)(HELPINFO*);</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token comment\">//\tBOOL    (AFX_MSG_CALL CWnd::*pfn_bWCDS)(CWnd*, COPYDATASTRUCT*);</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\">//\tHBRUSH  (AFX_MSG_CALL CWnd::*pfn_hDWw)(CDC*, CWnd*, UINT);</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\">//\tHBRUSH  (AFX_MSG_CALL CWnd::*pfn_hDw)(CDC*, UINT);</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iwWw)(UINT, CWnd*, UINT);</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iww)(UINT, UINT);</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iWww)(CWnd*, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_is)(LPTSTR);</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">//\tLRESULT (AFX_MSG_CALL CWnd::*pfn_lwl)(WPARAM, LPARAM);</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">//\tLRESULT (AFX_MSG_CALL CWnd::*pfn_lwwM)(UINT, UINT, CMenu*);</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vv)(void);</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vw)(UINT);</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vww)(UINT, UINT);</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vvii)(int, int);</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwww)(UINT, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwii)(UINT, int, int);</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwl)(WPARAM, LPARAM);</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vbWW)(BOOL, CWnd*, CWnd*);</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vD)(CDC*);</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vM)(CMenu*);</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vMwb)(CMenu*, UINT, BOOL);</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vW)(CWnd*);</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vWww)(CWnd*, UINT, UINT);</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vWp)(CWnd*, CPoint);</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vWh)(CWnd*, HANDLE);</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwW)(UINT, CWnd*);</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwWb)(UINT, CWnd*, BOOL);</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwwW)(UINT, UINT, CWnd*);</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vwwx)(UINT, UINT);</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vs)(LPTSTR);</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vOWNER)(int, LPTSTR);   // force return TRUE</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token comment\">//\tint     (AFX_MSG_CALL CWnd::*pfn_iis)(int, LPTSTR);</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token comment\">//\tUINT    (AFX_MSG_CALL CWnd::*pfn_wp)(CPoint);</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token comment\">//\tUINT    (AFX_MSG_CALL CWnd::*pfn_wv)(void);</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vPOS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WINDOWPOS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vCALC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">,</span> NCCALCSIZE_PARAMS<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vwp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t<span class=\"token keyword\">void</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_vwwh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> UINT<span class=\"token punctuation\">,</span> HANDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t<span class=\"token function\">BOOL</span>    <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span>pfn_bwsp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token comment\">//\tvoid    (AFX_MSG_CALL CWnd::*pfn_vws)(UINT, LPCTSTR);</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>前面我们知道 MFC 有三大类消息，这里是判断了消息的类型，不同的类型的消息用不同的处理方法。</p>\n<h4 id=\"获取标准消息\"><a class=\"anchor\" href=\"#获取标准消息\">#</a> 获取标准消息</h4>\n<p>接下来看后面的代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> pMessageMap<span class=\"token punctuation\">;</span> pMessageMap <span class=\"token operator\">=</span> <span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>这里获取了 MFC 的标准消息，也就是我们定义的要处理的消息映射和其对应的消息处理函数。</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>UINT iHash<span class=\"token punctuation\">;</span> iHash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD_PTR<span class=\"token punctuation\">)</span>pMessageMap<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> message<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>iHashMax<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span>CRIT_WINMSGCACHE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tAFX_MSG_CACHE<span class=\"token operator\">*</span> pMsgCache<span class=\"token punctuation\">;</span> pMsgCache <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>_afxMsgCache<span class=\"token punctuation\">[</span>iHash<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY<span class=\"token operator\">*</span> lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> pMsgCache<span class=\"token operator\">-></span>nMsg <span class=\"token operator\">&amp;&amp;</span> pMessageMap <span class=\"token operator\">==</span> pMsgCache<span class=\"token operator\">-></span>pMessageMap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// cache hit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tlpEntry <span class=\"token operator\">=</span> pMsgCache<span class=\"token operator\">-></span>lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpEntry <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">// cache hit, and it needs to be handled</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LDispatch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LDispatchRegistered<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// not in cache, look for it</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tpMsgCache<span class=\"token operator\">-></span>nMsg <span class=\"token operator\">=</span> message<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpMsgCache<span class=\"token operator\">-></span>pMessageMap <span class=\"token operator\">=</span> pMessageMap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">/* pMessageMap already init'ed */</span><span class=\"token punctuation\">;</span> pMessageMap<span class=\"token operator\">-></span>pfnGetBaseMap <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tpMessageMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pMessageMap<span class=\"token operator\">-></span>pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token comment\">// Note: catch not so common but fatal mistake!!</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token comment\">//      BEGIN_MESSAGE_MAP(CMyWnd, CMyWnd)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>pMessageMap <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pMessageMap<span class=\"token operator\">-></span>pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// constant window message</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lpEntry <span class=\"token operator\">=</span> <span class=\"token function\">AfxFindMessageEntry</span><span class=\"token punctuation\">(</span>pMessageMap<span class=\"token operator\">-></span>lpEntries<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t\tmessage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t\tpMsgCache<span class=\"token operator\">-></span>lpEntry <span class=\"token operator\">=</span> lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">goto</span> LDispatch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// registered windows message</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\tlpEntry <span class=\"token operator\">=</span> pMessageMap<span class=\"token operator\">-></span>lpEntries<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lpEntry <span class=\"token operator\">=</span> <span class=\"token function\">AfxFindMessageEntry</span><span class=\"token punctuation\">(</span>lpEntry<span class=\"token punctuation\">,</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\t\tUINT<span class=\"token operator\">*</span> pnID <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>lpEntry<span class=\"token operator\">-></span>nSig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pnID <span class=\"token operator\">>=</span> <span class=\"token number\">0xC000</span> <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>pnID <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">// must be successfully registered</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pnID <span class=\"token operator\">==</span> message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t\t\t\tpMsgCache<span class=\"token operator\">-></span>lpEntry <span class=\"token operator\">=</span> lpEntry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t\t\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> LDispatchRegistered<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t\t\tlpEntry<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// keep looking past this one</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\tpMsgCache<span class=\"token operator\">-></span>lpEntry <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\twinMsgLock<span class=\"token punctuation\">.</span><span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这一段代码就是为了找我们  <code>AFX_MSGMAP</code>  结构中的  <code>AFX_MSGMAP_ENTRY</code>  直到其有值，然后跳转到  <code>LDispatch</code>  或  <code>LDispatchRegistered</code>  处理。</p>\n<h4 id=\"调用消息处理函数\"><a class=\"anchor\" href=\"#调用消息处理函数\">#</a> 调用消息处理函数</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xC000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tmmf<span class=\"token punctuation\">.</span>pfn <span class=\"token operator\">=</span> lpEntry<span class=\"token operator\">-></span>pfn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>lpEntry<span class=\"token operator\">-></span>nSig<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">case</span> AfxSig_l_p<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tCPoint <span class=\"token function\">point</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tlResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_l_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">case</span> AfxSig_b_D_v<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_b_D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CDC</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">reinterpret_cast</span><span class=\"token operator\">&lt;</span>HDC<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">case</span> AfxSig_l_D_u<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tlResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_l_D_u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CDC</span><span class=\"token operator\">::</span><span class=\"token function\">FromHandle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">reinterpret_cast</span><span class=\"token operator\">&lt;</span>HDC<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  …………</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  …………</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  …………</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  …………</pre></td></tr></table></figure><p>确定了调用什么类型的函数指针，也就是确定了消息处理函数所对应的返回值和参数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> AfxSig_v_u_p<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\tCPoint <span class=\"token function\">point</span><span class=\"token punctuation\">(</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span><span class=\"token operator\">*</span>mmf<span class=\"token punctuation\">.</span>pfn_v_u_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>UINT<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>前面已经给共用体类型的  <code>mmf</code>  变量赋值了，是  <code>OnLButtonDown</code>  函数的地址，然后调用  <code>mmf</code>  中和  <code>OnLButtonDown</code>  函数返回值和参数一样的函数指针，调用了  <code>OnLButtonDown</code>  函数。</p>\n<h2 id=\"总结-2\"><a class=\"anchor\" href=\"#总结-2\">#</a> 总结</h2>\n<p>学习这种设计思想。</p>\n<p>至此我们了解了 MFC 的消息映射机制的原理，其利用了结构体  <code>AFX_MSGM</code>   和结构体  <code>AFX_MSGMAP_ENTRY</code>  与共同体  <code>MessageMapFunctions</code>  ，来处理许许多多不同的消息处理函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP_ENTRY</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    UINT nMessage<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//windows message # Windows 消息类型 ID</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    UINT nCode<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//control code or WM_NOTIFY code #对于窗口消息该值为 0，处理命令消息和控件通知的函数使用与此相同的消息映像。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    UINT nID<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//control ID (or 0 for windows messages) #命令消息 ID 的起始范围</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    UINT nLastID<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//used for entries specifying a range of control id's #命令消息 ID 范围的终点</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    UINT nSig<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//signature type (action) or pointer to message #消息的动作标识 enum AfxSig 里面的成员</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    AFX_PMSG pfn<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//routine to call (or special value) #响应消息时应执行的函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 指向其父类的 GetThisMessageMap 的函数指针</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY<span class=\"token operator\">*</span> lpEntries<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"wm_commadwm_notify消息的处理流程\"><a class=\"anchor\" href=\"#wm_commadwm_notify消息的处理流程\">#</a> WM_COMMAD (WM_NOTIFY) 消息的处理流程</h1>\n<p>在  <code>OnWndMsg</code>  中判断了消息是否是  <code>WM_COMMAND</code>  如果是就调用  <code>OnCommand</code>  函数去处理，而 <code>OnCommand</code>  函数也是一个虚函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// special case for commands</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_COMMAND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OnCommand</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\tlResult <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> LReturnTrue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来分析一下  <code>OnCommand</code>  函数。</p>\n<p>暂时鸽了，详细参见《深入浅出 MFC》一书。</p>\n",
            "tags": [
                "MFC命令传递"
            ]
        }
    ]
}