<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Or0kit • Posts by &#34;cr0&#34; tag</title>
        <link>https://Or0kit.github.io</link>
        <description>临渊羡鱼，不如退而结网</description>
        <language>zh-CN</language>
        <pubDate>Fri, 03 Sep 2021 22:43:31 +0800</pubDate>
        <lastBuildDate>Fri, 03 Sep 2021 22:43:31 +0800</lastBuildDate>
        <category>Drozer</category>
        <category>Algolia</category>
        <category>同义词替换</category>
        <category>xpath</category>
        <category>win32api</category>
        <category>WOW64</category>
        <category>windows消息机制</category>
        <category>虚拟内存</category>
        <category>jsDelivr</category>
        <category>First blog</category>
        <category>markdown 学习</category>
        <category>Android</category>
        <category>替换密钥</category>
        <category>数论基础</category>
        <category>ADB</category>
        <category>雷电模拟器</category>
        <category>Hadoop</category>
        <category>IDA</category>
        <category>Windows逆向</category>
        <category>SSH隧道</category>
        <category>url</category>
        <category>http</category>
        <category>Nginx</category>
        <category>Linux</category>
        <category>CentOS7配置vsftp</category>
        <category>Psad</category>
        <category>fwsnort</category>
        <category>应急响应</category>
        <category>x86汇编指令</category>
        <category>逆向</category>
        <category>IDA学习</category>
        <category>恶意代码分析实战入门</category>
        <category>静态分析基础</category>
        <category>动态分析技术基础</category>
        <category>加壳</category>
        <category>脱壳</category>
        <category>C++壳</category>
        <category>ESP寻址</category>
        <category>定位Win32窗口回调函数</category>
        <category>HOOK攻防</category>
        <category>瞬时HOOK过检测</category>
        <category>INLINE-HOOK</category>
        <category>IAT HOOK</category>
        <category>INLINE HOOK</category>
        <category>进程监控</category>
        <category>模块隐藏</category>
        <category>进程通信</category>
        <category>tlhelp32.h</category>
        <category>进程遍历</category>
        <category>模块遍历</category>
        <category>TEB</category>
        <category>PEB</category>
        <category>R3层断链</category>
        <category>外挂原理</category>
        <category>DLL注入之进程间通信</category>
        <category>Win临界区</category>
        <category>Win互斥体</category>
        <category>内存映射文件</category>
        <category>内存映射共享</category>
        <category>写拷贝</category>
        <category>Win事件</category>
        <category>线程同步</category>
        <category>Win子窗口控件</category>
        <category>win32文件函数</category>
        <category>代码注入</category>
        <category>窗口程序</category>
        <category>消息机制</category>
        <category>消息类型</category>
        <category>私有内存</category>
        <category>共享内存</category>
        <category>设备对象</category>
        <category>DC设备上下文</category>
        <category>图形对象</category>
        <category>创建线程</category>
        <category>线程控制</category>
        <category>线程相关API</category>
        <category>线程上下文</category>
        <category>CONTEXT结构体</category>
        <category>物理内存</category>
        <category>Windows进程</category>
        <category>句柄表</category>
        <category>远程线程函数</category>
        <category>远程线程</category>
        <category>DLL注入</category>
        <category>DLL注入相关函数</category>
        <category>WinMain函数</category>
        <category>调用约定</category>
        <category>我的GetProcAddress</category>
        <category>资源文件</category>
        <category>消息断点</category>
        <category>通用控件</category>
        <category>WM_NOTIFY消息类型</category>
        <category>MFC</category>
        <category>PE查看器</category>
        <category>PE课后作业</category>
        <category>RVA与FOA</category>
        <category>PE结构</category>
        <category>DOS头属性说明</category>
        <category>标准PE头属性说明</category>
        <category>扩展PE头属性说明</category>
        <category>节表属性说明</category>
        <category>空白区添加代码</category>
        <category>合并节</category>
        <category>导入表</category>
        <category>注入</category>
        <category>导入表注入</category>
        <category>导出表</category>
        <category>新增节</category>
        <category>移动NT头</category>
        <category>扩大节</category>
        <category>移动导出表</category>
        <category>移动重定位表</category>
        <category>重定位表</category>
        <category>静态链接库</category>
        <category>动态链接库</category>
        <category>句柄</category>
        <category>button</category>
        <category>单选框</category>
        <category>复选框件</category>
        <category>Edit</category>
        <category>Combo Box</category>
        <category>Tab</category>
        <category>ListCtrl</category>
        <category>MFC的本质</category>
        <category>MFC的层次结构图</category>
        <category>手动创建一个MFC程序</category>
        <category>MFC的初始化过程</category>
        <category>MFC运行时类型识别</category>
        <category>关键字static</category>
        <category>关键字const</category>
        <category>MFC动态创建</category>
        <category>MFC消息映射</category>
        <category>结构体AFX_MSGMAP_ENTRY</category>
        <category>结构体AFX_MSGM</category>
        <category>MFC的三大类消息</category>
        <category>数据传输</category>
        <category>ini文件的读写</category>
        <category>python</category>
        <category>SSH</category>
        <category>python文件读取</category>
        <category>数据分析</category>
        <category>socket</category>
        <category>数据库编程</category>
        <category>python内置属性</category>
        <category>multiprocessing</category>
        <category>threading</category>
        <category>scrapy</category>
        <category>测试</category>
        <category>BHP</category>
        <category>Python的import功能</category>
        <category>木马</category>
        <category>STL</category>
        <category>Vector容器</category>
        <category>Deque容器</category>
        <category>List容器</category>
        <category>Set容器</category>
        <category>Multiset容器</category>
        <category>Map容器</category>
        <category>Multimap容器</category>
        <category>Stack容器</category>
        <category>Queue容器</category>
        <category>STL算法</category>
        <category>STL迭代器</category>
        <category>CobaltStrike</category>
        <category>RedTeam</category>
        <category>Apeache</category>
        <category>Nmap</category>
        <category>php</category>
        <category>guestbook</category>
        <category>SQLmap</category>
        <category>apache</category>
        <category>log</category>
        <category>mysql主键</category>
        <category>CSRF</category>
        <category>SSRF</category>
        <category>业务逻辑漏洞</category>
        <category>xss</category>
        <category>webshell流量特征</category>
        <category>虚拟网卡</category>
        <category>0环与3环的通信（常规方法）</category>
        <category>内核空间</category>
        <category>内核模块</category>
        <category>遍历内核模块</category>
        <category>定位未导出函数PspTiminateProcess</category>
        <category>内核编程基础</category>
        <category>ANSI_STRING</category>
        <category>UNICODE_STRING</category>
        <category>内核内存</category>
        <category>上下文环境</category>
        <category>中断请求级别</category>
        <category>链表</category>
        <category>自旋锁</category>
        <category>注册表</category>
        <category>地址空间</category>
        <category>文件操作</category>
        <category>线程与事件</category>
        <category>内核重载</category>
        <category>驱动调试</category>
        <category>配置VS2019+WDK10</category>
        <category>第一个驱动程序</category>
        <category>调试驱动程序</category>
        <category>OpenSCManager</category>
        <category>CreateService</category>
        <category>APC的本质</category>
        <category>APC的备用队列</category>
        <category>消息队列</category>
        <category>PsConvertToGuiThread</category>
        <category>win32k.sys</category>
        <category>GUI线程</category>
        <category>窗口程序的创建</category>
        <category>消息循环</category>
        <category>线性地址的管理</category>
        <category>VAD树</category>
        <category>_MMVAD</category>
        <category>_MMVAD_FLAGS</category>
        <category>VirtualAlloc</category>
        <category>MEM_COMMIT与MEM_RESERVE</category>
        <category>malloc</category>
        <category>堆内存</category>
        <category>栈内存</category>
        <category>全局区内存</category>
        <category>共享物理页</category>
        <category>共享文件</category>
        <category>LoadLibrary的本质</category>
        <category>MmAddPhysicalMemoryEx</category>
        <category>缺页异常</category>
        <category>临界区</category>
        <category>KPCR结构体</category>
        <category>等待链表</category>
        <category>调度链表</category>
        <category>模拟线程切换</category>
        <category>模拟挂起与恢复函数</category>
        <category>进程的创建</category>
        <category>获取当前进程</category>
        <category>ETHREAD</category>
        <category>KTHREAD</category>
        <category>EPROCESS</category>
        <category>KPROCESS</category>
        <category>2-9-9-12分页</category>
        <category>PAE</category>
        <category>PDPTE</category>
        <category>PDE</category>
        <category>PTE</category>
        <category>XD标志位</category>
        <category>逆向分析MmIsAddressValid函数(2-9-9-12)</category>
        <category>PWT</category>
        <category>PDT</category>
        <category>TLB</category>
        <category>CPU缓存</category>
        <category>INVLPG指令</category>
        <category>全局页</category>
        <category>ShadowWalker</category>
        <category>中断</category>
        <category>异常</category>
        <category>CLI指令</category>
        <category>STI指令</category>
        <category>INT2</category>
        <category>INT8</category>
        <category>中断门描述符</category>
        <category>IDT</category>
        <category>提权</category>
        <category>TSS</category>
        <category>跨段跳转流程</category>
        <category>JMP FAR指令</category>
        <category>任务门</category>
        <category>LDT段描述符</category>
        <category>LDT</category>
        <category>CR0</category>
        <category>CR2</category>
        <category>CR4</category>
        <category>CRL</category>
        <category>DPL</category>
        <category>RPL</category>
        <category>段寄存器结构</category>
        <category>段描述符</category>
        <category>段选择子</category>
        <category>GDT表</category>
        <category>调用门</category>
        <category>调用门描述符</category>
        <category>逆向分析MmIsAddressValid函数</category>
        <category>error C2143</category>
        <category>error C2275</category>
        <category>CALL与CALL FAR</category>
        <category>陷阱门描述符</category>
        <category>页目录表基址</category>
        <category>页表的基址</category>
        <category>0地址执行ShellCode</category>
        <category>10-10-12分页</category>
        <category>PDE_PTE</category>
        <category>物理页</category>
        <category>SSDT HOOK</category>
        <category>OpenProcess</category>
        <category>系统服务表</category>
        <category>SSDT</category>
        <category>SSDT HOOK隐藏</category>
        <category>API进出内核</category>
        <category>系统调用阶段总结</category>
        <category>网络安全法</category>
        <category>ASCII</category>
        <category>GBK</category>
        <category>ANSI</category>
        <category>Unicode</category>
        <category>UTF-8</category>
        <category>URL 编码/解码</category>
        <category>十进制</category>
        <category>二进制</category>
        <category>十六进制</category>
        <category>内存</category>
        <category>编写ShellCode实现IAT HOOK</category>
        <category>ShellCode原则</category>
        <category>傀儡进程加密壳</category>
        <category>ZwUnmapViewOfSection函数</category>
        <category>加载图标</category>
        <category>提取图标</category>
        <category>资源表</category>
        <category>MFC命令传递</category>
        <category>远控界面编写</category>
        <category>HTML</category>
        <category>文件包含</category>
        <category>sql注入</category>
        <category>经典定长指令</category>
        <category>经典变长指令</category>
        <category>指令前缀</category>
        <category>进程句柄表</category>
        <category>全局句柄表</category>
        <category>KAPC</category>
        <category>QueueUserAPC</category>
        <category>NtQueueApcThread</category>
        <category>KeInitializeApc</category>
        <category>KeInsertQueueApc</category>
        <category>KiInsertQueueApc</category>
        <category>消息队列与线程</category>
        <category>Windows线程切换</category>
        <category>KiSwapContext</category>
        <category>SwapContext</category>
        <category>时钟中断</category>
        <category>时间片管理</category>
        <category>线程切换与TSS</category>
        <category>线程切换与FS</category>
        <category>线程切换与线程优先级</category>
        <category>快速调用</category>
        <category>中断调用</category>
        <category>分析ReadProcessMemory</category>
        <category>KiFastSystemCall</category>
        <category>KiIntSystemCall</category>
        <category>重写3环</category>
        <category>文件上传</category>
        <category>隐藏驱动</category>
        <category>IopLoadDriver</category>
        <category>延迟过程调用</category>
        <category>进程挂靠</category>
        <category>跨进程读写内存</category>
        <category>APC</category>
        <category>逆向分析NtReadVirtualMemory</category>
        <category>逆向分析NtWriteVIrtualMemory</category>
        <category>AD-Attack-Defense</category>
        <category>payload</category>
        <category>sysenter指令</category>
        <category>KiFastCallEntry函数</category>
        <category>KiSystemService函数</category>
        <category>Trap_Frame</category>
        <category>web安全</category>
        <category>Pentest</category>
        <item>
            <guid isPermalink="true">https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E6%8E%A7%E5%88%B6%E5%AF%84%E5%AD%98%E5%99%A8/</guid>
            <title>保护模式-控制寄存器</title>
            <link>https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E6%8E%A7%E5%88%B6%E5%AF%84%E5%AD%98%E5%99%A8/</link>
            <category>CR0</category>
            <category>CR2</category>
            <category>CR4</category>
            <pubDate>Fri, 03 Sep 2021 22:43:31 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;控制寄存器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制寄存器&#34;&gt;#&lt;/a&gt; 控制寄存器&lt;/h1&gt;
&lt;p&gt;控制寄存器用于控制和确定 CPU 的操作模式。&lt;/p&gt;
&lt;p&gt;控制寄存器有五个  &lt;code&gt;Cr0 Cr1 Cr2 Cr3 Cr4 &lt;/code&gt;  其中  &lt;code&gt;Cr1&lt;/code&gt;  保留， &lt;code&gt;Cr3&lt;/code&gt;  存储的是页目录表基址&lt;/p&gt;
&lt;h2 id=&#34;cr0&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cr0&#34;&gt;#&lt;/a&gt; CR0&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;image001.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PE位&lt;/code&gt; ：启用保护（Protecction Enable）标志&lt;br /&gt;
&lt;strong&gt; PE=1&lt;/strong&gt; ：保护模式&lt;br /&gt;
&lt;strong&gt; PE=0&lt;/strong&gt; ：实地址模式&lt;br /&gt;
这个标志 &lt;strong&gt;仅开启段级保护&lt;/strong&gt; ，而没有启用分页机制&lt;br /&gt;
若要启用 &lt;strong&gt;分页机制&lt;/strong&gt; ，那么&lt;strong&gt; PE&lt;/strong&gt; 和&lt;strong&gt; PG&lt;/strong&gt; 标志都要置位&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PG位&lt;/code&gt; ：分页机制标志&lt;br /&gt;
&lt;strong&gt; PG=1&lt;/strong&gt; ：开启了分页机制&lt;br /&gt;
&lt;strong&gt; PG=0&lt;/strong&gt; ：未开启分页机制&lt;br /&gt;
在开启这个标志位之前&lt;strong&gt;必须已经或者同时开启  &lt;code&gt;PE&lt;/code&gt;  标志&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PG=0&lt;/strong&gt; 且 &lt;strong&gt;PE=0&lt;/strong&gt; ：处理器工作状态为&lt;strong&gt;实地址模式&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt; PG=0&lt;/strong&gt; 且 &lt;strong&gt;PE=1&lt;/strong&gt; ：处理器工作状态为&lt;strong&gt;没有开启分页机制的保护模式&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt; PG=1&lt;/strong&gt; 且 &lt;strong&gt;PE=0&lt;/strong&gt; ：不存在。在&lt;strong&gt; PE&lt;/strong&gt; 没有开启的情况下&lt;strong&gt;无法开启 PG&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;PG=1&lt;/strong&gt; 且 &lt;strong&gt;PE=1&lt;/strong&gt; ：处理器工作状态为&lt;strong&gt;开启了分页机制的保护模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WP位&lt;/code&gt; ：写保护（Write Proctect）标志&lt;br /&gt;
对于 &lt;strong&gt;Intel 80486 或以上的 CPU&lt;/strong&gt; ，CR0 的&lt;strong&gt; 16 位&lt;/strong&gt;是写保护标志&lt;br /&gt;
当设置该标志时，处理器会禁止 &lt;strong&gt;超级用户程序&lt;/strong&gt; （例如特权级 0 的程序）向&lt;strong&gt;用户级只读页面&lt;/strong&gt;执行写操作&lt;/p&gt;
&lt;p&gt;当&lt;strong&gt; CPL&amp;lt;3&lt;/strong&gt; 的时候：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果 &lt;strong&gt;WP=0&lt;/strong&gt; 可以&lt;strong&gt;读写&lt;/strong&gt;任意用户级物理页，&lt;strong&gt;只要线性地址有效&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果 &lt;strong&gt;WP=1&lt;/strong&gt; 可以&lt;strong&gt;读取&lt;/strong&gt;任意用户级物理页，&lt;strong&gt;但对于只读的物理页，则不能写&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cr2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cr2&#34;&gt;#&lt;/a&gt; CR2&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;image002.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当 CPU 访问某个无效页面时，会产生缺页异常，此时，CPU 会将引起异常的线性地址存放在 CR2 中&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当 CPU 访问某个物理页，但 PDE/PTE 的&lt;strong&gt; P 位为 0&lt;/strong&gt; 时，会产生&lt;strong&gt;缺页异常&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;缺页异常一旦发生，CPU 会将&lt;strong&gt;引起缺页异常的线性地址&lt;/strong&gt;存储到&lt;strong&gt; Cr2&lt;/strong&gt; 中&lt;/li&gt;
&lt;li&gt;此时，操作系统的处理程序开始&lt;strong&gt;对异常进行处理&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;若&lt;strong&gt;处理结束&lt;/strong&gt;后，虽然 PDE/PTE 的 P 位为 0，但实际上它被写进了页面&lt;/li&gt;
&lt;li&gt;这时，处理程序会&lt;strong&gt;将数据从页面中读出，再挂上一个有效的物理页，让程序接着往下跑&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;程序往下跑时，操作系统必须要记录程序&lt;strong&gt;原先已经跑到了哪里&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;此时，Cr2 便派上了用场，因为&lt;strong&gt;产生异常时的线性地址存在了 Cr2 中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;但如果异常处理程序检测到用户访问的页面是一个&lt;strong&gt;未分配的页面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;这时，操作系统会报告一个 &lt;strong&gt;异常&lt;/strong&gt; ，告诉我们&lt;strong&gt;在哪里发生了错误&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;若没有 Cr2 寄存器，当进入异常处理程序时，将找不到回去的线性地址&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cr4寄存器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cr4寄存器&#34;&gt;#&lt;/a&gt; Cr4 寄存器&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;image003.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;PAE/PSE 说明：&lt;/p&gt;
&lt;p&gt;PAE=1 是 2-9-9-12 分页  PAE=0 是 10-10-12 分页。&lt;br /&gt;
PSE：大页开启标志。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image004.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：关于控制寄存器的更多细节，请参考 Intel 白皮书第三卷&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;image005.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;reference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt; Reference&lt;/h1&gt;
&lt;p&gt;滴水课件&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMDI3NjM2NDY=&#34;&gt; https://blog.csdn.net/qq_41988448/article/details/102763646&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
