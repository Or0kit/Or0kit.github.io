{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"移动重定位表\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/WindowsPE/%E7%A7%BB%E5%8A%A8%E5%AF%BC%E5%87%BA%E8%A1%A8%E4%B8%8E%E9%87%8D%E5%AE%9A%E4%BD%8D%E8%A1%A8/",
            "url": "https://or0kit.github.io/Bin/WindowsPE/%E7%A7%BB%E5%8A%A8%E5%AF%BC%E5%87%BA%E8%A1%A8%E4%B8%8E%E9%87%8D%E5%AE%9A%E4%BD%8D%E8%A1%A8/",
            "title": "移动导出表与重定位表",
            "date_published": "2021-05-09T07:53:08.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>为什么要移动各种表？</p>\n<p>1、这些表是编译器生成的，里面存储了非常重要的信息。</p>\n<p>2、在程序启动的时候，系统会根据这些表做初始化的工作：</p>\n<p>比如，将用到的 DLL 中的函数地址存储到 IAT 表中.</p>\n<p>3、为了保护程序，可以对.exe 的二进制代码进行加密操作，但问题是：</p>\n<p>各种表的信息与客户字节的代码和数据都混在一起了，如果进行加密，那系统在初始化的时候会出问题！</p>\n<p><strong>学会移动各种表，是对程序加密 / 破解的基础</strong></p>\n<h1 id=\"移动导出表\"><a class=\"anchor\" href=\"#移动导出表\">#</a> 移动导出表</h1>\n<p>先回顾一下导出表的结构</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>移动导出表的步骤如下：</p>\n<p>第一步：在 DLL 中新增一个节，并返回新增后的 FOA</p>\n<p>第二步：复制 AddressOfFunctions</p>\n<pre><code>长度：4*NumberOfFunctions\n</code></pre>\n<p>第三步：复制 AddressOfNameOrdinals</p>\n<pre><code>长度：NumberOfNames*2\n</code></pre>\n<p>第四步：复制 AddressOfNames</p>\n<pre><code>长度：NumberOfNames*4\n</code></pre>\n<p>第五步：复制所有的函数名</p>\n<pre><code>长度不确定，复制时直接修复AddressOfNames\n</code></pre>\n<p>第六步：复杂 IMAGE_EXPORT_DIRECTORY 结构</p>\n<p>第七步：修复 IMAGE_EXPORT_DIRECTORY 结构中的</p>\n<pre><code>AddressOfFunctions\n\nAddressOfNameOrdinals\n\nAddressOfNames\n</code></pre>\n<p>第八步：修复目录项中的值，指向新的 IMAGE_EXPORT_DIRECTORY</p>\n<h2 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LPVOID <span class=\"token function\">MoveExportTableToNewSection</span><span class=\"token punctuation\">(</span>LPVOID pFileBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 第一步：在 DLL 中新增一个节</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tLPVOID pNewBuffer <span class=\"token operator\">=</span> <span class=\"token function\">IncreaseSection</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 定位原导出表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPIMAGE_EXPORT_DIRECTORY pExportTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_EXPORT_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_EXPORT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 导出地址表中的成员个数</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tDWORD dwNumOfFuns <span class=\"token operator\">=</span> pExportTable<span class=\"token operator\">-></span>NumberOfFunctions<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 导出名称表中的成员个数</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tDWORD dwNumOfNames <span class=\"token operator\">=</span> pExportTable<span class=\"token operator\">-></span>NumberOfNames<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 导出函数地址表地址 FOA</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tPDWORD  pExportAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pExportTable<span class=\"token operator\">-></span>AddressOfFunctions<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 导出函数名称表地址</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tPDWORD pExportName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pExportTable<span class=\"token operator\">-></span>AddressOfNames<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\">// 导出函数序号表地址</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tPWORD pExportOrdinal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pExportTable<span class=\"token operator\">-></span>AddressOfNameOrdinals<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 第二步：复制 AddressOfFunctions</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 长度：4* NumberOfFunctions</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tDWORD pNewSection <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pSectionHeader<span class=\"token punctuation\">[</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 定位新增的节的地址 既导出表内容将要拷贝到的地址</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tPDWORD pNewExportAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span>pNewSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewExportAddress<span class=\"token punctuation\">,</span> pExportAddress<span class=\"token punctuation\">,</span> dwNumOfFuns <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// 第三步：复制 AddressOfNameOrdinals</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token comment\">// 长度：NumberOfNames * 2</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token comment\">// 更新将要拷贝到的地址</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tPDWORD pNewExportOrdinal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewExportAddress <span class=\"token operator\">+</span> dwNumOfFuns <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewExportOrdinal<span class=\"token punctuation\">,</span> pExportOrdinal<span class=\"token punctuation\">,</span> dwNumOfNames <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token comment\">// 第四步：复制 AddressOfNames</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token comment\">/// 长度：NumberOfNames * 4</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token comment\">// 更新将要拷贝到的地址</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tPDWORD pNewExportName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewExportOrdinal <span class=\"token operator\">+</span> dwNumOfNames <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewExportName<span class=\"token punctuation\">,</span> pExportName<span class=\"token punctuation\">,</span> dwNumOfNames <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">// 第五步：复制所有的函数名</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token comment\">// 长度不确定，复制时直接修复 AddressOfNames</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token comment\">// 更新将要拷贝到的地址</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tPDWORD pNewNameString <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewExportName <span class=\"token operator\">+</span> dwNumOfNames <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> NameString <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tDWORD NameSize <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tPDWORD TMP <span class=\"token operator\">=</span> pNewNameString<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">size_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dwNumOfNames<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\tNameString <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pExportName<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\tNameSize <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>NameString<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>TMP<span class=\"token punctuation\">,</span> NameString<span class=\"token punctuation\">,</span> NameSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\tpNewExportName<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">FoaToRva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>TMP <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\tTMP <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>TMP <span class=\"token operator\">+</span> NameSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token comment\">// 第六步：复制 IMAGE_EXPORT_DIRECTORY 结构</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token comment\">// 更新将要拷贝到的地址</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tPIMAGE_EXPORT_DIRECTORY pNewImageExport <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_EXPORT_DIRECTORY<span class=\"token punctuation\">)</span>TMP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewImageExport<span class=\"token punctuation\">,</span> pExportTable<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_EXPORT_DIRECTORY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token comment\">// 第七步：修复 IMAGE_EXPORT_DIRECTORY 结构中的</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token comment\">//AddressOfFunctions</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token comment\">//AddressOfNameOrdinals</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token comment\">//AddressOfNames</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tpNewImageExport<span class=\"token operator\">-></span>AddressOfFunctions <span class=\"token operator\">=</span> <span class=\"token function\">FoaToRva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewExportAddress <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tpNewImageExport<span class=\"token operator\">-></span>AddressOfNameOrdinals <span class=\"token operator\">=</span> <span class=\"token function\">FoaToRva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewExportOrdinal <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tpNewImageExport<span class=\"token operator\">-></span>AddressOfNames <span class=\"token operator\">=</span> <span class=\"token function\">FoaToRva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewExportName <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token comment\">// 第八步：修复目录项中的值，指向新的 IMAGE_EXPORT_DIRECTORY</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\tpOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_EXPORT<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress <span class=\"token operator\">=</span> <span class=\"token function\">FoaToRva</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewImageExport <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token comment\">//WritePeFile(pNewBuffer);</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token keyword\">return</span> pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"移动重定位表\"><a class=\"anchor\" href=\"#移动重定位表\">#</a> 移动重定位表</h1>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LPVOID <span class=\"token function\">MoveReloctionTableToNewSection</span><span class=\"token punctuation\">(</span>LPVOID pFileBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 在 DLL 中新增一个节</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPVOID pNewBuffer <span class=\"token operator\">=</span> <span class=\"token function\">IncreaseSection</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 定位重定位表</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIMAGE_BASE_RELOCATION pRelocationTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_BASE_RELOCATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_BASERELOC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 修改新增节属性为可读、含已初始化数据</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tpSectionHeader<span class=\"token punctuation\">[</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Characteristics <span class=\"token operator\">=</span> <span class=\"token number\">0x40000040</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 计算重定位表的总大小</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPIMAGE_BASE_RELOCATION TmpReloc <span class=\"token operator\">=</span> pRelocationTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tDWORD dwRelocationTableSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>TmpReloc<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">||</span> TmpReloc<span class=\"token operator\">-></span>SizeOfBlock<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tdwRelocationTableSize <span class=\"token operator\">+=</span> TmpReloc<span class=\"token operator\">-></span>SizeOfBlock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tTmpReloc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_BASE_RELOCATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>TmpReloc <span class=\"token operator\">+</span> TmpReloc<span class=\"token operator\">-></span>SizeOfBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 定位新增的节的地址 既导出表内容将要拷贝到的地址</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tDWORD pNewSection <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">RvaToFoa</span><span class=\"token punctuation\">(</span>pSectionHeader<span class=\"token punctuation\">[</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pNewSection<span class=\"token punctuation\">,</span> pRelocationTable<span class=\"token punctuation\">,</span> dwRelocationTableSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// 更新 DataDirectory</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tpOptionHeader<span class=\"token operator\">-></span>DataDirectory<span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_BASERELOC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>VirtualAddress <span class=\"token operator\">=</span> <span class=\"token function\">FoaToRva</span><span class=\"token punctuation\">(</span>pNewSection <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">//WritePeFile(pNewBuffer);</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">return</span> pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>PE 工具正常解析：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n",
            "tags": [
                "移动导出表",
                "移动重定位表"
            ]
        }
    ]
}