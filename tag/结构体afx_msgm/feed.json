{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"结构体afx_msgm\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-04%E6%B6%88%E6%81%AF%E6%98%A0%E5%B0%84/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-04%E6%B6%88%E6%81%AF%E6%98%A0%E5%B0%84/",
            "title": "MFC六大核心机制-04消息映射",
            "date_published": "2022-06-01T17:27:17.000Z",
            "content_html": "<h1 id=\"什么是消息映射\"><a class=\"anchor\" href=\"#什么是消息映射\">#</a> 什么是消息映射</h1>\n<p>消息映射是 MFC 内建的一个消息分派机制，只要利用数个宏以及固定形式的写法（类似于填表格）就可以让我们的框架知道一旦消息发生，该往哪一个类去传递，每一个类只能拥有一个消息映射表格，也可以没有。</p>\n<h1 id=\"本节课需要掌握的知识点\"><a class=\"anchor\" href=\"#本节课需要掌握的知识点\">#</a> 本节课需要掌握的知识点</h1>\n<p>1、本节必须掌握的知识点</p>\n<p>三个关键的宏  <code>DECLARE_MESSAGE_MAP</code>  、  <code>BEGIN_MESSAGE_MAP</code>  和 <code>END_MESSAGE_MAP</code> <br />\n 如何添加一个消息？</p>\n<p>2、需要简单了解的内容</p>\n<p><code>AFX_MSGMAP_ENTRY</code>  结构和  <code>AFX_MSGMAP</code> <br />\n <code>MessageMapFunctions</code></p>\n<h1 id=\"消息映射\"><a class=\"anchor\" href=\"#消息映射\">#</a> 消息映射</h1>\n<p>我们来学习 MFC 消息映射的本质。</p>\n<h2 id=\"添加消息\"><a class=\"anchor\" href=\"#添加消息\">#</a> 添加消息</h2>\n<p>我们还是使用 01 中的代码为基础：</p>\n<p>Hello.h</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;afxwin.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinApp</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Hello.cpp</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Hello.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMyApp theApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>BOOL <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm_pMainWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>m_nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tWS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_THICKFRAME <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_VSCROLL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// 左上角，既起始位置是（400,300），右下角（800,700）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 700 -300 是高度  800-400 是宽度</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来演示添加一个消息。</p>\n<p>我们还是直接利用 MFC 的宏：<br />\n在 Hello.h 中的 <code>CMainWindow</code>  类中做以下修改：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 消息映射</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">DECLARE_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 消息函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tafx_msg <span class=\"token keyword\">void</span> <span class=\"token function\">OnLButtonDown</span><span class=\"token punctuation\">(</span>UINT nFlags<span class=\"token punctuation\">,</span> CPoint point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tafx_msg <span class=\"token keyword\">void</span> <span class=\"token function\">OnPaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在 Hello.cpp 中添加以下代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">OnLButtonDown</span><span class=\"token punctuation\">(</span>UINT nFlags<span class=\"token punctuation\">,</span> CPoint point<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Message!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">OnPaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tCPaintDC <span class=\"token function\">dc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 绘制文本</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tdc<span class=\"token punctuation\">.</span><span class=\"token function\">DrawText</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello OnPaint!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 显示内容</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 显示位置</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tDT_SINGLELINE\t\t\t<span class=\"token comment\">// 单行显示</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">BEGIN_MESSAGE_MAP</span><span class=\"token punctuation\">(</span>CMainWindow<span class=\"token punctuation\">,</span> CFrameWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 写消息</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">ON_WM_LBUTTONDOWN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">ON_WM_PAINT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">END_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在窗口中单击鼠标左键结果：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>按照这样的格式我们想添加什么消息处理都可。<br />\n但是因为是宏，使用简单，但不利于我们去了解基本原理。<br />\n例如这个左键按下的消息处理函数  <code>OnLButtonDown</code> ，这个函数名为什么要这样写？不这么写可不可以？所以我们还需要通过转换宏去了解本质。</p>\n<h2 id=\"转换宏\"><a class=\"anchor\" href=\"#转换宏\">#</a> 转换宏</h2>\n<p>我们把上面例子中所使用的的宏都给展开。</p>\n<p>我在 VS2019 中所查看的定义：</p>\n<h3 id=\"宏declare_message_map\"><a class=\"anchor\" href=\"#宏declare_message_map\">#</a> 宏 DECLARE_MESSAGE_MAP ()</h3>\n<p>转换为:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span><span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其作用是在类中定义了两个保护成员函数 <code>GetThisMessageMap</code>  和 <code>GetMessageMap</code> 。</p>\n<h3 id=\"宏begin_message_map-on_wm_lbuttondown-end_message_map\"><a class=\"anchor\" href=\"#宏begin_message_map-on_wm_lbuttondown-end_message_map\">#</a> 宏 BEGIN_MESSAGE_MAP、ON_WM_LBUTTONDOWN、END_MESSAGE_MAP</h3>\n<p>接下来转换另外的宏：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">BEGIN_MESSAGE_MAP</span><span class=\"token punctuation\">(</span>theClass<span class=\"token punctuation\">,</span> baseClass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 写消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ON_WM_LBUTTONDOWN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">END_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>BEGIN_MESSAGE_MAP(theClass, baseClass)</code>  转换为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PTM_WARNING_DISABLE </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> theClass<span class=\"token operator\">::</span><span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> PASCAL theClass<span class=\"token operator\">::</span><span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> theClass ThisClass<span class=\"token punctuation\">;</span>\t\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> baseClass TheBaseClass<span class=\"token punctuation\">;</span>\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>disable<span class=\"token operator\">:</span> <span class=\"token number\">4640</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* message maps can only be called by single threaded message pump */</span> \\</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY _messageEntries<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr></table></figure><p>我们暂时忽略掉处理警告的代码。</p>\n<p><code>BEGIN_MESSAGE_MAP</code>  宏，定义了两个函数，一个函数名为 <code>GetMessageMap</code> ，其功能是调用 <code>GetThisMessageMap</code> ，另一个函数便是 <code>GetThisMessageMap</code> , 这个函数中定义了一个 <code>AFX_MSGMAP_ENTRY</code>  类型的数组。</p>\n<hr />\n<p>接下转换 <code>ON_WM_LBUTTONDOWN()</code> ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> WM_LBUTTONDOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_vwp<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>AFX_PMSGW<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>ThisClass <span class=\"token operator\">::</span> OnLButtonDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><hr />\n<p>继续转换 <code>END_MESSAGE_MAP()</code>  ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_end<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>pop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP messageMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">&amp;</span>TheBaseClass<span class=\"token operator\">::</span>GetThisMessageMap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_messageEntries<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>messageMap<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PTM_WARNING_RESTORE</pre></td></tr></table></figure><p><code>END_MESSAGE_MAP</code>  负责 <code>GetThisMessageMap</code>  函数的收尾</p>\n<p>而我们使用的宏：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">BEGIN_MESSAGE_MAP</span><span class=\"token punctuation\">(</span>CMainWindow<span class=\"token punctuation\">,</span> CFrameWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 写消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ON_WM_LBUTTONDOWN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">END_MESSAGE_MAP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>便可转换为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PTM_WARNING_DISABLE </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> PASCAL <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetThisMessageMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> CMainWindow ThisClass<span class=\"token punctuation\">;</span>\t\t\t\t\t\t   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> CFrameWnd TheBaseClass<span class=\"token punctuation\">;</span>\t\t\t\t\t  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>disable<span class=\"token operator\">:</span> <span class=\"token number\">4640</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* message maps can only be called by single threaded message pump */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY _messageEntries<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span> WM_LBUTTONDOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_vwp<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>AFX_PMSGW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>AFX_MSG_CALL CWnd<span class=\"token operator\">::</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>UINT<span class=\"token punctuation\">,</span> CPoint<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ThisClass<span class=\"token operator\">::</span>OnLButtonDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AfxSig_end<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>AFX_PMSG<span class=\"token punctuation\">)</span><span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">__pragma</span><span class=\"token punctuation\">(</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>pop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> AFX_MSGMAP messageMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">&amp;</span>TheBaseClass<span class=\"token operator\">::</span>GetThisMessageMap<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_messageEntries<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>messageMap<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t\t\t\t\t\t\t  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>PTM_WARNING_RESTORE</pre></td></tr></table></figure><p>如上代码转换完成之后就可以很清晰的知道使用宏的时候鼠标左键按下必须使用  <code>OnLButtonDown</code>  这个函数名是因为这里是写死在代码中的，没办法改变；<br />\n我们还可以很清晰的看见  <code>_messageEntries</code>  这个数组就是存放着我们的消息，这就是一个消息映射的表格，而这个数组是一个结构体数组，所以我们来看一下  <code>AFX_MSGMAP_ENTRY</code>  这个结构体。</p>\n<h2 id=\"结构体-afx_msgmap_entry\"><a class=\"anchor\" href=\"#结构体-afx_msgmap_entry\">#</a> 结构体 AFX_MSGMAP_ENTRY</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP_ENTRY</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    UINT nMessage<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//windows message # Windows 消息类型 ID</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    UINT nCode<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//control code or WM_NOTIFY code #对于窗口消息该值为 0，处理命令消息和控件通知的函数使用与此相同的消息映像。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    UINT nID<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//control ID (or 0 for windows messages) #命令消息 ID 的起始范围</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    UINT nLastID<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//used for entries specifying a range of control id's #命令消息 ID 范围的终点</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    UINT nSig<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//signature type (action) or pointer to message #消息的动作标识 enum AfxSig 里面的成员</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    AFX_PMSG pfn<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//routine to call (or special value) #响应消息时应执行的函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>根据注释可以非常清晰的看见每个参数的意义，主要说下后两个参数，  <code>AFX_PMSG pfn</code>  为响应消息时执行的函数，这里也就是  <code>OnLButtonDown</code>  函数的地址， <code>UINT nSig</code>  为消息的动作标识  <code>enum AfxSig </code> 里面的成员，在当前值为 <code>AfxSig_vwp</code> ，这是一个宏，我们可以跟进查看一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AfxSig_vwp <span class=\"token operator\">=</span> AfxSig_v_u_p<span class=\"token punctuation\">,</span>      <span class=\"token comment\">// void (UINT, CPoint)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 54</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>AfxSig_v_u_p<span class=\"token punctuation\">,</span>\t\t\t\t\t<span class=\"token comment\">// void (UINT, CPoint)</span></pre></td></tr></table></figure><p>它表示着  <code>AFX_PMSG pfn</code> （响应消息时执行的函数）的返回值和参数的格式：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">OnLButtonDown</span><span class=\"token punctuation\">(</span>UINT nFlags<span class=\"token punctuation\">,</span> CPoint point<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">AfxMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Message!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>从 MFC 的源码中我们可以发现 <code>AFX_MSGMAP_ENTRY</code>  结构数组的最后一个成员全是 <code>0</code> 。</p>\n<p>此外还有另一个结构体  <code>AFX_MSGMAP</code></p>\n<h2 id=\"结构体-afx_msgm\"><a class=\"anchor\" href=\"#结构体-afx_msgm\">#</a> 结构体 AFX_MSGM</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">AFX_MSGMAP</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> pfnGetBaseMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_MSGMAP_ENTRY<span class=\"token operator\">*</span> lpEntries<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个结构体有两个成员，一个是指向其父类的 <code>GetThisMessageMap</code>  的函数指针，另一个是指向 当前的 <code>AFX_MSGMAP_ENTRY</code>  结构体的指针。</p>\n<h1 id=\"mfc的三大类消息\"><a class=\"anchor\" href=\"#mfc的三大类消息\">#</a> MFC 的三大类消息</h1>\n<ol>\n<li>标准消息</li>\n</ol>\n<p>任何以 WM 打头的消息都属于标准消息 (除 WM_COMMAND) 以外。<br />\n这类消息的响应函数名都被 MFC 规定好了。</p>\n<ol start=\"2\">\n<li>WM_COMMAND 命令消息</li>\n</ol>\n<p>这是来自菜单、工具条按钮、加速键等用户接口对象的 WM_COMMAND 通知消息，属于应用程序自己定义的消息。通过消息映射机制，MFC 框架把命令按一定的路径分发给多种类型的对象（具备消息处理能力）处理，如文档、窗口、应用程序、文档模板等对象。</p>\n<ol start=\"3\">\n<li>控件通知</li>\n</ol>\n<p>通常，控件通知在某些重要事件发生时，由控件窗口发送到父窗口，如打开一个组合框。控件通知为父窗口进一步控制子窗口提供了机会。例如，打开一个组合框时，父窗口可以用组合框初建时得不到的消息填充它。</p>\n<p>BN_XXXX 是 CButton 产生的消息，EN_XXXX 是 CEdit 产生的消息，等等。</p>\n<p>好多消息都还没有学，后面会学习的，暂时有个大概的理解。</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>消息映射的内部实现将在 MFC 的命令传递中详细的学习。</p>\n<p>这里需要记住<strong>能处理消息映射的类必须从  <code>CCmdTarget</code>  类派生。</strong>，可以一层一层的跟一下 MFC 源码。</p>\n<p>另外学习 MFC 的核心机制，就是学习微软的程序设计，学习它的设计思想。</p>\n<h1 id=\"课后作业\"><a class=\"anchor\" href=\"#课后作业\">#</a> 课后作业</h1>\n<ol>\n<li>新建一个类，继承于 CMainWnd (CNewWnd)</li>\n<li>给 CMainWnd 添加 鼠标左键点击事件 创建进新的 CNewWnd 窗口。</li>\n<li>给新的窗口添加鼠标右键事件 弹出 MessageBox</li>\n</ol>\n<p>不难。</p>\n",
            "tags": [
                "MFC消息映射",
                "结构体AFX_MSGMAP_ENTRY",
                "结构体AFX_MSGM",
                "MFC的三大类消息"
            ]
        }
    ]
}