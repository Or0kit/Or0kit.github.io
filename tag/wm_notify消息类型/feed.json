{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"wm_notify消息类型\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/%E9%80%9A%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B8%8EWM_NOTIFY%E6%B6%88%E6%81%AF/",
            "url": "https://or0kit.github.io/Bin/Win32/%E9%80%9A%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B8%8EWM_NOTIFY%E6%B6%88%E6%81%AF/",
            "title": "通用控件与WM_NOTIFY消息",
            "date_published": "2021-11-13T11:59:46.000Z",
            "content_html": "<h1 id=\"标准控件与通用控件\"><a class=\"anchor\" href=\"#标准控件与通用控件\">#</a> 标准控件与通用控件</h1>\n<p>Windows 标准控件，标准控件总是可用的</p>\n<blockquote>\n<p>Static<br />\nGroup Box<br />\nButton<br />\nCheck Box<br />\nRadio Button<br />\nEdit<br />\nComboBox<br />\nListBox</p>\n</blockquote>\n<p>Windows 通用控件，代码包含在  <code>Comctrl32.dll</code></p>\n<p>使用前：</p>\n<p><code>#include &lt;commctrl.h&gt;</code> <br />\n <code>#pragma comment(lib,&quot;comctl32.lib&quot;)</code></p>\n<p>常用的通用控件有：</p>\n<blockquote>\n<p>Animation<br />\nComboBoxEx<br />\nDate_and_Time_Picker<br />\nDrag_List_Box<br />\nFlat_Scroll_Bar<br />\nHeader<br />\nHotKey<br />\nImageList<br />\nIPAddress<br />\nList_View<br />\nMonth_Calendar<br />\nPager<br />\nProgress_Bar<br />\nProperty_Sheets<br />\nRebar<br />\nStatus Bars<br />\nSysLink<br />\nTab<br />\nToolbar<br />\nToolTip<br />\nTrackbar<br />\nTreeView<br />\nUp_and_Down</p>\n</blockquote>\n<p>特别说明：</p>\n<p>通用控件在使用前，需要通过 INITCOMMONCONTROLSEX 进行初始化</p>\n<p>只要在您的程序中的任意地方引用了该函数就、会使得 WINDOWS 的程序加载器 PE Loader 加载该库</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>INITCOMMONCONTROLSEX icex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>icex<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>INITCOMMONCONTROLSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>icex<span class=\"token punctuation\">.</span>dwICC <span class=\"token operator\">=</span> ICC_WIN95_CLASSES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">InitCommonControlsEx</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>icex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"列表视图控件list-control\"><a class=\"anchor\" href=\"#列表视图控件list-control\">#</a> 列表视图控件（List Control）</h1>\n<p>列表视图控件是一种非常常用的控件，在需要以报表形式显示数据时，列表控件通常是最好的选择，许多专用的数据报表控件，也是在它的基础上派生而来。与树视图类似，列表控件可以由多个子项目组成，并且支持大图标、小图标、列表和报表 4 种方式显示信息（可通过视图 -&gt; 其他窗口 -&gt; 属性窗口 -&gt;View 来更改）<br />\n列表视图包含一个项目列表，而其中每个项目由图标、项目名称和多个子项组成，每一个子项所包含的项目的数目必须相同，属性相同的每个子项显示在同一个列中。</p>\n<p>列表视图控件有两个重要的数据结构 LVCOLUMN 和 LVITEM。</p>\n<h2 id=\"lv_column结构体\"><a class=\"anchor\" href=\"#lv_column结构体\">#</a> LV_COLUMN 结构体</h2>\n<p><code>#define LV_COLUMN       LVCOLUMN</code></p>\n<p>LVCOLUMN 用于定义报表方式下的 “列” 的结构。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LVCOLUMN</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>UINT mask<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 说明此结构中哪些成员是有效的</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> fmt<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 列的对齐方式</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> cx<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 列的初始宽度</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>LPTSTR pszText<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 列的标题</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> cchTextMax<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//pszText 所指向的缓冲区的大小</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> iSubItem<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 与列关联的子项的索引值，从 0 开始</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> iImage<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 与列关联的图像列表中指定图像的索引值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> iOrder<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 第几列，0 代表最左一列</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LVCOLUMN<span class=\"token punctuation\">,</span> FAR <span class=\"token operator\">*</span>LPLVCOLUMN<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>mask</code>  类型： <code>UINT</code></p>\n<p>指定哪些成员包含有效信息的变量。该成员可以是零，也可以是以下值中的一个或多个：</p>\n<table>\n<thead>\n<tr>\n<th>价值</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>LVCF_FMT</strong></td>\n<td>该<strong> FMT</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_WIDTH</strong></td>\n<td>该<strong> CX</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_TEXT</strong></td>\n<td>该<strong> pszText</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_ORDER</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。该<strong> iOrder</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_MINWIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 该<strong> cxMin</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_DEFAULTWIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 该<strong> cxDefault</strong> 成员是有效的。</td>\n</tr>\n<tr>\n<td><strong>LVCF_IDEALWIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 该<strong> cxIdeal</strong> 成员是有效的。</td>\n</tr>\n</tbody>\n</table>\n<p><code>fmt</code></p>\n<p>类型：<strong>int</strong></p>\n<p>列标题与列中子项文本的对齐方式。最左边一列的对齐方式始终是 LVCFMT_LEFT；它无法改变。此成员可以是以下值的组合。请注意，并非所有组合都有效。</p>\n<table>\n<thead>\n<tr>\n<th>价值</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>LVCFMT_LEFT</strong></td>\n<td>文本左对齐。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_RIGHT</strong></td>\n<td>文本右对齐。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_CENTER</strong></td>\n<td>文本居中。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_JUSTIFYMASK</strong></td>\n<td>用于选择控制字段对齐的<strong> fmt</strong> 位的位掩码。要检查列的格式，请使用逻辑 “和” 将 LCFMT_JUSTIFYMASK 与<strong> fmt</strong> 组合在一起。然后，您可以使用 switch 语句来确定是否设置了 LVCFMT_LEFT、LVCFMT_RIGHT 或 LVCFMT_CENTER 位。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_IMAGE</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。该项目显示图像列表中的图像。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_BITMAP_ON_RIGHT</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。位图出现在文本的右侧。这不会影响分配给标题项的图像列表中的图像。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_COL_HAS_IMAGES</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 4.70</span>。标题项包含图像列表中的图像。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_FIXED_WIDTH</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 无法调整列大小；与 HDF_FIXEDWIDTH 相同。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_NO_DPI_SCALE</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 如果未设置，则 CCM_DPISCALE 将控制放大固定宽度。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_FIXED_RATIO</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> 宽度将随着行高而增加。</td>\n</tr>\n<tr>\n<td><strong>LVCFMT_SPLITTBTON</strong></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2NvbW1vbi1jb250cm9sLXZlcnNpb25z\">版本 6.00</span> 和 <strong>Windows Vista。</strong> Column 是一个拆分按钮（与 HDF_SPLITBUTTON 相同）。列的标题显示一个拆分按钮（与 HDF_SPLITBUTTON 相同）。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"lv_item结构体\"><a class=\"anchor\" href=\"#lv_item结构体\">#</a> LV_ITEM 结构体</h2>\n<p><code>#define LV_ITEM LVITEM</code></p>\n<p>LVITEM 用于定义 “项” 的结构。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LVITEM</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>UINT   mask<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 说明 LVITEM 结构中哪些成员有效</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span>    iItem<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 项目的索引值 (可以视为行号) 从 0 开始</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span>    iSubItem<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 子项的索引值 (可以视为列号) 从 0 开始</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>UINT   state<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 子项的状态</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>UINT   stateMask<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 状态有效的屏蔽位</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>LPTSTR pszText<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 主项或子项的名称</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span>    cchTextMax<span class=\"token punctuation\">;</span> <span class=\"token comment\">//pszText 所指向的缓冲区大小</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span>    iImage<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 关联图像列表中指定图像的索引值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>LPARAM lParam<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 程序定义的 32 位参数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">int</span> iIndent<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 表示图像位置缩进的单位</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LVITEM<span class=\"token punctuation\">,</span> FAR <span class=\"token operator\">*</span>LPLVITEM<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>mask</code></p>\n<p>类型：<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL1dpblByb2cvd2luZG93cy1kYXRhLXR5cGVz\">UINT</span></strong></p>\n<p>一组标志，指定此结构的哪些成员包含要设置的数据或正在请求哪些成员。该成员可以设置以下一个或多个标志：</p>\n<table>\n<thead>\n<tr>\n<th>价值</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>LVIF_COLFMT</strong></td>\n<td><strong>Windows Vista 及更高版本。</strong> 该<strong> piColFmt</strong> 成员有效或必须设置。如果使用此标志，则<strong> cColumns</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_COLUMNS</strong></td>\n<td>该<strong> cColumns</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_DI_SETITEM</strong></td>\n<td>操作系统应该存储请求的列表项信息并且不再请求它。此标志仅与<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bi1nZXRkaXNwaW5mbw==\"> LVN_GETDISPINFO</span> 通知代码一起使用。</td>\n</tr>\n<tr>\n<td><strong>LVIF_GROUPID</strong></td>\n<td>该 <strong>iGroupId</strong> 成员有效或必须设置。如果在发送<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bS1pbnNlcnRpdGVt\"> LVM_INSERITEM</span> 消息时未设置此标志，则假定<strong> iGroupId</strong> 的值是 I_GROUPIDCALLBACK。</td>\n</tr>\n<tr>\n<td><strong>LVIF_IMAGE</strong></td>\n<td>该<strong> IIMAGE</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_INDENT</strong></td>\n<td>该<strong> iIndent</strong> 成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_NORECOMPUTE</strong></td>\n<td>如果控件收到 LVM_GETITEM 消息，它不会生成<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bi1nZXRkaXNwaW5mbw==\"> LVN_GETDISPINFO</span> 来检索文本信息。相反，pszText 成员将包含 LPSTR_TEXTCALLBACK。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9kZXNrdG9wL0NvbnRyb2xzL2x2bS1nZXRpdGVt\"></span></td>\n</tr>\n<tr>\n<td><strong>LVIF_PARAM</strong></td>\n<td>该 <strong>lParam 的</strong>成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_STATE</strong></td>\n<td>该<strong>状态</strong>成员有效或必须设置。</td>\n</tr>\n<tr>\n<td><strong>LVIF_TEXT</strong></td>\n<td>该<strong> pszText</strong> 成员有效或必须设置。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"listview的使用\"><a class=\"anchor\" href=\"#listview的使用\">#</a> ListView 的使用</h1>\n<p>1、初始化列名信息</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LV_COLUMN lv<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HWND hListProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 初始化\t\t\t\t</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>LV_COLUMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 获取 IDC_LIST_PROCESS 句柄\t\t\t\t</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>hListProcess <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItem</span><span class=\"token punctuation\">(</span>hDlg<span class=\"token punctuation\">,</span>IDC_LIST_PROCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 设置整行选中\t\t\t\t</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span>LVM_SETEXTENDEDLISTVIEWSTYLE<span class=\"token punctuation\">,</span>LVS_EX_FULLROWSELECT<span class=\"token punctuation\">,</span>LVS_EX_FULLROWSELECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 第一列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lv<span class=\"token punctuation\">.</span>mask <span class=\"token operator\">=</span> LVCF_TEXT <span class=\"token operator\">|</span> LVCF_WIDTH <span class=\"token operator\">|</span> LVCF_SUBITEM<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 列标题</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t<span class=\"token comment\">// 列宽</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//ListView_InsertColumn(hListProcess, 0, &amp;lv);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span>LVM_INSERTCOLUMN<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 第二列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//ListView_InsertColumn(hListProcess, 1, &amp;lv);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span>LVM_INSERTCOLUMN<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 第三列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"镜像基址\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">ListView_InsertColumn</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// 第四列\t\t\t\t</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>lv<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"镜像大小\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>lv<span class=\"token punctuation\">.</span>cx <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>lv<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token function\">ListView_InsertColumn</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、向列表中新增数据</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LV_ITEM vitem<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 初始化\t\t\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>LV_ITEM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>mask <span class=\"token operator\">=</span> LVIF_TEXT<span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token string\">\"csrss.exe\"</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//ListView_InsertItem(hListProcess, &amp;vitem);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> LVM_INSERTITEM<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"448\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"56590000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"000F0000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"winlogon.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">//ListView_InsertItem(hListProcess, &amp;vitem);\t\t\t\t</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> LVM_INSERTITEM<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10000000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>pszText <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"000045800\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>vitem<span class=\"token punctuation\">.</span>iSubItem <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token function\">ListView_SetItem</span><span class=\"token punctuation\">(</span>hListProcess<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vitem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"wm_notify消息类型\"><a class=\"anchor\" href=\"#wm_notify消息类型\">#</a> WM_NOTIFY 消息类型</h1>\n<p>WM_NOTIFY 的使用</p>\n<p>该消息类型与 WM_COMMAND 类型相似，都是由子窗口向父窗口发送的消息。</p>\n<p>WM_NOTIFY 可以包含比 WM_COMMAND 更丰富的信息</p>\n<p>Windows 通用组件中有很多消息，都是通过 WM_NOTIFY 来描述的.</p>\n<p>WM_NOTIFY 消息中的参数如下：</p>\n<p>1  <code>wParam</code> : 控件 ID</p>\n<p>2  <code>lParam</code> : 指向一个结构</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagNMHDR</span> <span class=\"token punctuation\">&#123;</span> \t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t        HWND hwndFrom<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 发送通知消息的控制窗口句柄\t\t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t        UINT idFrom<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 发送通知消息的控制 ID 值\t\t</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t        UINT code<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 通知码，如 LVM_SELCHANGED\t\t</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t    <span class=\"token punctuation\">&#125;</span> NMHDR<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个结构体能满足一般的要求，但能描述的信息还是有限的</p>\n<p>解决方案：对每种不同用途的通知消息都定义另一种结构来表示</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagNMLVCACHEHINT</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t    NMHDR   hdr<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t    <span class=\"token keyword\">int</span>     iFrom<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t    <span class=\"token keyword\">int</span>     iTo<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> NMLVCACHEHINT<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PNMLVCACHEHINT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagLVDISPINFO</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t    NMHDR hdr<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t    LVITEM item<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> NMLVDISPINFO<span class=\"token punctuation\">,</span> FAR <span class=\"token operator\">*</span>LPNMLVDISPINFO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_NMLVFINDITEM</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t    NMHDR hdr<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t    <span class=\"token keyword\">int</span> iStart<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t    LVFINDINFO lvfi<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> NMLVFINDITEM<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PNMLVFINDITEM<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"本节练习\"><a class=\"anchor\" href=\"#本节练习\">#</a> 本节练习</h1>\n<ol>\n<li>画出 PETools 的第一个界面</li>\n</ol>\n<p>代码上传到 GitHub 上了： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09yMGtpdC9XTV9OT1RJRlk=\">https://github.com/Or0kit/WM_NOTIFY</span></p>\n<ol start=\"2\">\n<li>遍历进程、遍历模块</li>\n</ol>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h1 id=\"小笔记\"><a class=\"anchor\" href=\"#小笔记\">#</a> 小笔记</h1>\n<p>Win32 全是 C 语言现的，但是 Win32 却使用了面向对象的思想，类是如何实现的？--&gt; 结构体<br />\n C 也能用结构体实现类，在  <code>WM_NOTIFY</code>  消息类型中就用结构体实现了  <code>继承</code> 。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoZXVzcHJvbWUvYXJ0aWNsZS9kZXRhaWxzLzUxNzA1MTE2\">https://blog.csdn.net/theusprome/article/details/51705116</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9hcGkvY29tbWN0cmwvbnMtY29tbWN0cmwtbHZjb2x1bW5h\">https://docs.microsoft.com/en-us/windows/win32/api/commctrl/ns-commctrl-lvcolumna</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9hcGkvY29tbWN0cmwvbnMtY29tbWN0cmwtbHZpdGVtYQ==\">https://docs.microsoft.com/en-us/windows/win32/api/commctrl/ns-commctrl-lvitema</span></p>\n",
            "tags": [
                "通用控件",
                "WM_NOTIFY消息类型"
            ]
        }
    ]
}