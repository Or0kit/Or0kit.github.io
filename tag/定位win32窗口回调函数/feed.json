{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"定位win32窗口回调函数\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/ESP%E5%AF%BB%E5%9D%80-%E5%AE%9A%E4%BD%8D%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/",
            "url": "https://or0kit.github.io/Bin/Win32/ESP%E5%AF%BB%E5%9D%80-%E5%AE%9A%E4%BD%8D%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/",
            "title": "ESP寻址-定位回调函数",
            "date_published": "2021-11-07T02:59:07.000Z",
            "content_html": "<h1 id=\"消息堆栈\"><a class=\"anchor\" href=\"#消息堆栈\">#</a> 消息堆栈</h1>\n<h2 id=\"回调函数的结构\"><a class=\"anchor\" href=\"#回调函数的结构\">#</a> 回调函数的结构</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span>  \t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tIN  HWND hwnd<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIN  UINT uMsg<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN  WPARAM wParam<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN  LPARAM lParam  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"回调函数的堆栈\"><a class=\"anchor\" href=\"#回调函数的堆栈\">#</a> 回调函数的堆栈</h2>\n<p><img data-src=\"image000.png\" alt=\"\" /></p>\n<h1 id=\"win32应用程序入口识别\"><a class=\"anchor\" href=\"#win32应用程序入口识别\">#</a> Win32 应用程序入口识别</h1>\n<p>思路：根据 WinMain 的四个参数，由调用顺序，知道最后压栈的是 hInstance 句柄（也就是 WinMain 函数的第一个参数，其值等于 ImageBase），根据反汇编，则判断压栈参数是 <code>GetModuleHandle</code>  函数的返回值，即可找到 Win32 应用入口。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>0040131F  |.  F645 D0 01    test byte ptr ss:[ebp-0x30],0x1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>00401323  |.  74 06         je short ReverseT.0040132B</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>00401325  |.  0FB745 D4     movzx eax,word ptr ss:[ebp-0x2C]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>00401329  |.  EB 03         jmp short ReverseT.0040132E</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>0040132B  |&gt;  6A 0A         push 0xA</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>0040132D  |.  58            pop eax                                  ;  kernel32.763AFA29</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>0040132E  |&gt;  50            push eax</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>0040132F  |.  FF75 9C       push [local.25]</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>00401332  |.  56            push esi                                 ;  ReverseT.&lt;ModuleEntryPoint&gt;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>00401333  |.  56            push esi                                 ; &#x2F;pModule &#x3D; &quot;U 嬱 jh 郹 @&quot;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>00401334  |.  FF15 2C604000 call dword ptr ds:[&lt;&amp;KERNEL32.GetModuleH&gt;; \\GetModuleHandleA</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>0040133A  |.  50            push eax</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>0040133B  |.  E8 C0FCFFFF   call ReverseT.00401000                   ;</pre></td></tr></table></figure><p>这是我在 OD 中扣出来的一部分反汇编，我们可以很轻松的判断出：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>00401334  |.  FF15 2C604000 call dword ptr ds:[&lt;&amp;KERNEL32.GetModuleH&gt;; \\GetModuleHandleA</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>0040133A  |.  50            push eax</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>0040133B  |.  E8 C0FCFFFF   call ReverseT.00401000                   ;  WinMain 函数入口</pre></td></tr></table></figure><h1 id=\"esp寻址的特点\"><a class=\"anchor\" href=\"#esp寻址的特点\">#</a> ESP 寻址的特点</h1>\n<p>程序入口处，esp+4 一般是函数的第一个参数。<br />\nESP 寻址会受到 push 和 pop 的影响。</p>\n<h1 id=\"定位窗口的回调函数\"><a class=\"anchor\" href=\"#定位窗口的回调函数\">#</a> 定位窗口的回调函数</h1>\n<p>思路：根据 <code>RegisterClass()</code>  函数的参数，找到 <code>WNDCLASS</code>  结构体的 <code>lpfnWndProc</code>  参数，从而找到了回调函数的地址。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h1 id=\"具体事件的处理的定位\"><a class=\"anchor\" href=\"#具体事件的处理的定位\">#</a> 具体事件的处理的定位</h1>\n<p>思路：在 OD 的设置断点中，右键设置条件断点，可根据相应的条件断下来。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h1 id=\"定位子窗口的消息时间处理函数\"><a class=\"anchor\" href=\"#定位子窗口的消息时间处理函数\">#</a> 定位子窗口的消息时间处理函数</h1>\n<p>子窗口如：按钮、编辑框……</p>\n<p>一个主窗口可能会有很多子窗口，对于它们的消息处理，会用到 <code>WPARAM wParam</code>  与 <code>LPARAM lParam </code></p>\n<h2 id=\"按钮\"><a class=\"anchor\" href=\"#按钮\">#</a> 按钮</h2>\n<p>按钮的本质是窗口</p>\n<p>创建按钮</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">CreateButton</span><span class=\"token punctuation\">(</span>HWND hwnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tHWND hwndPushButton<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tHWND hwndCheckBox<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tHWND hwndRadio<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\thwndPushButton <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"普通按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">//WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON | BS_DEFPUSHBUTTON,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> BS_PUSHBUTTON <span class=\"token operator\">|</span> BS_DEFPUSHBUTTON<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 子窗口 ID</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\thAppInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\thwndCheckBox <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"复选框\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token comment\">//WS_CHILD | WS_VISIBLE | BS_CHECKBOX | BS_AUTOCHECKBOX,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> BS_CHECKBOX <span class=\"token operator\">|</span>BS_AUTOCHECKBOX <span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span><span class=\"token number\">1002</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 子窗口 ID</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\thAppInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\thwndRadio <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单选按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token comment\">//WS_CHILD | WS_VISIBLE | BS_RADIOBUTTON | BS_AUTORADIOBUTTON,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> BS_RADIOBUTTON  <span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\thwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span><span class=\"token number\">1003</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 子窗口 ID</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\thAppInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"按钮事件的处理\"><a class=\"anchor\" href=\"#按钮事件的处理\">#</a> 按钮事件的处理</h2>\n<p>1、按钮是一种特殊的窗体，并不需要提供单独的窗口回调函数.<br />\n2、当按钮有事件产生时，会给父窗口消息处理程序发送一个 WM_COMMAND 消息</p>\n<blockquote>\n<p>按钮 ---------------&gt; 系统提供 WinProc----------------------&gt; 父窗口的 WinProc<br />\n---\t单击按钮\t\t\t\t\t\t转换 WM_COMMAND</p>\n</blockquote>\n<p>代码：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> WM_COMMAND<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1001</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello Button 1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Demo\"</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1002</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello Button 2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Demo\"</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1003</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello Button 3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Demo\"</span><span class=\"token punctuation\">,</span>MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span>uMsg<span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"按钮事件处理逻辑定位\"><a class=\"anchor\" href=\"#按钮事件处理逻辑定位\">#</a> 按钮事件处理逻辑定位</h2>\n<p>设置条件断点</p>\n<p><code>[ESP+8]==WM_COMMAND &amp;&amp; [ESP+0xC]==子窗口ID</code></p>\n<hr />\n<p>总流程大致如上，学会举一反三很重要。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmxhdGNjL3AvNzY5NDIwOC5odG1s\">https://www.cnblogs.com/flatcc/p/7694208.html</span></p>\n",
            "tags": [
                "ESP寻址",
                "定位Win32窗口回调函数"
            ]
        }
    ]
}