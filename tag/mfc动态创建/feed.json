{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"mfc动态创建\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-03%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-03%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA/",
            "title": "MFC六大核心机制-03动态创建",
            "date_published": "2022-05-22T09:10:10.000Z",
            "content_html": "<h1 id=\"为什么要有动态创建\"><a class=\"anchor\" href=\"#为什么要有动态创建\">#</a> 为什么要有动态创建？</h1>\n<p>面向对象术语中有一个名为 persistence，意思是永久保存。 放在 RAM 中的东西， 生命受到电力的左右， 不可能永久保存； 唯一的办法是把它写到文件去。</p>\n<p>看起来永久保存与本节的主题「动态生成」 似乎没有什么干连。 有！ 你把你的数据储存到文件， 这些数据很可能（通常是） 对象中的成员变量； 我把它读出来后， 势必要依据文件上的记载， 重新 new 出那些个对象来。 问题在于， 即使我的程序有那些类定义（就算我的程序和你的程序有一样的内容好了） ， 我能够这么做吗：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> className<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 从文件（或使用者输入） 获得一个类名称</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CObject<span class=\"token operator\">*</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> classname<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这一行行不通</span></pre></td></tr></table></figure><p>首先，  <code>new classname</code>  这个动作就过不了关。 其次， 就算过得了关， new 出来的对象究竟该是什么类类型？</p>\n<p>但我就是没办法恢复你原来的状态 —— 除非我的程序能够「动态生成」。MFC 支持动态生成， 靠的是一组的宏（  <code>DECLARE_DYNCREATE</code>  和  <code>IMPLEMENT_DYNCREATE</code>  ） 和  <code>CRuntimeClass</code>  类。</p>\n<h1 id=\"本节需要掌握的知识点\"><a class=\"anchor\" href=\"#本节需要掌握的知识点\">#</a> 本节需要掌握的知识点</h1>\n<p>1、本节必须掌握的知识点</p>\n<p>动态创建的作用</p>\n<p>二个关键的宏:</p>\n<p><code>DECLARE_DYNCREATE</code> <br />\n <code>IMPLEMENT_DYNCREATE</code></p>\n<p>2、需要简单了解的内容</p>\n<p><code>CRuntimeClass::CreateObject</code> （动态创建函数）</p>\n<h1 id=\"动态创建\"><a class=\"anchor\" href=\"#动态创建\">#</a> 动态创建</h1>\n<p>动态创建就是为了在程序执行期间动态获得的一个类名称。</p>\n<p>首先继续查看  <code>CRuntimeclass</code>  结构体:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">CRuntimeClass</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Attributes</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPCSTR m_lpszClassName<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 类名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">int</span> m_nObjectSize<span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 类的大小</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tUINT m_wSchema<span class=\"token punctuation\">;</span> \t\t\t\t<span class=\"token comment\">// 加载类的模式编号</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnCreateObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 函数指针，定义了一个函数指针 m_pfnCreateObject 用来存放需要支持动态创建类的 CreateObject 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnGetBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pBaseClass<span class=\"token punctuation\">;</span>  \t<span class=\"token comment\">// 父类指针</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// Operations</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 动态创建函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tBOOL <span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pBaseClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 判断函数，判断是否父类</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// dynamic name lookup and creation</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// Implementation</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">Store</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">,</span> UINT<span class=\"token operator\">*</span> pwSchemaNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// CRuntimeClass objects linked together in simple list</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pNextClass<span class=\"token punctuation\">;</span>        \t<span class=\"token comment\">// 指向下一个 CRuntimeClass 结构体指针</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_CLASSINIT<span class=\"token operator\">*</span> m_pClassInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中我们用的到的就是：</p>\n<p><code>CObject* (PASCAL* m_pfnCreateObject)(); // 函数指针，定义了一个函数指针m_pfnCreateObject用来存放需要支持动态创建类的CreateObject函数</code> <br />\n <code>CObject* CreateObject();  // 动态创建函数</code></p>\n<h2 id=\"使用动态创建\"><a class=\"anchor\" href=\"#使用动态创建\">#</a> 使用动态创建</h2>\n<p>跟进  <code>CFramWnd</code>  类、  <code>CWinApp</code>  类来看一下谁支持动态创建，也就是谁使用了相关的宏：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CWinApp</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinThread</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">DECLARE_DYNAMIC</span><span class=\"token punctuation\">(</span>CWinApp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CFrameWnd</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWnd</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">DECLARE_DYNCREATE</span><span class=\"token punctuation\">(</span>CFrameWnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p><code>CFrameWnd</code>  类使用了  <code>DECLARE_DYNCREATE</code>  宏，也就表示其支持动态创建。</p>\n<p>所以我们可以在其派生的  <code>CMainWindow</code>  类也使用动态创建，这里宏的使用和 RTTI 宏的使用是一样的。<br />\n在类中添加如下语句  <code>DECLARE_DYNCREATE(CMainWindow)</code> <br />\n 在类外  <code>IMPLEMENT_DYNCREATE(CMainWindow, CFrameWnd);</code></p>\n<p>然后在  <code>CMyApp::InitInstance()</code>  函数中把  <code>m_pMainWnd = new CMainWindow;</code>  替换成  <code>m_pMainWnd = (CWnd*)(RUNTIME_CLASS(CMainWindow)-&gt;CreateObject());</code></p>\n<p>运行程序，窗口正常创建出来了。</p>\n<p>接下来分析一下动态创建用的宏。</p>\n<h2 id=\"宏declare_dyncreate\"><a class=\"anchor\" href=\"#宏declare_dyncreate\">#</a> 宏 DECLARE_DYNCREATE</h2>\n<p>在 VS2019 中跟进一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">DECLARE_DYNCREATE</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">DECLARE_DYNAMIC</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>发现宏  <code>DECLARE_DYNAMIC</code>  这说明动态创建也支持 RTTI。</p>\n<p>以  <code>DECLARE_DYNCREATE(CMainWindow);</code>  为例，将其展开：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass classCMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"宏implement_dyncreate\"><a class=\"anchor\" href=\"#宏implement_dyncreate\">#</a> 宏 IMPLEMENT_DYNCREATE</h2>\n<p>在 VS2019 中跟进一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">IMPLEMENT_DYNCREATE</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token expression\">CObject<span class=\"token operator\">*</span> PASCAL class_name<span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> class_name<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token function\">IMPLEMENT_RUNTIMECLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">,</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token expression\">class_name<span class=\"token operator\">::</span>CreateObject<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>发现其  <code>IMPLEMENT_RUNTIMECLASS</code>  与前面使用 RTTI 时的第四个参数不一样了。</p>\n<p>以  <code>IMPLEMENT_DYNCREATE(CMainWindow, CFrameWnd);</code>  为例，将其展开：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>selectany<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> CRuntimeClass CMainWindow<span class=\"token operator\">::</span>classCMainWindow <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"CMainWindow\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCMainWindow<span class=\"token operator\">::</span>CreateObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CFrameWnd<span class=\"token operator\">::</span>classCFrameWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CMainWindow<span class=\"token operator\">::</span>classCMainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"分析动态创建\"><a class=\"anchor\" href=\"#分析动态创建\">#</a> 分析动态创建</h2>\n<p>分析一下  <code>CMyApp::InitInstance()</code>  函数中的  <code>m_pMainWnd = (CWnd*)(((CRuntimeClass*)(&amp;CMainWindow::classCMainWindow))-&gt;CreateObject());</code></p>\n<p>在 VS2019 中下断点跟进查看：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CObject<span class=\"token operator\">*</span> <span class=\"token class-name\">CRuntimeClass</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_pfnCreateObject <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">TRACE</span><span class=\"token punctuation\">(</span>traceAppMsg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: Trying to create object which is not \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DECLARE_DYNCREATE \\nor DECLARE_SERIAL: %hs.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tm_lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> pObject <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tTRY</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tpObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>m_pfnCreateObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tEND_TRY</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span> pObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先进入了  <code>CRuntimeClass::CreateObject()</code>  然后调用了函数指针  <code>pObject = (*m_pfnCreateObject)();</code>  既调用了我们的  <code>CreateObject</code>  函数。</p>\n<p>设计的非常巧妙。</p>\n<h2 id=\"课后作业\"><a class=\"anchor\" href=\"#课后作业\">#</a> 课后作业</h2>\n<p>在 CMainWindow 里面定义一个函数。<br />\n <code>CreateObjectByName(THCAR* ClassName)</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 使用宏动态创建对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">//DECLARE_DYNCREATE(CMainWindow);</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//public:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//\tstatic const CRuntimeClass classCMainWindow;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//\tvirtual CRuntimeClass* GetRuntimeClass() const;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//\tstatic CObject* __stdcall CreateObject();</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 自己实现通过名字去动态创建对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass classCMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> <span class=\"token function\">CreateObjectByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span> runtimeClassName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CObject<span class=\"token operator\">*</span> __stdcall <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CObject<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CreateObjectByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> pClass <span class=\"token operator\">=</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CMainWindow<span class=\"token operator\">::</span>classCMainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> pClass<span class=\"token operator\">-></span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span> runtimeClassName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> className<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> baseRuntimeClass <span class=\"token operator\">=</span> runtimeClassName<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>runtimeClassName<span class=\"token operator\">-></span>m_lpszClassName <span class=\"token operator\">==</span> className<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> runtimeClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>baseRuntimeClass<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span>baseRuntimeClass<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>selectany<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> CRuntimeClass CMainWindow<span class=\"token operator\">::</span>classCMainWindow <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token string\">\"CMainWindow\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tCMainWindow<span class=\"token operator\">::</span>CreateObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CFrameWnd<span class=\"token operator\">::</span>classCFrameWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n",
            "tags": [
                "MFC动态创建"
            ]
        }
    ]
}