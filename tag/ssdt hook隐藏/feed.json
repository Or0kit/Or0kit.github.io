{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"ssdt hook隐藏\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/SystemCall/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8-SSDT%E9%9A%90%E8%97%8F-%E6%80%9D%E8%B7%AF-%E5%AE%9E%E6%88%98/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/SystemCall/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8-SSDT%E9%9A%90%E8%97%8F-%E6%80%9D%E8%B7%AF-%E5%AE%9E%E6%88%98/",
            "title": "系统调用-SSDT HOOK隐藏-思路-实战",
            "date_published": "2022-01-01T00:52:22.000Z",
            "content_html": "<h1 id=\"ssdt-hook隐藏思路\"><a class=\"anchor\" href=\"#ssdt-hook隐藏思路\">#</a> SSDT HOOK 隐藏思路</h1>\n<p>通过逆向分析 API 由 3 环进 0 环的过程，找到其中涉及系统服务表（SST）的位置，可以分析出一些能动手脚的地方。</p>\n<ol>\n<li>\n<p>增加函数项，修改原有代码服务号。</p>\n</li>\n<li>\n<p>修改线程结构体_KTHREAD + E0 （这里存放着 SSDT 的地址），改成我们的自己构造的 SSDT。<br />\n针对的检测是：检测老的 SSDT 有没有被挂钩，但我们不动操作系统的 SSDT 这样就可以绕过了。</p>\n</li>\n</ol>\n<blockquote>\n<p>首先找到进程再找其内的线程结构体，然后修改为我们构造的 SSDT 的地址，既要先拷贝一份 SSDT，并且因为线程可能会被切换，我们要设置一个定时器不停的遍历修改。<br />\n或者修改把线程 E0 赋给 edi 的值，既 INLINE HOOK 修改这里。</p>\n</blockquote>\n<ol start=\"3\">\n<li>系统调用过程中有两个环节是 找到要调用的函数 以及 去调用这个函数，我们可以改找到的函数，改调用的函数。</li>\n</ol>\n<p>另外火哥还说了 改所有线程的 E0，在切换线程的地方 HOOK 等等……。</p>\n<p>在 SSDT 这里能做的前辈们差不多都已经做过了…… 我们主要学习的是思想。・</p>\n<h1 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h1>\n<p><strong>Hook.h</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ssdt.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 被 HOOK 函数的函数指针</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//HOOK NtOpenProcess 函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">NTSTATUS</span><span class=\"token punctuation\">(</span>NTAPI <span class=\"token operator\">*</span>PNTOPENPROCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     PHANDLE ProcessHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     ACCESS_MASK DesiredAccess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     POBJECT_ATTRIBUTES ObjectAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     PCLIENT_ID ClientId</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 函数声明</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>VOID <span class=\"token function\">HookNtOpenProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>VOID <span class=\"token function\">UnHookNtOpenProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>VOID <span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>VOID <span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>NTSTATUS NTAPI <span class=\"token function\">ModifyNtOpenProcess</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     PHANDLE ProcessHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     ACCESS_MASK DesiredAccess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     POBJECT_ATTRIBUTES ObjectAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     PCLIENT_ID ClientId</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 原来的函数地址</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>ULONG uOldNtOpenProcess<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>Hook.c</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Hook.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>VOID <span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t__asm</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tcli<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 关闭中断</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> cr0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tor eax<span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// WP 位置 1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tmov cr0<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>VOID <span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t__asm</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tsti<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 恢复中断</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> cr0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tand eax<span class=\"token punctuation\">,</span> not <span class=\"token number\">0x10000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// WP 位置 0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tmov cr0<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>VOID <span class=\"token function\">HookNtOpenProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The start of the hook!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">[</span><span class=\"token number\">0x7A</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>ModifyNtOpenProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>VOID <span class=\"token function\">UnHookNtOpenProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">[</span><span class=\"token number\">0x7A</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> uOldNtOpenProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The end of the hook!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>NTSTATUS NTAPI <span class=\"token function\">ModifyNtOpenProcess</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tPHANDLE ProcessHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tACCESS_MASK DesiredAccess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tPOBJECT_ATTRIBUTES ObjectAttributes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tPCLIENT_ID ClientId</pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印NtOpenProcess的参数：%X %X %X %X\\t\\n\"</span><span class=\"token punctuation\">,</span> ProcessHandle<span class=\"token punctuation\">,</span> DesiredAccess<span class=\"token punctuation\">,</span> ObjectAttributes<span class=\"token punctuation\">,</span> ClientId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PNTOPENPROCESS<span class=\"token punctuation\">)</span>uOldNtOpenProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>ProcessHandle<span class=\"token punctuation\">,</span> DesiredAccess<span class=\"token punctuation\">,</span> ObjectAttributes<span class=\"token punctuation\">,</span> ClientId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>ssdt.h</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//SST 系统服务表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_KSYSTEM_SERVICE_TABLE</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPULONG FuncTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPULONG Count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tULONG ServiceLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPUCHAR ArgumentTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span>KSST<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PKSST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//SSDT </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_SSDT</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tKSST ServiceTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tKSST ServiceTableShadow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tKSST un1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tKSST un2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span>SSDT<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PSSDT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 构造 SSDT</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>PSSDT MySSDT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>BOOLEAN ThreadFlag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>HANDLE hThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// 获取 SSDT 的导出变量</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">extern</span> PSSDT KeServiceDescriptorTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">// 声明函数</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>NTSTATUS <span class=\"token function\">GetCopySSDT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>ULONG <span class=\"token function\">FindProcess</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> ProcessName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>VOID <span class=\"token function\">TraversalThreadReplaceE0</span><span class=\"token punctuation\">(</span>ULONG eProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>VOID <span class=\"token function\">ResetThreadReplaceE0</span><span class=\"token punctuation\">(</span>ULONG eProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>VOID <span class=\"token function\">WorkThreadFunc</span><span class=\"token punctuation\">(</span>_In_ PVOID StartContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>main.c</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"Hook.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tThreadFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 确保线程停止</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tLARGE_INTEGER timer <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ttimer<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">KeDelayExecutionThread</span><span class=\"token punctuation\">(</span>KernelMode<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MySSDT <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>MySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">,</span> <span class=\"token string\">'MySF'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tMySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>MySSDT<span class=\"token punctuation\">,</span> <span class=\"token string\">'MySD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tMySSDT <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>NTSTATUS <span class=\"token function\">GetCopySSDT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"KeServiceDescriptorTable:%p\\t\\n\", KeServiceDescriptorTable);</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tPSSDT SSDTShadow <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PSSDT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>KeServiceDescriptorTable<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">//DbgPrint(\"SSDTShadow:%p\\t\\n\", SSDTShadow);</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">//__asm int 3;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token comment\">// 构造一份 SSDT</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// 申请一份 SSDT 大小的内存</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tMySSDT <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PSSDT<span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>SSDT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MySD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MySSDT <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySD ExAllocatePoolWithTag Failed!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>MySSDT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>SSDT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySSDT:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> MySSDT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token comment\">// 申请函数表的内存</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\tNonPagedPool<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\tKeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>ServiceLimit <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token string\">'MySF'</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token function\">ExFreePoolWithTag</span><span class=\"token punctuation\">(</span>MySSDT<span class=\"token punctuation\">,</span> <span class=\"token string\">'MySD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tMySSDT <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySF ExAllocatePoolWithTag Failed!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>MySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> KeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>ServiceLimit <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token comment\">// 拷贝 SSDT</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>MySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>PVOID<span class=\"token punctuation\">)</span>KeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\tKeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>ServiceLimit <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>ServiceLimit <span class=\"token operator\">=</span> KeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>ServiceLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>ArgumentTable <span class=\"token operator\">=</span> KeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>ArgumentTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token comment\">// 拷贝 Shadow 表</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token comment\">// 判断 GUI 函数表是否已经加载，如果不是 GUI 线程，则操作系统不会挂载 GUI 函数表</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token comment\">// 思路判断 Shadwo 函数表的物理页属性</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token comment\">//if (影子表中的函数表被挂载了)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token comment\">//\t// 申请影子表中函数表的内存</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token comment\">//\tMySSDT->ServiceTableShadow.FuncTable = (PULONG)ExAllocatePoolWithTag(</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token comment\">//\t\tNonPagedPool,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token comment\">//\t\tSSDTShadow->ServiceTableShadow.ServiceLimit * 4,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token comment\">//\t\t'MySH'</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token comment\">//\t);</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token comment\">//\tif (MySSDT->ServiceTableShadow.FuncTable == NULL)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token comment\">//\t&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token comment\">//\t\tExFreePoolWithTag(MySSDT->ServiceTable.FuncTable, 'MySF');</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token comment\">//\t\tExFreePoolWithTag(MySSDT, 'MySD');</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token comment\">//\t\tDbgPrint(\"MySH ExAllocatePoolWithTag Failed!\\t\\n\");</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token comment\">//\t\treturn STATUS_UNSUCCESSFUL;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token comment\">//\t&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token comment\">//\tmemset((PVOID)MySSDT->ServiceTableShadow.FuncTable, 0, SSDTShadow->ServiceTableShadow.ServiceLimit * 4);</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token comment\">//\tmemcpy((PVOID)MySSDT->ServiceTableShadow.FuncTable, (PVOID)SSDTShadow->ServiceTableShadow.FuncTable,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token comment\">//\t\tSSDTShadow->ServiceTableShadow.ServiceLimit * 4);</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTableShadow<span class=\"token punctuation\">.</span>FuncTable <span class=\"token operator\">=</span> SSDTShadow<span class=\"token operator\">-></span>ServiceTableShadow<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTableShadow<span class=\"token punctuation\">.</span>ServiceLimit <span class=\"token operator\">=</span> SSDTShadow<span class=\"token operator\">-></span>ServiceTableShadow<span class=\"token punctuation\">.</span>ServiceLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tMySSDT<span class=\"token operator\">-></span>ServiceTableShadow<span class=\"token punctuation\">.</span>ArgumentTable <span class=\"token operator\">=</span> SSDTShadow<span class=\"token operator\">-></span>ServiceTableShadow<span class=\"token punctuation\">.</span>ArgumentTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\">// 遍历进程 找到进程</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>ULONG <span class=\"token function\">FindProcess</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> ProcessName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\tULONG Pro<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t<span class=\"token comment\">// 由 KPCR+0x124 的位置得到当前 CPU 正在处理的线程的结构体的指针，_KTHREAD + 0x44 的位置能够得到此线程的进程结构体的地址</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x124</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\tmov ecx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax <span class=\"token operator\">+</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\tmov Pro<span class=\"token punctuation\">,</span> ecx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token comment\">// 进程结构体 EPROCESS +0x88 的位置是一个链接所有进程的双向链表</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\tPLIST_ENTRY pListProcess <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLIST_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Pro <span class=\"token operator\">+</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\tBOOLEAN Flag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t<span class=\"token comment\">// 遍历进程</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pListProcess<span class=\"token operator\">-></span>Flink <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>PLIST_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Pro <span class=\"token operator\">+</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t<span class=\"token comment\">//EPROCESS 结构体</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\tULONG NextProcess <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pListProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>ProcessName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>PCHAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>NextProcess <span class=\"token operator\">+</span> <span class=\"token number\">0x174</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FindProcess:%s PEPROCESS:%X\\t\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PCHAR<span class=\"token punctuation\">)</span>NextProcess <span class=\"token operator\">+</span> <span class=\"token number\">0x174</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> NextProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> NextProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\tpListProcess <span class=\"token operator\">=</span> pListProcess<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>VOID <span class=\"token function\">TraversalThreadReplaceE0</span><span class=\"token punctuation\">(</span>ULONG eProc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>eProc <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eProcess is NULL\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token comment\">// 由进程结构体遍历线程</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token comment\">// 获取线程的双向链表</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token comment\">//+0x190 ThreadListHead   : _LIST_ENTRY [ 0x89ff024c - 0x89dbd56c ]</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\tPLIST_ENTRY ThreadList <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLIST_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>eProc <span class=\"token operator\">+</span> <span class=\"token number\">0x190</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t<span class=\"token comment\">// 找了半天错误 原来是这里没有获取 焯！  PLIST_ENTRY CurrentThreadList = ThreadList</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\tPLIST_ENTRY CurrentThreadList <span class=\"token operator\">=</span> ThreadList<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token comment\">// 遍历线程</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\t<span class=\"token comment\">// 获取当前线程结构体的首部</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\tULONG CurrentThread <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>CurrentThreadList <span class=\"token operator\">-</span> <span class=\"token number\">0x22c</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t<span class=\"token comment\">// 取出线程中存储的 SSDT 的值</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\tPULONG ServiceTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CurrentThread <span class=\"token operator\">+</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ServiceTable:%X\\t\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ServiceTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ServiceTable <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>MySSDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t<span class=\"token operator\">*</span>ServiceTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>MySSDT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\tCurrentThreadList <span class=\"token operator\">=</span> CurrentThreadList<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>CurrentThreadList<span class=\"token operator\">-></span>Flink <span class=\"token operator\">!=</span> ThreadList<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>VOID <span class=\"token function\">ResetThreadReplaceE0</span><span class=\"token punctuation\">(</span>ULONG eProc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>eProc <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eProcess is NULL\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\tPLIST_ENTRY ThreadList <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLIST_ENTRY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>eProc <span class=\"token operator\">+</span> <span class=\"token number\">0x190</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\tPLIST_ENTRY CurrentThreadList <span class=\"token operator\">=</span> ThreadList<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t<span class=\"token comment\">// 遍历线程</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t<span class=\"token comment\">// 获取当前线程结构体的首部</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\tULONG CurrentThread <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>CurrentThreadList <span class=\"token operator\">-</span> <span class=\"token number\">0x22c</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t<span class=\"token comment\">// 取出线程中存储的 SSDT 的值</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\tPULONG ServiceTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CurrentThread <span class=\"token operator\">+</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\tULONG ShadowTable <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>KeServiceDescriptorTable<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ServiceTable <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span>ShadowTable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t<span class=\"token operator\">*</span>ServiceTable <span class=\"token operator\">=</span> ShadowTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ServiceTable:%X\\t\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ServiceTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t\tCurrentThreadList <span class=\"token operator\">=</span> CurrentThreadList<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>CurrentThreadList<span class=\"token operator\">-></span>Flink <span class=\"token operator\">!=</span> ThreadList<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>VOID <span class=\"token function\">WorkThreadFunc</span><span class=\"token punctuation\">(</span>PVOID StartContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\tThreadFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\tULONG pProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\tLARGE_INTEGER timer <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\ttimer<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WorkThreadFunc 开始运行!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ThreadFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t\t<span class=\"token function\">KeDelayExecutionThread</span><span class=\"token punctuation\">(</span>KernelMode<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t\tpProcess <span class=\"token operator\">=</span> <span class=\"token function\">FindProcess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dbgview.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 一直查找此进程，因为此进程可能会被关闭</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t<span class=\"token function\">TraversalThreadReplaceE0</span><span class=\"token punctuation\">(</span>pProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t<span class=\"token function\">ResetThreadReplaceE0</span><span class=\"token punctuation\">(</span>pProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t<span class=\"token function\">UnHookNtOpenProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WorkThreadFunc 结束运行!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t<span class=\"token function\">ZwClose</span><span class=\"token punctuation\">(</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我运行了!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t<span class=\"token comment\">// 拷贝一份 SSDT 表</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCopySSDT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GetCopySSDT Failed!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t<span class=\"token comment\">// 打印一下 MySSDT</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySSDT:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> MySSDT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>\t<span class=\"token comment\">// 定义老的 NtOpenProcess 地址</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>\tuOldNtOpenProcess <span class=\"token operator\">=</span> MySSDT<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">[</span><span class=\"token number\">0x7A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uOldNtOpenProcess:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> uOldNtOpenProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>\t<span class=\"token comment\">// 开始 Hook</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>\t<span class=\"token function\">HookNtOpenProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>\t<span class=\"token comment\">// 遍历进程 找到进程</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>\t<span class=\"token comment\">// 遍历线程 替换 E0 位置</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>\t<span class=\"token comment\">// 设置定时器，每隔 10 毫秒修改一次</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>\t<span class=\"token comment\">// 结束时恢复 E0，结束 HOOK，关闭句柄</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>\t<span class=\"token keyword\">extern</span> HANDLE hThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>\t<span class=\"token function\">PsCreateSystemThread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>hThread<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> WorkThreadFunc<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"235\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"236\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"运行截图\"><a class=\"anchor\" href=\"#运行截图\">#</a> 运行截图</h2>\n<p><img data-src=\"image001.png\" alt=\"\" /><br />\n<img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"反思\"><a class=\"anchor\" href=\"#反思\">#</a> 反思</h1>\n<p>学过知识没有记住，要多做练习。</p>\n",
            "tags": [
                "SSDT HOOK隐藏"
            ]
        }
    ]
}