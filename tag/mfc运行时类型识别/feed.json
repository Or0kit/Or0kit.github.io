{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"mfc运行时类型识别\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-02MFC%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E5%9E%8B%E8%AF%86%E5%88%AB%EF%BC%88RTTI%EF%BC%89/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC%E5%85%AD%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6-02MFC%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E5%9E%8B%E8%AF%86%E5%88%AB%EF%BC%88RTTI%EF%BC%89/",
            "title": "MFC六大核心机制-02MFC运行时类型识别（RTTI）",
            "date_published": "2022-05-16T11:40:41.000Z",
            "content_html": "<h1 id=\"什么是rtti\"><a class=\"anchor\" href=\"#什么是rtti\">#</a> 什么是 RTTI</h1>\n<p>MFC 运行时类型识别（英文：Runtime Type Information，缩写：RTTI），能够使用基类的指针或引用来检查这些指针或引用所指的对象的实际派生类，简单的意思就是它可以帮助我们在程序运行的过程中了解到某个对象所属类。</p>\n<blockquote>\n<p>简单的来讲运行时类型识别（RTTI）即是在程序运行的过程中实现对对象类型的识别，因为在大多数情况下，程序中的对象等都是在编译时就已知该对象的数据类型，所以要实现运行时对象类型识别则就需要花费一番心思。</p>\n</blockquote>\n<h2 id=\"本节需要掌握的知识点\"><a class=\"anchor\" href=\"#本节需要掌握的知识点\">#</a> 本节需要掌握的知识点</h2>\n<p>1、本节必须掌握的知识点</p>\n<p>MFC 为什么要自己去构建 RTTI？</p>\n<p>关键的宏：<br />\n <code>DECLARE_DYNAMIC</code> <br />\n <code>IMPLEMENT_DYNAMIC</code> <br />\n <code>RUNTIME_CLASS</code> <br />\n 关键的结构体  <code>CRuntimeClass</code></p>\n<p>2、需要简单了解的内容</p>\n<p><code>static</code>  关键字的作用<br />\n <code>const</code>  关键字的作用<br />\n C++ RTTI  <code>typeid</code>  操作符</p>\n<h2 id=\"使用编译器自带的rtti\"><a class=\"anchor\" href=\"#使用编译器自带的rtti\">#</a> 使用编译器自带的 RTTI</h2>\n<p>这是 VS2019 的 RTTI：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>但是后面我在测试使用 <code>typeid</code>  时发现开不开这个都行。</p>\n<p>需要包含  <code>typeinfo</code>  头文件<br />\n <code>typeid(类名)</code> <br />\n <code>typeid(对象)</code></p>\n<p>如下代码简单用一下 typeid，我们定一个了一个类 CAnimal 并创建了一个对象 pAnimal，使用 typeid 进行比较发现两者都属于同一个类：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;typeinfo></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CAnimal</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token operator\">~</span><span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">CAnimal</span><span class=\"token operator\">::</span><span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token class-name\">CAnimal</span><span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">CAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tCAnimal pAnimal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// C++ rtti 的简单使用</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeid</span><span class=\"token punctuation\">(</span>pAnimal<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeid</span><span class=\"token punctuation\">(</span>CAnimal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tstd<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"pAnimal 是属于CAnimal的对象\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>执行结果：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"static关键词的作用\"><a class=\"anchor\" href=\"#static关键词的作用\">#</a> static 关键词的作用</h2>\n<p>当用 static 关键词定义一个变量，该变量则存储在全局数据区而不是局部的，如果 static 关键词的变量为某类的成员，则该成员与类进行关联，但并不会与类创建的对象进行关联，也就表示我们不需要创建对象就可以使用这个成员，所以我们想要使用的话就要通过 <code>类名::成员名</code> 的方式去使用，并且我们不可以在类的内部去赋值初始化，只可以在外部。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h2 id=\"const关键词的作用\"><a class=\"anchor\" href=\"#const关键词的作用\">#</a> const 关键词的作用</h2>\n<p>使用 const 关键词定义的成员，同样没办法直接初始化，需要在初始化列表中进行初始化：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h2 id=\"static和const关键词一起使用\"><a class=\"anchor\" href=\"#static和const关键词一起使用\">#</a> static 和 const 关键词一起使用</h2>\n<p>如果一个成员使用了 static const 双关键词，我们还是按照 static 关键词的方法去使用，但是在初始化的时候需要加上 const 关键词：</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h2 id=\"mfc为什么要自己去构建rtti\"><a class=\"anchor\" href=\"#mfc为什么要自己去构建rtti\">#</a> MFC 为什么要自己去构建 RTTI</h2>\n<p>在 MFC 出来的时候 C++ 并没有 RTTI 这个概念，所以 MFC 自己设计了这样一套东西，其依靠的就是两个宏：  <code>DECLARE_DYNAMIC</code>  、  <code>IMPLEMENT_DYNAMIC</code>  ，其中  <code>IMPLEMENT_DYNAMIC</code>  宏也包含了一个关键的宏  <code>RUNTIME_CLASS</code>  以及关键结构体  <code>CRuntime Class</code>  。</p>\n<h2 id=\"mfc中rtti的本质\"><a class=\"anchor\" href=\"#mfc中rtti的本质\">#</a> MFC 中 RTTI 的本质</h2>\n<p>通过前面的介绍我们知道了 RTTI 的核心就是知道<strong>某个对象是属于某个类</strong></p>\n<p>这里我们继续使用前面我们手动创建 MFC 的代码：</p>\n<p>Hello.h:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;afxwin.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CWinApp</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> BOOL <span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMainWindow</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CFrameWnd</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Hello.cpp:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Hello.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CMyApp theApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>BOOL <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm_pMainWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CMainWindow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>m_nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">CMainWindow</span><span class=\"token operator\">::</span><span class=\"token function\">CMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">Create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tWS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_THICKFRAME <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_VSCROLL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// 左上角，既起始位置是（400,300），右下角（800,700）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 700 -300 是高度  800-400 是宽度</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">CRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>那么我们想知道我们的  <code>theApp</code>  是属于那个类的，我们该怎么做呢？</p>\n<p>接下来我们参考 MFC 是如何实现 RTTI 的，我们跟着模仿一个。</p>\n<p>我们先看一下  <code>CWinApp</code>  类:</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>F12 跟进去后可以看到宏  <code>DECLARE_DYNAMIC</code></p>\n<p>我们修改为我们的  <code>DECLARE_DYNAMIC(CMyApp)</code>  , 但这个时候仍然无法编译，我们还缺少另一个宏 <code>IMPLEMENT_DYNAMIC(CMyApp, CWinApp);</code> ，把这句代码放到 Hello.cpp 中的  <code>CMyApp theApp;</code>  前面即可。</p>\n<p>这样我们的代码就有了运行时类型识别的功能了。</p>\n<p>接下来使用  <code>IsKindOf()</code>  函数。</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>如图所示，成功！</p>\n<p>接下来了解几个宏。</p>\n<h3 id=\"宏runtime_class\"><a class=\"anchor\" href=\"#宏runtime_class\">#</a> 宏 RUNTIME_CLASS</h3>\n<p>在 VS2019 中的宏定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">RUNTIME_CLASS</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span> <span class=\"token function\">_RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">_RUNTIME_CLASS</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>class_name<span class=\"token operator\">::</span><span class=\"token keyword\">class</span></span><span class=\"token punctuation\">##</span><span class=\"token expression\">class_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>其中两个 #号则代表拼接符，一个 #号则表示转为字符串。<br />\n也就是说  <code>RUNTIME_CLASS(CWinApp)</code>  这一段代码可以转换为  <code>((CRuntimeClass*)(&amp;CWinApp::classCWinApp))</code></p>\n<p>这段代码代表着 <strong>取一个类的成员的地址并将其转化为  <code>CRuntimeClass</code>  类型的指针</strong>，而  <code>CRuntimeClass</code>  的结构如下：</p>\n<h3 id=\"cruntimeclass-结构体\"><a class=\"anchor\" href=\"#cruntimeclass-结构体\">#</a> CRuntimeClass 结构体</h3>\n<p>在 VS2019 中的定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">CRuntimeClass</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Attributes</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tLPCSTR m_lpszClassName<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 类名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">int</span> m_nObjectSize<span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 类的大小</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tUINT m_wSchema<span class=\"token punctuation\">;</span> \t\t\t\t<span class=\"token comment\">// 加载类的模式编号</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnCreateObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 函数指针，定义了一个函数指针 m_pfnCreateObject 用来存放需要支持动态创建类的 CreateObject 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>PASCAL<span class=\"token operator\">*</span> m_pfnGetBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pBaseClass<span class=\"token punctuation\">;</span>  \t<span class=\"token comment\">// 父类指针</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// Operations</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tCObject<span class=\"token operator\">*</span> <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 动态创建函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tBOOL <span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pBaseClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 判断函数，判断是否父类</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// dynamic name lookup and creation</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">FromName</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">static</span> CObject<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>LPCWSTR lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// Implementation</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">Store</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">static</span> CRuntimeClass<span class=\"token operator\">*</span> PASCAL <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>CArchive<span class=\"token operator\">&amp;</span> ar<span class=\"token punctuation\">,</span> UINT<span class=\"token operator\">*</span> pwSchemaNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// CRuntimeClass objects linked together in simple list</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> m_pNextClass<span class=\"token punctuation\">;</span>        \t<span class=\"token comment\">// 指向下一个 CRuntimeClass 结构体指针</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">const</span> AFX_CLASSINIT<span class=\"token operator\">*</span> m_pClassInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接下来继续查看宏  <code>DECLARE_DYNAMIC</code></p>\n<h3 id=\"宏declare_dynamic\"><a class=\"anchor\" href=\"#宏declare_dynamic\">#</a> 宏 DECLARE_DYNAMIC</h3>\n<p>在 VS2019 中的宏定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">DECLARE_DYNAMIC</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token expression\"><span class=\"token keyword\">public</span><span class=\"token operator\">:</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass <span class=\"token keyword\">class</span></span><span class=\"token punctuation\">##</span><span class=\"token expression\">class_name<span class=\"token punctuation\">;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token keyword\">virtual</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> </span></span>\\</pre></td></tr></table></figure><p>所以  <code>DECLARE_DYNAMIC(CMyApp)</code>  便可转变为:</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CRuntimeClass classCMyApp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">virtual</span> CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>可以发现这句宏的作用就是声明了一个  <code>public</code>  的  <code>CRuntimeClass</code>  类型的变量：  <code>class##class_name</code> ，并且声明了一个名叫  <code>GetRuntimeClass</code>  的虚函数。</p>\n<p>而声明了一个  <code>static</code>  类型的类的成员变量，<strong>就必须要在类的外面进行初始化</strong>，由此我们有额可以想到宏  <code>IMPLEMENT_DYNAMIC</code>  的含义。</p>\n<h3 id=\"宏implement_dynamic\"><a class=\"anchor\" href=\"#宏implement_dynamic\">#</a> 宏 IMPLEMENT_DYNAMIC</h3>\n<p>在 VS2019 中的宏定义为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">IMPLEMENT_DYNAMIC</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token expression\"><span class=\"token function\">IMPLEMENT_RUNTIMECLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">,</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">IMPLEMENT_RUNTIMECLASS</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">,</span> base_class_name<span class=\"token punctuation\">,</span> wSchema<span class=\"token punctuation\">,</span> pfnNew<span class=\"token punctuation\">,</span> class_init<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token expression\">AFX_COMDAT <span class=\"token keyword\">const</span> CRuntimeClass class_name<span class=\"token operator\">::</span><span class=\"token keyword\">class</span></span><span class=\"token punctuation\">##</span><span class=\"token expression\">class_name <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">class</span><span class=\"token expression\">_name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">class_name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> wSchema<span class=\"token punctuation\">,</span> pfnNew<span class=\"token punctuation\">,</span> </span></span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token expression\"><span class=\"token function\">RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>base_class_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> class_init <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token expression\">CRuntimeClass<span class=\"token operator\">*</span> class_name<span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token expression\"><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token function\">RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></span></span></pre></td></tr></table></figure><p>里面又包含了另一个宏  <code>IMPLEMENT_RUNTIMECLASS</code></p>\n<p>所以  <code>IMPLEMENT_DYNAMIC(CMyApp, CWinApp);</code>  可以转换为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>selectany<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> CRuntimeClass CMyApp<span class=\"token operator\">::</span>classCMyApp <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token string\">\"CMyApp\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">CMyApp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CWinApp<span class=\"token operator\">::</span>classCWinApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>CRuntimeClass<span class=\"token operator\">*</span> <span class=\"token class-name\">CMyApp</span><span class=\"token operator\">::</span><span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token comment\">// 最后的 const 表示对该成员无法更改</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>CMyApp<span class=\"token operator\">::</span>classCMyApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"分析-iskindof-函数\"><a class=\"anchor\" href=\"#分析-iskindof-函数\">#</a> 分析 IsKindOf 函数</h3>\n<p>在 VS 中跟进一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CObject</span><span class=\"token operator\">::</span><span class=\"token function\">IsKindOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// it better be in valid memory, at least for CObject size</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxIsValidAddress</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// simple SI case</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tCRuntimeClass<span class=\"token operator\">*</span> pClassThis <span class=\"token operator\">=</span> <span class=\"token function\">GetRuntimeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span>pClassThis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> pClassThis<span class=\"token operator\">-></span><span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span>pClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>调用了当前类的  <code>GetRuntimeClass()</code>  函数，既返回当前类中的  <code>CRuntimeClass</code>  指针类型的成员，然后调用了其的  <code>IsDerivedFrom</code>  函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CRuntimeClass</span><span class=\"token operator\">::</span><span class=\"token function\">IsDerivedFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pBaseClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxIsValidAddress</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">ENSURE</span><span class=\"token punctuation\">(</span>pBaseClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token function\">AfxIsValidAddress</span><span class=\"token punctuation\">(</span>pBaseClass<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// simple SI case</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">const</span> CRuntimeClass<span class=\"token operator\">*</span> pClassThis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pClassThis <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pClassThis <span class=\"token operator\">==</span> pBaseClass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">_AFXDLL</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pClassThis<span class=\"token operator\">-></span>m_pfnGetBaseClass <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tpClassThis <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pClassThis<span class=\"token operator\">-></span>m_pfnGetBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpClassThis <span class=\"token operator\">=</span> pClassThis<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// walked to the top, no match</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>取当前的  <code>CRuntimeClass</code>  ，因为它是 const 类型，所以也要加 const 关键字，然后进入一个循环，一直取当前类的  <code>CRuntimeClass</code>  类型的父类指针。</p>\n<h2 id=\"课后练习\"><a class=\"anchor\" href=\"#课后练习\">#</a> 课后练习</h2>\n<ol>\n<li>让我们的第二个类也支持 RTTI</li>\n<li>分别自写函数打印出它的父类的  <code>CRuntime</code>  信息</li>\n</ol>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PrintCRuntimeInfo</span><span class=\"token punctuation\">(</span>CRuntimeClass<span class=\"token operator\">*</span> pClass<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">char</span> chInput<span class=\"token punctuation\">[</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pClass <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"--------------------------------------\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_lpszClassName:[%s]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_lpszClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_nObjectSize:[%d]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_nObjectSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_wSchema:[%#010X]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_wSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">,</span> <span class=\"token string\">\"m_pBaseClass:[%p]\\t\\n\"</span><span class=\"token punctuation\">,</span> pClass<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>chInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tpClass <span class=\"token operator\">=</span> pClass<span class=\"token operator\">-></span>m_pBaseClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image010.png\" alt=\"\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheXVoYWl0YW5nMS9hcnRpY2xlL2RldGFpbHMvMTEyMjIxMzU0\">https://blog.csdn.net/dayuhaitang1/article/details/112221354</span></p>\n",
            "tags": [
                "MFC运行时类型识别",
                "关键字static",
                "关键字const"
            ]
        }
    ]
}