{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"过滤\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E4%B8%B2%E5%8F%A3%E7%9A%84%E8%BF%87%E6%BB%A4/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E4%B8%B2%E5%8F%A3%E7%9A%84%E8%BF%87%E6%BB%A4/",
            "title": "过滤驱动-串口的过滤",
            "date_published": "2022-07-05T20:10:32.000Z",
            "content_html": "<h1 id=\"过滤filter的概念\"><a class=\"anchor\" href=\"#过滤filter的概念\">#</a> 过滤（Filter）的概念</h1>\n<p>过滤是及其重要的一个概念，过滤是在不影响上层和下层解耦你的情况下，在 Windows 系统内核中加入新的层，从而不需要修改上层软件或者下层的真实驱动程序，就加入了新的功能。</p>\n<p>例如：实时监控的反病毒软件。</p>\n<p>反病毒软件需要在不改变文件系统上层和下层接口的情况下，在中间层加入一个过滤层，这样就可以在上次软件读取文件、下层驱动提供数据时，对这些数据进行扫描，看其中是否含有某个病毒的特征码。</p>\n<p>这是一个典型的过滤过程。</p>\n<h1 id=\"串口过滤\"><a class=\"anchor\" href=\"#串口过滤\">#</a> 串口过滤</h1>\n<p>串行接口，简称串口，也就是 COM 接口，是采用串行通信协议的扩展接口。<br />\n串口的出现是在 1980 年前后，数据传输率是 115kbps～230kbps，串口一般用来连接鼠标和外置 Modem 以及老式摄像头和写字板等设备，目前部分新主板已开始取消该接口。</p>\n<p>现在 USB 取代了串口，可是给串口留下了后路。没有串口的电脑上，只需要接上一个 USB 转串口的转换器就可以了。具体可以上淘宝、天猫查看实物图。</p>\n<p>串口的过滤很简单，在安全开发中意义也不大，只是作为学习，为之后的键盘过滤和文件系统过滤等打基础。</p>\n<p>在 Windows 中串口设备是有固定名字的。<br />\n第一个串口名字为  <code>\\Device\\Serial0</code>  ，第二个串口的名字为  <code>\\Device\\Serial1</code>  ，以此类推。注意 C 语言中的 <code>\\</code>  要写成 <code>\\\\</code> 。</p>\n<h2 id=\"设备绑定的内核api\"><a class=\"anchor\" href=\"#设备绑定的内核api\">#</a> 设备绑定的内核 API</h2>\n<p>进行过滤的最主要方法是对一个设备对象（Device Object）进行绑定。通过编程生成一个虚拟设备，并 “绑定”（Attach）在一个真实的设备上。一旦绑定，则本来操作系统发送给真实设备的请求，就会首先发送的这个虚拟设备。</p>\n<p>我们可以首先认为：一个正是的设备对应一个设备对象（虽然实际的对应关系可能复杂的多）。</p>\n<p>在 WDK 中，有多个内核 API 能实现绑定功能。</p>\n<h3 id=\"ioattachdevice\"><a class=\"anchor\" href=\"#ioattachdevice\">#</a> IoAttachDevice</h3>\n<p>下面是其中一个函数的原型：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token function\">IoAttachDevice</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>           IN PDEVICE_OBJECT SourceDevice<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           IN PUNICODE_STRING TargetDevice<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           OUT PDEVICE_OBJECT <span class=\"token operator\">*</span>AttachedDevice  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数：</p>\n<p><code>SourceDevice</code>  是调用者生成的用来过滤的虚拟设备。<br />\n <code>TargetDevice</code>  是要被绑定的目标设备。<strong>注意此参数的类型是  <code>PUNICODE_STRING</code>  是一个字符串，这个字符串是被绑定的设备的名字</strong>。<br />\n <code>AttachedDevice</code>  是荣来返回的二级指针。</p>\n<p><strong>注意：</strong></p>\n<p>Windows 中并不是所有的设备对象都有名字，只有有名字的设备，才能用这个内核 API 绑定。</p>\n<h3 id=\"设备栈\"><a class=\"anchor\" href=\"#设备栈\">#</a> 设备栈</h3>\n<p>绑定设备这里还有一个疑问：</p>\n<p>假设使用这个函数绑定一个名字所对应的设备，那么如果这个设备已经被其他设备绑定了，会怎样呢？</p>\n<p>如果一个设备被其他设备绑定了，它们在一起的一组设备，被称为设备栈（详细可以参考<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wbnBvbi5jb20vYXJ0aWNsZS9kZXRhaWwtMjE1Lmh0bWw=\"> http://www.pnpon.com/article/detail-215.html</span>）。</p>\n<p><strong>实际上，  <code>IoAttachDevice</code>  总是会绑定设备栈上最顶层的那个设备。</strong></p>\n<h3 id=\"ioattachdevicetodevicestack和ioattachdevicetodevicestacksafe\"><a class=\"anchor\" href=\"#ioattachdevicetodevicestack和ioattachdevicetodevicestacksafe\">#</a> IoAttachDeviceToDeviceStack 和 IoAttachDeviceToDeviceStackSafe</h3>\n<p>并不是所有的设备都有名字，所以依靠 <code>IoAttachDevice</code>  无法绑定没有名字的设备。另外还有两个 API：一个是  <code>IoAttachDeviceToDeviceStack</code>  ，另一个是  <code>IoAttachDeviceToDeviceStackSafe</code>  。这两个函数的功能一样，都是根据设备对象的指针（而不是名字）进行绑定；区别是  <code>IoAttachDeviceToDeviceStackSafe</code>  更加安全，而且只有在  <code>Windows 2000 SP4</code>  和  <code>Windows XP</code>  以上的系统中才有用。  <code>一般都使用IoAttachDeviceToDeviceStackSafe</code>  ，但是当试图兼容较低版本的 <code>Windows 2000</code>  时，应该使用 <code>IoAttachDeviceToDeviceStack</code> 。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">IoAttachDeviceToDeviceStackSafe</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _In_  PDEVICE_OBJECT SourceDevice<span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 过滤设备</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _In_  PDEVICE_OBJECT TargetDevice<span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 要被绑定的设备栈中的设备</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _Outptr_ PDEVICE_OBJECT <span class=\"token operator\">*</span>AttachedToDeviceObject   <span class=\"token comment\">// 返回最终被绑定的设备</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>PDEVICE_OBJECT</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">IoAttachDeviceToDeviceStack</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    _In_ PDEVICE_OBJECT SourceDevice<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    _In_ PDEVICE_OBJECT TargetDevice</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>IoAttachDeviceToDeviceStackSafe</code>  和第一个 API 类似，只是  <code>TargetDevice</code>  换成了一个指针。另外， <code>AttachedToDeviceObject</code>  同样也是返回最终被绑定的设备，实际上也就是绑定之前设备栈上最顶端的那个设备。</p>\n<p>在 <code>Windows 2000</code>  下应该使用另外一个函数  <code>IoAttachDeviceToDeviceStack</code> ，这个函数除了缺少最后一个参数（实际上放到返回值里了），其他的和 <code>IoAttachDeviceToDeviceStackSafe</code>  函数相同。 <code>IoAttachDeviceToDeviceStack</code>  函数返回了最终被绑定的设备指针，这也就导致了它不能返<br />\n回一个明确的错误码。但是如果为 NULL，则表示绑定失败了。</p>\n<h2 id=\"生成过滤设备并绑定\"><a class=\"anchor\" href=\"#生成过滤设备并绑定\">#</a> 生成过滤设备并绑定</h2>\n<p>在绑定一个设备之前，先要知道如何生成一个用于过滤的设备。函数 <code>IoCreateDevice</code>  被用于生成过滤设备：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">IoCreateDevice</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    _In_  PDRIVER_OBJECT DriverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _In_  ULONG DeviceExtensionSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _In_opt_ PUNICODE_STRING DeviceName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _In_  DEVICE_TYPE DeviceType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _In_  ULONG DeviceCharacteristics<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _In_  BOOLEAN Exclusive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    PDEVICE_OBJECT <span class=\"token operator\">*</span>DeviceObject  <span class=\"token comment\">// 二级指针</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个函数之前学习 3 环 0 环通信的时候，用过。</p>\n<p><code>DeviceExtensionSize</code>  是设备扩展，先简单地传入 0。<br />\n <code>DeviceName是</code> 设备名字。有一个规则是：过滤设备一般不需要名称，所以传入 NULL 即可。<br />\n <code>DeviceType</code>  是设备类型，保持和被绑定的设备类型一致即可。<br />\n <code>DeviceCharacteristics</code>  是设备特征，在生成设备对象时可以直接填 0，然后看是否排斥，选择 FALSE。</p>\n<p>值得注意的是，在绑定一个设备之前，应该把这个设备对象的多个子域设置成和要绑定的目标对象一致，包括标志和特征。下面是一个示例的函数，这个函数可以生成一个设备，然后绑定在另一个设备上。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">ccpAttachDevice</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tPDRIVER_OBJECT driver<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tPDEVICE_OBJECT oldobj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tPDEVICE_OBJECT<span class=\"token operator\">*</span> fltobj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tPDEVICE_OBJECT<span class=\"token operator\">*</span> next</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tNTSTATUS status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPDEVICE_OBJECT topdev <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 生成设备，然后绑定</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">IoCreateDevice</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\toldobj<span class=\"token operator\">-></span>DeviceType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tFALSE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tfltobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status<span class=\"token operator\">!=</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 拷贝重要标志位</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldobj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;</span> DO_BUFFERED_IO<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_BUFFERED_IO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldobj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;</span> DO_DIRECT_IO<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_DIRECT_IO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldobj<span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">&amp;</span> FILE_DEVICE_SECURE_OPEN<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">|=</span> FILE_DEVICE_SECURE_OPEN<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_POWER_PAGABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token comment\">// 将一个设备绑定到另一个设备上</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">IoAttachDeviceToDeviceStackSafe</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">,</span> oldobj<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>topdev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token comment\">// topdev = IoAttachDeviceToDeviceStack(*fltobj, oldobj);</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token comment\">// 如果绑定失败，销毁设备，返回错误</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token operator\">*</span>fltobj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token operator\">*</span>next <span class=\"token operator\">=</span> topdev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">// 设置这个设备已经启动</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>DO_DEVICE_INITIALIZING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"从名字获得设备对象\"><a class=\"anchor\" href=\"#从名字获得设备对象\">#</a> 从名字获得设备对象</h2>\n<p>在知道一个设备名字的情况下，使用函数  <code>IoGetDeviceObjectPointer</code>  可以获得这个设备对象的指针。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">IoGetDeviceObjectPointer</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _In_  PUNICODE_STRING ObjectName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    _In_  ACCESS_MASK DesiredAccess<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _Out_ PFILE_OBJECT <span class=\"token operator\">*</span>FileObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _Out_ PDEVICE_OBJECT <span class=\"token operator\">*</span>DeviceObject</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>ObjectName</code>  就是设备的名字。<br />\n <code>DesiredAccess</code>  是期望访问的权限。在实际使用可以不顾忌那么多，直接填写  <code>FILE_ALL_ACCESS</code>  即可。<br />\n <code>FileObject</code>  是一个返回参数，即在获得这个设备对象的同时会得到一个文件对象（File Object）。<br />\n要得到的设备对象就返回在参数  <code>DeviceObject</code>  中了。<br />\n就打开串口设备这件事而言，这个文件对象并没有什么用处。但是必须注意，在使用该函数之后必须把这个文件对象 “解除引用”；否则会引起内存泄漏。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 因为用到了 RtlStringCchPrintfW，所以必须包含头文件 ntstrsafe.h</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 定义 NTSTRSAFE_LIB 是为了使用 ntstrsafe 静态库，这样才能兼容 Windows 2000</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// #define NTSTRSAFE_LIB</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntstrsafe.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 打开一个端口设备</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PDEVICE_OBJECT <span class=\"token function\">ccpOpenCom</span><span class=\"token punctuation\">(</span>ULONG id<span class=\"token punctuation\">,</span> NTSTATUS <span class=\"token operator\">*</span>status<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 外面输入的是串口 id，这里改写成字符串的形式</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tUNICODE_STRING name_str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">static</span> WCHAR name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPFILE_OBJECT fileobj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPDEVICE_OBJECT devobj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 输入字符串</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">RtlStringCchPrintfW</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tname<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tL<span class=\"token string\">\"\\\\Device\\\\Serial%d\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>name_str<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 打开设备对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token operator\">*</span>status <span class=\"token operator\">=</span> <span class=\"token function\">IoGetDeviceObjectPointer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>name_str<span class=\"token punctuation\">,</span> FILE_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fileobj<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>devobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>status <span class=\"token operator\">==</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token comment\">// 没有用到文件对象，解除对其引用</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token function\">ObDereferenceObject</span><span class=\"token punctuation\">(</span>fileobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">return</span> devobj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"绑定所有串口\"><a class=\"anchor\" href=\"#绑定所有串口\">#</a> 绑定所有串口</h2>\n<p>为了后面的过滤，这里必须把过滤设备和被绑定的设备（后面暂且称为真实设备吧，虽然这些设备未必真实）的设备对象指针保存起来。下面的代码使用两个数组保存。数组应该多大，取决于一台计算机上最多能有多少个串口。读者应该去查阅 IBM PC 标准，这里随意地写一个自认为足够大的数字。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 设置最大的串口数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CCP_MAX_COM_ID</span> <span class=\"token expression\"><span class=\"token number\">32</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 保存所有的过滤设备指针</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">static</span> PDEVICE_OBJECT s_fltobj<span class=\"token punctuation\">[</span>CCP_MAX_COM_ID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 保存所有真实设备的指针</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">static</span> PDEVICE_OBJECT s_nextobj<span class=\"token punctuation\">[</span>CCP_MAX_COM_ID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 这个函数绑定所有的串口</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ccpAttachAllComs</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT driver<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tUSHORT i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPDEVICE_OBJECT com_ob<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tNTSTATUS status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">// 获得串口对象引用</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tcom_ob <span class=\"token operator\">=</span> <span class=\"token function\">ccpOpenCom</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>com_ob<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token comment\">// 在这里绑定。并不管绑定是否成功。</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token function\">ccpAttachDevice</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">,</span> com_ob<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>没有必要关心这个绑定是否成功，就算失败了，看一下  <code>s_fltobj</code>  即可。在这个数组中不为 <code>NULL</code>  的成员表示已经绑定了，为 <code>NULL</code>  的成员则是没有绑定或者绑定失败的。这个函数需要一个 <code>DRIVER_OBJECT</code>  的指针，这是本驱动的驱动对象，是系统在 <code>DriverEntry</code>  中传入的。</p>\n<h2 id=\"获取实际数据\"><a class=\"anchor\" href=\"#获取实际数据\">#</a> 获取实际数据</h2>\n<p>我们一直都在开发一个可以捕获串口上的数据的过滤程序。现在虚拟设备已经绑定了真正的串口设备，那么如何从虚拟设备得到串口上流过的数据呢？</p>\n<p>答案是根据 “请求”。</p>\n<p><strong>操作系统将请求发送给串口设备，请求中就含有要发送的数据，请求的回答中则含有要接收的数据。</strong></p>\n<p>下面分析这些 “请求”，以便得到实际的串口数据流。</p>\n<h3 id=\"请求的区分\"><a class=\"anchor\" href=\"#请求的区分\">#</a> 请求的区分</h3>\n<p>Windows 内核的开发者确定了很多数据结构，目前已经与 <code>DEVICE_OBJECT</code> （设备对象）、 <code>FILE_OBJECT</code> （文件对象）和 <code>DRIVER_OBJECT</code> （驱动对象）见了面。</p>\n<p>我们还需知道以下几点内容：</p>\n<ol>\n<li>每个驱动程序只有一个驱动对象。</li>\n<li>每个程序可以生成若干个设备对象，这些设备对象从属与一个驱动对象。</li>\n<li>若干个设备（它们可以属于不同的驱动）依次绑定形成一个设备栈，总是最顶端的设备先接受到请求。</li>\n</ol>\n<p><strong>需要注意的是：</strong>  <code>IRP</code>  是上层设备之间传递请求的常见数据结构，但绝对不是唯一的数据结构。传递请求还有很多其他的方法，不同的设备也可能使用不同的结构来传递请求。</p>\n<blockquote>\n<p>串口设备接收到的请求都是 IRP，因此只要对所有的 IRP 进行过滤，就可以得到串口上流过的所有数据。</p>\n<blockquote>\n<p>串口过滤时只需要关心两种请求：读请求和写请求。</p>\n<blockquote>\n<p>对于串口而言，读指的是接收数据，而写指的是发出数据。</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>串口也还有其他的请求，比如打开和关闭、设置波特率等。<br />\n但是我们的目标只是获得串口上流过的数据，而不关心打开 / 关闭和波特率是多少这样的问题，所以一概无视这类问题。</p>\n</blockquote>\n<p>请求可以通过 IRP 的<strong>主功能号</strong>进行区分。</p>\n<p>IRP 的<strong>主功能号</strong>是保存在 IRP 栈空间中的一个字节，用来标识这个 IRP 的功能大类。相应地，还有一个<strong>次功能号</strong>来标识这个 IRP 的功能细分小类。</p>\n<p>读请求的<strong>主功能号</strong>为 <code>IRP_MJ_READ</code> ，而写请求的<strong>主功能号</strong>为 <code>IRP_MJ_WRITE</code> 。</p>\n<p>下面的方法用于从一个 IRP 指针得到<strong>主功能号</strong>（这里的变量 irp 是一个 PIRP，也就是 IRP 的指针）。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 这里的 irpsp 称为 IRP 的栈空间，IoGetCurrentIrpStackLocation 用来获取当前栈空间</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 栈空间是非常重要的数据结构</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PIO_STACK_LOCATION irpsp <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>MajorFunction <span class=\"token operator\">==</span> IRP_MJ_WRITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 如果是写请求……</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>MajorFunction <span class=\"token operator\">==</span> IRP_MJ_READ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// 如果是读请求……</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"请求的结局\"><a class=\"anchor\" href=\"#请求的结局\">#</a> 请求的结局</h3>\n<p>对请求的过滤，最终的结局有三种。</p>\n<ol>\n<li>请求被允许通过了。</li>\n</ol>\n<p>过滤不做任何事情，或者简单地获取请求的一些信息。但是请求本身不受干扰，这样系统行为不会有变化。</p>\n<ol start=\"2\">\n<li>请求直接被否决了。</li>\n</ol>\n<p>过滤禁止这个请求通过，这个请求被返回了错误，下层驱动程序根本收不到这个请求。这样系统行为就变了，后果是常常看见上层应用程序弹出错误框提示权限错误或者读取文件失败之类的信息。</p>\n<ol start=\"3\">\n<li>过滤完成了这个请求。</li>\n</ol>\n<p>有时有这样的需求，比如一个读请求，我们想记录读到了什么。如果读请求还没有完成，那么如何知道到底会读到什么呢？只有让这个请求先完成再去记录。过滤完成这个请求时不一定要原封不动地完成，这个请求的参数可以被修改（比如把数据都加密）。</p>\n<hr />\n<p>当过滤了一个请求时，就必须把这个请求按照上面三种方法之一进行处理。</p>\n<p>当然，这些代码会写在一个处理函数中。这里先介绍这些处理方法的代码应该怎么写。</p>\n<p><em><strong>串口过滤要捕获两种数据：一种是发送出的数据（也就是写请求中的数据）；另一种是接收的数据（也就是读请求中的数据）。</strong></em></p>\n<p>为了简单起见，我们只捕获发送出的数据，这样，只需要采取第一种处理方法即可。</p>\n<p>这种处理最简单。</p>\n<p>首先调用  <code>IoSkipCurrentIrpStackLocation</code>  跳过当前栈空间；然后调用  <code>IoCallDriver</code>  把这个请求发送给真实的设备。</p>\n<p>请注意，因为真实的设备已经被过滤设备绑定，所以首先接收到 IRP 的是过滤设备的对象。</p>\n<p>代码如下（irp 是过滤到的请求）：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 跳过当前栈空间</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">IoSkipCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 将请求发送到对应的真实设备。我们起起那么把真实设备都保存在了 s_nextobj</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 数组中。那么这里 i 应该是多少？这取决于现在的 IRP 发送到了那个过滤设备上。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">IoCallDriver</span><span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"写请求的数据\"><a class=\"anchor\" href=\"#写请求的数据\">#</a> 写请求的数据</h3>\n<p>一个写请求（也就是串口一次发送出的数据）保存在哪里呢？我们要获取写数据的请求，自然要知道其是怎么保存的。</p>\n<p>关于 IRP 结构的描述，一共有三个地方可以描述缓冲区： <code>irp→MDLAddress</code>  、  <code>irp→UserBuffer</code>  和  <code>irp→AssociatedIrp.SystemBuffer</code> 。</p>\n<p>不同的 IO 类别，IRP 的缓冲区不同。<br />\n <code>SystemBuffer</code>  是一般用于比较简单且不追求效率情况的解决方案：把应用层（R3 层）内存空间中的缓冲数据拷贝到内核空间。</p>\n<p><code>UserBuffer</code>  则是最追求效率的解决方案。应用层的缓冲区地址直接放在 <code>UserBuffer</code>  里，在内核空间中访问。在当前进程和发送请求进程一致的情况下，内核访问应用层的内存空间当然是没错的。但是一旦内核进程已经切换，这个访问就结束了，访问 <code>UserBuffer</code>  当然是跳到其他进程空间中了。</p>\n<p>一个更简单的解决方案是把应用层的地址空间映射到内核空间，这需要在页表中增加一个映射。</p>\n<p>当然不需要编程者手工去修改页表，通过构造 <code>MDL</code>  就能实现这个功能。</p>\n<p><code>MDL</code>  可以翻译为 “内存描述符链”，但是按照业界传统习惯一律称之为 <code>MDL</code> 。</p>\n<p>IRP 中的 <code>MDLAddress</code>  域是一个 <code>MDL</code>  的指针，从这个 <code>MDL</code>  中可以读出一个内核空间的虚拟地址。这就弥补了 UserBuffer 的不足，同时比 SystemBuffer 的完全拷贝方法要轻量，因为这个内存实际上还是在老地方，没有拷贝。</p>\n<p><strong>回到串口的问题上，那么串口写请求到底用的是哪种方式呢？ 我们并不需要去知道是哪种方式。用下面的编码方式，无论采用哪种方式，都可以把数据正确地读出来</strong></p>\n<p>此外是缓冲区有多长的问题。对于一个写操作而言，长度可以通过如下方式获得： <code>ULONG len = irpsp-&gt;Parameters.Write.Length;</code></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 如果是写，先获得长度</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ULONG len <span class=\"token operator\">=</span> irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 然后获得缓冲区</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>PUCHAR buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irp<span class=\"token operator\">-></span>MdlAddress <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span><span class=\"token function\">MmGetSystemAddressForMdlSafe</span><span class=\"token punctuation\">(</span>irp<span class=\"token operator\">-></span>MdlAddress<span class=\"token punctuation\">,</span> NormalPagePriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>irp<span class=\"token operator\">-></span>UserBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>irp<span class=\"token operator\">-></span>AssociatedIrp<span class=\"token punctuation\">.</span>SystemBuffer<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>涉及了  <code>MmGetSystemAddressForMdlSafe</code>  函数，可以查看 WDK 文档: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy1oYXJkd2FyZS9kcml2ZXJzL2RkaS93ZG0vbmYtd2RtLW1tZ2V0c3lzdGVtYWRkcmVzc2Zvcm1kbHNhZmU=\">https://docs.microsoft.com/zh-cn/windows-hardware/drivers/ddi/wdm/nf-wdm-mmgetsystemaddressformdlsafe</span></p>\n<h2 id=\"完整的代码\"><a class=\"anchor\" href=\"#完整的代码\">#</a> 完整的代码</h2>\n<p>接下来编写完整的串口过滤代码。</p>\n<h3 id=\"完整的分发函数\"><a class=\"anchor\" href=\"#完整的分发函数\">#</a> 完整的分发函数</h3>\n<p>基于前面的描述，我们来编写完整的分发函数。</p>\n<p>这个函数处理所有串口的写请求，所有从串口输出的数据都用 <code>DbgPrint</code>  打印出来。也就是说，读者打开 <code>DbgView.exe</code> ，就可以看到串口的输出数据了。</p>\n<p>这当然不如一些比较专业的串口嗅探软件，可以以这个例子为基础开发更专业的工具。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">ccpDispatch</span><span class=\"token punctuation\">(</span>PDEVICE_OBJECT device<span class=\"token punctuation\">,</span> PIRP irp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 这里的 irpsp 称为 IRP 的栈空间，IoGetCurrentIrpStackLocation 用来获取当前栈空间</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 栈空间是非常重要的数据结构</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tPIO_STACK_LOCATION irpsp <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tNTSTATUS status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tULONG i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token comment\">// 所有电源操作，全部直接放过</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>MajorFunction <span class=\"token operator\">==</span> IRP_MJ_POWER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 直接发送，然后返回说已经被处理了</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\t<span class=\"token function\">PoStartNextPowerIrp</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t<span class=\"token function\">IoSkipCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">PoCallDriver</span><span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token comment\">// 我们只过滤写请求。</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token comment\">// 写请求，获得缓冲区及其长度，然后打印。</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>MajorFunction <span class=\"token operator\">==</span> IRP_MJ_WRITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果是写请求……</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果是写，先获得长度</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\tULONG len <span class=\"token operator\">=</span> irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 然后获得缓冲区</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\tPUCHAR buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irp<span class=\"token operator\">-></span>MdlAddress <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t\tbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span><span class=\"token function\">MmGetSystemAddressForMdlSafe</span><span class=\"token punctuation\">(</span>irp<span class=\"token operator\">-></span>MdlAddress<span class=\"token punctuation\">,</span> NormalPagePriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t\tbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>irp<span class=\"token operator\">-></span>UserBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t\tbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>irp<span class=\"token operator\">-></span>AssociatedIrp<span class=\"token punctuation\">.</span>SystemBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 打印内容</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comcap:Send Data:%2x\\r\\n\"</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token comment\">//else if (irpsp->MajorFunction == IRP_MJ_READ)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t// 如果是读请求……</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token comment\">// 这些请求直接下发执行即可。我们并不禁止或者改变它。</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token function\">IoSkipCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">IoCallDriver</span><span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token comment\">// 如果根本就不在被绑定的设备中，那是有问题的，直接返回参数错误。</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tirp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tirp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> STATUS_INVALID_PARAMETER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token function\">IoCompleteRequest</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">,</span> IO_NO_INCREMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"卸载函数\"><a class=\"anchor\" href=\"#卸载函数\">#</a> 卸载函数</h3>\n<p>我们应该在卸载函数中完成解除绑定的功能，否则，一旦卸载就会蓝屏。</p>\n<p>这里涉及三个内核 API：</p>\n<p><code>IoDetachDevice</code>  ，负责将绑定的设备 解 除 绑 定 ；<br />\n <code>IoDeleteDevice</code>  ， 负责把我们前面用  <code>IoCreateDevice</code>  生成的设备删除以回收内存；<br />\n <code>KeDelayExecutionThread</code>  ，纯粹负责延时。</p>\n<p>这三个函数的参数相对简单，这里就不详细介绍了。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">DELAY_ONE_MICROSECOND</span>  <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">DELAY_ONE_MILLISECOND</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>DELAY_ONE_MICROSECOND<span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">DELAY_ONE_SECOND</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>DELAY_ONE_MILLISECOND<span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tULONG i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tLARGE_INTEGER interval<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 首先解除绑定</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token function\">IoDetachDevice</span><span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">// 睡眠 5 秒。等待所有 irp 处理结束</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tinterval<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> DELAY_ONE_MILLISECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">KeDelayExecutionThread</span><span class=\"token punctuation\">(</span>KernelMode<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 删除这些设备</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"驱动入口函数\"><a class=\"anchor\" href=\"#驱动入口函数\">#</a> 驱动入口函数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">// 卸载函数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动,我运行了\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token class-name\">size_t</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 所有的分发函数都设置成一样的。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> IRP_MJ_MAXIMUM_FUNCTION<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tpDriver<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ccpDispatch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 绑定所有串口</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">ccpAttachAllComs</span><span class=\"token punctuation\">(</span>pDriver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"全部代码\"><a class=\"anchor\" href=\"#全部代码\">#</a> 全部代码</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 因为用到了 RtlStringCchPrintfW，所以必须包含头文件 ntstrsafe.h</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 定义 NTSTRSAFE_LIB 是为了使用 ntstrsafe 静态库，这样才能兼容 Windows 2000</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// #define NTSTRSAFE_LIB</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntstrsafe.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>NTSTATUS <span class=\"token function\">ccpAttachDevice</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPDRIVER_OBJECT driver<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPDEVICE_OBJECT oldobj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPDEVICE_OBJECT<span class=\"token operator\">*</span> fltobj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPDEVICE_OBJECT<span class=\"token operator\">*</span> next</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tNTSTATUS status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tPDEVICE_OBJECT topdev <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">// 生成设备，然后绑定</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">IoCreateDevice</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\toldobj<span class=\"token operator\">-></span>DeviceType<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tFALSE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tfltobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status<span class=\"token operator\">!=</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// 拷贝重要标志位</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldobj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;</span> DO_BUFFERED_IO<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_BUFFERED_IO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldobj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;</span> DO_DIRECT_IO<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_DIRECT_IO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldobj<span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">&amp;</span> FILE_DEVICE_SECURE_OPEN<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">|=</span> FILE_DEVICE_SECURE_OPEN<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_POWER_PAGABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">// 将一个设备绑定到另一个设备上</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tstatus <span class=\"token operator\">=</span> <span class=\"token function\">IoAttachDeviceToDeviceStackSafe</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">,</span> oldobj<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>topdev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token comment\">// topdev = IoAttachDeviceToDeviceStack(*fltobj, oldobj);</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token comment\">// 如果绑定失败，销毁设备，返回错误</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token operator\">*</span>fltobj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token operator\">*</span>next <span class=\"token operator\">=</span> topdev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">// 设置这个设备已经启动</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fltobj<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>DO_DEVICE_INITIALIZING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\">// 打开一个端口设备</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>PDEVICE_OBJECT <span class=\"token function\">ccpOpenCom</span><span class=\"token punctuation\">(</span>ULONG id<span class=\"token punctuation\">,</span> NTSTATUS <span class=\"token operator\">*</span>status<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token comment\">// 外面输入的是串口 id，这里改写成字符串的形式</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tUNICODE_STRING name_str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token keyword\">static</span> WCHAR name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tPFILE_OBJECT fileobj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tPDEVICE_OBJECT devobj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token comment\">// 输入字符串</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WCHAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token function\">RtlStringCchPrintfW</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\tname<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\tL<span class=\"token string\">\"\\\\Device\\\\Serial%d\"</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>name_str<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token comment\">// 打开设备对象</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token operator\">*</span>status <span class=\"token operator\">=</span> <span class=\"token function\">IoGetDeviceObjectPointer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>name_str<span class=\"token punctuation\">,</span> FILE_ALL_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fileobj<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>devobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>status <span class=\"token operator\">==</span> STATUS_SUCCESS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token comment\">// 没有用到文件对象，解除对其引用</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t<span class=\"token function\">ObDereferenceObject</span><span class=\"token punctuation\">(</span>fileobj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token keyword\">return</span> devobj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">// 设置最大的串口数</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CCP_MAX_COM_ID</span> <span class=\"token expression\"><span class=\"token number\">32</span></span></span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\">// 保存所有的过滤设备指针</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token keyword\">static</span> PDEVICE_OBJECT s_fltobj<span class=\"token punctuation\">[</span>CCP_MAX_COM_ID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\">// 保存所有真实设备的指针</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">static</span> PDEVICE_OBJECT s_nextobj<span class=\"token punctuation\">[</span>CCP_MAX_COM_ID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\">// 这个函数绑定所有的串口</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ccpAttachAllComs</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT driver<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tUSHORT i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tPDEVICE_OBJECT com_ob<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\tNTSTATUS status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t<span class=\"token comment\">// 获得串口对象引用</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\tcom_ob <span class=\"token operator\">=</span> <span class=\"token function\">ccpOpenCom</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>com_ob<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t<span class=\"token comment\">// 在这里绑定。并不管绑定是否成功。</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t<span class=\"token function\">ccpAttachDevice</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">,</span> com_ob<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>NTSTATUS <span class=\"token function\">ccpDispatch</span><span class=\"token punctuation\">(</span>PDEVICE_OBJECT device<span class=\"token punctuation\">,</span> PIRP irp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token comment\">// 这里的 irpsp 称为 IRP 的栈空间，IoGetCurrentIrpStackLocation 用来获取当前栈空间</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token comment\">// 栈空间是非常重要的数据结构</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\tPIO_STACK_LOCATION irpsp <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\tNTSTATUS status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\tULONG i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t\t<span class=\"token comment\">// 所有电源操作，全部直接放过</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>MajorFunction <span class=\"token operator\">==</span> IRP_MJ_POWER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 直接发送，然后返回说已经被处理了</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\t\t<span class=\"token function\">PoStartNextPowerIrp</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t\t\t<span class=\"token function\">IoSkipCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">PoCallDriver</span><span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t\t<span class=\"token comment\">// 我们只过滤写请求。</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t\t<span class=\"token comment\">// 写请求，获得缓冲区及其长度，然后打印。</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>MajorFunction <span class=\"token operator\">==</span> IRP_MJ_WRITE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果是写请求……</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果是写，先获得长度</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t\t\tULONG len <span class=\"token operator\">=</span> irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 然后获得缓冲区</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t\t\tPUCHAR buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irp<span class=\"token operator\">-></span>MdlAddress <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t\t\t\tbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span><span class=\"token function\">MmGetSystemAddressForMdlSafe</span><span class=\"token punctuation\">(</span>irp<span class=\"token operator\">-></span>MdlAddress<span class=\"token punctuation\">,</span> NormalPagePriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t\t\t\t\tbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>irp<span class=\"token operator\">-></span>UserBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\t\t\t\tbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>irp<span class=\"token operator\">-></span>AssociatedIrp<span class=\"token punctuation\">.</span>SystemBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 打印内容</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comcap:Send Data:%2x\\r\\n\"</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\t<span class=\"token comment\">//else if (irpsp->MajorFunction == IRP_MJ_READ)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\t<span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t\t<span class=\"token comment\">//\t// 如果是读请求……</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t\t<span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\t\t<span class=\"token comment\">// 这些请求直接下发执行即可。我们并不禁止或者改变它。</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t\t<span class=\"token function\">IoSkipCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">IoCallDriver</span><span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t<span class=\"token comment\">// 如果根本就不在被绑定的设备中，那是有问题的，直接返回参数错误。</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\tirp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\tirp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> STATUS_INVALID_PARAMETER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t<span class=\"token function\">IoCompleteRequest</span><span class=\"token punctuation\">(</span>irp<span class=\"token punctuation\">,</span> IO_NO_INCREMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">DELAY_ONE_MICROSECOND</span>  <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">DELAY_ONE_MILLISECOND</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>DELAY_ONE_MICROSECOND<span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span>  <span class=\"token macro-name\">DELAY_ONE_SECOND</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>DELAY_ONE_MILLISECOND<span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\tULONG i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\tLARGE_INTEGER interval<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t<span class=\"token comment\">// 首先解除绑定</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t\t\t<span class=\"token function\">IoDetachDevice</span><span class=\"token punctuation\">(</span>s_nextobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t<span class=\"token comment\">// 睡眠 5 秒。等待所有 irp 处理结束</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\tinterval<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> DELAY_ONE_MILLISECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t<span class=\"token function\">KeDelayExecutionThread</span><span class=\"token punctuation\">(</span>KernelMode<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>\t<span class=\"token comment\">// 删除这些设备</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> CCP_MAX_COM_ID<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>\t\t\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span>s_fltobj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre></pre></td></tr><tr><td data-num=\"227\"></td><td><pre></pre></td></tr><tr><td data-num=\"228\"></td><td><pre></pre></td></tr><tr><td data-num=\"229\"></td><td><pre></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"231\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>\t<span class=\"token comment\">// 卸载函数</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"235\"></td><td><pre>\t<span class=\"token function\">DbgBreakPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动,我运行了\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"238\"></td><td><pre>\t<span class=\"token class-name\">size_t</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>\t<span class=\"token comment\">// 所有的分发函数都设置成一样的。</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> IRP_MJ_MAXIMUM_FUNCTION<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"241\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>\t\tpDriver<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ccpDispatch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>\t<span class=\"token comment\">// 绑定所有串口</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>\t<span class=\"token function\">ccpAttachAllComs</span><span class=\"token punctuation\">(</span>pDriver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"247\"></td><td><pre></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "串口",
                "过滤"
            ]
        }
    ]
}