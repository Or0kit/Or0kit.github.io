{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"瞬时hook过检测\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/HOOK%E6%94%BB%E9%98%B2/",
            "url": "https://or0kit.github.io/Bin/Win32/HOOK%E6%94%BB%E9%98%B2/",
            "title": "HOOK攻防",
            "date_published": "2021-10-21T12:45:54.000Z",
            "content_html": "<h1 id=\"hook攻防常用手段\"><a class=\"anchor\" href=\"#hook攻防常用手段\">#</a> Hook 攻防常用手段</h1>\n<h2 id=\"阶段一\"><a class=\"anchor\" href=\"#阶段一\">#</a> 阶段一：</h2>\n<blockquote>\n<p>(防) 检测 JMP (E9)，检测跳转范围<br />\n (破) 想方设法绕过</p>\n</blockquote>\n<p>若检测跳转范围则可以分为几次小跳转来进行跳转。</p>\n<h2 id=\"阶段二\"><a class=\"anchor\" href=\"#阶段二\">#</a> 阶段二：</h2>\n<blockquote>\n<p>(防) 写个线程全代码校验 / CRC 检测<br />\n (破) 修改检测代码、挂起检测函数</p>\n</blockquote>\n<p>针对全代码校验：设置硬件读断点，当有程序尝试读代码，便会断下，这是就发现了检测线程，我们就可以分析并修改检测线程的代码了。</p>\n<h2 id=\"阶段三\"><a class=\"anchor\" href=\"#阶段三\">#</a> 阶段三：</h2>\n<p><code>A-&gt;B-&gt;C-&gt;D-&gt;HOOK函数</code></p>\n<blockquote>\n<p>(防) 先对相关 API 全代码校验，多个线程互相检测，并检测线程是否在活动中。<br />\n(破) 使用瞬时钩子 / 硬件钩子</p>\n</blockquote>\n<ol>\n<li>\n<p>找检测线程的漏洞，来写对应的代码。</p>\n</li>\n<li>\n<p>使用瞬时 HOOK。<br />\n不管是全代码校验也好，CRC 校验也好，多线程检测也好，其目的不就是保护自己的函数不被别人改掉吗，那有没有一种代码把钩子该做的事情做了，还不更改函数的代码呢？</p>\n</li>\n</ol>\n<p>循环检测：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//1.\t// 检测 ExitProcess 是否被 HOOK</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//2.\t// 检测被保护的函数是否被 HOOK</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwAPIAddr<span class=\"token punctuation\">,</span>szAPICode<span class=\"token punctuation\">,</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//A\t\tbRet = VirtualProtect((LPVOID)dwAPIAddr,0x10,PAGE_READWRITE,&amp;dwOldProtect);</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token function\">f</span> <span class=\"token punctuation\">(</span>bRet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwAPIAddr<span class=\"token punctuation\">,</span>szAPICode<span class=\"token punctuation\">,</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwAPIAddr<span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>dwOldProtect<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//B\t\tExitProcess(0);</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>假设我们逆向分析出了上述代码：</p>\n<p>其功能为如果检测到被保护函数被 hook 则执行恢复代码，并关闭程序。</p>\n<p>假设以上代码是 D 线程，还有一个 C 线程在一直检测 D，所以我们不能动 D 线程，但我们发现 D 线程会执行 <code>ExitProcess</code>  函数，那我们可以对 <code>ExitProcess</code>  挂钩，让其退出功能失效，这样用就搞定了循环检测。</p>\n<p>若防守的一方在 D 线程中一开始就检测 <code>ExitProcess</code>  是否被 HOOK 呢？</p>\n<p>分析检测代码的流程</p>\n<p>检测 ExitProcess 是否被 HOOK，被 HOOK 的话恢复代码，然后退出。<br />\n检测被保护函数是否被 HOOK，被 HOOK 的话恢复代码，然后退出。</p>\n<p>这其中用来复原原来函数的关键函数 <code>VirtualProtect</code> , 一般是不会被检测的，我们可以对其挂钩子，先判段是不是 A 地址调用的函数（这个可以查看堆栈中的函数返回地址），如果是那么我们的钩子就执行代码给 <code>ExitProcess</code>  挂钩子，一样判断是否是 B 地址调用的函数，如果是执行钩子使其退出功能失效，使其失效后还要立即摘掉钩子，恢复函数，因为新一轮的检测又开始了。</p>\n<p>切记我们不能动 D 线程的任何代码。</p>\n<p><strong>总结：</strong></p>\n<blockquote>\n<p>&lt;1&gt; 对 VirtualProtect 进行 HOOK，只有当调用地址为 A 时，对 ExitProcess 进行挂钩，并修正返回结果，改变执行流程。</p>\n</blockquote>\n<blockquote>\n<p>&lt;2&gt; 在 ExitProcess 的 HOOK 处理函数中判断，只有当调用地址为 B 的时候，才将 ExitProcess 失效，然后卸载 HOOK。</p>\n</blockquote>\n<h3 id=\"瞬时hook代码\"><a class=\"anchor\" href=\"#瞬时hook代码\">#</a> 瞬时 HOOK 代码</h3>\n<p>撰写代码前先捋一下思路：<br />\n本程序只针对上述阶段三的 HOOK 防守</p>\n<p>这里的前提是有一个函数 <code>VirtualProtect</code>  没有被 hook，我们这里的瞬时 HOOK 的概念是针对被检测的 <code>ExitProcess</code> 。首先我们要触发 <code>MessageBox</code>  的检测函数，让检测程序去调用 <code>VirtualProtect</code>  修复 <code>MessageBox</code> ，这样我们就要先 HOOK <code>VirtualProtect</code>  函数，当 A 地址调用的 <code>VirtualProtect</code>  则执行 HOOK 处理函数去 HOOK <code>ExitProcess</code>  函数，当 B 地址调用 <code>ExitProcess</code>  函数时，则执行 <code>ExitProcess</code>  处的 HOOK 处理函数，先恢复 <code>ExitProcess</code>  函数，然后直接 <code>ret</code>  返回，这样 <code>ExitProcess</code>  函数就失效了，检测线程也就没用了，然后 HOOK <code>MessageBox</code>  函数就行了。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//dllmain.cpp : 定义 DLL 应用程序的入口点。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span>             <span class=\"token comment\">// 从 Windows 头文件中排除极少使用的内容</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Windows 头文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//5 个字节</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH_VP</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>DWORD dwHookAddressVP <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>DWORD dwCallAddressVP <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH_EP</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>DWORD dwHookAddressEP <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>DWORD dwCallAddressEP <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATCH_LENGTH_MB</span> <span class=\"token expression\"><span class=\"token number\">5</span> </span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>DWORD dwHookAddressMB <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>DWORD dwRetAddress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>WCHAR szNewText<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"瞬时Hook!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">/******************************************** Hook VirtualProtect Begin ********************************/</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>VOID <span class=\"token function\">SetVirtualProtectHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 获取要 HOOK 的函数地址</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tdwHookAddressVP <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"kernel32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"VirtualProtect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// 安装或者卸载 HOOK</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">HookVirtualProtect</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">VirtualProtectProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token comment\">// 为 ExitProcess 挂上瞬时 hook</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tdwHookAddressVP <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"kernel32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ExitProcess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"VirtualProtect()开始挂钩 HOOKExitProcess()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">HookExitProcess</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewVirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token comment\">// 判断调用地址 如果是目标地址 则调用处理函数</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>exp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tcmp eax<span class=\"token punctuation\">,</span> dwCallAddressVP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tjnz Lable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tcall VirtualProtectProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\txor eax<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tLable<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\tpush dwHookAddressVP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\tadd dword ptr ds <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tretn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>BOOL <span class=\"token function\">HookVirtualProtect</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_VP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_VP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH_VP <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewVirtualProtect <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddressVP <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressVP<span class=\"token punctuation\">,</span> PATCH_LENGTH_VP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\">/******************************************** Hook VirtualProtect End ********************************/</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">/******************************************** Hook ExitProcess Begin ********************************/</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ExitProcessProc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t<span class=\"token comment\">// 卸载瞬时 HOOK 避免被检测到</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"ExitProcess()开始卸载：HOOKExitProcess()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t<span class=\"token function\">HookExitProcess</span><span class=\"token punctuation\">(</span>FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewExitProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t<span class=\"token comment\">// 判断调用地址，如果是目标地址，则调用处理函数</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span> dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>exp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\tcmp eax<span class=\"token punctuation\">,</span> dwCallAddressEP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\tjnz Lable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\tcall ExitProcessProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t\tret<span class=\"token punctuation\">;</span><span class=\"token comment\">//ExitProcess 没有返回值，所以直接返回</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\tLable<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\tpush dwHookAddressEP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\tadd dword ptr ds <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> PATCH_LENGTH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\tretn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>BOOL <span class=\"token function\">HookExitProcess</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_EP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_EP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH_EP <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewExitProcess <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddressEP <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressEP<span class=\"token punctuation\">,</span> PATCH_LENGTH_EP<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token comment\">/******************************************** Hook ExitProcess End ********************************/</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre></pre></td></tr><tr><td data-num=\"198\"></td><td><pre></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre><span class=\"token comment\">/******************************************** Hook MessageBox Begin ********************************/</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">NewMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t\t<span class=\"token comment\">// 保存寄存器</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t<span class=\"token comment\">// 修改数据 esp+8</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t\tlea eax<span class=\"token punctuation\">,</span> dword ptr ds <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>szNewText<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t\tmov dword ptr ss <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>esp <span class=\"token operator\">+</span> <span class=\"token number\">0x24</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\t<span class=\"token comment\">// 恢复寄存器</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t\t<span class=\"token comment\">// 执行覆盖的代码</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t\tmov edi<span class=\"token punctuation\">,</span> edi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\tpush ebp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\tmov ebp<span class=\"token punctuation\">,</span> esp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t\t<span class=\"token comment\">// 执行返回</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t\tjmp dwRetAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>BOOL <span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>BOOL bOpen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>\tBOOL bRet <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>\tBYTE byJmpCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_MB<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0xE9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>\tDWORD dwOldProtect <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>\t<span class=\"token keyword\">static</span> BYTE byOriginalCode<span class=\"token punctuation\">[</span>PATCH_LENGTH_MB<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>\t<span class=\"token keyword\">static</span> BOOL bHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre></pre></td></tr><tr><td data-num=\"233\"></td><td><pre></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>\t<span class=\"token comment\">// 初始化 byJmpCode</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> PATCH_LENGTH_MB <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>\t<span class=\"token comment\">// 存储跳转地址</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>byJmpCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>NewMessageBox <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>dwHookAddressMB <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>\t<span class=\"token comment\">// 备份被覆盖的 Code</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>byOriginalCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bOpen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> byJmpCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>\t\t\tbHookFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHookFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwOldProtect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> byOriginalCode<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>\t\t\t\t<span class=\"token function\">VirtualProtect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>dwHookAddressMB<span class=\"token punctuation\">,</span> PATCH_LENGTH_MB<span class=\"token punctuation\">,</span> dwOldProtect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>\t\t\t\tbHookFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>\t\t\t\tbRet <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>\t<span class=\"token keyword\">return</span> bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre></pre></td></tr><tr><td data-num=\"267\"></td><td><pre></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>VOID <span class=\"token function\">SetMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>\t<span class=\"token comment\">// 获取要 HOOK 的函数地址</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>\tdwHookAddressMB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span><span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MessageBoxW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>\tdwRetAddress <span class=\"token operator\">=</span> dwHookAddressMB <span class=\"token operator\">+</span> PATCH_LENGTH_MB<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>\t<span class=\"token comment\">// 安装或者卸载 HOOK</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>\t<span class=\"token function\">HookMessageBox</span><span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre><span class=\"token comment\">/******************************************** Hook MessageBox End ********************************/</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre></pre></td></tr><tr><td data-num=\"277\"></td><td><pre></pre></td></tr><tr><td data-num=\"278\"></td><td><pre></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>LPVOID lpParameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>\t<span class=\"token function\">SetVirtualProtectHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>\t<span class=\"token function\">SetMessageBoxHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre></pre></td></tr><tr><td data-num=\"286\"></td><td><pre></pre></td></tr><tr><td data-num=\"287\"></td><td><pre></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>BOOL APIENTRY <span class=\"token function\">DllMain</span><span class=\"token punctuation\">(</span>HMODULE hModule<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>\tDWORD  ul_reason_for_call<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>\tLPVOID lpReserved</pre></td></tr><tr><td data-num=\"291\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ul_reason_for_call<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>\t\t<span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_ATTACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_THREAD_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>\t<span class=\"token keyword\">case</span> DLL_PROCESS_DETACH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"更多的hook\"><a class=\"anchor\" href=\"#更多的hook\">#</a> 更多的 HOOK</h2>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n",
            "tags": [
                "HOOK攻防",
                "瞬时HOOK过检测"
            ]
        }
    ]
}