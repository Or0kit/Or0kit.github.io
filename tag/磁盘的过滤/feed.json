{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"磁盘的过滤\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E7%A3%81%E7%9B%98%E7%9A%84%E8%BF%87%E6%BB%A4/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E7%A3%81%E7%9B%98%E7%9A%84%E8%BF%87%E6%BB%A4/",
            "title": "磁盘的过滤",
            "date_published": "2022-07-31T14:41:58.000Z",
            "content_html": "<h1 id=\"磁盘过滤\"><a class=\"anchor\" href=\"#磁盘过滤\">#</a> 磁盘过滤</h1>\n<h2 id=\"磁盘过滤驱动的概念\"><a class=\"anchor\" href=\"#磁盘过滤驱动的概念\">#</a> 磁盘过滤驱动的概念</h2>\n<p>首先需要了解一些关于磁盘过滤驱动的相关概念。</p>\n<h3 id=\"设备过滤和类过滤\"><a class=\"anchor\" href=\"#设备过滤和类过滤\">#</a> 设备过滤和类过滤</h3>\n<p>过滤的概念：所谓过滤就是在本来已有的设备栈中加入一个自己的设备。</p>\n<p>由于 Windows 向任何一个设备发送 IRP 请求都会首先发给这个设备所在设备栈的最上层设备，然后再依次传递下去，这就使得加入的设备在目标设备之前获取 IRP 请求成为可能，这时候就可以有机会加入用户自己的处理流程。在这里将插入设备栈的用户设备称为过滤设备，将建立这个设备并使其具有特殊功能的驱动称为过滤驱动。</p>\n<p>前面我们已经学习了设备过滤，<em>如何建立一个过滤设备并将其绑定在一个有名字的设备上</em>。从设备过滤这个名字可以看出，<strong>这是对某个特定设备加以过滤的方法。</strong></p>\n<p>但是在实际应用中，还有很多问题，例如，Windows 中有很多即插即用的设备，如何在这些设备加入系统中时就自动地对它们进行绑定？Windows 中还存在一些具有共同类型的设备，如何对这一类设备进行绑定？</p>\n<p>实际上，在 Windows 的过滤驱动架构中，还有一种叫作<strong>类过滤驱动</strong>的驱动程序，<strong>能够在某一类特定的设备建立时由 PnP 管理器调用指定的过滤驱动代码，并且允许用户在此时对这一类设备进行绑定</strong>。根据用户设备在整个设备栈上相对于系统本来存在设备的不同位置，可以分为上层过滤和下层过滤，其中以上层过滤最为常见，因为这时过滤设备在设备栈上位于实际功能设备的上面，会首先获得 Windows 系统发下来的 IRP 请求，便于过滤设备的实现者进行处理。</p>\n<h3 id=\"磁盘设备和磁盘卷设备过滤驱动\"><a class=\"anchor\" href=\"#磁盘设备和磁盘卷设备过滤驱动\">#</a> 磁盘设备和磁盘卷设备过滤驱动</h3>\n<p>本章主要学习 Windows 存储系统的过滤，在学习代码之前，还需要了解一下 Windows 存储系统中的一些概念。</p>\n<p><em>在 Windows 的存储系统中，最底层的是磁盘，而在磁盘上面又有卷，卷虽然只是逻辑上的一个概念，但是 Windows 仍然为其建立了设备，所以在 Windows 的存储系统里有磁盘设备和磁盘卷设备两种类型的设备。</em></p>\n<p>如果一个磁盘卷位于某个磁盘上，那么对于磁盘卷的访问最终也会体现在相应的磁盘上。<strong>但是这不意味着它们在一个设备栈上，IRP 不会原封不动地从磁盘卷设备栈上一直传到磁盘设备栈上，更何况 Windows 中还存在着跨磁盘的卷、软 RAID 卷等不能对应到唯一磁盘上的卷</strong>。所以务必将这两种设备的概念区分开，而不要将其当作同一种设备来对待。</p>\n<p>从驱动的角度来讲，<em>这两种设备收到的读 / 写请求都是针对磁盘大小或者卷大小范围之内的请求，都是以扇区大小对齐的，处理起来也没有什么太大的区别</em>。</p>\n<p>在本章中主要讲解磁盘卷设备的上层类过滤驱动，因为对于 Windows 用户来说，卷是最直接看到的对象；而对于开发人员来说，使用卷过滤会在一定程度上减少工作量，因为不需要处理磁盘设备中才会遇到的一些问题，但是同时也限制了一些功能的实现，原因同样是不能处理磁盘设备上的问题，正所谓有利必有弊。</p>\n<h3 id=\"注册表和磁盘卷设备过滤驱动\"><a class=\"anchor\" href=\"#注册表和磁盘卷设备过滤驱动\">#</a> 注册表和磁盘卷设备过滤驱动</h3>\n<p>在实际的系统运行过程中，一个普通的驱动程序是如何告知 Windows 操作系统它是一个类过滤驱动，并且如何和相应的设备类联系起来呢？这就需要注册表的帮忙了。</p>\n<p>我们知道一个驱动程序作为服务是如何在注册表中存在的：在  <code>\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services</code>  下服务键的名字也就是这个服务的名字了。</p>\n<p>在 <code>\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class</code>  下，也有许多类的名字，这些类的名字都是一长串数字，这一长串数字实际上是一个 <code>ClassGUID</code> ，随意选择一个键，下面都会有一个叫作 Class 的值，这就是一个类。</p>\n<p><strong>在这些键中，可以找到一个 Class 值为 <code>“Volume”</code>  的键，这就是磁盘卷类。最关心的是其中一个叫作 <code>UpperFilters</code>  的值，这个值起了最为关键的作用 —— 说明这个类的上层过滤驱动都有哪些。</strong></p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><em>只需要在这个 UpperFilter 值中填入相应的驱动名（服务名），这个驱动就会作为这一类设备的上层过滤驱动被 Windows 操作系统所识别，实际上这样也就完成了上层过滤驱动的安装工作。</em></p>\n<h2 id=\"具有还原功能的磁盘卷过滤驱动\"><a class=\"anchor\" href=\"#具有还原功能的磁盘卷过滤驱动\">#</a> 具有还原功能的磁盘卷过滤驱动</h2>\n<p>将磁盘卷上的数据恢复到之前的某个时间点，在这个时间点之后无论对磁盘卷上的文件做过什么操作都将被抹去，这个卷被称为还原卷。</p>\n<p>由于这个过滤驱动只是为了讲解而写的，所以这里对它的使用条件限制得比较多。这个驱动工作时需要系统中只有一个硬盘，需要使用 Windows XP 系统，并且硬盘被分为 C 盘为主分区、D 盘和 E 盘都为扩展分区的分区形式，而且所有分区都必须是 NTFS 系统。本驱动只保护 D 盘并且会在 E 盘上建立临时文件，而且要求操作系统安装在 C 盘上，故这里需要 C、D、E 三个分区。</p>\n<h3 id=\"基本思想\"><a class=\"anchor\" href=\"#基本思想\">#</a> 基本思想</h3>\n<p>为了实现还原，一种简单的思路如下：</p>\n<ul>\n<li>\n<p>在开启还原之后，所有对还原卷的写操作将被写到另一个地方，而不会真正写在还原卷上。这里所说的另一个地方也可以称之为转存处。</p>\n</li>\n<li>\n<p>在开启还原之后，所有对还原卷的读操作将分为两种情况处理：一种情况是读了开启还原之前就存在的内容，这种情况就按照正常的读取方式从还原卷上读取；另一种情况是读了开启还原之后写到还原卷上的内容，这种情况将会从转存处把之前写过的内容读取出来。</p>\n</li>\n<li>\n<p>上述读 / 写必须建立在互斥的基础上，不能出现写了一半就开始读的情况。</p>\n</li>\n<li>\n<p>重启之后转存处的数据清零，所有在还原开始后被写过的数据也就不复存在了。</p>\n</li>\n<li>\n<p>上述转存同样必须在卷设定为还原之后立即起作用，而不能出现写了一半才开始转存的情况；否则数据会在重启之后不同步。</p>\n</li>\n</ul>\n<p>如果严格按照这几点来执行，确实能够达到重启之后卷上数据就全部还原的效果。</p>\n<h2 id=\"驱动分析\"><a class=\"anchor\" href=\"#驱动分析\">#</a> 驱动分析</h2>\n<p>开始学习代码，了解如何用代码实现磁盘的还原功能，学习编写的思路。</p>\n<h3 id=\"driverentry函数\"><a class=\"anchor\" href=\"#driverentry函数\">#</a> DriverEntry 函数</h3>\n<p>驱动入口函数，主要负责初始化本驱动的各分发函数。</p>\n<ol>\n<li>将所有的分发函数都设置成一个统一的处理函数，这个函数是对大部分 IRP 请求的处理方式；</li>\n<li>将本驱动关心的分发函数指定为驱动专门实现的函数；</li>\n<li>指定这个驱动的 <code>AddDevice</code>  函数和 <code>Unload</code>  函数。</li>\n<li>注册一个 <code>boot</code>  类型驱动的完成回调函数。</li>\n</ol>\n<p>由于这个驱动被注册成了磁盘卷设备的上层过滤驱动，<em>PnP 管理器将会在一个新的磁盘卷设备建立之后</em>，<strong>首先调用本过滤驱动的 <code>AddDevice</code>  函数，然后再调用磁盘卷设备驱动中的 <code>AddDevice</code>  函数</strong>。这就让过滤驱动有了在系统加入磁盘卷设备起作用之前做一些工作的机会，而 Unload 函数会在过滤驱动结束时被调用，用来做一些清理的工作。不过本过滤驱动将会一直工作到系统关机，所以基本上 Unload 函数将不会做任何清理工作。</p>\n<p>这里注意  <code>AddDevice</code>  函数的调用时机。</p>\n<p>另外，本过滤驱动是作为一个 <code>boot</code>  类型驱动存在的，这一点可以在注册表的 <code>\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services</code>  下驱动服务的 start 值中指定，0 为 boot 类型。</p>\n<p><strong>boot 类型的驱动程序是启动最早的驱动程序，在系统引导时就必须加载完毕；而对于注册为 boot 类型驱动的完成回调函数的函数，将会在所有的 boot 类型驱动执行完毕之后被调用一次，需要注意的是，这时候仍然是系统启动过程中比较早的时候。</strong></p>\n<p>在这里需要注册这个回调函数，是因为驱动中有些工作需要等到这个时间才能做，具体是什么工作后面会知道的。</p>\n<p>下面是代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN\tPDRIVER_OBJECT\tDriverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    IN\tPUNICODE_STRING\tRegistryPath</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">//KdBreakPoint();</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> IRP_MJ_MAXIMUM_FUNCTION<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">// 初始化这个驱动所有的分发函数，默认值是初始化为 DPDispatchAny</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tDriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DPDispatchAny<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 下面将我们特殊关注的分发函数重新赋值为我们自己的处理函数</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    DriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_POWER<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DPDispatchPower<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    DriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_PNP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DPDispatchPnp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    DriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_DEVICE_CONTROL<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DPDispatchDeviceControl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    DriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_READ<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DPDispatchReadWrite<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    DriverObject<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">[</span>IRP_MJ_WRITE<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DPDispatchReadWrite<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// 将这个驱动的 AddDevice 函数初始化为 DpAddDevice 函数</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    DriverObject<span class=\"token operator\">-></span>DriverExtension<span class=\"token operator\">-></span>AddDevice <span class=\"token operator\">=</span> DPAddDevice<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 将这个驱动的 unload 函数初始化为 DpUnload 函数</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    DriverObject<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DPUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 注册一个 boot 驱动结束回调，这个回调函数会在所有的 boot 型驱动都运行完毕之后再去执行</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">IoRegisterBootDriverReinitialization</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tDriverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tDPReinitializationRoutine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// 作为一个过滤驱动，无论如何都要返回成功</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"adddevice函数\"><a class=\"anchor\" href=\"#adddevice函数\">#</a> AddDevice 函数</h3>\n<p>前面已经说过  <code>AddDevice</code>  函数的调用时机。并且在过滤驱动的 DriverEntry 函数中将驱动对象的 AddDevice 函数赋值成自己实现的  <code>DPAddDevice</code>  函数，这样在有任何磁盘卷设备建立时， <code>DPAddDevice</code>  函数都会被调用。</p>\n<p>但是需要特别注意的是， <code>DPAddDevice</code>  被调用时，实际上磁盘卷设备已经建立起来了，只是还不能被使用，也就是说，这个设备的设备对象有了，但是不能响应大部分的 IRP 请求。</p>\n<p>在  <code>DPAddDevice</code>  中将建立一个过滤设备，这个设备将被绑定在真正的磁盘卷设备上。<br />\n<em>并且由于这是一个上层过滤驱动，这个过滤设备将会位于磁盘卷设备的栈顶方向上，也就是先于磁盘卷设备收到 IRP 请求。</em><br />\n在建立并绑定了这个过滤设备之后，需要对这个过滤设备做一些初始化，而过滤设备的所有基本信息都会以  <code>DP_FILTER_DEV_EXTENSION</code>  结构的类型存储在设备扩展中。</p>\n<p>在这里先对 <code>DP_FILTER_DEV_EXTENSION</code>  数据结构中的成员变量进行简单的介绍，这些变量的具体作用和使用方法将会在下面讲解程序时提到</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 用来存储一个卷所有的相关信息的数据结构，放在过滤设备的设备扩展中</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_DP_FILTER_DEV_EXTENSION_</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 卷的名字，例如 \"C:,D:\" 等中的字母部分</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tWCHAR\t\t\t\t\tVolumeLetter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 这个卷是否在保护状态</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tBOOL\t\t\t\t\tProtect<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 这个卷的总大小，以 byte 为单位</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tLARGE_INTEGER\t\t\tTotalSizeInByte<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上文件系统的每簇大小，以 byte 为单位</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tDWORD\t\t\t\t\tClusterSizeInByte<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 这个卷的每个扇区大小，以 byte 为单位</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tDWORD\t\t\t\t\tSectorSizeInByte<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 这个卷设备对应的过滤设备的设备对象</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPDEVICE_OBJECT\t\t\tFltDevObj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 这个卷设备对应的过滤设备的下层设备对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPDEVICE_OBJECT\t\t\tLowerDevObj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 这个卷设备对应的物理设备的设备对象</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tPDEVICE_OBJECT\t\t\tPhyDevObj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 这个数据结构是否已经被初始化完毕了</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tBOOL\t\t\t\t\tInitializeCompleted<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统使用的位图的句柄</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tPDP_BITMAP\t\tBitmap<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// 用来转储的文件句柄</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tHANDLE\t\t\t\t\tTempFile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统使用的请求队列</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tLIST_ENTRY\t\t\t\tReqList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统使用的请求队列的锁</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tKSPIN_LOCK\t\t\t\tReqLock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统使用的请求队列的同步事件</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tKEVENT\t\t\t\t\tReqEvent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统使用的请求队列的处理线程之线程句柄</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tPVOID\t\t\t\t\tThreadHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统使用的请求队列的处理线程之结束标志</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tBOOLEAN\t\t\t\t\tThreadTermFlag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统的关机分页电源请求的计数事件</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tKEVENT\t\t\t\t\tPagingPathCountEvent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token comment\">// 这个卷上的保护系统的关机分页电源请求的计数</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tLONG\t\t\t\t\tPagingPathCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span> DP_FILTER_DEV_EXTENSION<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PDP_FILTER_DEV_EXTENSION<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在上面的数据结构中可以看到有三个设备对象：过滤设备、物理设备和下层设备，其中过滤设备是本过滤驱动自己建立的；物理设备是通过 <code>AddDevice</code>  函数的参数传递进来的设备，是真正的磁盘卷设备；而下层设备是在将过滤设备绑定到物理设备上之后，返回的绑定之前物理设备栈上最顶部的设备。</p>\n<p><em>那么下层设备和物理设备是一样的吗？答：系统中的一个类驱动并不一定只有一个上层过滤驱动存在</em>。</p>\n<p>例如，在  <code>\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class</code>  下的磁盘卷类中，系统自带了一个上层过滤驱动叫作 <code>VolSnap</code> ，如果将本章的驱动名字写在上层驱动列表中的 <code>VolSnap</code>  后面，那么在驱动的 <code>AddDevice</code>  调用时， <code>VolSnap</code>  的设备已经绑定在了磁盘卷设备上，也就是说，这时再去做绑定，返回的下层设备将会是 <code>VolSnap</code>  的设备。</p>\n<p><strong>在通常情况下，过滤设备的设备属性，例如 Flag 值等都需要和它的下层设备一样，当然过滤设备也可以加入自己特有的一些属性值</strong>。</p>\n<p><em>一般来说，下层设备是过滤驱动在需要调用正常的 IRP 请求处理流程时使用的目标设备。</em><br />\n在过滤驱动中如果将 IRP 请求发给下层设备，这个 IRP 受到的处理就如同过滤驱动不存在一样。</p>\n<p><em>在 <code>DP_FILTER_DEV_EXTENSION</code>  数据结构中可以看到，针对每个过滤设备都会建立一个处理线程和相应的请求队列，这是因为在这个驱动中同样采用了将所有请求依次排队，然后使用一个单独的线程依次处理的方式</em>。这么做的好处在于将所有的读 / 写请求串行化，程序易于编写而且<strong>不会出现读 / 写请求之间的同步问题</strong>。</p>\n<p>在  <code>DPAddDevice</code>  函数中读者还会发现初始化了  <code>PagingPathCountEvent</code>  和  <code>PagingPathCount</code>  这两个与分页路径相关的变量，它们将会在 PnP IRP 请求的处理中被用到，这里暂时只需要知道它们的初始化值是多少即可。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPAddDevice</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN\tPDRIVER_OBJECT\tDriverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    IN\tPDEVICE_OBJECT\tPhysicalDeviceObject</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//NTSTATUS 类型的函数返回值</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tNTSTATUS\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 用来指向过滤设备的设备扩展的指针</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPDP_FILTER_DEV_EXTENSION\tDevExt <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 过滤设备的下层设备的指针对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPDEVICE_OBJECT\t\t\t\tLowerDevObj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 过滤设备的设备指针的指针对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPDEVICE_OBJECT\t\t\t\tFltDevObj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 过滤设备的处理线程的线程句柄</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tHANDLE\t\t\t\t\t\tThreadHandle <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 建立一个过滤设备，这个设备是 FILE_DEVICE_DISK 类型的设备并且具有 DP_FILTER_DEV_EXTENSION 类型的设备扩展</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">IoCreateDevice</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tDriverObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DP_FILTER_DEV_EXTENSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tFILE_DEVICE_DISK<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tFILE_DEVICE_SECURE_OPEN<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tFALSE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>FltDevObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 将 DevExt 指向过滤设备的设备扩展指针</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tDevExt <span class=\"token operator\">=</span> FltDevObj<span class=\"token operator\">-></span>DeviceExtension<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">// 清空过滤设备的设备扩展</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">RtlZeroMemory</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DP_FILTER_DEV_EXTENSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// 将刚刚建立的过滤设备附加到这个卷设备的物理设备上</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tLowerDevObj <span class=\"token operator\">=</span> <span class=\"token function\">IoAttachDeviceToDeviceStack</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\tFltDevObj<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tPhysicalDeviceObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> LowerDevObj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\tntStatus <span class=\"token operator\">=</span> STATUS_NO_SUCH_DEVICE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token comment\">// 初始化这个卷设备的分页路径计数的计数事件</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token function\">KeInitializeEvent</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>PagingPathCountEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\tNotificationEvent<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tTRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">// 对过滤设备的设备属性进行初始化，过滤设备的设备属性应该和它的下层设备相同</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tFltDevObj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">=</span> LowerDevObj<span class=\"token operator\">-></span>Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token comment\">// 给过滤设备的设备属性加上电源可分页的属性</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tFltDevObj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_POWER_PAGABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token comment\">// 对过滤设备进行设备初始化</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tFltDevObj<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>DO_DEVICE_INITIALIZING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">// 将过滤设备对应的设备扩展中的相应变量进行初始化</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token comment\">// 卷设备的过滤设备对象</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tDevExt<span class=\"token operator\">-></span>FltDevObj <span class=\"token operator\">=</span> FltDevObj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token comment\">// 卷设备的物理设备对象</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tDevExt<span class=\"token operator\">-></span>PhyDevObj <span class=\"token operator\">=</span> PhysicalDeviceObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token comment\">// 卷设备的下层设备对象</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tDevExt<span class=\"token operator\">-></span>LowerDevObj <span class=\"token operator\">=</span> LowerDevObj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token comment\">// 初始化这个卷的请求处理队列</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token function\">InitializeListHead</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token comment\">// 初始化请求处理队列的锁</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token function\">KeInitializeSpinLock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqLock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token comment\">// 初始化请求处理队列的同步事件</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token function\">KeInitializeEvent</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\tSynchronizationEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\tFALSE</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token comment\">// 初始化终止处理线程标志</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tDevExt<span class=\"token operator\">-></span>ThreadTermFlag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token comment\">// 建立用来处理这个卷的请求的处理线程，线程函数的参数则是设备扩展</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">PsCreateSystemThread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>ThreadHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>ACCESS_MASK<span class=\"token punctuation\">)</span><span class=\"token number\">0L</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\tDPReadWriteThread<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\tDevExt</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t<span class=\"token comment\">// 获取处理线程的对象</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">ObReferenceObjectByHandle</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\tThreadHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\tTHREAD_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\tKernelMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ThreadHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\tDevExt<span class=\"token operator\">-></span>ThreadTermFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t<span class=\"token function\">KeSetEvent</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span>KPRIORITY<span class=\"token punctuation\">)</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\tFALSE</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>ERROUT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t<span class=\"token comment\">// 如果上面有不成功的地方，首先需要解除可能存在的附加</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> LowerDevObj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t<span class=\"token function\">IoDetachDevice</span><span class=\"token punctuation\">(</span>LowerDevObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\tDevExt<span class=\"token operator\">-></span>LowerDevObj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t<span class=\"token comment\">// 然后删除可能建立的过滤设备</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> FltDevObj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span>FltDevObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\tDevExt<span class=\"token operator\">-></span>FltDevObj <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t<span class=\"token comment\">// 关闭线程句柄，我们今后不会用到它，所有对线程的引用都通过线程对象来进行了</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> ThreadHandle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t<span class=\"token function\">ZwClose</span><span class=\"token punctuation\">(</span>ThreadHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token comment\">// 返回状态值</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token keyword\">return</span> ntStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"pnp即插即用请求的处理\"><a class=\"anchor\" href=\"#pnp即插即用请求的处理\">#</a> PnP（即插即用）请求的处理</h3>\n<p>作为一个卷过滤驱动 PnP 请求是非常重要的，这是因为 Windows 操作系统在某些时刻会向存储设备发出专门的请求，如果没有进行正确的处理，将会造成系统无法正常关机等一系列问题。</p>\n<p>在收到了 PnP 请求之后，由于在 <code>DriverEntry</code>  中对 PnP 请求的处理函数特别设置成了 <code>DPDispatchPnp</code>  函数，所以 <code>DPDispatchPnp</code>  函数将会被调用。</p>\n<p>它具有两个参数： <code>DeviceObject</code>  和 <code>irp</code> ，分别说明了<em>这个请求发往的设备</em>和<em>这个请求的具体细节</em>。</p>\n<p>由于这是过滤驱动的 PnP 分发函数，所以也只有过滤驱动所建立的设备收到 PnP 请求时才会调用这个函数，那么很容易想到这个 <code>DeviceObject</code>  一定是<strong>过滤设备</strong>。</p>\n<p>在 <code>AddDevice</code>  函数中，<strong>每个卷的过滤设备都会被建立相应的设备扩展，里面存储有很多这个过滤设备的属性信息</strong>，所以在函数的一开始就需要将这些信息拿出来，同时需要通过 <code>irp</code>  参数中的  <code>irp stack</code>  成员来<strong>进一步确定这个 IRP 请求的具体目的</strong>。类似的操作在之后的各种不同请求的处理函数中都会见到，代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 用来指向过滤设备的设备扩展的指针</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PDP_FILTER_DEV_EXTENSION\tDevExt <span class=\"token operator\">=</span> DeviceObject<span class=\"token operator\">-></span>DeviceExtension<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 返回值</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>NTSTATUS ntStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 用来指向 irp stack 的指针</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PIO_STACK_LOCATION  irpsp <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><em>在获取到了这些参数之后，可以直接通过判断 irp stack 中的 MinorFunction 来判断这个 IRP 请求的具体目的</em>。<br />\n<em>在 irp stack 中，通常会存在 MajorFunction 和 MinorFunction 两个请求号，其中 MajorFunction 是大请求号，一般是类似于 Write、Read、PnP、DeviceIoControl 等大分类的请求</em>；<br />\n<em>而 MinorFunction 是小请求号，一般是在某一个大分类中的子请求号。我们知道在这个分发函数中 MajorFunction 肯定是 PnP 请求，而 MinorFunction 才是在这个函数中需要关心的</em>。</p>\n<p>这里有两个 PnP 请求需要我们来处理，对于其他的 PnP 请求，直接交给下层设备去处理就可以了。</p>\n<h4 id=\"设备移除请求\"><a class=\"anchor\" href=\"#设备移除请求\">#</a> 设备移除请求</h4>\n<p>第一个需要处理的 PnP 子请求是<strong>设备移除请求</strong>，这个请求会在 Windows 进行设备热插拔、均衡或者关机时被发送到磁盘卷设备。</p>\n<p>当然，过滤驱动会先于磁盘卷设备收到这个请求，在这个请求发送时，所有的磁盘卷设备的读 / 写请求应该都已经完成，所以在过滤驱动收到这个请求时，<strong>只需要简单地将曾经建立过的所有设备和初始化过的所有内部数据结构全部销毁即可</strong>。</p>\n<p><em>建立过的设备主要是在 <code>AddDevice</code>  函数中建立的过滤设备和由绑定而生成的下层设备，内部数据结构主要包括了下面将要了解的 <code>bitmap</code>  数据结构。此外，在 <code>AddDevice</code>  函数中为卷设备建立的请求处理线程也需要停掉</em>。</p>\n<h4 id=\"设备使用通告请求\"><a class=\"anchor\" href=\"#设备使用通告请求\">#</a> 设备使用通告请求</h4>\n<p>第二个需要处理的请求是设备使用通告请求，Windows 操作系统会在建立或者删除特殊文件的时候向存储设备发出这个 IRP 请求，作为存储设备卷过滤设备自然也会收到这个请求。</p>\n<p>这里说的特殊文件包括页面文件、休眠文件和 dump 文件。</p>\n<ul>\n<li>\n<p><strong>页面文件</strong>：页文件 (也称为 “分页文件”) 是硬盘上的可选隐藏系统文件。也就是虚拟内存 RAM 的物理扩展，页面文件使系统能够从物理内存中删除不常访问的修改页，使系统能够更高效地使用物理内存来更频繁地访问页面。</p>\n</li>\n<li>\n<p><strong>休眠文件</strong>：是系统保存着内存数据的备份文件，随时进行更新。这个文件无法复制，删除，修改或移动。只有当在电源管理中对系统启用了休眠功能后，才会产生这个文件。通过使用这个休眠文件来时刻将内存中的所有信息保存起来。停用休眠选项后系统会自己把它删除。如果还没启动休眠在 c 盘根目录就已经有了同名文件，会导致休眠无法启动。“休眠” 将保存一份桌面及所有打开文件和文档的映像，然后关闭计算机电源，监视器和硬盘也会同时关闭，内存中的内容都会以备份文件的形式保存在磁盘上。打开电源时，文件和文档就会按原来离开时的样子在桌面上打开。</p>\n</li>\n<li>\n<p><strong>dump 文件</strong>：是进程的内存镜像。</p>\n</li>\n</ul>\n<p>Windows 会通过 <code>irp stack</code>  中的 <code>Parameters.UsageNotification.Type</code>  域来说明<strong>请求的是哪种文件</strong>，并且会使用 <code>Parameters.UsageNotification.InPath</code>  域来说明<strong>这个请求是在询问设备是否可以建立这个文件，还是在删除了这个文件之后对这个设备的通知</strong>。</p>\n<p>在处理这个请求时，过滤驱动比较关心的是对页面文件的处理，因为这牵扯到过滤设备标志位中的 <code>DO_POWER_PAGABLE</code>  位。关于这个位，简单来说，就是如果有页面文件在这个卷上，那么就应该清除  <code>DO_POWER_PAGABLE</code> ；反之，就应该加上  <code>DO_POWER_PAGABLE</code> 。</p>\n<p>这个请求的根本目的是，<strong>Windows 操作系统用来查询设备是否可以在其上建立特殊文件</strong>，作为过滤驱动是不应该对这种询问加以回答的，正确的做法是将这个请求发送给下层设备，由下层设备来回答这个问题。但是同时过滤驱动需要监视下层设备的回答，如果下层设备不支持这个请求，自然是最简单不过的事情，过滤设备什么都不做就可以了；反之，如果下层设备支持这个请求，那么过滤设备就需要进行处理，在下层设备对第一个页面文件建立请求回答是之后，过滤设备需要对  <code>DO_POWER_PAGABLE</code>  位进行相应的设置，并且做一个计数。这个计数会随着页面文件建立的请求而增加，随着页面文件删除通知而减少，当减少到最后一个计数时，过滤设备又需要对  <code>DO_POWER_PAGABLE</code>  位进行相应的设置。</p>\n<h4 id=\"完整的pnp请求处理代码\"><a class=\"anchor\" href=\"#完整的pnp请求处理代码\">#</a> 完整的 PnP 请求处理代码</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPDispatchPnp</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIN\tPDEVICE_OBJECT\tDeviceObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN\tPIRP\t\t\tIrp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 用来指向过滤设备的设备扩展的指针</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPDP_FILTER_DEV_EXTENSION\tDevExt <span class=\"token operator\">=</span> DeviceObject<span class=\"token operator\">-></span>DeviceExtension<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 返回值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tNTSTATUS ntStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 用来指向 irp stack 的指针</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIO_STACK_LOCATION  irpsp <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>MinorFunction<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">case</span> IRP_MN_REMOVE_DEVICE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">// 如果是 PnP manager 发过来的移除设备的 irp，将进入这里</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token comment\">// 这里主要做一些清理工作</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>ThreadTermFlag <span class=\"token operator\">!=</span> TRUE <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> DevExt<span class=\"token operator\">-></span>ThreadHandle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果线程还在运行的话需要停止它，这里通过设置线程停止运行的标志并且发送事件信息，让线程自己终止运行</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\tDevExt<span class=\"token operator\">-></span>ThreadTermFlag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t<span class=\"token function\">KeSetEvent</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">(</span>KPRIORITY<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t\tFALSE</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 等待线程结束</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t<span class=\"token function\">KeWaitForSingleObject</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\t\tDevExt<span class=\"token operator\">-></span>ThreadHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t\tExecutive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t\tKernelMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t\tFALSE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 解除引用线程对象</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t<span class=\"token function\">ObDereferenceObject</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>ThreadHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t \t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> DevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t \t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果还有位图，就释放</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t \t\t\t<span class=\"token function\">DPBitmapFree</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t \t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> DevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果存在着下层设备，就先去掉挂接</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\t<span class=\"token function\">IoDetachDevice</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t \t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> DevExt<span class=\"token operator\">-></span>FltDevObj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t \t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果存在过滤设备，就要删除它</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t \t\t\t<span class=\"token function\">IoDeleteDevice</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>FltDevObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t \t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">// 这个是 PnP 管理器用来询问设备能否支持特殊文件的 irp，作为卷的过滤驱动，我们必须处理</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">case</span> IRP_MN_DEVICE_USAGE_NOTIFICATION<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\tBOOLEAN setPagable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token comment\">// 如果是询问是否支持休眠文件和 dump 文件，则直接下发给下层设备去处理</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>UsageNotification<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">!=</span> DeviceUsageTypePaging<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">DPSendToNextDriver</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t\t\tDevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t\t\tIrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> ntStatus<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t<span class=\"token comment\">// 这里等一下分页计数事件</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">KeWaitForSingleObject</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>PagingPathCountEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t\tExecutive<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\tKernelMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t\tFALSE<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token comment\">//setPagable 初始化为假，是没有设置过 DO_POWER_PAGABLE 的意思</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\tsetPagable <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>UsageNotification<span class=\"token punctuation\">.</span>InPath<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>PagingPathCount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果是 PnP manager 通知我们将要删去分页文件，且我们目前只剩下最后一个分页文件的时候会进入这里</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DeviceObject<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;</span> DO_POWER_INRUSH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 到这里说明没有分页文件在这个设备上了，需要设置 DO_POWER_PAGABLE 这一位了</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\t\tDeviceObject<span class=\"token operator\">-></span>Flags <span class=\"token operator\">|=</span> DO_POWER_PAGABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t\t\tsetPagable <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token comment\">// 到这里肯定是关于分页文件的是否可建立查询，或者是删除的通知，我们交给下层设备去做。这里需要用同步的方式给下层设备，也就是说要等待下层设备的返回</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">DPForwardIrpSync</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果发给下层设备的请求成功了，说明下层设备支持这个操作，会执行到这里</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 在成功的条件下我们来改变我们自己的计数值，这样就能记录我们现在这个设备上到底有多少个分页文件</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t\t<span class=\"token function\">IoAdjustPagingPathCount</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>PagingPathCount<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\t\tirpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>UsageNotification<span class=\"token punctuation\">.</span>InPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>UsageNotification<span class=\"token punctuation\">.</span>InPath<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>PagingPathCount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">// 如果这个请求是一个建立分页文件的查询请求，并且下层设备支持这个请求，而且这是第一个在这个设备上的分页文件，那么我们需要清除 DO_POWER_PAGABLE 位</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t\t\t\tDeviceObject<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>DO_POWER_PAGABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 到这里说明给下层设备发请求失败了，下层设备不支持这个请求，这时候我们需要把之前做过的操作还原</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>setPagable <span class=\"token operator\">==</span> TRUE<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 根据 setPagable 变量的值来判断我们之前是否做过对 DO_POWER_PAGABLE 的设置，如果有的话就清楚这个设置</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t\t\tDeviceObject<span class=\"token operator\">-></span>Flags <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>DO_POWER_PAGABLE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\t\t\tsetPagable <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token comment\">// 设置分页计数事件</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t<span class=\"token function\">KeSetEvent</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>PagingPathCountEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\t\tIO_NO_INCREMENT<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\t\tFALSE</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t\t<span class=\"token comment\">// 到这里我们就可以完成这个 irp 请求了</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t<span class=\"token function\">IoCompleteRequest</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">,</span> IO_NO_INCREMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> ntStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DPSendToNextDriver</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\tDevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\tIrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"power请求的处理\"><a class=\"anchor\" href=\"#power请求的处理\">#</a> Power 请求的处理</h3>\n<p>Power 请求的处理本应和大部分 IRP 请求一样，直接交给下层设备处理即可。</p>\n<p>只是在 Windows Vista 以前的操作系统中，下发所使用的函数是比较特殊的  <code>PoCallDriver</code>  ，而且在这之前还需要使用 <code>PoStartNextPowerIrp</code>  来处理一下 IRP 请求。<br />\n这一情况在 Windows Vista 中得以改变，开发人员只需要使用一般的方法下发这个 IRP 请求即可。本驱动中使用了一个编译宏来判断当前的驱动是为 Windows Vista 使用的还是为 Windows XP 使用的，从而决定编译时使用的代码。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPDispatchPower</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN\tPDEVICE_OBJECT\tDeviceObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    IN\tPIRP\t\t\tIrp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 用来指向过滤设备的设备扩展的指针</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPDP_FILTER_DEV_EXTENSION\tDevExt <span class=\"token operator\">=</span> DeviceObject<span class=\"token operator\">-></span>DeviceExtension<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>NTDDI_VERSION <span class=\"token operator\">&lt;</span> NTDDI_VISTA<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 如果是 vista 以前的版本的 windows，需要使用特殊的向下层设备转发的函数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">PoStartNextPowerIrp</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">IoSkipCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">PoCallDriver</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span> Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 如果是 vista 系统，可以使用和一般下发 irp 一样的方法来下发</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DPSendToNextDriver</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tDevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tIrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span>  </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"deviceiocontrol请求的处理\"><a class=\"anchor\" href=\"#deviceiocontrol请求的处理\">#</a> DeviceIoControl 请求的处理</h3>\n<p><code>DeviceIoControl</code>  请求的处理函数是  <code>DPDispatchDeviceControl</code>  ，作为一个磁盘卷设备的过滤驱动，理论上是不需要对  <code>DeviceIoControl</code>  做任何处理的，只需要如实地转发给下层设备去处理即可。但是在这里本驱动需要截获一个特殊的  <code>DeviceIoControl</code>  请求 —  <code>IOCTL_VOLUME_ONLINE</code> ，这个请求是由 Windows 操作系统发出的，<strong>它本身的作用是把目标卷设备设置为在线状态，在这个状态设置完成之后，才会有对这个卷的读 / 写等操作发生</strong>。</p>\n<p>对于这个以还原为目的的驱动来说，最好是尽量对读 / 写操作进行处理。基于这个理由， <code>IOCTL_VOLUME_ONLINE</code>  是一个很好的机会，所以在本驱动中，<strong>大部分的数据结构等初始化工作都将被放到这个 <code>DeviceIoControl</code>  时完成</strong>。</p>\n<p>这里我们可能会认为在收到  <code>IOCTL_VOLUME_ONLINE</code>  这个 <code>DeviceIoControl</code>  请求时直接做初始化工作即可，然后再将这个请求发往下层设备。这是不行的，原因如下：</p>\n<p>初始化工作需要目标卷的一些信息，例如需要知道这个卷的卷标，因为这个驱动只保护 “D” 盘；需要知道这个卷的一些信息（如卷的大小），因为初始化 <code>bitmap</code>  需要这个信息作为参数，但是这一切都必须要等过滤驱动的下层设备也就是真正的卷设备开始运行之后才能够提供，而卷设备开始运行却需要这个 <code>IOCTL_VOLUME_ONLINE</code>  的 <code>DeviceIoControl</code>  请求发下去…… 这样似乎陷入了一个先有鸡还是先有蛋的循环中，但实际上有一个很简单的办法可以解决这个问题，就是<strong>让请求先发下去，等下层设备处理完毕之后再进行初始化工作，同时由于下发请求时采用了同步的方式，因此在完成请求之前是不会有其他请求发生的</strong>。</p>\n<p>WDM 驱动框架为实现上文所述的操作提供了相当方便的操作方式，<em>只需要复制一份 <code>irp stack</code> ，设置好完成函数和一个等待事件，在调用下层设备之后就开始等待这个事件，当下层设备处理完成之后之前设置的完成函数会被调用，在完成函数中会唤醒刚才所说的等待事件，于是一切都会顺理成章地走下去，当然在完成函数里上文所述的初始化工作就可以进行了</em>。</p>\n<p>下面是如何设置完成函数和等待事件的代码，也就是在 DeviceIoControl 的分发函数中所做的事情。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPDispatchDeviceControl</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIN\tPDEVICE_OBJECT\tDeviceObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN\tPIRP\t\t\tIrp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 用来指向过滤设备的设备扩展的指针</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPDP_FILTER_DEV_EXTENSION\tDevExt <span class=\"token operator\">=</span> DeviceObject<span class=\"token operator\">-></span>DeviceExtension<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 返回值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tNTSTATUS ntStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 用来指向 irp stack 的指针</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIO_STACK_LOCATION  irpsp <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 用来同步 IOCTL_VOLUME_ONLINE 处理的事件</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tKEVENT\t\t\t\t\tEvent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 用来传给 IOCTL_VOLUME_ONLINE 的完成函数的上下文</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tVOLUME_ONLINE_CONTEXT\tcontext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>DeviceIoControl<span class=\"token punctuation\">.</span>IoControlCode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">case</span> IOCTL_VOLUME_ONLINE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token comment\">// 如果是卷设备的 IOCTL_VOLUME_ONLINE，会进入到这里</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token comment\">// 我们打算自己处理这个 irp 请求，这里先初始化一个事件用来在这个请求的完成函数里面做同步信号</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token function\">KeInitializeEvent</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Event<span class=\"token punctuation\">,</span> NotificationEvent<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token comment\">// 给这个请求的完成函数初始化参数</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tcontext<span class=\"token punctuation\">.</span>DevExt <span class=\"token operator\">=</span> DevExt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\tcontext<span class=\"token punctuation\">.</span>Event <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>Event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token comment\">// 这里 copy 一份 irp stack</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token function\">IoCopyCurrentIrpStackLocationToNext</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token comment\">// 设置完成函数</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token function\">IoSetCompletionRoutine</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\tIrp<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\tDPVolumeOnLineCompleteRoutine<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t<span class=\"token operator\">&amp;</span>context<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\tTRUE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\tTRUE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\tTRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token comment\">// 调用下层设备来处理这个 irp</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">IoCallDriver</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span> Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token comment\">// 等待下层设备处理结束这个 irp</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token function\">KeWaitForSingleObject</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t<span class=\"token operator\">&amp;</span>Event<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\tExecutive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\tKernelMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\tFALSE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token comment\">// 返回</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> ntStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token comment\">// 对于其它 DeviceIoControl，我们一律调用下层设备去处理</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DPSendToNextDriver</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"ioctl_volume_online的完成回调函数\"><a class=\"anchor\" href=\"#ioctl_volume_online的完成回调函数\">#</a> IOCTL_VOLUME_ONLINE 的完成回调函数</h4>\n<p>从上面的代码中可以看到，在如何获取到  <code>IOCTL_VOLUME_ONLINE</code>  请求时设置了名为  <code>DPVolumeOnLineCompleteRoutine</code>  的完成函数，这个函数将在下层设备处理完 IRP 时被调用。</p>\n<p>下面看一下这个完成函数里都做了什么，这里需要注意的是，在这个完成函数里，下层设备所对应的磁盘卷设备已经可以工作了。</p>\n<p>在完成函数里首先获取了卷的名称，即常见的 C、D、E 等盘符，这是通过系统调用获取到的，如果有兴趣，会发现这个系统调用是无法在 <code>IOCTL_VOLUME_ONLINE</code>  被下发之前使用的。<br />\n在获取了这些盘符之后，根据驱动设计，这里只对 “D” 盘感兴趣，在发现盘符为 “D” 的卷设备之后，首先获取这个卷的基本信息，例如卷有多大等。</p>\n<p>这个获取信息的函数是驱动自己实现的，它通过读取卷的第一个扇区并分析其内容来取得所需的信息。</p>\n<p>在上一章中我们学过 <code>DBR</code> ，应该会比较容易地理解这些信息是如何获取的，这里就不再对代码进行分析了。</p>\n<p>在获取了卷的信息之后，需要初始化一个 <code>bitmap</code> ，这个 <code>bitmap</code>  是还原功能的核心数据结构，具体的作用和实现后面会了解的，<strong>这里只需要知道初始化 <code>bitmap</code>  时需要卷的总大小作为参数即可</strong>。</p>\n<p>在这些工作都完成之后，<strong>将用来标识还原卷的全局变量赋值</strong>，<em>在今后运行的读 / 写分发函数和 boot 驱动回调函数等众多函数中，都会引用这个全局变量，并根据它的内容来确定哪个是需要保护的卷</em>。</p>\n<p>下面是完成函数的具体实现过程，在代码中读者可以发现，作为参数被传入的等待事件在最后被唤醒，这使得上面的 <code>DeviceIoControl</code>  处理代码中的等待得以返回，系统调用得以继续运行下去。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPVolumeOnLineCompleteRoutine</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIN PDEVICE_OBJECT  DeviceObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN PIRP  Irp<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN PVOLUME_ONLINE_CONTEXT  Context</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 返回值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tNTSTATUS ntStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 这个卷设备的 dos 名字，也就是 C，D 等</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tUNICODE_STRING\t\tDosName <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 在这里 Context 是不可能为空的，为空就是出错了</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">ASSERT</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 下面调用我们自己的 VolumeOnline 处理</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 获取这个卷的 dos 名字</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">IoVolumeDeviceToDosName</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>PhyDevObj<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>DosName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 将 dos 名字变成大写形式</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tContext<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>VolumeLetter <span class=\"token operator\">=</span> DosName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>VolumeLetter <span class=\"token operator\">></span> L<span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tContext<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>VolumeLetter <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span>L<span class=\"token string\">'a'</span> <span class=\"token operator\">-</span> L<span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// 我们只保护 “D” 盘</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>VolumeLetter <span class=\"token operator\">==</span> L<span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token comment\">// 获取这个卷的基本信息</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">DPQueryVolumeInformation</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\tContext<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>PhyDevObj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>TotalSizeInByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>ClusterSizeInByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>SectorSizeInByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token comment\">// 建立这个卷对应的位图</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">DPBitmapInit</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\tContext<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>SectorSizeInByte<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token number\">8</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token number\">25600</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>TotalSizeInByte<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">/</span> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span>LONGLONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">25600</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>SectorSizeInByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token comment\">// 对全局量赋值，说明我们找到需要保护的那个设备了</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tgProtectDevExt <span class=\"token operator\">=</span> Context<span class=\"token operator\">-></span>DevExt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>ERROUT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token function\">DPBitmapFree</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t<span class=\"token function\">ZwClose</span><span class=\"token punctuation\">(</span>Context<span class=\"token operator\">-></span>DevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> DosName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>DosName<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token comment\">// 设置等待同步事件，这样可以让我们等待的 DeviceIoControl 处理过程继续运行</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token function\">KeSetEvent</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tContext<span class=\"token operator\">-></span>Event<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\tFALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"bitmap的作用和分析\"><a class=\"anchor\" href=\"#bitmap的作用和分析\">#</a> bitmap 的作用和分析</h3>\n<p>在上面的分析中已经多次看到了 <code>bitmap</code> ，但却一直不知道它具体是什么，它的作用是什么，为什么要用它，它是如何实现的。</p>\n<p>下面将会来解答这些问题。</p>\n<p>顾名思义， <code>bitmap</code>  就是一个位图。<strong>它实际上是一些内存块，这些内存块的每一位用来标识一个磁盘上的最小访问单位，一般情况下是一个扇区。每一位可以被置位或者被清除，用来表示这个扇区所对应的两种状态</strong>。</p>\n<p>作为一个还原驱动，<strong>核心的问题在于如何将写入的数据存储在其他地方，而在读取时又能够准确地从其他地方找到</strong>。为了达到这个目的，就必须使用 <code>bitmap</code> 。 <code>bitmap</code>  中的每一位对应的是磁盘上的一个扇区，有多少个扇区就有多少位。<br />\n<em>这个位为 0 代表的意义是，这个位所对应的扇区的数据没有被存储到其他地方；反之，则代表这个扇区的数据被存储到了其他地方。在写数据时，根据写操作的范围可以将 <code>bitmap</code>  中对应的区域置为 1，在读操作时，则又会根据 <code>bitmap</code>  的内容把置为 1 的扇区从转存的地方读回来；而对 <code>bitmap</code>  为 0 的地方还是从原有设备上读取数据，这样 <code>bitmap</code>  就成了在这次系统启动生命周期中所有写操作的标志直到系统重启，在重启过后 <code>bitmap</code>  又将恢复为全 0 的状态，这时无论是什么读操作都不会从转存处拿数据，也就实现了还原的功能</em>。</p>\n<p>之所以说 <code>bitmap</code>  是一些内存块而不是一个连续的内存，是因为在设计 <code>bitmap</code>  时考虑到它所表示的位图可能对应着很大一块磁盘区域，即使是用 1 位来表示 512 字节的数据也有可能会是很大的一片内存空间。所以在设计 <code>bitmap</code>  时要求它能够按需分配内存，使用时才去分配对应的内存，这样就可以节约大量的内存空间。要知道这里所说的内存空间都是指非分页的内存，这一部分内存即使是在内核中也是非常宝贵的。</p>\n<p>首先来看一下 bitmap 的内部数据结构组成。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> tBitmap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_DP_BITMAP_</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 这个卷中的每个扇区有多少字节，这同样也说明了 bitmap 中一个位所对应的字节数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> sectorSize<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 每个 byte 里面有几个 bit，一般情况下是 8</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> byteSize<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 每个块是多大 byte，</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> regionSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 这个 bitmap 总共有多少个块</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> regionNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 这个块对应了多少个实际的 byte，这个数字应该是 sectorSize * byteSize * regionSize</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> regionReferSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 这个 bitmap 对应了多少个实际的 byte，这个数字应该是 sectorSize * byteSize * regionSize * regionNumber</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    __int64 bitmapReferSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">// 指向 bitmap 存储空间的指针</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    tBitmap<span class=\"token operator\">*</span><span class=\"token operator\">*</span> Bitmap<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token comment\">// 用于存取 bitmap 的锁</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> lockBitmap<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span> DP_BITMAP<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PDP_BITMAP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>可以看到  <code>bitmap</code>  的最上层是一个类型为字节指针的指针（ <code>tBitmap**</code> ，实际等效于 <code>unsigned char**</code> ）的元素，名为 <code>bitmap</code> ，在这里可以把这个指针的指针理解成一个指针数组，数组有 <code>regionSize</code>  个元素，每个元素就是一个指向所谓的内存块的指针。在开始时这些指向内存块的指针都是空指针，这时它们代表了（而不是真正指向了）一个内容全部为 0 的内存块，只是实际的内存没有被分配出来。当需要将其中的任何一位设置为 1 时，这个内存块会首先被分配，在清零之后再对其中需要设置为 1 的位进行设置，这就是所说的按需分配，也是节约空间的关键所在。</p>\n<h4 id=\"初始化bitmap\"><a class=\"anchor\" href=\"#初始化bitmap\">#</a> 初始化 bitmap</h4>\n<p>下面是初始化这个数据结构的代码，用户通过指定 <code>bitmap</code>  的参数来初始化一个 <code>bitmap</code> ，在这里用户需要知道这个 <code>bitmap</code>  一共代表了多大的区域；同时需要给定一个块的大小，这个大小取的太大可能造成分配空间的浪费，取的太小又会使得块的数目太多，所以一般需要取一个合适的中间值。</p>\n<p>下面是初始化一个 <code>bitmap</code>  的代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">DPBitmapInit</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tDP_BITMAP <span class=\"token operator\">*</span><span class=\"token operator\">*</span>     bitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>       sectorSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>       byteSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>       regionSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>       regionNumber</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tDP_BITMAP <span class=\"token operator\">*</span> myBitmap <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 检查参数，以免使用了错误的参数导致发生处零错等错误</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> bitmap <span class=\"token operator\">||</span> <span class=\"token number\">0</span> <span class=\"token operator\">==</span> sectorSize <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token number\">0</span> <span class=\"token operator\">==</span> byteSize <span class=\"token operator\">||</span> <span class=\"token number\">0</span> <span class=\"token operator\">==</span> regionSize  <span class=\"token operator\">||</span> <span class=\"token number\">0</span> <span class=\"token operator\">==</span> regionNumber<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t__try</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// 分配一个 bitmap 结构，这是无论如何都要分配的，这个结构相当于一个 bitmap 的 handle\t</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>myBitmap <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DP_BITMAP<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">DPBitmapAlloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DP_BITMAP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token comment\">// 清空结构</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>myBitmap<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DP_BITMAP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token comment\">// 根据参数对结构中的成员进行赋值</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tmyBitmap<span class=\"token operator\">-></span>sectorSize <span class=\"token operator\">=</span> sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tmyBitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">=</span> byteSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tmyBitmap<span class=\"token operator\">-></span>regionSize <span class=\"token operator\">=</span> regionSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tmyBitmap<span class=\"token operator\">-></span>regionNumber <span class=\"token operator\">=</span> regionNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tmyBitmap<span class=\"token operator\">-></span>regionReferSize <span class=\"token operator\">=</span> sectorSize <span class=\"token operator\">*</span> byteSize <span class=\"token operator\">*</span> regionSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tmyBitmap<span class=\"token operator\">-></span>bitmapReferSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>sectorSize <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>byteSize <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>regionSize <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>regionNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token comment\">// 分配出 regionNumber 那么多个指向 region 的指针，这是一个指针数组</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>myBitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tBitmap <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">DPBitmapAlloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>tBitmap<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> regionNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token comment\">// 清空指针数组</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>myBitmap<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>tBitmap<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> regionNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token operator\">*</span> bitmap <span class=\"token operator\">=</span> myBitmap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token function\">__except</span><span class=\"token punctuation\">(</span>EXCEPTION_EXECUTE_HANDLER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> myBitmap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token function\">DPBitmapFree</span><span class=\"token punctuation\">(</span>myBitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token operator\">*</span> bitmap <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DPBitmapFree</span><span class=\"token punctuation\">(</span>DP_BITMAP<span class=\"token operator\">*</span> bitmap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">// 释放 bitmap</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tDWORD i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> bitmap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> bitmap<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bitmap<span class=\"token operator\">-></span>regionNumber<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 从最底层的块开始释放，所有块都轮询一次\t\t\t\t</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t<span class=\"token comment\">// 释放块的指针</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token comment\">// 释放 bitmap 本身</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>从上面的代码中可以看出，初始化 bitmap 的过程中仅仅分配了很少的一部分内存，而这时这个 bitmap 却是完全可用的，只有在对其进行位设置时才会有新的内存被分配出来。</p>\n<h4 id=\"bitmap置位函数\"><a class=\"anchor\" href=\"#bitmap置位函数\">#</a> bitmap 置位函数</h4>\n<p>bitmap 提供了一个接口，这个接口的作用是<em>把 bitmap 特定区域内的数据置位（即把某一位从 0 修改成 1），因为在 bitmap 的初始化过程中所有的位都认为是 0，而在今后使用的过程中也看不出需要将 1 变为 0 的可能，这就使得这里只需要提供置位的接口即可，而不需要清除位的接口</em>。这个接口函数需要考虑的第一个问题是，在所需置位的目标 bitmap 内存区域没有被分配时需要先分配才能置位。需要考虑的第二个问题是，如何能够尽快地完成一个对一长段连续的 bitmap 做置位的请求。</p>\n<p>下面请看这两个问题的具体处理方式。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">DPBitmapSet</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tDP_BITMAP <span class=\"token operator\">*</span>      bitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLARGE_INTEGER       offset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>       length</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t__int64 i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myRegion <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> myRegionEnd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myRegionOffset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> myRegionOffsetEnd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myByteOffset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> myByteOffsetEnd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myBitPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tLARGE_INTEGER setBegin <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> setEnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t__try</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">// 检查变量</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> bitmap <span class=\"token operator\">||</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_INVALID_PARAMETER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!=</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">%</span> bitmap<span class=\"token operator\">-></span>sectorSize <span class=\"token operator\">||</span> <span class=\"token number\">0</span> <span class=\"token operator\">!=</span> length <span class=\"token operator\">%</span> bitmap</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_INVALID_PARAMETER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token comment\">// 根据要设置的偏移量和长度来计算需要使用到哪些 region，如果需要的话，就分配他们指向的内存空间</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tmyRegion <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tmyRegionEnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> myRegion<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> myRegionEnd<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tBitmap<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">DPBitmapAlloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>tBitmap<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bitmap<span class=\"token operator\">-></span>regionSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t\tstatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>tBitmap<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bitmap<span class=\"token operator\">-></span>regionSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token comment\">// 开始设置 bitmap，首先我们需要将要设置的区域按照 byte 对齐，这样可以按 byte 设置而不需要按 bit 设置，加快设置速度</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token comment\">// 对于没有 byte 对齐的区域先手工设置掉他们</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">.</span>QuadPart<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\tmyRegion <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\tmyRegionOffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\tmyByteOffset <span class=\"token operator\">=</span> myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\tmyBitPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> bitmap<span class=\"token operator\">-></span>byteSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> myBitPos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t\tsetBegin<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> myByteOffset<span class=\"token punctuation\">)</span> <span class=\"token operator\">|=</span> bitmapMask<span class=\"token punctuation\">[</span>myBitPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">>=</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>length <span class=\"token operator\">-</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> offset<span class=\"token punctuation\">.</span>QuadPart<span class=\"token punctuation\">;</span> i <span class=\"token operator\">-=</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\tmyRegion <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\tmyRegionOffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\tmyByteOffset <span class=\"token operator\">=</span> myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\tmyBitPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> bitmap<span class=\"token operator\">-></span>byteSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">==</span> myBitPos<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\tsetEnd<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> myByteOffset<span class=\"token punctuation\">)</span> <span class=\"token operator\">|=</span> bitmapMask<span class=\"token punctuation\">[</span>myBitPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">||</span> setEnd<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">==</span> setBegin<span class=\"token punctuation\">.</span>QuadPart<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\tmyRegionEnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>setEnd<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> setBegin<span class=\"token punctuation\">.</span>QuadPart<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> setEnd<span class=\"token punctuation\">.</span>QuadPart<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\tmyRegion <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\tmyRegionOffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\tmyByteOffset <span class=\"token operator\">=</span> myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t<span class=\"token comment\">// 如果我们设置的区域没有跨两个 region，只需要使用 memset 去做按 byte 的设置然后跳出即可</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myRegion <span class=\"token operator\">==</span> myRegionEnd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t\tmyRegionOffsetEnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>setEnd<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\tmyByteOffsetEnd <span class=\"token operator\">=</span> myRegionOffsetEnd <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> myByteOffset<span class=\"token punctuation\">,</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> myByteOffsetEnd <span class=\"token operator\">-</span> myByteOffset <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t<span class=\"token comment\">// 如果我们设置的区域跨了两个 region，需要设置完后递增</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t\tmyRegionOffsetEnd <span class=\"token operator\">=</span> bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t\tmyByteOffsetEnd <span class=\"token operator\">=</span> myRegionOffsetEnd <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> myByteOffset<span class=\"token punctuation\">,</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> myByteOffsetEnd <span class=\"token operator\">-</span> myByteOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\ti <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>myByteOffsetEnd <span class=\"token operator\">-</span> myByteOffset<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">*</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t<span class=\"token function\">__except</span><span class=\"token punctuation\">(</span>EXCEPTION_EXECUTE_HANDLER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在上面的代码中看到，设置位的函数是如何先通过计算确定需要使用哪些块，并且在需要时分配它们的，然后是如何尽可能地按照一个字节而不是按照一个位来对所需要设置的位进行设置的。</p>\n<h4 id=\"bitmap位测试函数\"><a class=\"anchor\" href=\"#bitmap位测试函数\">#</a> bitmap 位测试函数</h4>\n<p>除了置位，bitmap 也需要提供一个能够测试指定位图区域是全部为 1 还是全部为 0，抑或兼而有之的接口，这个接口的目的在于，用户可以通过测试的结果决定如何进行下一步的操作。</p>\n<p>测试函数代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token function\">DPBitmapTest</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tDP_BITMAP <span class=\"token operator\">*</span>      bitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLARGE_INTEGER       offset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>       length</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">char</span> flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myRegion <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myRegionOffset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myByteOffset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myBitPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">long</span> ret <span class=\"token operator\">=</span> BITMAP_BIT_UNKNOW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t__try</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">// 检查参数</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> bitmap <span class=\"token operator\">||</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> length <span class=\"token operator\">></span> bitmap<span class=\"token operator\">-></span>bitmapReferSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> BITMAP_BIT_UNKNOW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token comment\">// 针对需要测试的 bitmap 范围进行测试，如果全部为 0 则返回 BITMAP_RANGE_CLEAR，如果全部为 1，则返回 BITMAP_RANGE_SET，如果为 0，1 混合则返回 BITMAP_RANGE_BLEND</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\tmyRegion <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\tmyRegionOffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\tmyByteOffset <span class=\"token operator\">=</span> myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\tmyBitPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> bitmap<span class=\"token operator\">-></span>byteSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> myByteOffset<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>bitmapMask<span class=\"token punctuation\">[</span>myBitPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\tflag <span class=\"token operator\">|=</span> <span class=\"token number\">0x2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\tflag <span class=\"token operator\">|=</span> <span class=\"token number\">0x1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token number\">0x3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x2</span> <span class=\"token operator\">==</span> flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> BITMAP_RANGE_SET<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x01</span> <span class=\"token operator\">==</span> flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> BITMAP_RANGE_CLEAR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x03</span> <span class=\"token operator\">==</span> flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> BITMAP_RANGE_BLEND<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">__except</span><span class=\"token punctuation\">(</span>EXCEPTION_EXECUTE_HANDLER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\tret <span class=\"token operator\">=</span> BITMAP_BIT_UNKNOW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"获取指定区域位图函数\"><a class=\"anchor\" href=\"#获取指定区域位图函数\">#</a> 获取指定区域位图函数</h4>\n<p>bitmap 在完成了设置和测试的功能之后，还需要提供一个获取指定区域位图的接口，在后面的分析中可以看到，这个获取指定区域的位图操作一定是伴随着磁盘读操作而来的。</p>\n<p><strong>如果是读操作，对于 bitmap 设置为 1 的位置需要从转存数据中读取，而设置为 0 的位置则从原始的数据中读取，所以在获取了指定区域的位图之后，需要根据这个位图中的 0 和 1 来决定最终生成的数据哪一部分是从原始数据中来的，哪一部分是从转存数据中来的</strong>。</p>\n<p>由于使用环境的特殊性，这个接口被演变成将两个内存缓冲区的内容根据指定的 bitmap 来进行合并操作，读者应该很容易想到这两个缓冲区一个是读取自转存的数据，一个是读取自原始的数据。这个函数的代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS <span class=\"token function\">DPBitmapGet</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tDP_BITMAP <span class=\"token operator\">*</span>    bitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tLARGE_INTEGER     offset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span>     length<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>            bufInOut<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>            bufIn</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myRegion <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myRegionOffset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myByteOffset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> myBitPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t__try</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token comment\">// 检查参数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> bitmap <span class=\"token operator\">||</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> bufInOut <span class=\"token operator\">||</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> bufIn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_INVALID_PARAMETER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!=</span> offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">%</span> bitmap<span class=\"token operator\">-></span>sectorSize <span class=\"token operator\">||</span> <span class=\"token number\">0</span> <span class=\"token operator\">!=</span> length <span class=\"token operator\">%</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tstatus <span class=\"token operator\">=</span> STATUS_INVALID_PARAMETER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t__leave<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token comment\">// 遍历需要获取的位图范围，如果出现了位被设置为 1，就需要用 bufIn 参数中指向的相应位置的数据拷贝到 bufInOut 中</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\tmyRegion <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\tmyRegionOffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>bitmap<span class=\"token operator\">-></span>regionReferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\tmyByteOffset <span class=\"token operator\">=</span> myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>byteSize <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\tmyBitPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>myRegionOffset <span class=\"token operator\">/</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> bitmap<span class=\"token operator\">-></span>byteSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token operator\">-></span>Bitmap <span class=\"token operator\">+</span> myRegion<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> myByteOffset<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>bitmapMask<span class=\"token punctuation\">[</span>myBitPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tBitmap<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>bufInOut <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>tBitmap<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>bufIn <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> bitmap<span class=\"token operator\">-></span>sectorSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token function\">__except</span><span class=\"token punctuation\">(</span>EXCEPTION_EXECUTE_HANDLER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tstatus <span class=\"token operator\">=</span> STATUS_UNSUCCESSFUL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"boot驱动完成回调函数和稀疏文件\"><a class=\"anchor\" href=\"#boot驱动完成回调函数和稀疏文件\">#</a> boot 驱动完成回调函数和稀疏文件</h3>\n<p>到这里为止，离最终的读 / 写转存处理只有最后的一点准备工作需要做了，而这个工作放在了 boot 驱动完成回调函数中。至于为什么要放在这里，则是由本驱动采用的转存缓冲区的机制决定的。</p>\n<p>前面已经反复强调<strong>这个驱动会将写入保护磁盘卷的数据转存到另一个地方</strong>，那么这个地方在哪里？在此本驱动使用了一个最为简单的方法 ——<em> 把数据转存到另一个卷的稀疏文件中</em>。</p>\n<p><strong>稀疏文件是 NTFS 文件系统的一个特有的概念，它在建立时可以表示很大的空间，但是却完全不占用实际的存储空间，只有在向其中写入数据时才会使用到真正的存储空间。</strong></p>\n<p>这就是说，可以在一个容量只有 1GB 的磁盘卷上建立一个大小为 10GB 的稀疏文件，程序可以对这 10GB 空间中的任何一个位置进行读 / 写操作，但是写入的总数据量不能超过 1GB。至于为什么将这个稀疏文件放在了另一个磁盘卷上，主要是因为如果放在同一个磁盘卷上，在写入这个文件时势必会被过滤驱动捕获，然后写入的数据被转储到这个文件上，对文件的这个写入又被过滤驱动捕获，这就形成了典型的重入。<br />\n当然这种重入是很容易避免的，但是为了不引起不必要的麻烦，这个学习为目的的驱动就使用了另一个卷作为转储的空间，这样就从根本上避免了重入的问题。</p>\n<p>那么在本节的开始所说的准备工作又是什么呢？这个工作实际上就是准备好这个稀疏文件，建立它，设置它的大小并且打开它。</p>\n<p>那么为什么需要在 boot 驱动完成函数中做这些事情呢？<br />\n<em>这是因为稀疏文件的操作是依赖于文件系统的，作为文件系统的驱动程序，NTFS 驱动是一个 boot 型驱动，但是它只有在卷设备开始工作之后才会将自己的处理设备附加到这个卷上，从而响应对这个卷的所有文件请求</em>。</p>\n<p>这就说明之前无论是在  <code>AddDevice</code>  函数中还是在  <code>IOCTL_VOLUME_ONLINE</code>  的  <code>DeviceIoControl</code>  中， NTFS 文件都是不能读 / 写的。而在 boot 驱动的完成函数中，所有的 boot 驱动都已经加载完毕，NTFS 自然也不例外，这时对于 NTFS 文件的读 / 写就轻而易举了。下面看一下做最后一步准备工作的代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>VOID</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPReinitializationRoutine</span><span class=\"token punctuation\">(</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIN\tPDRIVER_OBJECT\tDriverObject<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN\tPVOID\t\t\tContext<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN\tULONG\t\t\tCount </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 返回值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tNTSTATUS ntStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">//D 盘的缓冲文件名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tWCHAR\t\t\t\tSparseFilename<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"\\\\??\\\\E:\\\\temp.dat\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tUNICODE_STRING\t\tSparseFilenameUni<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 建立文件时的 io 操作状态值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tIO_STATUS_BLOCK\t\t\t\t\tios <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 建立文件时的对象属性变量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tOBJECT_ATTRIBUTES\t\t\t\tObjAttr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 设置文件大小的时候使用的文件结尾描述符</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tFILE_END_OF_FILE_INFORMATION    FileEndInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 打开我们将要用来做转储的文件</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token comment\">// 初始化要打开的文件名</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>SparseFilenameUni<span class=\"token punctuation\">,</span>SparseFilename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 初始化文件名对应的对象名，这里需要将其初始化为内核对象，并且大小写不敏感</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">InitializeObjectAttributes</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>ObjAttr<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>SparseFilenameUni<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tOBJ_KERNEL_HANDLE<span class=\"token operator\">|</span>OBJ_CASE_INSENSITIVE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">// 建立文件，这里需要注意的是，要加入 FILE_NO_INTERMEDIATE_BUFFERING 选项，避免文件系统再缓存这个文件</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">ZwCreateFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>gProtectDevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tGENERIC_READ <span class=\"token operator\">|</span> GENERIC_WRITE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>ObjAttr<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>ios<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tFILE_ATTRIBUTE_NORMAL<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tFILE_OVERWRITE_IF<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\tFILE_NON_DIRECTORY_FILE <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tFILE_RANDOM_ACCESS <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\tFILE_SYNCHRONOUS_IO_NONALERT <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tFILE_NO_INTERMEDIATE_BUFFERING<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">// 设置这个文件为稀疏文件</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">ZwFsControlFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tgProtectDevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>ios<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\tFSCTL_SET_SPARSE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token comment\">// 设置这个文件的大小为 \"D\" 盘的大小并且留出 10m 的保护空间</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tFileEndInfo<span class=\"token punctuation\">.</span>EndOfFile<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> gProtectDevExt<span class=\"token operator\">-></span>TotalSizeInByte<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">ZwSetInformationFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tgProtectDevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>ios<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token operator\">&amp;</span>FileEndInfo<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>FILE_END_OF_FILE_INFORMATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\tFileEndOfFileInformation</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> ERROUT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token comment\">// 如果成功初始化就将这个卷的保护标志设置为在保护状态</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tgProtectDevExt<span class=\"token operator\">-></span>Protect <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>ERROUT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token function\">KdPrint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error create temp file!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到，在准备工作中首先建立了预先指定好文件名的文件，并将其属性设置为稀疏文件，之后通过设置文件结尾的方法将这个文件的大小变为之前获取到的 “D” 盘的大小。</p>\n<p>这时所有准备工作都已经齐备了，将保护标志设置为真，本驱动中最核心的数据转储过程即将开始。</p>\n<h3 id=\"读写请求的处理\"><a class=\"anchor\" href=\"#读写请求的处理\">#</a> 读 / 写请求的处理</h3>\n<p>在本驱动中，最为核心的部分就是读 / 写请求的处理部分。</p>\n<h4 id=\"读写请求同步处理\"><a class=\"anchor\" href=\"#读写请求同步处理\">#</a> 读 / 写请求同步处理</h4>\n<p><strong>所有的读 / 写请求必须按照顺序以同步的方式处理，只有上一个操作被处理完成之后，下一个操作才可以开始被处理</strong>。</p>\n<p><em>这是因为过滤驱动内部的 bitmap 设置、读取，转存文件的读 / 写等操作是无法做到并行处理的，如果不进行读 / 写请求的顺序化，则有可能带来读 / 写不同步的问题，即一个写操作还没有完成，另一个读取这个写操作目标位置的读操作又将到来，这会造成后来的读取数据不正确。</em></p>\n<p><em>为了达到这个目的，对所有流经过滤设备的磁盘卷设备读 / 写请求，除了不需要保护的卷，其他的必须全部顺序放入到一个处理队列中，由一个处理线程对这个队列中的请求进行顺序处理</em>。</p>\n<p>下面看一下将读 / 写请求排队的代码。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPDispatchReadWrite</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN\tPDEVICE_OBJECT\tDeviceObject<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    IN\tPIRP\t\t\tIrp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 用来指向过滤设备的设备扩展的指针</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPDP_FILTER_DEV_EXTENSION\tDevExt <span class=\"token operator\">=</span> DeviceObject<span class=\"token operator\">-></span>DeviceExtension<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// 返回值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tNTSTATUS ntStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>Protect<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token comment\">// 这个卷在保护状态，</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\">// 我们首先把这个 irp 设为 pending 状态</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">IoMarkIrpPending</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">// 然后将这个 irp 放进相应的请求队列里</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token function\">ExInterlockedInsertTailList</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqList<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>Irp<span class=\"token operator\">-></span>Tail<span class=\"token punctuation\">.</span>Overlay<span class=\"token punctuation\">.</span>ListEntry<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqLock</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token comment\">// 设置队列的等待事件，通知队列对这个 irp 进行处理</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token function\">KeSetEvent</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqEvent<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span>KPRIORITY<span class=\"token punctuation\">)</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\tFALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token comment\">// 返回 pending 状态，这个 irp 就算处理完了</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> STATUS_PENDING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token comment\">// 这个卷不在保护状态，直接交给下层设备进行处理</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">DPSendToNextDriver</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\tDevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\tIrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在上面的代码中可以看出，<strong>首先会对作为参数传入的设备对象的对象扩展中的保护位进行判断，这一位是在 boot 驱动结束回调函数中进行设置的，并且仅对 “D” 磁盘卷的设备扩展进行设置。如果这一位在非保护状态，过滤驱动将会把这个读 / 写请求直接发给下层设备去处理；反之，如果这一位在保护状态，过滤驱动将会把这个请求设置为等待处理状态，然后将其插入到为这个设备所准备的队列中，并且通过设置队列同步事件来通知处理线程对这个请求进行处理</strong>。</p>\n<p>至此，处理队列中已经塞满了等待处理的读 / 写请求，而处理线程将会忙于将这些请求分门别类地处理好。</p>\n<h4 id=\"读写请求的处理线程\"><a class=\"anchor\" href=\"#读写请求的处理线程\">#</a> 读 / 写请求的处理线程</h4>\n<p>下面将会讲解处理线程中的代码。</p>\n<hr />\n<p>首先是处理线程函数中只运行一遍的部分，包括变量的声明和对这个线程优先级的设置。由于这里不需要这个线程以非常高的优先级运行，所以将线程的优先级设置为低。</p>\n<hr />\n<p>接下来就是线程中的无限循环部分了。</p>\n<blockquote>\n<p><em>对于一个线程来说，其中必须有一个不会退出的循环体作为线程的工作主体，如果这个线程需要结束的话，一般会通过退出这个循环体来结束线程</em>。<br />\n<em>由于在线程外无法通过 API 调用的方式结束线程，所以在每个线程的循环体里一般会通过一个全局变量进行线程是否需要退出的判断，如果在线程外的任何地方将这个全局量设置为退出，那么在线程循环下一次运行到这个位置时就会自己跳出循环，结束自己</em>。</p>\n</blockquote>\n<hr />\n<p>下面就轮到真正的请求处理逻辑了。</p>\n<p>首先需要从处理请求队列中取出一个请求，这里通过带有锁机制的操作将处理请求队列头上的请求取出。由于在插入队列时是从队列的尾部插入的，这样就保证了是按照插入的顺序来进行请求处理的。在获取到请求之后，可以根据请求中的参数对一些局部变量进行赋值。</p>\n<hr />\n<p>下面轮到了对读请求的处理。</p>\n<p>这里首先根据需要读取的范围对 bitmap 中相应的范围进行测试。<br />\n<em>如果测试的结果是这些数据全部在原始磁盘上，那么这个请求就被直接发给下层设备去处理</em>。<br />\n<em>如果发现这些数据全部在转存文件中，就通过对转存文件的读取来获得数据，并完成这个 IRP 请求</em>。这里需要说明的是，如果出现这种情况，那么一定是之前有写请求将这一范围内的数据写入了转存文件中。<br />\n<em>如果发现需要读取的目标范围中的一部分在转存文件中，另一部分在实际磁盘上，首先就需要通过向下层设备发送请求来获取真实磁盘上的数据，然后通过读取转存文件来获取转储的数据，最后通过 bitmap 的相应接口函数将两个读取的数据按照 bitmap 的指示进行合并，再完成这个读的 IRP 请求</em>。</p>\n<hr />\n<p>对于写的操作处理起来很简单，因为只要发到这里的请求必定是需要写到转存文件中的。</p>\n<p><em>由于使用了稀疏文件，所以这个文件的可寻址范围和被保护磁盘的大小是相同的，转储操作就成了只需要直接写入文件即可</em>。<br />\n这里需要注意的是，要先写入转存文件，直到写入成功之后，才可以设置 bitmap 中的对应区域；如果反过来的话，则可能出现 bitmap 已经设置但是写入不成功的情况，这时需要清除 bitmap 的相应区域，这就不是一件简单的工作了。</p>\n<hr />\n<p>完整代码如下，可以对比上面的介绍来学习此函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>VOID</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">DPReadWriteThread</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tIN PVOID Context</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">//NTSTATUS 类型的函数返回值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tNTSTATUS\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 用来指向过滤设备的设备扩展的指针</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPDP_FILTER_DEV_EXTENSION\tDevExt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PDP_FILTER_DEV_EXTENSION<span class=\"token punctuation\">)</span>Context<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 请求队列的入口</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPLIST_ENTRY\t\t\tReqEntry <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">//irp 指针</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPIRP\t\t\t\tIrp <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">//irp stack 指针</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPIO_STACK_LOCATION\tIrpsp <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">//irp 中包括的数据地址</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPBYTE\t\t\t\tsysBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">//irp 中的数据长度</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tULONG\t\t\t\tlength <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">//irp 要处理的偏移量</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tLARGE_INTEGER\t\toffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\">// 文件缓冲指针</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tPBYTE\t\t\t\tfileBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// 设备缓冲指针</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tPBYTE\t\t\t\tdevBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">//io 操作状态</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tIO_STATUS_BLOCK\t\tios<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 设置这个线程的优先级</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">KeSetPriorityThread</span><span class=\"token punctuation\">(</span><span class=\"token function\">KeGetCurrentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> LOW_REALTIME_PRIORITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">// 下面是线程的实现部分，这个循环永不退出</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token comment\">// 先等待请求队列同步事件，如果队列中没有 irp 需要处理，我们的线程就等待在这里，让出 cpu 时间给其它线程</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token function\">KeWaitForSingleObject</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqEvent<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\tExecutive<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\tKernelMode<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\tFALSE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token comment\">// 如果有了线程结束标志，那么就在线程内部自己结束自己</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>ThreadTermFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token comment\">// 这是线程的唯一退出地点</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token function\">PsTerminateSystemThread</span><span class=\"token punctuation\">(</span>STATUS_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token comment\">// 从请求队列的首部拿出一个请求来准备处理，这里使用了自旋锁机制，所以不会有冲突</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ReqEntry <span class=\"token operator\">=</span> <span class=\"token function\">ExInterlockedRemoveHeadList</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqList<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;</span>DevExt<span class=\"token operator\">-></span>ReqLock</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token comment\">// 从队列的入口里找到实际的 irp 的地址</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\tIrp <span class=\"token operator\">=</span> <span class=\"token function\">CONTAINING_RECORD</span><span class=\"token punctuation\">(</span>ReqEntry<span class=\"token punctuation\">,</span> IRP<span class=\"token punctuation\">,</span> Tail<span class=\"token punctuation\">.</span>Overlay<span class=\"token punctuation\">.</span>ListEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token comment\">// 取得 irp stack</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\tIrpsp <span class=\"token operator\">=</span> <span class=\"token function\">IoGetCurrentIrpStackLocation</span><span class=\"token punctuation\">(</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token comment\">// 获取这个 irp 其中包含的缓存地址，这个地址可能来自 mdl，也可能就是直接的缓冲，这取决于我们当前设备的 io 方式是 buffer 还是 direct 方式</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> Irp<span class=\"token operator\">-></span>MdlAddress<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t\tsysBuf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span>Irp<span class=\"token operator\">-></span>UserBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t\tsysBuf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token function\">MmGetSystemAddressForMdlSafe</span><span class=\"token punctuation\">(</span>Irp<span class=\"token operator\">-></span>MdlAddress<span class=\"token punctuation\">,</span> NormalPagePriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IRP_MJ_READ <span class=\"token operator\">==</span> Irpsp<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果是读的 irp 请求，我们在 irp stack 中取得相应的参数作为 offset 和 length</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">=</span> Irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>Read<span class=\"token punctuation\">.</span>ByteOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t\tlength <span class=\"token operator\">=</span> Irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>Read<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IRP_MJ_WRITE <span class=\"token operator\">==</span> Irpsp<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果是写的 irp 请求，我们在 irp stack 中取得相应的参数作为 offset 和 length</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t\toffset <span class=\"token operator\">=</span> Irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">.</span>ByteOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t\tlength <span class=\"token operator\">=</span> Irpsp<span class=\"token operator\">-></span>Parameters<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 除此之外，offset 和 length 都是 0</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t\toffset<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t\tlength <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> sysBuf <span class=\"token operator\">||</span> <span class=\"token number\">0</span> <span class=\"token operator\">==</span> length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 如果传下来的 irp 没有系统缓冲或者缓冲的长度是 0，那么我们就没有必要处理这个 irp，直接下发给下层设备就行了</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">goto</span> ERRNEXT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t<span class=\"token comment\">// 下面是转储的过程了</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IRP_MJ_READ <span class=\"token operator\">==</span> Irpsp<span class=\"token operator\">-></span>MajorFunction<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 这里是读的处理</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 首先根据 bitmap 来判断这次读操作读取的范围是全部为转储空间，还是全部为未转储空间，或者兼而有之</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">long</span> tstResult <span class=\"token operator\">=</span> <span class=\"token function\">DPBitmapTest</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>tstResult<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">case</span> BITMAP_RANGE_CLEAR<span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 这说明这次读取的操作全部是读取未转储的空间，也就是真正的磁盘上的内容，我们直接发给下层设备去处理</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRNEXT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">case</span> BITMAP_RANGE_SET<span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 这说明这次读取的操作全部是读取已经转储的空间，也就是缓冲文件上的内容，我们从文件中读取出来，然后直接完成这个 irp</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 分配一个缓冲区用来从缓冲文件中读取</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>fileBuf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> <span class=\"token string\">'xypD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">RtlZeroMemory</span><span class=\"token punctuation\">(</span>fileBuf<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">ZwReadFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t\t\t\tDevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t\t\t\t<span class=\"token operator\">&amp;</span>ios<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\t\t\t\tfileBuf<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t\t\t\tlength<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t\t\t\t<span class=\"token operator\">&amp;</span>offset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">RtlCopyMemory</span><span class=\"token punctuation\">(</span>sysBuf<span class=\"token punctuation\">,</span>fileBuf<span class=\"token punctuation\">,</span>Irp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRCMPLT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">case</span> BITMAP_RANGE_BLEND<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 这说明这次读取的操作是混合的，我们也需要从下层设备中读出，同时从文件中读出，然后混合并返回</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 分配一个缓冲区用来从缓冲文件中读取</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>fileBuf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> <span class=\"token string\">'xypD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">RtlZeroMemory</span><span class=\"token punctuation\">(</span>fileBuf<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 分配一个缓冲区用来从下层设备中读取</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>devBuf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> <span class=\"token string\">'xypD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">RtlZeroMemory</span><span class=\"token punctuation\">(</span>devBuf<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">ZwReadFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t\t\t\t\tDevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t\t\t\t\t<span class=\"token operator\">&amp;</span>ios<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\t\t\t\t\tfileBuf<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t\t\t\t\tlength<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t\t\t\t\t<span class=\"token operator\">&amp;</span>offset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 把这个 irp 发给下层设备去获取需要从设备上读取的信息</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">DPForwardIrpSync</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span>Irp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 将从下层设备获取到的数据存储到 devBuf 中</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>devBuf<span class=\"token punctuation\">,</span> sysBuf<span class=\"token punctuation\">,</span> Irp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 把从文件获取到的数据和从设备获取到的数据根据相应的 bitmap 值来进行合并，合并的结果放在 devBuf 中</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t\t\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">DPBitmapGet</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\t\t\t\t\t\tDevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t\t\t\t\t\toffset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\t\t\t\t\t\tlength<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t\t\t\t\t\tdevBuf<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\t\t\t\t\t\tfileBuf</pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t\t\t\t\t\tIrp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\t\t\t\t\t<span class=\"token comment\">// 把合并完的数据存入系统缓冲并完成 irp</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>\t\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>sysBuf<span class=\"token punctuation\">,</span> devBuf<span class=\"token punctuation\">,</span> Irp<span class=\"token operator\">-></span>IoStatus<span class=\"token punctuation\">.</span>Information<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRCMPLT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 这里是写的过程</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 对于写，我们直接写缓冲文件，而不会写磁盘数据，这就是所谓的转储，但是转储之后需要在 bitmap 中做相应的标记</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>\t\t\t\tntStatus <span class=\"token operator\">=</span> <span class=\"token function\">ZwWriteFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>\t\t\t\t\tDevExt<span class=\"token operator\">-></span>TempFile<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>\t\t\t\t\t<span class=\"token operator\">&amp;</span>ios<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>\t\t\t\t\tsysBuf<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>\t\t\t\t\tlength<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t\t\t\t\t<span class=\"token operator\">&amp;</span>offset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>ntStatus <span class=\"token operator\">=</span> <span class=\"token function\">DPBitmapSet</span><span class=\"token punctuation\">(</span>DevExt<span class=\"token operator\">-></span>Bitmap<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRCMPLT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>\t\t\t\t\t\tntStatus <span class=\"token operator\">=</span> STATUS_INSUFFICIENT_RESOURCES<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">goto</span> ERRERR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>ERRERR<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> fileBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>\t\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>fileBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>\t\t\t\tfileBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> devBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>\t\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>devBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>\t\t\t\tdevBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>\t\t\t<span class=\"token function\">DPCompleteRequest</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>\t\t\t\tIrp<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>\t\t\t\tntStatus<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>\t\t\t\tIO_NO_INCREMENT</pre></td></tr><tr><td data-num=\"246\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>ERRNEXT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> fileBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>\t\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>fileBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>\t\t\t\tfileBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> devBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>\t\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>devBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>\t\t\t\tdevBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"259\"></td><td><pre>\t\t\t<span class=\"token function\">DPSendToNextDriver</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>\t\t\t\tDevExt<span class=\"token operator\">-></span>LowerDevObj<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>\t\t\t\tIrp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>ERRCMPLT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> fileBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>\t\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>fileBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>\t\t\t\tfileBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">!=</span> devBuf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>\t\t\t\t<span class=\"token function\">ExFreePool</span><span class=\"token punctuation\">(</span>devBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>\t\t\t\tdevBuf <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>\t\t\t<span class=\"token function\">DPCompleteRequest</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>\t\t\t\tIrp<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>\t\t\t\tSTATUS_SUCCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>\t\t\t\tIO_DISK_INCREMENT</pre></td></tr><tr><td data-num=\"278\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"281\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre></pre></td></tr><tr><td data-num=\"284\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"驱动安装\"><a class=\"anchor\" href=\"#驱动安装\">#</a> 驱动安装</h2>\n<p>如何安装就不介绍了。</p>\n",
            "tags": [
                "磁盘的过滤",
                "具有还原功能的磁盘卷过滤驱动",
                "boot驱动",
                "bitmap"
            ]
        }
    ]
}