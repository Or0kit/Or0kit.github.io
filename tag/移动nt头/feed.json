{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"移动nt头\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/WindowsPE/%E6%96%B0%E5%A2%9E%E8%8A%82/",
            "url": "https://or0kit.github.io/Bin/WindowsPE/%E6%96%B0%E5%A2%9E%E8%8A%82/",
            "title": "新增节",
            "date_published": "2021-05-02T09:26:17.000Z",
            "content_html": "<h1 id=\"为什么新增节以及新增节的步骤\"><a class=\"anchor\" href=\"#为什么新增节以及新增节的步骤\">#</a> 为什么新增节。以及新增节的步骤</h1>\n<p>我们的 PE 文件在空白区可以添加代码，但是这样是由一个弊端的，因为你的空白区节属性可能是只读的不能执行，如果你修改了属性。那么程序就可能出现问题，所以新增一个节可以实现我们的代码。</p>\n<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p>在 PE 中，新增节表，新增节，添加代码。</p>\n<ol>\n<li>先判断节表后是否有空闲位置，添加节表信息，必须多出两个节表位置，最后以零结尾，虽然也有最后不是以一个空白节表结束的程序，但我们不能保证什么时候可以什么时候不可以，所以最好最后还是以一个空白节表结束。<strong>若节表后面位置不够放下两个节表，我们可以移动 NT 头，覆盖 DOS Stub 使 NT 头前移</strong>，并再次判断是否可以放的下两个两个节表。</li>\n</ol>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>新增节后，需要修改以下信息</li>\n</ol>\n<blockquote>\n<p>1、添加一个新节，可以复制一份，最好是拥有可执行属性的节，如.text。<br />\n　　2、在节表区，新增节的后面，填充一个节，用零填充。<br />\n　　3、修改标准 PE 头中节的数量。<br />\n　　4、修改 SizeOfImage 的大小。这个成员才是关键。如果不按照内存对齐修改镜像大小。那么我们的节就不会映射到内存中。或者 PE 文件根本无法执行.<br />\n　　5、在原有数据的后面，新增一个节的数据（内存对齐的整倍数）。<br />\n　　6、修正新增节表的属性。</p>\n</blockquote>\n<ol start=\"3\">\n<li>新节各个属性修改说明</li>\n</ol>\n<blockquote>\n<p>1、Name: 名字随便修改，不能超过八个字节。<br />\n　　2、VirtualSize: 申请的新节空间大小，比如 1000<br />\n　　3、VirtualAddress: 等于上一个节的 VirtualAddress  +  SizeOfRawData。 这个成员指定了这个节在内存哪里展开。所以需要修改。<br />\n　　4、SizeOfRawData：设置可以和 VirtualSize 一样，比如 0x1000。我们新增的节，自己需要在 PE 文件添加一段节数据，数据的大小按照文件对齐添加，并且填写到这个成员中。<br />\n　　5、PointerToRawData：等于上一个节的 PointerToRawData  +  SizeOfRawData。我们指定了内存中从哪里展开节。那么也需要指定这个节在文件中在哪里展开<br />\n　　6、PointerToRelocation：设置成零<br />\n　　7、PointerToLineNumbers：设置成零<br />\n　　8、NumberOfLineRelocations：设置成零<br />\n　　9、NumberOfLineNumbers：设置成零<br />\n　　10、Characteristics：块属性 0x20000060  可以取上一个节表和本节表的属性值，进行异或  如 x|y</p>\n</blockquote>\n<h1 id=\"代码实现新增节\"><a class=\"anchor\" href=\"#代码实现新增节\">#</a> 代码实现新增节</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 移动 NT 头</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 返回值是 前移了多少</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DWORD <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span>LPVOID pBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPIMAGE_FILE_HEADER pPEHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pPEHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> \\</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pPEHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tLPVOID pDst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NT 头插入点</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tDWORD dwRet <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNTHeader <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDst<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回地址减小的值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tDWORD dwSize <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> pPEHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader <span class=\"token operator\">+</span> \\</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pPEHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动的字节数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tLPVOID pSrc <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pSrc <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分配内存失败\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pSrc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pNTHeader<span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 保存要复制的数据</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pNTHeader<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 清空原数据</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pDst<span class=\"token punctuation\">,</span> pSrc<span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动数据</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tpDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新 e_lfanew</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">return</span> dwRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>LPVOID <span class=\"token function\">IncreaseSection</span><span class=\"token punctuation\">(</span>LPVOID pFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">size_t</span> ExtendSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// 计算 PE Raw 的大小</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token class-name\">size_t</span> Size <span class=\"token operator\">=</span> <span class=\"token function\">CalcRawSize</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">,</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tLPVOID pNewBuffer <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>Size <span class=\"token operator\">+</span> ExtendSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pNewBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新增节，开辟pNewImageBuffer内存失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>pNewBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Size <span class=\"token operator\">+</span> ExtendSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewBuffer<span class=\"token punctuation\">,</span> pFileBuffer<span class=\"token punctuation\">,</span> Size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token comment\">// 判断节表后的空白区是否足够 80 字节，若不够则移动 NT 头</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pOptionHeader<span class=\"token operator\">-></span>SizeOfHeaders <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>pSectionHeader<span class=\"token punctuation\">[</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> pNewBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tDWORD dwRet <span class=\"token operator\">=</span> <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"节表空间不足，NT头和节表向低地址移动了 %d 字节\\n\"</span><span class=\"token punctuation\">,</span> dwRet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwRet <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动后仍没有足够的80字节空间插入新节表\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pNewBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token comment\">// 更新指针</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pNewBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\tPIMAGE_NT_HEADERS pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\tPIMAGE_FILE_HEADER pFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\tPIMAGE_OPTIONAL_HEADER32 pOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token comment\">// 在节表最后新增一个节表 并修正新增节表的属性</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tPWORD pNumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 节的数量</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tPIMAGE_SECTION_HEADER pLastSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最后一个节表</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tPIMAGE_SECTION_HEADER pNewSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新节表插入点</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token comment\">//1、Name: 名字随便修改，不能超过八个字节。</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">,</span> <span class=\"token string\">\".newsec\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token comment\">//2、VirtualSize : 申请的新节空间大小，比如 1000</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize <span class=\"token operator\">=</span> ExtendSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token comment\">//3、VirtualAddress : 等于上一个节的 VirtualAddress + SizeOfRawData。 这个成员指定了这个节在内存哪里展开。所以需要修改。</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">=</span> pLastSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token comment\">//4、SizeOfRawData：设置可以和 VirtualSize 一样，比如 0x1000。我们新增的节，自己需要在 PE 文件添加一段节数据，数据的大小按照文件对齐添加，并且填写到这个成员中。</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>SizeOfRawData <span class=\"token operator\">=</span> ExtendSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token comment\">//5、PointerToRawData：等于上一个节的 PointerToRawData + SizeOfRawData。我们指定了内存中从哪里展开节。那么也需要指定这个节在文件中在哪里展开</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">=</span> pLastSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token comment\">//6、PointerToRelocation：设置成零</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t<span class=\"token comment\">//7、PointerToLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t<span class=\"token comment\">//8、NumberOfLineRelocations：设置成零</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t<span class=\"token comment\">//9、NumberOfLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token comment\">//10、Characteristics：块属性 </span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">=</span> pSectionHeader<span class=\"token operator\">-></span>Characteristics<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token comment\">// 修改标准 PE 头中节的数量</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\tpFileHeader<span class=\"token operator\">-></span>NumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token comment\">// 修改 SizeOfImage 的大小</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\tpOptionHeader<span class=\"token operator\">-></span>SizeOfImage <span class=\"token operator\">+=</span> <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize<span class=\"token punctuation\">,</span> pOptionHeader<span class=\"token operator\">-></span>SectionAlignment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t<span class=\"token comment\">//WritePeFile(pNewBuffer);</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token keyword\">return</span> pNewBuffer<span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回新增节后的 Buffer</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd3VtYWMvcC81Mjc0NTU5Lmh0bWw=\">https://www.cnblogs.com/wumac/p/5274559.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaUJpbmFyeS9wLzk3Mzc3MTkuaHRtbA==\">https://www.cnblogs.com/iBinary/p/9737719.html</span></p>\n",
            "tags": [
                "新增节",
                "移动NT头"
            ]
        }
    ]
}