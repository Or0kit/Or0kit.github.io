{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"消息循环\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-03%E6%B6%88%E6%81%AF%E7%9A%84%E6%8E%A5%E6%94%B6/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-03%E6%B6%88%E6%81%AF%E7%9A%84%E6%8E%A5%E6%94%B6/",
            "title": "消息机制-03消息的接收",
            "date_published": "2022-04-22T07:17:12.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>在前面我们分析了：</p>\n<p>一个 GUI 线程有一个消息队列</p>\n<p>普通线程\tGUI 线程\t <code>THREAD.W32THREAD</code> \t <code>THREADINFO</code>         消息队列</p>\n<p>一个线程可以有多个窗口，所有窗口共享一个消息队列</p>\n<p><code>WND</code>      // 窗口结构<br />\n <code>PTHREADINFO pti</code>                // 所属线程<br />\n <code>WNDPROC_PWND  lpfnWndProc</code> ;  \t// 窗口过程 (窗口回调函数)</p>\n<h1 id=\"窗口程序的创建\"><a class=\"anchor\" href=\"#窗口程序的创建\">#</a> 窗口程序的创建</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIN32_LEAN_AND_MEAN</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 声明回调函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    HWND hwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    UINT uMsg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    LPARAM lParam</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> WINAPI <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span>HINSTANCE hInstance<span class=\"token punctuation\">,</span> HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span> LPSTR lpCmdLine<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nCmdShow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 保存 GetLastError 的返回值</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    TCHAR szOutBuff<span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 创建窗口类</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    WNDCLASSEX mywnd        <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>cbSize            <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WNDCLASSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>style             <span class=\"token operator\">=</span> CS_HREDRAW <span class=\"token operator\">|</span> CS_VREDRAW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 窗口类名</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    TCHAR wndname<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>         <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>lpszClassName     <span class=\"token operator\">=</span> wndname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 回调函数</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>lpfnWndProc       <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 标志该窗口所在实例</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>hInstance         <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">// 设置画刷</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    mywnd<span class=\"token punctuation\">.</span>hbrBackground     <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span><span class=\"token function\">GetStockObject</span><span class=\"token punctuation\">(</span>WHITE_BRUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 注册窗口类</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">RegisterClassEx</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mywnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">// 创建窗口</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    HWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        wndname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My First Window!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        WS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token constant\">NULL</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">// 判断是否创建成功</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        TCHAR str<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"CreateWindow Error!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">// 显示窗口</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\">// 消息循环</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    MSG msg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    BOOL bRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token comment\">// 我们的窗口回调.</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bRet <span class=\"token operator\">=</span> <span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bRet <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token comment\">// handle the error and possibly exit</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %d\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>szOutBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 键盘消息转换为小写.</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 分发消息。将我们的消息传递给我们的回调函数处理 重要函数。此消息会将 Windows 的消息。发送给我们 定义窗口类的时候给的回调函数。这样我们就可以根据消息执行我们代码了.</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token comment\">//   我们的窗口回调</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    HWND hWnd<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    UINT message<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    LPARAM lParam</pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_CREATE<span class=\"token operator\">:</span>                             </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token comment\">// 当窗口开始绘制的时候</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_PAINT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        PAINTSTRUCT ps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        RECT rect<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        HDC hdc <span class=\"token operator\">=</span> <span class=\"token function\">BeginPaint</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token function\">GetClientRect</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token function\">DrawText</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            hdc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello window!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            DT_SINGLELINE <span class=\"token operator\">|</span> DT_CENTER <span class=\"token operator\">|</span> DT_VCENTER</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token function\">EndPaint</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token comment\">// 打印</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_CHAR<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        TCHAR szOutBuffer<span class=\"token punctuation\">[</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>szOutBuffer<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"%c\\n\"</span><span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token function\">OutputDebugString</span><span class=\"token punctuation\">(</span>szOutBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_DESTROY<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token function\">PostQuitMessage</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>我们要创建一个简单的窗口就要有这么多的步骤，为什么要这么写呢？</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>我们在 3 环写主要是向 0 环传递这些信心，以便在 0 环创建一个窗口的结构体。</p>\n<p>我们看到的只是一个窗口，看不到的是在内核中那些结构体，因为调用了 GUI 函数，此时我们也是一个 GUI 线程了，有消息队列了，接着向后面看，有一个循环不停的取往消息队列中取消息，然后加工、分发消息。</p>\n<p>很多人只知道代码要这样写，并不清楚为什么这样写，就是不了解在 0 环做了什么事情，消息机制绝大部分的实现就是在 0 环做的，如果不了解消息机制在 0 环做了什么事情，就不会知道 3 环的代码为什么要这样写。</p>\n<p>接下来我们了解消息循环。</p>\n<h1 id=\"消息循环\"><a class=\"anchor\" href=\"#消息循环\">#</a> 消息循环</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MSG msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">// 从消息队列中取出消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 加工消息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 分发消息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用 SendMessage 与 PostMessage 发送的消息位于同一组队列中吗？</p>\n<p>不同类型的消息被置于不同队列。(这如何在 Windows 中实现的？)</p>\n<h2 id=\"消息的接收\"><a class=\"anchor\" href=\"#消息的接收\">#</a> 消息的接收</h2>\n<p><code>GetMessage</code></p>\n<p>描述：从消息队列中取出消息</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL WINAPI <span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tLPMSG lpMsg<span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 返回从队列中取出的消息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tHWND hWnd<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 过滤条件一：窗口句柄</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tUINT wMsgFilterMin<span class=\"token punctuation\">,</span>\t<span class=\"token comment\">// 过滤条件二：最小值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tUINT wMsgFilterMax\t<span class=\"token comment\">// 过滤条件三：最大值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>主要功能：循环判断是否存在属于该窗口的消息，若存在，则将消息存储到 MSG 指定的结构中，并将消息从列表中删除。</p>\n<p><code>GetMessage --&gt; NtUserGetMessage --&gt; xxxGetMessage（这是一个宏，也就是 xxxInternalGetMessage 函数） --&gt; xxxRealInternalGetMessage</code></p>\n<p>注意：事实上，GetMessage 还做了一件很重要的事情，即在接收消息时，将 SentMessagesListHead 中的消息进行处理</p>\n<p>有关消息发送，可以通过  <code>SendMessage</code>  或者  <code>PostMessage</code>  进行发送，它们有所不同，前者是同步的，后者是异步的，我们可以做一个实验验证:</p>\n",
            "tags": [
                "窗口程序的创建",
                "消息循环"
            ]
        }
    ]
}