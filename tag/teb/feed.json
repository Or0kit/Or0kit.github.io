{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"teb\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/WinDLL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%A8%A1%E5%9D%97%E9%9A%90%E8%97%8F/",
            "url": "https://or0kit.github.io/Bin/Win32/WinDLL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%A8%A1%E5%9D%97%E9%9A%90%E8%97%8F/",
            "title": "WinDLL注入之模块隐藏",
            "date_published": "2021-07-20T12:51:57.000Z",
            "content_html": "<h1 id=\"模块隐藏的实现原理\"><a class=\"anchor\" href=\"#模块隐藏的实现原理\">#</a> 模块隐藏的实现原理</h1>\n<p>普通 API 查找模块实现思路：其通过查询在 R3 中的 PEB (Process Environment Block 进程环境块) 与 TEB (Thread Environment Block 进程环境块) 来找到一个双向链表，通过遍历双向链表中某一成员 (字符串) 来查找全部模块。</p>\n<p>模块隐藏实现思路：在 R3 层的模块隐藏，我们需要做的就是将其该链表断链，将某一模块从这个双向链表中摘除，这样再调用传统的 API 时就会搜索不到。</p>\n<h1 id=\"结构体成员详细介绍\"><a class=\"anchor\" href=\"#结构体成员详细介绍\">#</a> 结构体成员详细介绍</h1>\n<h2 id=\"teb结构体-内存地址为-fs0-处\"><a class=\"anchor\" href=\"#teb结构体-内存地址为-fs0-处\">#</a> TEB 结构体 -- 内存地址为 fs:[0] 处。</h2>\n<p>使用 Windbg 的 &quot;dt _TEB&quot; 命令来查看 TEB 结构体</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h3 id=\"通过olldbg查看该结构体\"><a class=\"anchor\" href=\"#通过olldbg查看该结构体\">#</a> 通过 olldbg 查看该结构体</h3>\n<p>打开任意进程，在寄存器窗口找到 fs:[0]，查看其内存地址。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>在内存窗口使用命令 &quot;db 29E000&quot; 跳转到该内存，使用地址格式 (长型 - 地址) 显示。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h2 id=\"peb结构体-fs0x30\"><a class=\"anchor\" href=\"#peb结构体-fs0x30\">#</a> PEB 结构体 -- fs:[0x30]</h2>\n<p>使用 Windbg 指令 dt _PEB 查看 PEB 结构体，重点关注最后一个 进程加载信息表。</p>\n<p>查看 _PEB_LDR_DATA 进程加载信息表 的结构体</p>\n<p>重点关注 0x00c 处的指针，其指向 _PEB_LDR_DATA 这个结构体。</p>\n<p>在这个结构体中 0x00c、0x014、0x01c 分别表示：模块加载顺序、加载后在内存中的顺序、模块初始化的顺序。</p>\n<p>它们都是一个双向链表指针，其指向_LDR_DATA_TABLE_ENTRY 结构体中的三个成员，而 _LDR_DATA_TABLE_ENTRY 中存储着就是关于有关模块信息的元素 (比如模块名等)</p>\n<p>先了解一下 Unicode 结构体</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>这是 PEB 中存储着我们模块名称的数据在哪个地方。</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h3 id=\"使用olldbg来查看查找首先加载模块的模块名称\"><a class=\"anchor\" href=\"#使用olldbg来查看查找首先加载模块的模块名称\">#</a> 使用 olldbg 来查看查找首先加载模块的模块名称</h3>\n<blockquote>\n<p>TEB-&gt;PEB-&gt; InLoadOrderModuleList -&gt; BaseDllName</p>\n</blockquote>\n<p>接之前 TEB 内容查找到 PEB 的所在位置 fs:[0x30]。</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>进入 PEB 后找 0x0c 的位置，接着在内存窗口跟随。</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>进入后我们随便选择三个链表中的一个跟随，我这里选择了第一个</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>进入后即可看到如下内容</p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<p>可以在通过 <code>_LIST_ENTRY</code>  可以遍历前一个模块的内容和下一个模块的内容</p>\n<p><img data-src=\"image010.png\" alt=\"\" /></p>\n<p>跟随</p>\n<p><img data-src=\"image011.png\" alt=\"\" /></p>\n<h1 id=\"代码实现断链\"><a class=\"anchor\" href=\"#代码实现断链\">#</a> 代码实现断链</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* 所需要的结构体</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>1. _LDR_DATA_TABLE_ENTRY 链表指向数据</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>2. _PEB_LDR_DATA 表示其 PEB0x 处指向的数据表</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>3. _LIST_ENTRY 指针指向的链表</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LSA_UNICODE_STRING</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    USHORT Length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    USHORT MaximumLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    PWSTR  Buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>UNICODE_STRING<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PUNICODE_STRING<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_PEB_LDR_DATA</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    DWORD Length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x00</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">bool</span> Initialized<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x04</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    PVOID SsHandle<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x08</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    LIST_ENTRY InLoadOrderModuleList<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x0c</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    LIST_ENTRY InMemoryOrderModuleList<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x14</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    LIST_ENTRY InInitializationOrderModuleList<span class=\"token punctuation\">;</span><span class=\"token comment\">// +0x1c</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span> PEB_LDR_DATA<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PPEB_LDR_DATA<span class=\"token punctuation\">;</span> <span class=\"token comment\">// +0x24</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_MODULE</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    LIST_ENTRY          InLoadOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    LIST_ENTRY          InMemoryOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    LIST_ENTRY          InInitializationOrderModuleList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> BaseAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    ULONG               SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    UNICODE_STRING   FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    UNICODE_STRING      BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    ULONG               Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    SHORT               LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    SHORT               TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    HANDLE              SectionHandle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    ULONG               CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    ULONG               TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LDR_MODULE<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PLDR_MODULE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">// 所谓模块句柄，即该模块的入口地址</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">hide_module</span><span class=\"token punctuation\">(</span>LPCSTR szDllName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    HMODULE hMod <span class=\"token operator\">=</span> <span class=\"token function\">GetModuleHandleA</span><span class=\"token punctuation\">(</span>szDllName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    PLIST_ENTRY Head<span class=\"token punctuation\">,</span> Cur<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    PPEB_LDR_DATA ldr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    PLDR_MODULE ldm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    __asm</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        mov eax<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        mov ecx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>eax <span class=\"token operator\">+</span> <span class=\"token number\">0x0c</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//Ldr</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        mov ldr<span class=\"token punctuation\">,</span> ecx</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    Head <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>ldr<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    Cur <span class=\"token operator\">=</span> Head<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        ldm <span class=\"token operator\">=</span> <span class=\"token function\">CONTAINING_RECORD</span><span class=\"token punctuation\">(</span>Cur<span class=\"token punctuation\">,</span> LDR_MODULE<span class=\"token punctuation\">,</span> InLoadOrderModuleList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hMod <span class=\"token operator\">==</span> ldm<span class=\"token operator\">-></span>BaseAddress<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token comment\">// 三个链表同时给断掉</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token operator\">-></span>Flink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token operator\">-></span>Blink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InLoadOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token operator\">-></span>Flink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token operator\">-></span>Blink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InInitializationOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token operator\">-></span>Flink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Flink<span class=\"token operator\">-></span>Blink <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                ldm<span class=\"token operator\">-></span>InMemoryOrderModuleList<span class=\"token punctuation\">.</span>Blink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        Cur <span class=\"token operator\">=</span> Cur<span class=\"token operator\">-></span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>Head <span class=\"token operator\">!=</span> Cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token comment\">// 通过模块名，来获取模块句柄</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"****按任意键隐藏模块*****\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    LPCSTR lpDllName <span class=\"token operator\">=</span> <span class=\"token string\">\"kernel32.dll\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token function\">hide_module</span><span class=\"token punctuation\">(</span>lpDllName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"****隐藏模块完成*****\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vb25ldHJhaW5lZS9wLzExNjc0MjExLmh0bWw=\">https://www.cnblogs.com/onetrainee/p/11674211.html</span></p>\n",
            "tags": [
                "TEB",
                "PEB",
                "R3层断链"
            ]
        }
    ]
}