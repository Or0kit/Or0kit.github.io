{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"sqlmap\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/PenetrationTest/Web-Security/SQLMAP%E6%80%BB%E7%BB%93/",
            "url": "https://or0kit.github.io/PenetrationTest/Web-Security/SQLMAP%E6%80%BB%E7%BB%93/",
            "title": "SQLMAP总结",
            "date_published": "2020-12-05T06:40:14.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<blockquote>\n<p>总结一下 SQLmap 的使用方法。</p>\n</blockquote>\n<h1 id=\"sqlmap的简介\"><a class=\"anchor\" href=\"#sqlmap的简介\">#</a> Sqlmap 的简介</h1>\n<p>Sqlmap 是一种开源的渗透测试工具，可以自动检测和利用 SQL 注入漏洞以及接入该数据库的服务器。它拥有非常强大的检测引擎、具有多种特性的渗透测试器、通过数据库指纹提取访问底层文件系统并通过外带连接执行命令。</p>\n<p>支持的数据库：MySQL，Oracle, PostgreSQL, Microsoft SQL Ser ver, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase and SAP MAXDB。</p>\n<p>sqlmap 支持五种不同的注入模式：</p>\n<ul>\n<li>UNION query SQL injection（可联合查询注入）</li>\n<li>Error-based  SQL injection（报错型注入）</li>\n<li>Boolean-based  blind SQL injection（布尔型注入）</li>\n<li>Time-based  blind SQL injection（基于时间延迟注入）</li>\n<li>Stacked queries SQL injection（可多语句查询注入）</li>\n</ul>\n<h1 id=\"sqlmap使用\"><a class=\"anchor\" href=\"#sqlmap使用\">#</a> SQLMAP 使用</h1>\n<h2 id=\"设置目标\"><a class=\"anchor\" href=\"#设置目标\">#</a> 设置目标</h2>\n<ul>\n<li>\n<p>-u /--url 最基本格式 python sqlmap.py-u “<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50YXJnZXQuY29tL2luZGV4LnBocD9pZD0xJUUyJTgwJTlE\">http://www.target.com/index.php?id=1”</span></p>\n</li>\n<li>\n<p>-m 从文本中获取多个目标扫描，但是每一行一个 url。sqlmap-m “urllist.txt”</p>\n</li>\n<li>\n<p>-r 从文件中加载 HTTP 请求，这样的话就不需要在去设定 Cookie,POST 数据...... 等等.sqlmap–r  “/tmp/1.txt”</p>\n</li>\n</ul>\n<h2 id=\"设置回显等级\"><a class=\"anchor\" href=\"#设置回显等级\">#</a> 设置回显等级</h2>\n<p>参数：-v 默认为 1：</p>\n<ul>\n<li>0、只显示 python 错误以及严重的信息。</li>\n<li>1、同时显示基本信息和警告信息。（默认等级）</li>\n<li>2、同时显示 debug 信息。</li>\n<li>3、同时显示注入的 payload。</li>\n<li>4、同时显示 HTTP 请求。</li>\n<li>5、同时显示 HTTP 响应头。</li>\n<li>6、同时显示 HTTP 响应页面。</li>\n</ul>\n<h2 id=\"设置http数据包相关参数\"><a class=\"anchor\" href=\"#设置http数据包相关参数\">#</a> 设置 HTTP 数据包相关参数</h2>\n<p>参数：--data<br />\n 此参数是把数以 POST 方式提交，sqlmap 会像检测 GET 参数一样检测 POST 过去的参数。</p>\n<p><code>python sqlmap.py-u &quot;http://www.target.com/vuln.php&quot; --data=&quot;id=1” </code></p>\n<p>参数：--cookie<br />\n 当 web 需要登录的时候，需要我们抓包获取 cookie 参数，然后复制出来，加到 --cookie 参数中。</p>\n<p>参数：--user-agent<br />\n 默认情况下 sqlmap 的 HTTP 请求头中的 User-Agent 值是： <code>sqlmap/1.0-dev-xxxxxxxxx(http://sqlmap.org)</code> <br />\n 这个时候可以手动指定伪造一个 User-Agent。</p>\n<p><code>sqlmap-u “http://www.target.com” --level  3 --user-agent=”aaaaaa” --dbs</code></p>\n<p>参数：--random-agent<br />\n 会从 sqlmap/txt/user-agents.txt 中随机产生 User-Agent 头。</p>\n<p>参数：--referer<br />\nsqlmap 可以在请求中伪造 HTTP 中的 referer。当 --level 参数设定 &gt;=3 时，会尝试进行 referer 注入。</p>\n<p><code>sqlmap-u “http://www.target.com” --leve3 --referer=”www.baidu.com” –dbs</code></p>\n<p>参数：--delay<br />\n 可以设定两个 http 请求间的延迟，设定为 1 的时候是 1 秒，默认是没有延迟的。</p>\n<p>参数：--timeout<br />\n 可以设定一个 http 请求超过对久判定为超时，默认是 30 秒。</p>\n<h2 id=\"设定探测等级\"><a class=\"anchor\" href=\"#设定探测等级\">#</a> 设定探测等级</h2>\n<p>参数：--level</p>\n<p>共有五个等级，默认为 1，sqlmap 使用的 payload 可以在 xml/payloads.xml 中看到，自己也可以根据相应的格式添加自己的 payload。<br />\nlevel&gt;=2 的时候就会测试 HTTP  Cookie。<br />\nlevel&gt;=3 的时候就会测试 HTTP  User-Agent/Referer 头。<br />\nlevel=5 的时候会测试 HTTP Host。</p>\n<h2 id=\"设定探测风险等级\"><a class=\"anchor\" href=\"#设定探测风险等级\">#</a> 设定探测风险等级</h2>\n<p>参数：--risk</p>\n<p>共有四个风险等级，默认是 1 会测试大部分的测试语句，2 会增加基于时间的测试语句，3 会增加 OR 语句的 SQL 注入测试。<br />\n在有些时候，例如在 UPDATE 的语句中，注入一个 OR 的测试语句，可能导致更新的整个表，可能造成很大的风险。</p>\n<h2 id=\"列数据\"><a class=\"anchor\" href=\"#列数据\">#</a> 列数据</h2>\n<p>--dbs 列出所有数据库名称<br />\n --current-db 列出当前数据库名称</p>\n<p>--tables -D database_name #列表名<br />\n --columns -T table_name-D database_name   #列字段<br />\n --dump -C column_1,column_2 -T table_name-D database_name #获取字段内容</p>\n<h2 id=\"一些常用的参数\"><a class=\"anchor\" href=\"#一些常用的参数\">#</a> 一些常用的参数</h2>\n<p>-users 列数据库管理用户，当前用户有权限读取包含所有用户的表的权限时，就可以列出所有管理用户。<br />\n--current-user 在大多数据库中可以获取到管理数据的用户 (当前用户)。<br />\n--is-dba 判断当前的用户是否为管理，是的话会返回 True。<br />\n--privileges 当前用户有权限读取包含所有用户的表的权限时，很可能列举出每个用户的权限，sqlmap 将会告诉你哪个是数据库的超级管理员。也可以用 - U 参数指定你想看那个用户的权限。<br />\n--proxy 指定一个代理服务器<br />\n <code>eg: –proxy http://local:8080</code> <br />\n--prefix=PREFIX  注入 payload 字符串前缀<br />\n --suffix=SUFFIX  注入 payload 字符串后缀<br />\n <code>eg：sqlmap-u “www.target.com/index.php?id=1” -p id --prefix “')”--suffix “AND ('1'='1”</code></p>\n<h2 id=\"使用shell命令\"><a class=\"anchor\" href=\"#使用shell命令\">#</a> 使用 Shell 命令</h2>\n<p>参数：--os-shell</p>\n<p>前提：需要网站的物理路径，其次是需要有 FIFE 权限。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sqlmap-r “C:<span class=\"token punctuation\">\\</span>sqlmap<span class=\"token punctuation\">\\</span>request.txt” -p <span class=\"token function\">id</span> --dmsmysql--os-shell</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>接下来指定网站可写目录：“C:<span class=\"token punctuation\">\\</span>www”</pre></td></tr></table></figure><h1 id=\"sqlmap思维导图\"><a class=\"anchor\" href=\"#sqlmap思维导图\">#</a> SQLmap 思维导图</h1>\n<p>源自 XBX 白细胞安全团队（LEUKOCYTE）<br />\n右键新标签页查看 sqlmap 思维导图 <img data-src=\"sqlmap%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "SQLmap"
            ]
        }
    ]
}