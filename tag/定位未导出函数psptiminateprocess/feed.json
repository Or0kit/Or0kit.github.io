{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"定位未导出函数psptiminateprocess\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97/",
            "url": "https://or0kit.github.io/Bin/Core/Drive-Development/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97/",
            "title": "驱动开发-内核空间和内核模块",
            "date_published": "2021-09-24T15:53:44.000Z",
            "content_html": "<h1 id=\"内核空间\"><a class=\"anchor\" href=\"#内核空间\">#</a> 内核空间</h1>\n<p>每个进程的低 2G 都是独立的，它们所对应的物理页都是不一样的，而高 2G 所对应的物理页都是相同的。</p>\n<p>概念图:</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"实验验证\"><a class=\"anchor\" href=\"#实验验证\">#</a> 实验验证</h2>\n<p>写一个驱动程序定义一个全局变量，在不同进程中查看。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ULONG g_Value <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>g_Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /><br />\n<img data-src=\"image003.png\" alt=\"\" /></p>\n<h1 id=\"内核模块\"><a class=\"anchor\" href=\"#内核模块\">#</a> 内核模块</h1>\n<p>硬件的种类繁多，不可能做一个兼容所有硬件的内核，因此，微软提供规定的接口格式，让硬件驱动人员按照规定的格式编写 “驱动程序”<br />\n 这些驱动程序每一个都是一个模块，称为 “内核模块”，可以加载到内核中，并遵守 PE 结构。但本质上讲，任意一个.sys 文件与内核文件没有区别<br />\n不管是我们自己编写的 .sys 文件，还是 Windows 自带的内核文件（如 ntoskrnl.exe），它们在内核中的地位是相同的，都是内核模块中的其中一个</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h1 id=\"驱动对象\"><a class=\"anchor\" href=\"#驱动对象\">#</a> 驱动对象</h1>\n<h2 id=\"_driver_object结构体\"><a class=\"anchor\" href=\"#_driver_object结构体\">#</a>  <code>_DRIVER_OBJECT</code>  结构体</h2>\n<pre><code>kd&gt; dt _DRIVER_OBJECT\nnt!_DRIVER_OBJECT\n  +0x000 Type             : Int2B\n  +0x002 Size             : Int2B\n  +0x004 DeviceObject     : Ptr32 _DEVICE_OBJECT\n  +0x008 Flags            : Uint4B\n  +0x00c DriverStart      : Ptr32 Void\n  +0x010 DriverSize       : Uint4B\n  +0x014 DriverSection    : Ptr32 Void\n  +0x018 DriverExtension  : Ptr32 _DRIVER_EXTENSION\n  +0x01c DriverName       : _UNICODE_STRING\n  +0x024 HardwareDatabase : Ptr32 _UNICODE_STRING\n  +0x028 FastIoDispatch   : Ptr32 _FAST_IO_DISPATCH\n  +0x02c DriverInit       : Ptr32     long \n  +0x030 DriverStartIo    : Ptr32     void \n  +0x034 DriverUnload     : Ptr32     void \n  +0x038 MajorFunction    : [28] Ptr32     long \n</code></pre>\n<p>其中对我们来说比较重要的结构:<br />\n <code>DriverStart：</code> 驱动模块在内核中的地址<br />\n <code>DriverSize：</code> 驱动模块在内核中的大小<br />\n <code>DriverName：</code> 驱动模块在内核中的名字<br />\n <code>DriverSection：</code> 指向  <code>_LDR_DATA_TABLE_ENTRY</code>  结构体</p>\n<h2 id=\"_ldr_data_table_entry-结构体\"><a class=\"anchor\" href=\"#_ldr_data_table_entry-结构体\">#</a>  <code>_LDR_DATA_TABLE_ENTRY</code>  结构体</h2>\n<p>描述：包含了当前内核模块的具体信息，以及其它内核模块的双向链表。</p>\n<pre><code>kd&gt; dt _LDR_DATA_TABLE_ENTRY\nnt!_LDR_DATA_TABLE_ENTRY\n  +0x000 InLoadOrderLinks : _LIST_ENTRY\n  +0x008 InMemoryOrderLinks : _LIST_ENTRY\n  +0x010 InInitializationOrderLinks : _LIST_ENTRY\n  +0x018 DllBase          : Ptr32 Void\n  +0x01c EntryPoint       : Ptr32 Void\n  +0x020 SizeOfImage      : Uint4B\n  +0x024 FullDllName      : _UNICODE_STRING\n  +0x02c BaseDllName      : _UNICODE_STRING\n  +0x034 Flags            : Uint4B\n  +0x038 LoadCount        : Uint2B\n  +0x03a TlsIndex         : Uint2B\n  +0x03c HashLinks        : _LIST_ENTRY\n  +0x03c SectionPointer   : Ptr32 Void\n  +0x040 CheckSum         : Uint4B\n  +0x044 TimeDateStamp    : Uint4B\n  +0x044 LoadedImports    : Ptr32 Void\n  +0x048 EntryPointActivationContext : Ptr32 Void\n  +0x04c PatchInformation : Ptr32 Void\n</code></pre>\n<p>和 3 环有点区别，在 0 环中  <code>InMemoryOrderLinks</code>  和  <code>InInitializationOrderLinks</code>  是没用的，只需要关注第一个链表  <code>InLoadOrderLinks</code> 。</p>\n<p><code>_LIST_ENTRY</code>  这个结构体存了两个地址，指向前一个节点和下一个节点。</p>\n<pre><code>kd&gt; dt _LIST_ENTRY\nntdll!_LIST_ENTRY\n  +0x000 Flink            : Ptr32 _LIST_ENTRY\n  +0x004 Blink            : Ptr32 _LIST_ENTRY\n</code></pre>\n<p>比较重要的结构:<br />\n <code>InLoadOrderLinks：</code> 双向链表，包含所有内核模块<br />\n <code>DllBase：</code> 当前内核模块起始地址<br />\n <code>SizeOfImage：</code> 当前内核模块的大小<br />\n <code>FullDllName：</code> 当前内核模块的完整路径<br />\n <code>BaseDllName：</code> 当前内核模块的模块名</p>\n<h2 id=\"遍历内核模块\"><a class=\"anchor\" href=\"#遍历内核模块\">#</a> 遍历内核模块</h2>\n<p>我们可以发现，我们可以由一个内核模块遍历处所有的内核模块。</p>\n<p>通过这个  <code>InLoadOrderLinks</code> ，我们可以遍历整个高 2G 的模块了。 <code>InLoadOrderLinks.Flink</code>  指向的就是下一个  <code>_LDR_DATA_TABLE_ENTRY</code> 。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 遍历内核模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tLIST_ENTRY InLoadOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tLIST_ENTRY InMemoryOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tLIST_ENTRY InInitializationOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPVOID DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPVOID EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tUINT32 SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tUNICODE_STRING FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tUNICODE_STRING BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tUINT32 Flags<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tUINT16 LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tUINT16 TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tLIST_ENTRY HashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tPVOID SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tUINT32 CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tUINT32 TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tPVOID LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tPVOID EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tPVOID PatchInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span> LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我运行了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteHead<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 内核模块链表头</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteCur<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 遍历指针</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tpLdteHead <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pdriver<span class=\"token operator\">-></span>DriverSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tpLdteCur <span class=\"token operator\">=</span> pLdteHead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DllBase: %p, SizeOfImage: %08X %wZ\\n\"</span><span class=\"token punctuation\">,</span> pLdteCur<span class=\"token operator\">-></span>DllBase<span class=\"token punctuation\">,</span> pLdteCur<span class=\"token operator\">-></span>SizeOfImage<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pLdteCur<span class=\"token operator\">-></span>FullDllName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tpLdteCur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pLdteHead <span class=\"token operator\">!=</span> pLdteCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h1 id=\"定位未导出函数pspterminateprocess\"><a class=\"anchor\" href=\"#定位未导出函数pspterminateprocess\">#</a> 定位未导出函数 PspTerminateProcess</h1>\n<p>我们想找未导出函数  <code>PspTerminateProcess</code> ，用来杀进程的。学习以下几种方法。</p>\n<h2 id=\"windbgpdb\"><a class=\"anchor\" href=\"#windbgpdb\">#</a> windbg+pdb</h2>\n<p>在有内核 PDB 的情况下，用 windbg 可以直接找到该函数：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kd<span class=\"token operator\">></span>  u PspTerminateProcess l2e</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token number\">805</span>d3482 <span class=\"token number\">8</span>bff            mov     edi<span class=\"token punctuation\">,</span>edi</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token number\">805</span>d3484 <span class=\"token number\">55</span>              push    ebp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token number\">805</span>d3485 <span class=\"token number\">8</span>bec            mov     ebp<span class=\"token punctuation\">,</span>esp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token number\">805</span>d3487 <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token number\">805</span>d3488 <span class=\"token number\">64</span>a124010000    mov     eax<span class=\"token punctuation\">,</span>dword ptr fs<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">00000124</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token number\">805</span>d348e <span class=\"token number\">8</span>b7508          mov     esi<span class=\"token punctuation\">,</span>dword ptr <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token number\">805</span>d3491 <span class=\"token number\">3</span>b7044          cmp     esi<span class=\"token punctuation\">,</span>dword ptr <span class=\"token punctuation\">[</span>eax<span class=\"token operator\">+</span><span class=\"token number\">44</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token number\">805</span>d3494 <span class=\"token number\">7507</span>            jne     nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x1b</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d349d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token number\">805</span>d3496 b80d0000c0      mov     eax<span class=\"token punctuation\">,</span><span class=\"token number\">0</span>C000000Dh</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token number\">805</span>d349b eb5a            jmp     nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x75</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34f7<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token number\">805</span>d349d <span class=\"token number\">57</span>              push    edi</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token number\">805</span>d349e <span class=\"token number\">8</span>dbe48020000    lea     edi<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">248</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token number\">805</span>d34a4 f6470120        test    byte ptr <span class=\"token punctuation\">[</span>edi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span>h</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token number\">805</span>d34a8 <span class=\"token number\">7412</span>            je      nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x3a</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34bc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token number\">805</span>d34aa <span class=\"token number\">8</span>d8674010000    lea     eax<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">174</span>h<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token number\">805</span>d34b0 <span class=\"token number\">50</span>              push    eax</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token number\">805</span>d34b1 <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token number\">805</span>d34b2 <span class=\"token number\">6854345</span>d80      push    offset nt<span class=\"token operator\">!</span>NtTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x14c</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d3454<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token number\">805</span>d34b7 e8f2eeffff      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PspCatchCriticalBreak</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d23ae<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token number\">805</span>d34bc <span class=\"token number\">6</span>a08            push    <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token number\">805</span>d34be <span class=\"token number\">58</span>              pop     eax</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token number\">805</span>d34bf f00907          lock or dword ptr <span class=\"token punctuation\">[</span>edi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token number\">805</span>d34c2 <span class=\"token number\">6</span>a00            push    <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token number\">805</span>d34c4 <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token number\">805</span>d34c5 e8ca560000      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PsGetNextProcessThread</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d8b94<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token number\">805</span>d34ca <span class=\"token number\">8</span>bf8            mov     edi<span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token number\">805</span>d34cc <span class=\"token number\">85ff</span>            test    edi<span class=\"token punctuation\">,</span>edi</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token number\">805</span>d34ce <span class=\"token number\">741</span>e            je      nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x6c</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34ee<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token number\">805</span>d34d0 ff750c          push    dword ptr <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span><span class=\"token number\">0</span>Ch<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token number\">805</span>d34d3 <span class=\"token number\">57</span>              push    edi</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token number\">805</span>d34d4 e807fdffff      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PspTerminateThreadByPointer</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d31e0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token number\">805</span>d34d9 <span class=\"token number\">57</span>              push    edi</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token number\">805</span>d34da <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token number\">805</span>d34db e8b4560000      call    nt<span class=\"token operator\">!</span><span class=\"token function\">PsGetNextProcessThread</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d8b94<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token number\">805</span>d34e0 <span class=\"token number\">8</span>bf8            mov     edi<span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token number\">805</span>d34e2 <span class=\"token number\">85ff</span>            test    edi<span class=\"token punctuation\">,</span>edi</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token number\">805</span>d34e4 <span class=\"token number\">75</span>ea            jne     nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x4e</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34d0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token number\">805</span>d34e6 <span class=\"token number\">3986</span>bc000000    cmp     dword ptr <span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">0</span>BCh<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token number\">805</span>d34ec <span class=\"token number\">7406</span>            je      nt<span class=\"token operator\">!</span>PspTerminateProcess<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token function\">x72</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>d34f4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token number\">805</span>d34ee <span class=\"token number\">56</span>              push    esi</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token number\">805</span>d34ef e86e05ffff      call    nt<span class=\"token operator\">!</span><span class=\"token function\">ObClearProcessHandleTable</span> <span class=\"token punctuation\">(</span><span class=\"token number\">805</span>c3a62<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token number\">805</span>d34f4 <span class=\"token number\">33</span>c0            xor     eax<span class=\"token punctuation\">,</span>eax</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token number\">805</span>d34f6 <span class=\"token number\">5f</span>              pop     edi</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token number\">805</span>d34f7 <span class=\"token number\">5</span>e              pop     esi</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token number\">805</span>d34f8 <span class=\"token number\">5</span>d              pop     ebp</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token number\">805</span>d34f9 c20800          ret     <span class=\"token number\">8</span></pre></td></tr></table></figure><p>805d3482 就是函数头，然而这个值由于重定位，可能会变的，所以我们就要用其他办法，确保每次都能找到这个函数。</p>\n<h2 id=\"通过已导出函数\"><a class=\"anchor\" href=\"#通过已导出函数\">#</a> 通过已导出函数</h2>\n<p>第二种办法是根据已导出函数找未导出函数，在驱动里找已导出函数使用的函数是  <code>MmGetSystemRoutineAddress</code>  。我们通过 IDA 交叉引用，并没有找到调用 PspTerminateProcess 的导出函数。</p>\n<h2 id=\"模块基址偏移\"><a class=\"anchor\" href=\"#模块基址偏移\">#</a> 模块基址 + 偏移</h2>\n<p>虽然模块基址会变，但是函数相对基址的偏移是不变的，通过这个规律也可以找到想要的函数。<br />\nPspTerminateProcess 相对内核基址的偏移 = 8062f050 - 804D8000 = 157050<br />\n 只要找到内核基址，加上 0x157050 就是 PspTerminateProcess 的地址。</p>\n<h2 id=\"特征码匹配最常用\"><a class=\"anchor\" href=\"#特征码匹配最常用\">#</a> 特征码匹配（最常用）</h2>\n<p>特征码提取时，<strong>要避免使用全局变量等和重定位有关的指令</strong>，也要<strong>避免提取这种所有函数都有的指令</strong>。</p>\n<pre><code>805d3482 8bff            mov     edi,edi\n805d3484 55              push    ebp\n805d3485 8bec            mov     ebp,esp\n805d3487 56              push    esi\n</code></pre>\n<p>我是跳着提取特征码的:</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 函数 PspTerminateProcess 开头对应的硬编码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x8b55ff8b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X0C 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x3b08758b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X22 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x200147f6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X48 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0xff85f88b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 相对函数开头偏移 0X6A 个字节后对应的硬编码</span></pre></td></tr></table></figure><p>代码如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntifs.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FristOffset</span>\t\t<span class=\"token expression\"><span class=\"token number\">0x0</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SecondOffset</span>\t<span class=\"token expression\"><span class=\"token number\">0x0C</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ThirdOffset</span>\t\t<span class=\"token expression\"><span class=\"token number\">0x22</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FourthOffset</span>\t<span class=\"token expression\"><span class=\"token number\">0x48</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FifthOffset</span>\t\t<span class=\"token expression\"><span class=\"token number\">0x6A</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_LDR_DATA_TABLE_ENTRY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tLIST_ENTRY InLoadOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tLIST_ENTRY InMemoryOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tLIST_ENTRY InInitializationOrderLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPVOID DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPVOID EntryPoint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tUINT32 SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tUNICODE_STRING FullDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tUNICODE_STRING BaseDllName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tUINT32 Flages<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tUINT16 LoadCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tUINT16 TlsIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tLIST_ENTRY HashLinks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tPVOID SectionPointer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tUINT32 CheckSum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tUINT32 TimeDateStamp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tPVOID LoadedImports<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tPVOID EntryPointActivationContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tPVOID PatchInformation<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span>LDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 定义 PspTerminateProcess 函数指针</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">NTSTATUS</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>_PspTerminateProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>PEPROCESS pEprocess<span class=\"token punctuation\">,</span> NTSTATUS ExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>_PspTerminateProcess PspTerminateProcess <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我停止加载了\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 获取内核基址，大小</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>VOID <span class=\"token function\">GetKernelBase</span><span class=\"token punctuation\">(</span>IN PDRIVER_OBJECT driver<span class=\"token punctuation\">,</span> OUT PVOID<span class=\"token operator\">*</span> pKrnlBase<span class=\"token punctuation\">,</span> OUT PUINT32 uKrnlImageSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteHead<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 内核模块链表头</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tPLDR_DATA_TABLE_ENTRY pLdteCur<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 遍历指针</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tUNICODE_STRING usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> usDllNameNtkrnlpa<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 内核模块名</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token comment\">// 两种分页模式下的内核模块</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"ntoskrnl.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token function\">RtlInitUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>usDllNameNtkrnlpa<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"ntkrnlpa.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tpLdteHead <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>driver<span class=\"token operator\">-></span>DriverSection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tpLdteCur <span class=\"token operator\">=</span> pLdteHead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token function\">RtlCompareUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pLdteCur<span class=\"token operator\">-></span>BaseDllName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t\t<span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token function\">RtlCompareUnicodeString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pLdteCur<span class=\"token operator\">-></span>BaseDllName<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>usBaseDllNameNtoskrnl<span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span>pKrnlBase <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>DllBase<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token operator\">*</span>uKrnlImageSize <span class=\"token operator\">=</span> pLdteCur<span class=\"token operator\">-></span>SizeOfImage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\tpLdteCur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PLDR_DATA_TABLE_ENTRY<span class=\"token punctuation\">)</span>pLdteCur<span class=\"token operator\">-></span>InLoadOrderLinks<span class=\"token punctuation\">.</span>Flink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pLdteHead <span class=\"token operator\">!=</span> pLdteCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>PVOID <span class=\"token function\">GetUndocumentFunctionAddress</span><span class=\"token punctuation\">(</span>PUCHAR pStartAddress<span class=\"token punctuation\">,</span> PUINT32 pShellcode<span class=\"token punctuation\">,</span> UINT32 maxSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token class-name\">size_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tPUCHAR Tmp <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tpStartAddress <span class=\"token operator\">+=</span> <span class=\"token number\">0xFB000</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 从内核基址 0x804d8000 到这个函数的位置 0x805d3482 需要循环遍历 0xFB482 (1029250) 次，此举是为了节约时间……</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">MmIsAddressValid</span><span class=\"token punctuation\">(</span>pStartAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pStartAddress地址不合法，或者地址指向内存不可读！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"地址合法，开始查找...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maxSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\tTmp <span class=\"token operator\">=</span> pStartAddress <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>FristOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>SecondOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>ThirdOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>FourthOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>PUINT32<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Tmp<span class=\"token punctuation\">[</span>FifthOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pShellcode<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"i=%d\\n\", i);</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token comment\">//UINT32 S1 = *(PUINT32)&amp;Tmp[FristOffset],</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token comment\">//\tS2 = *(PUINT32)&amp;Tmp[SecondOffset],</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t<span class=\"token comment\">//\tS3 = *(PUINT32)&amp;Tmp[ThirdOffset],</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t<span class=\"token comment\">//\tS4 = *(PUINT32)&amp;Tmp[FourthOffset],</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t<span class=\"token comment\">//\tS5 = *(PUINT32)&amp;Tmp[FifthOffset];</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t<span class=\"token comment\">//DbgPrint(\"S1=%08X\\tS2=%08X\\tS3=%08X\\tS4=%08X\\tS5=%08X\\n\", S1, S2, S3, S4, S5);</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t<span class=\"token comment\">//if (</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S1 == pShellcode[0])</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S2 == pShellcode[1])</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S3 == pShellcode[2])</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S4 == pShellcode[3])</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t<span class=\"token comment\">//\t&amp;&amp;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t<span class=\"token comment\">//\t(S5 == pShellcode[4])</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t<span class=\"token comment\">//\t)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> Tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pdriver<span class=\"token punctuation\">,</span> PUNICODE_STRING reg_path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我加载了！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\tpdriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token comment\">// 内核基址</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\tPVOID pKrnlBase\t\t\t<span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t<span class=\"token comment\">// 内核基址的大小</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\tUINT32 uKrnlImageSize\t<span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token comment\">// 申请一块内存，我只是为了方便传递参数</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\tPUINT32 pShellCode\t\t<span class=\"token operator\">=</span> <span class=\"token function\">ExAllocatePoolWithTag</span><span class=\"token punctuation\">(</span>NonPagedPool<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ShellCode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token comment\">// 函数 PspTerminateProcess 开头对应的硬编码</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\tpShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x8b55ff8b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X0C 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\tpShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x3b08758b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X22 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0x200147f6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X48 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0xff85f88b</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token comment\">// 相对函数开头偏移 0X6A 个字节后对应的硬编码</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pShellCode <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\t    <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UINT32<span class=\"token punctuation\">)</span><span class=\"token number\">0xe8560674</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t<span class=\"token comment\">// 获取内核基址和大小</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t<span class=\"token function\">GetKernelBase</span><span class=\"token punctuation\">(</span>pdriver<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pKrnlBase<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>uKrnlImageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t<span class=\"token comment\">// 遍历内核内存定位未导出函数</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t PVOID p <span class=\"token operator\">=</span> <span class=\"token function\">GetUndocumentFunctionAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>pKrnlBase<span class=\"token punctuation\">,</span> pShellCode<span class=\"token punctuation\">,</span> uKrnlImageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功找到函数首地址：%x\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始尝试调用函数...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t <span class=\"token comment\">/****** 调用 PspTerminateProcess (IN PEPROCESS Process, IN NTSTATUS ExitStatus) 函数 ******/</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t PEPROCESS hProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\t <span class=\"token function\">PsLookupProcessByProcessId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t PspTerminateProcess <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_PspTerminateProcess<span class=\"token punctuation\">)</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t <span class=\"token function\">PspTerminateProcess</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t <span class=\"token comment\">/****** 调用 PspTerminateProcess (IN PEPROCESS Process, IN NTSTATUS ExitStatus) 函数 ******/</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"函数调用结束.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查找失败！\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t <span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>编程的过程中碰到不少非常离谱的事情，简直称得上玄学！编译执行了好几遍都蓝屏，于是就去问别人，问了一堆人都说没问题，调试了半个小时，还是原来的代码又重新编译执行了一遍竟然可以运行了？？？？？？</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA5MTQ1MTEw\">https://blog.csdn.net/Kwansy/article/details/109145110</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMDM1MTQwMDc=\">https://blog.csdn.net/qq_41988448/article/details/103514007</span></p>\n",
            "tags": [
                "内核空间",
                "内核模块",
                "遍历内核模块",
                "定位未导出函数PspTiminateProcess"
            ]
        }
    ]
}