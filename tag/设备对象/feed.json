{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"设备对象\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/Win%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%AC%E8%B4%A8/",
            "url": "https://or0kit.github.io/Bin/Win32/Win%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%AC%E8%B4%A8/",
            "title": "Win窗口的本质",
            "date_published": "2021-07-05T12:57:58.000Z",
            "content_html": "<h1 id=\"窗口的本质\"><a class=\"anchor\" href=\"#窗口的本质\">#</a> 窗口的本质</h1>\n<p>在学习 Win32 的时候。很多操作都是窗口进行操作的。那么今天就说一下窗口的本质是什么.</p>\n<p>窗口的本质是不断绘制。是 windows 通过消息机制进行绘制的.</p>\n<p>我们知道内存分为高低 2G，其中低 2G 是给应用程序使用的而高 2G 是给操作系统使用的。</p>\n<p>而我们画图形的操作都是操作系统通过底层的 win32k.sys 这个驱动来提供的.<br />\n 进程跟线程管理是通过 ntoskrnl.exe 这个程序来管理的。</p>\n<p>但是三环不能使用，所以提供接口给三环。分别是 <code>kernel32.dll</code>  跟 <code>user32.dll</code>   <code>gdi.dll</code></p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>那么他们之间的区别是什么.</p>\n<p>1.kernel32.dll  管理进程线程跟内存的一个 dll</p>\n<p>2.user32.dll   窗口管理 图形界面管理</p>\n<p>3.gdi.dll      自己绘制的的管理</p>\n<h2 id=\"hwnd与全局句柄表\"><a class=\"anchor\" href=\"#hwnd与全局句柄表\">#</a> HWND 与全局句柄表</h2>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>在进程线程那几节我们知道每一个进程中都有一个私有的句柄表，句柄的名字叫做 <code>HANDLE</code>  代表着一个索引，并对应着内核对象。</p>\n<p>每个窗口的句柄在图形化编程中它不叫 <code>HANDLE</code> ，而叫 <code>HWND</code> ，窗口句柄表是 <code>全局句柄表</code> 。</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>所以在其他程序中也能使用这个句柄。<br />\n所有进程公用这个全局句柄表。</p>\n<h2 id=\"gdi-图形设备接口graphics-device-interface\"><a class=\"anchor\" href=\"#gdi-图形设备接口graphics-device-interface\">#</a> GDI 图形设备接口 (Graphics Device Interface)</h2>\n<p>1. 设备对象（HWND）</p>\n<p>2.DC 设备上下文（设备上下文，Device，Contexts）</p>\n<p>3. 图形对象</p>\n<h3 id=\"设备对象是什么\"><a class=\"anchor\" href=\"#设备对象是什么\">#</a> 设备对象是什么</h3>\n<p>简而言之设备对象的意思就是你要画图形要往哪里画。每一个窗口都有一个窗口句柄。而且是存放在全局窗口句柄表中的。我们可以获取一下。使用 Spy++ 获取.</p>\n<h3 id=\"dc设备上下文\"><a class=\"anchor\" href=\"#dc设备上下文\">#</a> DC 设备上下文</h3>\n<p>DC 设备上下文其实就是这个窗口有一块内存是绘制用的。我们想要往这个窗口绘制。需要先绘制到这个内存中才可以。这块内存就称为 DC 上下文.</p>\n<h3 id=\"图形对象\"><a class=\"anchor\" href=\"#图形对象\">#</a> 图形对象</h3>\n<p>图形对象就是指 <code>画笔``画刷``位图</code> 等等。我们要往内存中画的时候画的默认的，但是一般我们想改变一下形式，所以创建图形对象跟 DC 相关联。那么我们绘制就可以使用图形对象了。</p>\n<h1 id=\"绘制窗口步骤\"><a class=\"anchor\" href=\"#绘制窗口步骤\">#</a> 绘制窗口步骤</h1>\n<p>绘制窗口免不了使用 API。但是使用之前。需要知道我们要操作的步骤.</p>\n<ol>\n<li>\n<p>获取窗口句柄。也就是设备对象。</p>\n</li>\n<li>\n<p>获取窗口中的 DC 上下文。可以理解为获取指定窗口的绘图的那块内存。</p>\n</li>\n<li>\n<p>创建图形对象。 要想绘制，那么首先就需要你自定义的一个绘制的东西才可以。比如你要写字，那么就必须得用图形对象字体，而不能用图形对象画笔。</p>\n</li>\n<li>\n<p>关联图形对象跟 DC。 只要关联了。那么绘制的时候自动就使用你的图形对象了。</p>\n</li>\n<li>\n<p>进行你的绘图操作。 这里就是你写的绘图代码了。</p>\n</li>\n<li>\n<p>释放资源。 不管是窗口句柄也好，DC 也好，图形对象也好，都是内核对象，所以我们需要进行释放。</p>\n</li>\n</ol>\n<h2 id=\"具体api\"><a class=\"anchor\" href=\"#具体api\">#</a> 具体 API</h2>\n<ol>\n<li>获取指定窗口句柄   <code>FindWindowA/FindWindowW</code></li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HWND <span class=\"token function\">FindWindowA</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  LPCSTR lpClassName<span class=\"token punctuation\">,</span>              窗口类名<span class=\"token punctuation\">.</span>字符串<span class=\"token punctuation\">.</span> 可以用Spy<span class=\"token operator\">++</span>获取</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  LPCSTR lpWindowName           窗口名称</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>返回窗口句柄</pre></td></tr></table></figure><ol start=\"2\">\n<li>获取 DC 设备上下文  <code>GetDc()</code></li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HDC <span class=\"token function\">GetDC</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HWND hWnd                    传入设备对象<span class=\"token punctuation\">.</span>也就是窗口句柄</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>创建图形对象</li>\n</ol>\n<p>PS: 创建图形对象。图形对象有很多。有画笔。画刷。等等.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HPEN <span class=\"token function\">CreatePen</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span>      iStyle<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// 创建笔的风格，意思就是你的画笔是实心的 还是虚线 还是其他.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span>      cWidth<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// 笔的宽度。如果实心的。笔的宽度则自定义设置。如果其他。不能超过 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  COLORREF color                <span class=\"token comment\">//RGB 的颜色。你的画笔是什么颜色的。是一串 16 进制可以在线取色</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>返回图形对象</pre></td></tr></table></figure><p>还有常用的。创建矩形区域.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HRGN <span class=\"token function\">CreateRectRgn</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> y1<span class=\"token punctuation\">,</span>                 <span class=\"token comment\">// 坐标</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> x2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> y2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>具体使用可以查询 MSDN:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9kZXNrdG9wL2dkaS93aW5kb3dzLWdkaQ==\">https://docs.microsoft.com/zh-cn/windows/desktop/gdi/windows-gdi</span> 代码使用例子<br />\n如果你安装了 MSDN 2001 版本。搜索 SelectObject 可以看到。图形对象有很多。并且告诉你相应的 API</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>Bitmap  位图。后面是操作的 API</p>\n<p>Brush     画刷</p>\n<p>字体</p>\n<p>笔</p>\n<p>矩形</p>\n<ol start=\"4\">\n<li>关联 DC 跟图形对象</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HGDIOBJ <span class=\"token function\">SelectObject</span><span class=\"token punctuation\">(</span>  HDC hdc<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// handle to DC</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HGDIOBJ hgdiobj   <span class=\"token comment\">// handle to object);</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>写你想要绘制的代码</li>\n</ol>\n<p>这里如果是画线。则用  <code>LineTo(Hdc,x,y)</code>  这个 API  给定一个 DC. 给个 x y 坐标。则可以绘制.</p>\n<p>当然如果指定在哪里开始绘制则用 <code>MoveToEx</code>  指定起始位置.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token function\">MoveToEx</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HDC     hdc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span>     x<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span>     y<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  LPPOINT lppt</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>释放资源</li>\n</ol>\n<p>释放资源很简单了，如果是图形对象，同一使用 <code>DeleteObject(对象)</code>  进行删除.</p>\n<p>如果是 <code>DC</code> , 如果是创建的 <code>DC</code> , 则用 <code>DeleteDc(DC对象)</code>  来进行删除.</p>\n<p>如果是获取的 <code>DC</code>  则用 <code>ReleaseDc(Dc对象)</code>  来进行删除.</p>\n<p>题外话 windows 程序中还有一个 API. 可以获取 DC 中默认的图形对象.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 该函数检索预定义的备用笔、刷子、字体或者调色板的句柄</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HGDIOBJ <span class=\"token function\">GetStockObject</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span>  fnObject                  <span class=\"token comment\">// 对象的类型。你想从 DC 中获取什么对象类型.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>详情见百科<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9HZXRTdG9ja09iamVjdA==\"> https://baike.baidu.com/item/GetStockObject</span></p>\n<p>图像类型如果是 <code>DC_BRUSH</code>  则是获取纯色刷。就不用自己创建色刷了。可以通过操作色刷的 API 进行操作.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>COLORREF <span class=\"token function\">SetDCBrushColor</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  HDC      hdc<span class=\"token punctuation\">,</span>         <span class=\"token comment\">// 设备上下文环境句柄。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  COLORREF color        <span class=\"token comment\">//RGB 颜色</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"绘制图形\"><a class=\"anchor\" href=\"#绘制图形\">#</a> 绘制图形</h1>\n<h2 id=\"实例代码\"><a class=\"anchor\" href=\"#实例代码\">#</a> 实例代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//1. 设备对象 就是你要把东西画在什么地方</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 这里使用的是桌面的句柄</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HWND<span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">//2.DC 设备上下文对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 把它看成一块内存，画在内存中，然后再打印到屏幕上</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 获取设备上下文对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tHDC hdc <span class=\"token operator\">=</span> <span class=\"token function\">GetDC</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">//3. 图形对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// 获取默认画刷 DC_BRUSH 可以设置颜色</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tHBRUSH hbrush <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span><span class=\"token function\">GetStockObject</span><span class=\"token punctuation\">(</span>DC_BRUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">//4. 关联</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token function\">SelectObject</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> hbrush<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">//5. 开始画矩形</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// 设置画刷颜色</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token function\">SetDCBrushColor</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> <span class=\"token function\">RGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">// 画矩形</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span>hdc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">//6. 销毁对象 释放资源</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">DeleteObject</span><span class=\"token punctuation\">(</span>hbrush<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">ReleaseDC</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> hdc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaUJpbmFyeS9wLzk1ODAyNjguaHRtbA==\">https://www.cnblogs.com/iBinary/p/9580268.html</span></p>\n",
            "tags": [
                "设备对象",
                "DC设备上下文",
                "图形对象"
            ]
        }
    ]
}