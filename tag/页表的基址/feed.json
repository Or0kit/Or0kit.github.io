{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"页表的基址\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E9%A1%B5%E7%9B%AE%E5%BD%95%E8%A1%A8%E4%B8%8E%E9%A1%B5%E8%A1%A8%E7%9A%84%E5%9F%BA%E5%9D%80/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E9%A1%B5%E7%9B%AE%E5%BD%95%E8%A1%A8%E4%B8%8E%E9%A1%B5%E8%A1%A8%E7%9A%84%E5%9F%BA%E5%9D%80/",
            "title": "保护模式-页目录表与页表的基址",
            "date_published": "2021-08-29T06:16:49.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>如果我们想填充 PDE 与 PTE，那么必须能够访问 PDT 与 PTT，这样就存在 2 个问题：</p>\n<ol>\n<li>一定已经有 “人” 为我们访问 PDT 与 PTT 挂好了 PDE 与 PTE, 我们只用找到这个线性地址就可以了</li>\n<li>这个为我们挂好 PDE 与 PTE 的 “人” 是谁？</li>\n</ol>\n<p>注意：<br />\nCR3 中存储的是物理地址，不能在程序中直接读取的。如果想读取，也要把 Cr3 的值挂到 PDT 和 PTT 中才能访问，那么怎么通过线性地址访问 PDT 和 PTT 呢？</p>\n<h1 id=\"页目录表基址\"><a class=\"anchor\" href=\"#页目录表基址\">#</a> 页目录表基址</h1>\n<p>页目录表基址 = 线性地址： <code>C0300000</code></p>\n<h2 id=\"实验拆分线性地址c0300000并查看其对应的物理页\"><a class=\"anchor\" href=\"#实验拆分线性地址c0300000并查看其对应的物理页\">#</a> 实验：拆分线性地址 C0300000，并查看其对应的物理页</h2>\n<p>随便使用某个程序的 CR3，访问线性地址 <code>C0300000</code>  的物理地址。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>可以发现 <code>C0300000</code>  的物理页内容与 PDT 表完全相同。</p>\n<p><strong>实验总结</strong></p>\n<ul>\n<li>线性地址 C0300000 对应的物理页就是页目录表</li>\n<li>这个物理页即页目录表本身也是页表</li>\n<li>这个物理页是一张特殊的页表，每一项 PTE 指向的不是普通的物理页，而是指向其它的页表</li>\n<li>访问页目录表的公式：C0300000 + PDI*4（I=index）</li>\n</ul>\n<p>页目录表基址 (XP 系统 10-10-12 分页模式)</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"页表基址\"><a class=\"anchor\" href=\"#页表基址\">#</a> 页表基址</h1>\n<p>页表基址 = 线性地址： <code>C0000000</code></p>\n<h2 id=\"实验拆分线性地址c0000000并查看其对应的物理页\"><a class=\"anchor\" href=\"#实验拆分线性地址c0000000并查看其对应的物理页\">#</a> 实验：拆分线性地址 C0000000，并查看其对应的物理页</h2>\n<p>随便使用某个程序的 CR3，访问线性地址 <code>C0000000</code>  的物理地址。</p>\n<p>查看第一个 PTE</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>可以发现 PTE 完全一样。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>因为微软与新特尔协商，CR3 的值 + 0xC00 的的地址处存放的值还是 CR3 的值。所以访问线性地址 <code>C0000000</code>  就是找第一个 PTE 的地址。</p>\n<p><strong>实验总结</strong></p>\n<ul>\n<li>页表被映射到了从 0xC0000000~0xC03FFFFF 的 4M 地址空间</li>\n<li>在这 1024 个表中有一张特殊的表：页目录表，是第 0x300 张表。</li>\n<li>页目录被映射到了 0xC0300000 开始处的 4K 地址空间</li>\n<li>访问页表的公式：0xC0000000 + PDI*4096 + PTI*4（I=index）</li>\n</ul>\n<p>再看一遍这个图</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>有了 0xC0300000 和 0xC0000000 能做什么：</p>\n<p><strong>掌握了这两个地址，就掌握了一个进程所有的物理内存读写权限</strong></p>\n<p>公式总结：</p>\n<ol>\n<li>访问页目录表的公式：C0300000 + PDI*4（I=index）</li>\n<li>访问页表的公式：0xC0000000 + PDI*4096 + PTI*4（I=index）</li>\n</ol>\n<h2 id=\"实践\"><a class=\"anchor\" href=\"#实践\">#</a> 实践</h2>\n<p>理论知道了开始实践。</p>\n<h3 id=\"在0地址执行shellcode\"><a class=\"anchor\" href=\"#在0地址执行shellcode\">#</a> 在 0 地址执行 ShellCode</h3>\n<p>所需知识：</p>\n<ul>\n<li>内联汇编</li>\n<li>硬编码</li>\n<li>CPU 提权</li>\n<li>10-10-12 页表基址</li>\n</ul>\n<p>除了自己构造调用门描述符外，其他都代码实现。</p>\n<p>实际用途：火哥说的是写保护…… 小白也不懂，有些检测并不检测空指针赋值区和 64K 禁入区。</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 在 0 地址挂载物理页并执行 ShellCode</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">char</span> ShellCode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token number\">0x6a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token number\">0x6a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token number\">0x6a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token number\">0x6a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token number\">0xe8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token number\">0xc3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">CallGate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t__asm</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tpush <span class=\"token number\">0x30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tpop fs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tpushad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tpushfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tlea eax<span class=\"token punctuation\">,</span>ShellCode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tmov ebx<span class=\"token punctuation\">,</span>dword ptr ds<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0xc0300000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\ttest ebx<span class=\"token punctuation\">,</span>ebx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tje __gpPDE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tshr eax<span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token operator\">and</span> eax<span class=\"token punctuation\">,</span><span class=\"token number\">0xfffff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tshl eax<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tadd eax<span class=\"token punctuation\">,</span> <span class=\"token number\">0xc0000000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>eax<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tmov dword ptr ds<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0xc0000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tjmp __back<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>__gpPDE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tshr eax<span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token operator\">and</span> eax<span class=\"token punctuation\">,</span><span class=\"token number\">0x3ff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tshl eax<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tadd eax<span class=\"token punctuation\">,</span><span class=\"token number\">0xc0300000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>eax<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\tmov dword ptr ds<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0xc0300000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>__back<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tpopfd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tpopad<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tretf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> FuncAddress <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>MessageBox<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">int</span> OFA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>ShellCode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xfff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token comment\">//Amendment EIP</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ShellCode<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> FuncAddress <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span> <span class=\"token operator\">+</span> OFA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token keyword\">char</span> GateSegment<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MessageBox Address:%#010X\\nCallGate Address:%#010X\\nShellCode:%#010X\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t   FuncAddress<span class=\"token punctuation\">,</span>CallGate<span class=\"token punctuation\">,</span>ShellCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"windbg execute eq 8003f048 %04xec00`0008%04x\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t   <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>CallGate<span class=\"token operator\">>></span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t   <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>CallGate <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t__asm</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\tcall fword ptr ds<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>GateSegment<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\tpush <span class=\"token number\">0x3b</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//R3 FS Value</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\tpop fs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\tmov eax<span class=\"token punctuation\">,</span>OFA<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\tcall eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>成功！这个例子只是抛砖引玉，更多的还是需要自身区专研。</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p>滴水中级课程<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMDI2NTI3NzY=\"> https://blog.csdn.net/qq_41988448/article/details/102652776</span></p>\n",
            "tags": [
                "页目录表基址",
                "页表的基址",
                "0地址执行ShellCode"
            ]
        }
    ]
}