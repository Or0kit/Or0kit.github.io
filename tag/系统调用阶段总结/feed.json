{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"系统调用阶段总结\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/SystemCall/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8-%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/SystemCall/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8-%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0/",
            "title": "系统调用-课后练习",
            "date_published": "2022-01-01T00:52:24.000Z",
            "content_html": "<h1 id=\"系统调用阶段总结\"><a class=\"anchor\" href=\"#系统调用阶段总结\">#</a> 系统调用阶段总结</h1>\n<p>把本阶段的课后作业练习一下</p>\n<h2 id=\"在ssdt表中追加一个函数地址\"><a class=\"anchor\" href=\"#在ssdt表中追加一个函数地址\">#</a> 在 SSDT 表中追加一个函数地址</h2>\n<p>在 SSDT 表中追加一个函数地址 (NtReadVirtualMemory), 自己编写 API 的 3 环部分调用这个新增的函数 (注意：使用 2-9-9-12 分页)。</p>\n<p><strong>发现函数表后面刚好有四个字节，然后就是参数表了，这四个字节的值为： <code>0000011c </code> 刚好是函数表函数的个数，覆盖后暂时没出问题。</strong></p>\n<h3 id=\"代码如下\"><a class=\"anchor\" href=\"#代码如下\">#</a> 代码如下</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 在 SSDT 表中追加一个函数地址 (NtReadVirtualMemory), 自己编写 API 的 3 环部分调用这个新增的函数 (注意：使用 2-9-9-12 分页)。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntifs.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 恢复懒得写了</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动，我卸载了\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>VOID <span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tmov  eax<span class=\"token punctuation\">,</span> cr0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tor eax<span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span>h</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tmov  cr0<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tsti</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>VOID <span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tcli</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tmov  eax<span class=\"token punctuation\">,</span> cr0</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tand eax<span class=\"token punctuation\">,</span> not <span class=\"token number\">10000</span>h</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tmov  cr0<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>VOID <span class=\"token function\">ModifySSDT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">extern</span> PULONG KeServiceDescriptorTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// 获取函数表的指针</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tPULONG pFuncTable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PULONG<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>KeServiceDescriptorTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pFuncTable:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> pFuncTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token comment\">// 获取函数个数的指针</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tPULONG pLimit <span class=\"token operator\">=</span> KeServiceDescriptorTable <span class=\"token operator\">+</span> <span class=\"token number\">0x2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uLimit:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> pLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token comment\">// 获取参数表的指针</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tPUCHAR pArgumentTable <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>KeServiceDescriptorTable <span class=\"token operator\">+</span> <span class=\"token number\">0x3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pArgumentTable:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> pArgumentTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// 开始修改</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token comment\">// 取函数表的后一项的地址，新加的函数就是这个地址，因为索引是从 0 开始的。</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tPULONG ModifyAddress1 <span class=\"token operator\">=</span> pFuncTable <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token comment\">// 取参数表的后一项的地址，新加的函数就是这个地址，因为索引是从 0 开始的。</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tPUCHAR ModifyAddress2 <span class=\"token operator\">=</span> pArgumentTable <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ModifyAddress1:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> ModifyAddress1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ModifyAddress2:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> ModifyAddress2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token comment\">// 修改为 ReadProcessMemory -> NtReadVirtualMemory -> 0xBA</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token operator\">*</span>ModifyAddress1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>pFuncTable<span class=\"token punctuation\">[</span><span class=\"token number\">0xBA</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token operator\">*</span>pLimit <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token operator\">*</span>ModifyAddress2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UCHAR<span class=\"token punctuation\">)</span>pArgumentTable<span class=\"token punctuation\">[</span><span class=\"token number\">0xBA</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ModifyAddress1:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> ModifyAddress1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*uLimit:%X\\t\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>pLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ModifyAddress2:%p\\t\\n\"</span><span class=\"token punctuation\">,</span> ModifyAddress2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token comment\">// 修改 SSDT 表，增加一项。修改页保护</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token function\">ModifySSDT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>R3Call</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_CRT_SECURE_NO_WARNINGS</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ModZwWriteVirtualMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tmov     eax<span class=\"token punctuation\">,</span> <span class=\"token number\">0x11C</span><span class=\"token punctuation\">;</span> NtReadVirtualMemory</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tmov     edx<span class=\"token punctuation\">,</span> <span class=\"token number\">7FF</span>E0300h</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tcall    dword ptr<span class=\"token punctuation\">[</span>edx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tretn    <span class=\"token number\">0x14</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>BOOL WINAPI <span class=\"token function\">WriteProcessMemory_FAST</span><span class=\"token punctuation\">(</span>HANDLE hProcess<span class=\"token punctuation\">,</span> LPCVOID lpBaseAddress<span class=\"token punctuation\">,</span> LPVOID lpBuffer<span class=\"token punctuation\">,</span> DWORD nSize<span class=\"token punctuation\">,</span> LPDWORD lpNumberOfBytesWritten<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tLONG NtStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t__asm</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">// 模拟 WriteProcessMemory</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tlea eax<span class=\"token punctuation\">,</span> lpNumberOfBytesWritten<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tpush eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tpush lpNumberOfBytesWritten<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tpush nSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tpush lpBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tpush lpBaseAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tpush hProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tcall ModZwWriteVirtualMemory</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tmov NtStatus<span class=\"token punctuation\">,</span> eax<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpNumberOfBytesWritten <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token operator\">*</span>lpNumberOfBytesWritten <span class=\"token operator\">=</span> nSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token comment\">// 错误检查</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>NtStatus <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 提权函数：提升为 DEBUG 权限</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>BOOL <span class=\"token function\">EnableDebugPrivilege</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tHANDLE hToken<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tBOOL fOk <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OpenProcessToken</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetCurrentProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TOKEN_ADJUST_PRIVILEGES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>hToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tTOKEN_PRIVILEGES tp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\ttp<span class=\"token punctuation\">.</span>PrivilegeCount <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token function\">LookupPrivilegeValue</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> SE_DEBUG_NAME<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tp<span class=\"token punctuation\">.</span>Privileges<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Luid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\ttp<span class=\"token punctuation\">.</span>Privileges<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Attributes <span class=\"token operator\">=</span> SE_PRIVILEGE_ENABLED<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token function\">AdjustTokenPrivileges</span><span class=\"token punctuation\">(</span>hToken<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>tp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tfOk <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ERROR_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">return</span> fOk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token function\">EnableDebugPrivilege</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tDWORD pid<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">,</span> dwRead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token keyword\">char</span> buff<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"依次输入PID和要读的线性地址（均为16进制）...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x %x\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pid<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"buff:%p\\n\"</span><span class=\"token punctuation\">,</span> buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token function\">WriteProcessMemory_FAST</span><span class=\"token punctuation\">(</span><span class=\"token function\">OpenProcess</span><span class=\"token punctuation\">(</span>PROCESS_ALL_ACCESS<span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPCVOID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buff<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwRead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取了%d个字节，内容是: \\\"%s\\\"\\n\"</span><span class=\"token punctuation\">,</span> dwRead<span class=\"token punctuation\">,</span> buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>TestReWriteR3ApI</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Tlhelp32.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 获取进程自身的 PID</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    HANDLE hSnapshot <span class=\"token operator\">=</span> <span class=\"token function\">CreateToolhelp32Snapshot</span><span class=\"token punctuation\">(</span>TH32CS_SNAPPROCESS<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>INVALID_HANDLE_VALUE <span class=\"token operator\">==</span> hSnapshot<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    PROCESSENTRY32 pi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    pi<span class=\"token punctuation\">.</span>dwSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PROCESSENTRY32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 第一次使用必须初始化成员</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    BOOL bRet <span class=\"token operator\">=</span> <span class=\"token function\">Process32First</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bRet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TestReWriteR3API.exe\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token punctuation\">.</span>szExeFile<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进程ID = %X \\r\\n\"</span><span class=\"token punctuation\">,</span> pi<span class=\"token punctuation\">.</span>th32ProcessID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        bRet <span class=\"token operator\">=</span> <span class=\"token function\">Process32Next</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hSnapshot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hahahaha\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p--%s\\n\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截图：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"ssdt-hook-实现进程保护\"><a class=\"anchor\" href=\"#ssdt-hook-实现进程保护\">#</a> SSDT HOOK 实现进程保护</h2>\n<p>将系统服务表中某个函数改成自己的函数，使任务管理器右键无法关闭自己，只有点击自己的关闭按钮才可以正常关闭。</p>\n<p>方法是 SSDT HOOK NtTerminateProcess 函数，进行一系列的判断。就保护记事本 (notepad.exe) 了。</p>\n<p>个人思路是：</p>\n<blockquote>\n<p>先判断要结束的进程是否是记事本 (notepad.exe), 不是则调用老的 TerminateProcess 函数。如果是在判断当前进程是否是记事本 (notepad.exe)。</p>\n</blockquote>\n<p>判断当前进程是否是记事本 (notepad.exe)：<br />\n1、当前进程句柄的值是 0xFFFFFFFF ，只需要判断一下进程句柄是否是 0xFFFFFFFF 就知道是否是当前进程自己点击关闭按钮了。<br />\n2、调用 API，获取记事本的 pid，然后再 hook 的函数中获取当前进程的 pid，进行判断。<br />\n3、查 KPCR -&gt; 获取当前线程结构体 -&gt; 获取当前进程结构体 -&gt; 查当前进程的名字、也可以查当前进程的 pid // 因为我写博客写的有点晚，写这篇博客的时候进程与线程已经学了一些了。</p>\n<h3 id=\"代码如下-2\"><a class=\"anchor\" href=\"#代码如下-2\">#</a> 代码如下</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ntddk.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//SST 系统服务表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_KSYSTEM_SERVICE_TABLE</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPULONG FuncTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tULONG Count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tULONG ServiceLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPUCHAR ArgumentTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span>KSST<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PKSST<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//SSDT </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_SSDT</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tKSST ServiceTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tKSST ServiceTableShadow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tKSST un1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tKSST un2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span>SSDT<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> PSSDT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// 函数指针</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token function\">BOOLEAN</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pTerminateProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\tHANDLE hProcess<span class=\"token punctuation\">,</span> ULONG uExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">// 获取 SSDT 的导出变量</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">extern</span> PSSDT KeServiceDescriptorTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>ULONG OldNtTerminateProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 声明函数</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>NTSTATUS <span class=\"token function\">MyTerminateProcess</span><span class=\"token punctuation\">(</span>HANDLE hProcess<span class=\"token punctuation\">,</span> ULONG uExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>VOID <span class=\"token function\">HookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>VOID <span class=\"token function\">UnHookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>VOID <span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>VOID <span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>VOID <span class=\"token function\">DriverUnload</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token function\">UnHookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是驱动我卸载了\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>VOID <span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\tmov  eax<span class=\"token punctuation\">,</span> cr0</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\tor eax<span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span>h</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\tmov  cr0<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tsti</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>VOID <span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t__asm <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tcli</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tmov  eax<span class=\"token punctuation\">,</span> cr0</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\tand eax<span class=\"token punctuation\">,</span> not <span class=\"token number\">10000</span>h</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\tmov  cr0<span class=\"token punctuation\">,</span> eax</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>VOID <span class=\"token function\">HookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The start of the hook!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tKeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">[</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ULONG<span class=\"token punctuation\">)</span>MyTerminateProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>VOID <span class=\"token function\">UnHookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token function\">PageProtectOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tKeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">[</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> OldNtTerminateProcess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token function\">PageProtectOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The end of the hook!\\t\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>NTSTATUS <span class=\"token function\">MyTerminateProcess</span><span class=\"token punctuation\">(</span>HANDLE hProcess<span class=\"token punctuation\">,</span>\tULONG uExitCode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tULONG NotepadPid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tPUCHAR pImageFileName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tULONG pEprocess<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\tNTSTATUS status <span class=\"token operator\">=</span> <span class=\"token function\">ObReferenceObjectByHandle</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> FILE_READ_DATA<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> KernelMode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>PVOID<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>pEprocess<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token comment\">// 判断要关闭的是否是记事本 (notepad.exe)，这里进程名的字符字符串最大是 16，所以不用担心越界</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\tpImageFileName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PUCHAR<span class=\"token punctuation\">)</span>pEprocess <span class=\"token operator\">+</span> <span class=\"token number\">0x174</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>pImageFileName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"notepad.exe\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hProcess <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token number\">0xFFFFFFFF</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t<span class=\"token comment\">// 通过关闭按钮关闭</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pTerminateProcess<span class=\"token punctuation\">)</span>OldNtTerminateProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> uExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t<span class=\"token comment\">// 通过任务管理器关闭</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Terminate denied. %s: NtTerminateProcess(%x, %x)\\n\"</span><span class=\"token punctuation\">,</span> pImageFileName<span class=\"token punctuation\">,</span> hProcess<span class=\"token punctuation\">,</span> uExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> STATUS_ACCESS_DENIED<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pTerminateProcess<span class=\"token punctuation\">)</span>OldNtTerminateProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>hProcess<span class=\"token punctuation\">,</span> uExitCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>NTSTATUS <span class=\"token function\">DriverEntry</span><span class=\"token punctuation\">(</span>PDRIVER_OBJECT pDriver<span class=\"token punctuation\">,</span> PUNICODE_STRING pRegPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\tpDriver<span class=\"token operator\">-></span>DriverUnload <span class=\"token operator\">=</span> DriverUnload<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t<span class=\"token comment\">// 定义老的 NtTerminateProcess</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tOldNtTerminateProcess <span class=\"token operator\">=</span> KeServiceDescriptorTable<span class=\"token operator\">-></span>ServiceTable<span class=\"token punctuation\">.</span>FuncTable<span class=\"token punctuation\">[</span><span class=\"token number\">0x101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t<span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OldNtTerminateProcess:%X\\t\\n\"</span><span class=\"token punctuation\">,</span> OldNtTerminateProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t<span class=\"token comment\">//SSDT HOOK TerminateProcess</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t<span class=\"token function\">HookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t<span class=\"token keyword\">return</span> STATUS_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>截图：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p><strong>发现在这里点击结束任务</strong>，还是可以结束。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>不论是点击结束进程或是进程树，都无法结束</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>驱动卸载后，hook 也就卸载了。</p>\n<h2 id=\"ssdt-hook-实现-findwindowa-监视器\"><a class=\"anchor\" href=\"#ssdt-hook-实现-findwindowa-监视器\">#</a> SSDT HOOK 实现 FindWindowA 监视器</h2>\n<p>FinWindowsA 是 Shadow 表中的函数。</p>\n<p>3 环调用流程分析</p>\n<p>FinWindowsA -&gt; 调用一系列的 ASCII 转 Unicode 函数，最终调用 -&gt; NtUserFindWindowEx</p>\n<p>传入服务号为 0x117A 。<strong>注意真正的编号还要与 0xFFF 进行与操作</strong>。</p>\n<p>win32k.sys 系统服务表可能会缺页，要在驱动里访问它，做法是创建一个已经调用过 GDI 函数的进程（不一定是窗口程序），然后通过 DeviceIoControl 函数和驱动通信，这样执行驱动代码时所属进程已经给 win32k.sys 系统服务表挂上物理页了，访问就不会蓝屏。这里参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA5NTEwNjA2\">https://blog.csdn.net/Kwansy/article/details/109510606</span> 博主的文章，具体要自己逆向创建 GDI 线程的部分，才能清晰。</p>\n<p>并且还可以发现一个细节：<strong>当 3 环程序向驱动发起通信时，驱动所属进程就是 3 环的程序</strong></p>\n<h3 id=\"代码如下-3\"><a class=\"anchor\" href=\"#代码如下-3\">#</a> 代码如下</h3>\n<pre><code class=\"language-c\">\n</code></pre>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA5NTEwNjA2\">https://blog.csdn.net/Kwansy/article/details/109510606</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA5NDkwNjU3\">https://blog.csdn.net/Kwansy/article/details/109490657</span></p>\n",
            "tags": [
                "系统调用阶段总结"
            ]
        }
    ]
}