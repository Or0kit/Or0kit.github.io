<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Or0kit • Posts by &#34;ssrf&#34; tag</title>
        <link>https://Or0kit.github.io</link>
        <description>临渊羡鱼，不如退而结网</description>
        <language>zh-CN</language>
        <pubDate>Mon, 01 Feb 2021 19:54:22 +0800</pubDate>
        <lastBuildDate>Mon, 01 Feb 2021 19:54:22 +0800</lastBuildDate>
        <category>Drozer</category>
        <category>Algolia</category>
        <category>同义词替换</category>
        <category>xpath</category>
        <category>win32api</category>
        <category>WOW64</category>
        <category>windows消息机制</category>
        <category>虚拟内存</category>
        <category>jsDelivr</category>
        <category>First blog</category>
        <category>markdown 学习</category>
        <category>Android</category>
        <category>替换密钥</category>
        <category>数论基础</category>
        <category>ADB</category>
        <category>雷电模拟器</category>
        <category>Hadoop</category>
        <category>IDA</category>
        <category>Windows逆向</category>
        <category>SSH隧道</category>
        <category>url</category>
        <category>http</category>
        <category>Nginx</category>
        <category>Linux</category>
        <category>CentOS7配置vsftp</category>
        <category>Psad</category>
        <category>fwsnort</category>
        <category>应急响应</category>
        <category>x86汇编指令</category>
        <category>逆向</category>
        <category>IDA学习</category>
        <category>恶意代码分析实战入门</category>
        <category>静态分析基础</category>
        <category>动态分析技术基础</category>
        <category>加壳</category>
        <category>脱壳</category>
        <category>C++壳</category>
        <category>ESP寻址</category>
        <category>定位Win32窗口回调函数</category>
        <category>HOOK攻防</category>
        <category>瞬时HOOK过检测</category>
        <category>INLINE-HOOK</category>
        <category>IAT HOOK</category>
        <category>INLINE HOOK</category>
        <category>进程监控</category>
        <category>模块隐藏</category>
        <category>进程通信</category>
        <category>tlhelp32.h</category>
        <category>进程遍历</category>
        <category>模块遍历</category>
        <category>TEB</category>
        <category>PEB</category>
        <category>R3层断链</category>
        <category>外挂原理</category>
        <category>DLL注入之进程间通信</category>
        <category>Win临界区</category>
        <category>Win互斥体</category>
        <category>内存映射文件</category>
        <category>内存映射共享</category>
        <category>写拷贝</category>
        <category>Win事件</category>
        <category>线程同步</category>
        <category>Win子窗口控件</category>
        <category>win32文件函数</category>
        <category>代码注入</category>
        <category>窗口程序</category>
        <category>消息机制</category>
        <category>消息类型</category>
        <category>私有内存</category>
        <category>共享内存</category>
        <category>设备对象</category>
        <category>DC设备上下文</category>
        <category>图形对象</category>
        <category>创建线程</category>
        <category>线程控制</category>
        <category>线程相关API</category>
        <category>线程上下文</category>
        <category>CONTEXT结构体</category>
        <category>物理内存</category>
        <category>Windows进程</category>
        <category>句柄表</category>
        <category>远程线程函数</category>
        <category>远程线程</category>
        <category>DLL注入</category>
        <category>DLL注入相关函数</category>
        <category>WinMain函数</category>
        <category>调用约定</category>
        <category>我的GetProcAddress</category>
        <category>资源文件</category>
        <category>消息断点</category>
        <category>通用控件</category>
        <category>WM_NOTIFY消息类型</category>
        <category>MFC</category>
        <category>PE查看器</category>
        <category>PE课后作业</category>
        <category>RVA与FOA</category>
        <category>PE结构</category>
        <category>DOS头属性说明</category>
        <category>标准PE头属性说明</category>
        <category>扩展PE头属性说明</category>
        <category>节表属性说明</category>
        <category>空白区添加代码</category>
        <category>合并节</category>
        <category>导入表</category>
        <category>注入</category>
        <category>导入表注入</category>
        <category>导出表</category>
        <category>新增节</category>
        <category>移动NT头</category>
        <category>扩大节</category>
        <category>移动导出表</category>
        <category>移动重定位表</category>
        <category>重定位表</category>
        <category>静态链接库</category>
        <category>动态链接库</category>
        <category>句柄</category>
        <category>button</category>
        <category>单选框</category>
        <category>复选框件</category>
        <category>Edit</category>
        <category>Combo Box</category>
        <category>Tab</category>
        <category>ListCtrl</category>
        <category>MFC的本质</category>
        <category>MFC的层次结构图</category>
        <category>手动创建一个MFC程序</category>
        <category>MFC的初始化过程</category>
        <category>MFC运行时类型识别</category>
        <category>关键字static</category>
        <category>关键字const</category>
        <category>MFC动态创建</category>
        <category>MFC消息映射</category>
        <category>结构体AFX_MSGMAP_ENTRY</category>
        <category>结构体AFX_MSGM</category>
        <category>MFC的三大类消息</category>
        <category>数据传输</category>
        <category>ini文件的读写</category>
        <category>python</category>
        <category>SSH</category>
        <category>python文件读取</category>
        <category>数据分析</category>
        <category>socket</category>
        <category>数据库编程</category>
        <category>python内置属性</category>
        <category>multiprocessing</category>
        <category>threading</category>
        <category>scrapy</category>
        <category>测试</category>
        <category>BHP</category>
        <category>Python的import功能</category>
        <category>木马</category>
        <category>STL</category>
        <category>Vector容器</category>
        <category>Deque容器</category>
        <category>List容器</category>
        <category>Set容器</category>
        <category>Multiset容器</category>
        <category>Map容器</category>
        <category>Multimap容器</category>
        <category>Stack容器</category>
        <category>Queue容器</category>
        <category>STL算法</category>
        <category>STL迭代器</category>
        <category>CobaltStrike</category>
        <category>RedTeam</category>
        <category>Apeache</category>
        <category>Nmap</category>
        <category>php</category>
        <category>guestbook</category>
        <category>SQLmap</category>
        <category>apache</category>
        <category>log</category>
        <category>mysql主键</category>
        <category>CSRF</category>
        <category>SSRF</category>
        <category>业务逻辑漏洞</category>
        <category>xss</category>
        <category>webshell流量特征</category>
        <category>虚拟网卡</category>
        <category>0环与3环的通信（常规方法）</category>
        <category>内核空间</category>
        <category>内核模块</category>
        <category>遍历内核模块</category>
        <category>定位未导出函数PspTiminateProcess</category>
        <category>内核编程基础</category>
        <category>ANSI_STRING</category>
        <category>UNICODE_STRING</category>
        <category>内核内存</category>
        <category>上下文环境</category>
        <category>中断请求级别</category>
        <category>链表</category>
        <category>自旋锁</category>
        <category>注册表</category>
        <category>地址空间</category>
        <category>文件操作</category>
        <category>线程与事件</category>
        <category>内核重载</category>
        <category>驱动调试</category>
        <category>配置VS2019+WDK10</category>
        <category>第一个驱动程序</category>
        <category>调试驱动程序</category>
        <category>OpenSCManager</category>
        <category>CreateService</category>
        <category>APC的本质</category>
        <category>APC的备用队列</category>
        <category>消息队列</category>
        <category>PsConvertToGuiThread</category>
        <category>win32k.sys</category>
        <category>GUI线程</category>
        <category>窗口程序的创建</category>
        <category>消息循环</category>
        <category>线性地址的管理</category>
        <category>VAD树</category>
        <category>_MMVAD</category>
        <category>_MMVAD_FLAGS</category>
        <category>VirtualAlloc</category>
        <category>MEM_COMMIT与MEM_RESERVE</category>
        <category>malloc</category>
        <category>堆内存</category>
        <category>栈内存</category>
        <category>全局区内存</category>
        <category>共享物理页</category>
        <category>共享文件</category>
        <category>LoadLibrary的本质</category>
        <category>MmAddPhysicalMemoryEx</category>
        <category>缺页异常</category>
        <category>临界区</category>
        <category>KPCR结构体</category>
        <category>等待链表</category>
        <category>调度链表</category>
        <category>模拟线程切换</category>
        <category>模拟挂起与恢复函数</category>
        <category>进程的创建</category>
        <category>获取当前进程</category>
        <category>ETHREAD</category>
        <category>KTHREAD</category>
        <category>EPROCESS</category>
        <category>KPROCESS</category>
        <category>2-9-9-12分页</category>
        <category>PAE</category>
        <category>PDPTE</category>
        <category>PDE</category>
        <category>PTE</category>
        <category>XD标志位</category>
        <category>逆向分析MmIsAddressValid函数(2-9-9-12)</category>
        <category>PWT</category>
        <category>PDT</category>
        <category>TLB</category>
        <category>CPU缓存</category>
        <category>INVLPG指令</category>
        <category>全局页</category>
        <category>ShadowWalker</category>
        <category>中断</category>
        <category>异常</category>
        <category>CLI指令</category>
        <category>STI指令</category>
        <category>INT2</category>
        <category>INT8</category>
        <category>中断门描述符</category>
        <category>IDT</category>
        <category>提权</category>
        <category>TSS</category>
        <category>跨段跳转流程</category>
        <category>JMP FAR指令</category>
        <category>任务门</category>
        <category>LDT段描述符</category>
        <category>LDT</category>
        <category>CR0</category>
        <category>CR2</category>
        <category>CR4</category>
        <category>CRL</category>
        <category>DPL</category>
        <category>RPL</category>
        <category>段寄存器结构</category>
        <category>段描述符</category>
        <category>段选择子</category>
        <category>GDT表</category>
        <category>调用门</category>
        <category>调用门描述符</category>
        <category>逆向分析MmIsAddressValid函数</category>
        <category>error C2143</category>
        <category>error C2275</category>
        <category>CALL与CALL FAR</category>
        <category>陷阱门描述符</category>
        <category>页目录表基址</category>
        <category>页表的基址</category>
        <category>0地址执行ShellCode</category>
        <category>10-10-12分页</category>
        <category>PDE_PTE</category>
        <category>物理页</category>
        <category>SSDT HOOK</category>
        <category>OpenProcess</category>
        <category>系统服务表</category>
        <category>SSDT</category>
        <category>SSDT HOOK隐藏</category>
        <category>API进出内核</category>
        <category>系统调用阶段总结</category>
        <category>网络安全法</category>
        <category>ASCII</category>
        <category>GBK</category>
        <category>ANSI</category>
        <category>Unicode</category>
        <category>UTF-8</category>
        <category>URL 编码/解码</category>
        <category>十进制</category>
        <category>二进制</category>
        <category>十六进制</category>
        <category>内存</category>
        <category>编写ShellCode实现IAT HOOK</category>
        <category>ShellCode原则</category>
        <category>傀儡进程加密壳</category>
        <category>ZwUnmapViewOfSection函数</category>
        <category>加载图标</category>
        <category>提取图标</category>
        <category>资源表</category>
        <category>MFC命令传递</category>
        <category>远控界面编写</category>
        <category>HTML</category>
        <category>文件包含</category>
        <category>sql注入</category>
        <category>经典定长指令</category>
        <category>经典变长指令</category>
        <category>指令前缀</category>
        <category>进程句柄表</category>
        <category>全局句柄表</category>
        <category>KAPC</category>
        <category>QueueUserAPC</category>
        <category>NtQueueApcThread</category>
        <category>KeInitializeApc</category>
        <category>KeInsertQueueApc</category>
        <category>KiInsertQueueApc</category>
        <category>消息队列与线程</category>
        <category>Windows线程切换</category>
        <category>KiSwapContext</category>
        <category>SwapContext</category>
        <category>时钟中断</category>
        <category>时间片管理</category>
        <category>线程切换与TSS</category>
        <category>线程切换与FS</category>
        <category>线程切换与线程优先级</category>
        <category>快速调用</category>
        <category>中断调用</category>
        <category>分析ReadProcessMemory</category>
        <category>KiFastSystemCall</category>
        <category>KiIntSystemCall</category>
        <category>重写3环</category>
        <category>文件上传</category>
        <category>隐藏驱动</category>
        <category>IopLoadDriver</category>
        <category>延迟过程调用</category>
        <category>进程挂靠</category>
        <category>跨进程读写内存</category>
        <category>APC</category>
        <category>逆向分析NtReadVirtualMemory</category>
        <category>逆向分析NtWriteVIrtualMemory</category>
        <category>AD-Attack-Defense</category>
        <category>payload</category>
        <category>sysenter指令</category>
        <category>KiFastCallEntry函数</category>
        <category>KiSystemService函数</category>
        <category>Trap_Frame</category>
        <category>web安全</category>
        <category>Pentest</category>
        <item>
            <guid isPermalink="true">https://or0kit.github.io/PenetrationTest/Web-Security/web%E6%BC%8F%E6%B4%9E-SSRF/</guid>
            <title>web漏洞-SSRF</title>
            <link>https://or0kit.github.io/PenetrationTest/Web-Security/web%E6%BC%8F%E6%B4%9E-SSRF/</link>
            <category>SSRF</category>
            <pubDate>Mon, 01 Feb 2021 19:54:22 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ssrf的定义与成因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssrf的定义与成因&#34;&gt;#&lt;/a&gt; SSRF 的定义与成因&lt;/h1&gt;
&lt;p&gt;SSRF (Server-Side Request Forgery: 服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF 攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）&lt;/p&gt;
&lt;p&gt;SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定 URL 地址获取网页文本内容，加载指定地址的图片，下载等等。&lt;/p&gt;
&lt;p&gt;注释：除了 http/https 等方式可以造成 ssrf，类似 tcp connect 方式也可以探测内网一些 ip 的端口是否开发服务，只不过危害比较小而已。&lt;/p&gt;
&lt;h1 id=&#34;可能出现的地方&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可能出现的地方&#34;&gt;#&lt;/a&gt; 可能出现的地方&lt;/h1&gt;
&lt;p&gt;1. 社交分享功能：获取超链接的标题等内容进行显示&lt;/p&gt;
&lt;p&gt;2. 转码服务：通过 URL 地址把原地址的网页内容调优使其适合手机屏幕浏览&lt;/p&gt;
&lt;p&gt;3. 在线翻译：给网址翻译对应网页的内容&lt;/p&gt;
&lt;p&gt;4. 图片加载 / 下载：例如富文本编辑器中的点击下载图片到本地；通过 URL 地址加载或下载图片&lt;/p&gt;
&lt;p&gt;5. 图片 / 文章收藏功能：主要其会取 URL 地址中 title 以及文本的内容作为显示以求一个好的用具体验&lt;/p&gt;
&lt;p&gt;6. 云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行 ssrf 测试&lt;/p&gt;
&lt;p&gt;7. 网站采集，网站抓取的地方：一些网站会针对你输入的 url 进行一些信息采集工作&lt;/p&gt;
&lt;p&gt;8. 数据库内置功能：数据库的比如 mongodb 的 copyDatabase 函数&lt;/p&gt;
&lt;p&gt;9. 邮件系统：比如接收邮件服务器地址&lt;/p&gt;
&lt;p&gt;10. 编码处理，属性信息处理，文件处理：比如 ffpmg，ImageMagick，docx，pdf，xml 处理器等&lt;/p&gt;
&lt;p&gt;11. 未公开的 api 实现以及其他扩展调用 URL 的功能：可以利用 google 语法加上这些关键字去寻找 SSRF 漏洞&lt;/p&gt;
&lt;p&gt;一些的 url 中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain……&lt;/p&gt;
&lt;p&gt;12. 从远程服务器请求资源（upload from url 如 discuz！；import &amp;amp; expost rss feed 如 web blog；使用了 xml 引擎对象的地方 如 wordpress xmlrpc.php）&lt;/p&gt;
&lt;h1 id=&#34;漏洞验证&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞验证&#34;&gt;#&lt;/a&gt; 漏洞验证&lt;/h1&gt;
&lt;p&gt;1. 排除法：浏览器 f12 查看源代码看是否是在本地进行了请求&lt;/p&gt;
&lt;p&gt;比如：该资源地址类型为  &lt;code&gt;http://www.xxx.com/a.php?image=（地址）&lt;/code&gt; 的就可能存在 SSRF 漏洞&lt;/p&gt;
&lt;p&gt;2.dnslog 等工具进行测试，看是否被访问&lt;/p&gt;
&lt;p&gt;-- 可以在盲打后台用例中将当前准备请求的 uri 和参数编码成 base64，这样盲打后台解码后就知道是哪台机器哪个 cgi 触发的请求。&lt;/p&gt;
&lt;p&gt;3. 抓包分析发送的请求是不是由服务器的发送的，如果不是客户端发出的请求，则有可能是，接着找存在 HTTP 服务的内网地址&lt;/p&gt;
&lt;p&gt;-- 从漏洞平台中的历史漏洞寻找泄漏的存在 web 应用内网地址&lt;/p&gt;
&lt;p&gt;-- 通过二级域名暴力猜解工具模糊猜测内网地址&lt;/p&gt;
&lt;p&gt;4. 直接返回的 Banner、title、content 等信息&lt;/p&gt;
&lt;p&gt;5. 留意 bool 型 SSRF&lt;/p&gt;
&lt;h1 id=&#34;利用方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用方式&#34;&gt;#&lt;/a&gt; 利用方式&lt;/h1&gt;
&lt;p&gt;1. 让服务端去访问相应的网址&lt;/p&gt;
&lt;p&gt;2. 让服务端去访问自己所处内网的一些指纹文件来判断是否存在相应的 cms&lt;/p&gt;
&lt;p&gt;3. 可以使用 file、dict、gopher [11]、ftp 协议进行请求访问相应的文件&lt;/p&gt;
&lt;p&gt;4. 攻击内网 web 应用（可以向内部任意主机的任意端口发送精心构造的数据包 {payload}）&lt;/p&gt;
&lt;p&gt;5. 攻击内网应用程序（利用跨协议通信技术）&lt;/p&gt;
&lt;p&gt;6. 判断内网主机是否存活：方法是访问看是否有端口开放&lt;/p&gt;
&lt;p&gt;7.DoS 攻击（请求大文件，始终保持连接 keep-alive always）&lt;/p&gt;
&lt;h1 id=&#34;绕过限制方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过限制方法&#34;&gt;#&lt;/a&gt; 绕过限制方法&lt;/h1&gt;
&lt;p&gt;详细绕过参考 -----&amp;gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzLzY1ODMyLmh0bWw=&#34;&gt;https://www.secpulse.com/archives/65832.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1. &lt;code&gt;http://xxxx.com@www.baidu.com/&lt;/code&gt;  与 &lt;code&gt;http://www.baidu.com/&lt;/code&gt;  请求时是相同的&lt;/p&gt;
&lt;p&gt;2. 各种 IP 地址的进制转换&lt;/p&gt;
&lt;p&gt;可以是十六进制，八进制等。&lt;br /&gt;
115.239.210.26  &amp;gt;&amp;gt;&amp;gt;  16373751032&lt;br /&gt;
 首先把这四段数字给分别转成 16 进制，结果：73 ef d2 1a&lt;br /&gt;
 然后把 73efd21a 这十六进制一起转换成 8 进制&lt;br /&gt;
记得访问的时候加 0 表示使用八进制 (可以是一个 0 也可以是多个 0 跟 XSS 中多加几个 0 来绕过过滤一样)，十六进制加 0x&lt;/p&gt;
&lt;p&gt;127.0.0.1 =&amp;gt; 2130706433&lt;br /&gt;
&lt;img data-src=&#34;image001.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3.URL 跳转绕过： &lt;code&gt;http://www.hackersb.cn/redirect.php?url=http://192.168.0.1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4. 短网址绕过  &lt;code&gt;http://t.cn/RwbLKDx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;短网址原理请参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy52ZXJ5aXRtYW4uY29tLzIwMTkvMTEvMjQvJUU3JTlGJUFEJUU1JTlDJUIwJUU1JTlEJTgwJUU1JThFJTlGJUU3JTkwJTg2Lw==&#34;&gt; http://www.veryitman.com/2019/11/24 / 短地址原理 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;5.xip.io 来绕过： &lt;code&gt;http://xxx.192.168.0.1.xip.io/ == 192.168.0.1 (xxx 任意）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;指向任意 ip 的域名：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3hpcC5pbw==&#34;&gt;xip.io&lt;/span&gt; (37signals 开发实现的定制 DNS 服务)&lt;/p&gt;
&lt;p&gt;6. 限制了子网段，可以加 :80 端口绕过。 &lt;code&gt;http://tieba.baidu.com/f/commit/share/openShareApi?url=http://10.42.7.78:80&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;7. 探测内网域名，或者将自己的域名解析到内网 ip&lt;/p&gt;
&lt;p&gt;8. 例如  &lt;code&gt;http://10.153.138.81/ts.php&lt;/code&gt;  , 修复时容易出现的获取 host 时以 / 分割来确定 host，&lt;/p&gt;
&lt;p&gt;但这样可以用  &lt;code&gt;http://abc@10.153.138.81/&lt;/code&gt;  绕过&lt;/p&gt;
&lt;p&gt;9. 利用 Enclosed alphanumerics&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;利用Enclosed alphanumerics
ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &amp;gt;&amp;gt;&amp;gt;  example.com
List:
① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ 
⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ 
⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ 
⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ 
Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ 
ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ 
⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ 
⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;漏洞示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞示例&#34;&gt;#&lt;/a&gt; 漏洞示例&lt;/h1&gt;
&lt;p&gt;1.Wordpress3.5.1 以下版本 xmlrpc.php pingback 的缺陷与 ssrf&lt;/p&gt;
&lt;p&gt;2.discuz！的 ssrf （利用 php 的 header 函数来绕过，其实就是 302 跳转实现协议转换）&lt;/p&gt;
&lt;p&gt;3.weblogic 的 ssrf&lt;/p&gt;
&lt;p&gt;.....&lt;/p&gt;
&lt;h1 id=&#34;漏洞修复&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞修复&#34;&gt;#&lt;/a&gt; 漏洞修复&lt;/h1&gt;
&lt;p&gt;1. 禁止跳转&lt;/p&gt;
&lt;p&gt;2. 过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果 web 应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。&lt;/p&gt;
&lt;p&gt;3. 禁用不需要的协议，仅仅允许 http 和 https 请求。可以防止类似于 file://, gopher://, ftp:// 等引起的问题&lt;/p&gt;
&lt;p&gt;4. 设置 URL 白名单或者限制内网 IP（使用 gethostbyname () 判断是否为内网 IP）&lt;/p&gt;
&lt;p&gt;5. 限制请求的端口为 http 常用的端口，比如 80、443、8080、8090&lt;/p&gt;
&lt;p&gt;6. 统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。&lt;/p&gt;
&lt;h1 id=&#34;reference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt; Reference&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjExNQ==&#34;&gt;https://xz.aliyun.com/t/2115&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2JvYmFvLjM2MC5jbi9sZWFybmluZy9kZXRhaWwvMjQwLmh0bWw=&#34;&gt;http://bobao.360.cn/learning/detail/240.html&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzLzY1ODMyLmh0bWw=&#34;&gt;https://www.secpulse.com/archives/65832.html&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
