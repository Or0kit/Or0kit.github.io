<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Or0kit • Posts by &#34;int2&#34; tag</title>
        <link>https://Or0kit.github.io</link>
        <description>临渊羡鱼，不如退而结网</description>
        <language>zh-CN</language>
        <pubDate>Fri, 03 Sep 2021 22:43:18 +0800</pubDate>
        <lastBuildDate>Fri, 03 Sep 2021 22:43:18 +0800</lastBuildDate>
        <category>Algolia</category>
        <category>同义词替换</category>
        <category>Drozer</category>
        <category>xpath</category>
        <category>win32api</category>
        <category>WOW64</category>
        <category>windows消息机制</category>
        <category>虚拟内存</category>
        <category>jsDelivr</category>
        <category>First blog</category>
        <category>markdown 学习</category>
        <category>Android</category>
        <category>数论基础</category>
        <category>替换密钥</category>
        <category>ADB</category>
        <category>雷电模拟器</category>
        <category>Hadoop</category>
        <category>IDA</category>
        <category>Windows逆向</category>
        <category>SSH隧道</category>
        <category>url</category>
        <category>http</category>
        <category>Linux</category>
        <category>Nginx</category>
        <category>CentOS7配置vsftp</category>
        <category>Psad</category>
        <category>fwsnort</category>
        <category>应急响应</category>
        <category>x86汇编指令</category>
        <category>PE课后作业</category>
        <category>MFC</category>
        <category>PE查看器</category>
        <category>PE结构</category>
        <category>DOS头属性说明</category>
        <category>标准PE头属性说明</category>
        <category>扩展PE头属性说明</category>
        <category>节表属性说明</category>
        <category>空白区添加代码</category>
        <category>RVA与FOA</category>
        <category>合并节</category>
        <category>注入</category>
        <category>导入表注入</category>
        <category>导出表</category>
        <category>导入表</category>
        <category>扩大节</category>
        <category>新增节</category>
        <category>移动NT头</category>
        <category>移动导出表</category>
        <category>移动重定位表</category>
        <category>重定位表</category>
        <category>静态链接库</category>
        <category>动态链接库</category>
        <category>句柄</category>
        <category>逆向</category>
        <category>IDA学习</category>
        <category>静态分析基础</category>
        <category>动态分析技术基础</category>
        <category>恶意代码分析实战入门</category>
        <category>加壳</category>
        <category>脱壳</category>
        <category>C++壳</category>
        <category>ESP寻址</category>
        <category>定位Win32窗口回调函数</category>
        <category>HOOK攻防</category>
        <category>瞬时HOOK过检测</category>
        <category>INLINE-HOOK</category>
        <category>IAT HOOK</category>
        <category>INLINE HOOK</category>
        <category>进程监控</category>
        <category>模块隐藏</category>
        <category>进程通信</category>
        <category>tlhelp32.h</category>
        <category>进程遍历</category>
        <category>模块遍历</category>
        <category>外挂原理</category>
        <category>DLL注入之进程间通信</category>
        <category>TEB</category>
        <category>PEB</category>
        <category>R3层断链</category>
        <category>Win临界区</category>
        <category>Win事件</category>
        <category>线程同步</category>
        <category>Win互斥体</category>
        <category>内存映射文件</category>
        <category>内存映射共享</category>
        <category>写拷贝</category>
        <category>Win子窗口控件</category>
        <category>win32文件函数</category>
        <category>代码注入</category>
        <category>窗口程序</category>
        <category>消息机制</category>
        <category>消息类型</category>
        <category>私有内存</category>
        <category>共享内存</category>
        <category>设备对象</category>
        <category>DC设备上下文</category>
        <category>图形对象</category>
        <category>创建线程</category>
        <category>线程控制</category>
        <category>线程相关API</category>
        <category>线程上下文</category>
        <category>CONTEXT结构体</category>
        <category>物理内存</category>
        <category>Windows进程</category>
        <category>句柄表</category>
        <category>远程线程函数</category>
        <category>远程线程</category>
        <category>DLL注入</category>
        <category>DLL注入相关函数</category>
        <category>WinMain函数</category>
        <category>调用约定</category>
        <category>我的GetProcAddress</category>
        <category>资源文件</category>
        <category>消息断点</category>
        <category>通用控件</category>
        <category>WM_NOTIFY消息类型</category>
        <category>CobaltStrike</category>
        <category>Apeache</category>
        <category>Nmap</category>
        <category>php</category>
        <category>guestbook</category>
        <category>SQLmap</category>
        <category>apache</category>
        <category>log</category>
        <category>mysql主键</category>
        <category>CSRF</category>
        <category>SSRF</category>
        <category>业务逻辑漏洞</category>
        <category>xss</category>
        <category>webshell流量特征</category>
        <category>虚拟网卡</category>
        <category>RedTeam</category>
        <category>python</category>
        <category>SSH</category>
        <category>python文件读取</category>
        <category>数据分析</category>
        <category>socket</category>
        <category>数据库编程</category>
        <category>python内置属性</category>
        <category>scrapy</category>
        <category>测试</category>
        <category>BHP</category>
        <category>Python的import功能</category>
        <category>木马</category>
        <category>button</category>
        <category>multiprocessing</category>
        <category>threading</category>
        <category>单选框</category>
        <category>复选框件</category>
        <category>Edit</category>
        <category>Combo Box</category>
        <category>Tab</category>
        <category>ListCtrl</category>
        <category>MFC的本质</category>
        <category>MFC的层次结构图</category>
        <category>手动创建一个MFC程序</category>
        <category>MFC的初始化过程</category>
        <category>MFC运行时类型识别</category>
        <category>关键字static</category>
        <category>关键字const</category>
        <category>MFC动态创建</category>
        <category>MFC消息映射</category>
        <category>结构体AFX_MSGMAP_ENTRY</category>
        <category>结构体AFX_MSGM</category>
        <category>MFC的三大类消息</category>
        <category>数据传输</category>
        <category>ini文件的读写</category>
        <category>非可变序列算法</category>
        <category>可变序列算法</category>
        <category>排序算法</category>
        <category>迭代器</category>
        <category>使用自定义对象</category>
        <category>0环与3环的通信（常规方法）</category>
        <category>内核空间</category>
        <category>内核模块</category>
        <category>遍历内核模块</category>
        <category>定位未导出函数PspTiminateProcess</category>
        <category>内核编程基础</category>
        <category>ANSI_STRING</category>
        <category>UNICODE_STRING</category>
        <category>内核内存</category>
        <category>上下文环境</category>
        <category>中断请求级别</category>
        <category>链表</category>
        <category>自旋锁</category>
        <category>注册表</category>
        <category>地址空间</category>
        <category>文件操作</category>
        <category>线程与事件</category>
        <category>内核重载</category>
        <category>配置VS2019+WDK10</category>
        <category>第一个驱动程序</category>
        <category>驱动调试</category>
        <category>调试驱动程序</category>
        <category>OpenSCManager</category>
        <category>CreateService</category>
        <category>APC的本质</category>
        <category>APC的备用队列</category>
        <category>线性地址的管理</category>
        <category>VAD树</category>
        <category>_MMVAD</category>
        <category>_MMVAD_FLAGS</category>
        <category>VirtualAlloc</category>
        <category>MEM_COMMIT与MEM_RESERVE</category>
        <category>malloc</category>
        <category>堆内存</category>
        <category>栈内存</category>
        <category>全局区内存</category>
        <category>共享物理页</category>
        <category>共享文件</category>
        <category>LoadLibrary的本质</category>
        <category>MmAddPhysicalMemoryEx</category>
        <category>缺页异常</category>
        <category>消息队列</category>
        <category>PsConvertToGuiThread</category>
        <category>win32k.sys</category>
        <category>GUI线程</category>
        <category>窗口程序的创建</category>
        <category>消息循环</category>
        <category>临界区</category>
        <category>KPCR结构体</category>
        <category>模拟线程切换</category>
        <category>模拟挂起与恢复函数</category>
        <category>等待链表</category>
        <category>调度链表</category>
        <category>ETHREAD</category>
        <category>KTHREAD</category>
        <category>进程的创建</category>
        <category>获取当前进程</category>
        <category>EPROCESS</category>
        <category>KPROCESS</category>
        <category>2-9-9-12分页</category>
        <category>PAE</category>
        <category>PDPTE</category>
        <category>PDE</category>
        <category>PTE</category>
        <category>XD标志位</category>
        <category>逆向分析MmIsAddressValid函数(2-9-9-12)</category>
        <category>PWT</category>
        <category>PDT</category>
        <category>TLB</category>
        <category>CPU缓存</category>
        <category>INVLPG指令</category>
        <category>全局页</category>
        <category>ShadowWalker</category>
        <category>中断</category>
        <category>异常</category>
        <category>CLI指令</category>
        <category>STI指令</category>
        <category>INT2</category>
        <category>INT8</category>
        <category>中断门描述符</category>
        <category>IDT</category>
        <category>提权</category>
        <category>跨段跳转流程</category>
        <category>JMP FAR指令</category>
        <category>TSS</category>
        <category>任务门</category>
        <category>LDT段描述符</category>
        <category>LDT</category>
        <category>CR0</category>
        <category>CR2</category>
        <category>CR4</category>
        <category>段寄存器结构</category>
        <category>段描述符</category>
        <category>段选择子</category>
        <category>GDT表</category>
        <category>CRL</category>
        <category>DPL</category>
        <category>RPL</category>
        <category>调用门</category>
        <category>调用门描述符</category>
        <category>逆向分析MmIsAddressValid函数</category>
        <category>CALL与CALL FAR</category>
        <category>error C2143</category>
        <category>error C2275</category>
        <category>陷阱门描述符</category>
        <category>页目录表基址</category>
        <category>页表的基址</category>
        <category>0地址执行ShellCode</category>
        <category>10-10-12分页</category>
        <category>PDE_PTE</category>
        <category>物理页</category>
        <category>SSDT HOOK</category>
        <category>OpenProcess</category>
        <category>系统服务表</category>
        <category>SSDT</category>
        <category>SSDT HOOK隐藏</category>
        <category>API进出内核</category>
        <category>系统调用阶段总结</category>
        <category>网络安全法</category>
        <category>ASCII</category>
        <category>GBK</category>
        <category>ANSI</category>
        <category>Unicode</category>
        <category>UTF-8</category>
        <category>URL 编码/解码</category>
        <category>十进制</category>
        <category>二进制</category>
        <category>十六进制</category>
        <category>内存</category>
        <category>编写ShellCode实现IAT HOOK</category>
        <category>ShellCode原则</category>
        <category>加载图标</category>
        <category>提取图标</category>
        <category>资源表</category>
        <category>傀儡进程加密壳</category>
        <category>ZwUnmapViewOfSection函数</category>
        <category>HTML</category>
        <category>文件包含</category>
        <category>sql注入</category>
        <category>MFC命令传递</category>
        <category>远控界面编写</category>
        <category>STL</category>
        <category>Vector容器</category>
        <category>Deque容器</category>
        <category>List容器</category>
        <category>Set容器</category>
        <category>Multiset容器</category>
        <category>Map容器</category>
        <category>Multimap容器</category>
        <category>Stack容器</category>
        <category>Queue容器</category>
        <category>priority_queue容器</category>
        <category>经典定长指令</category>
        <category>经典变长指令</category>
        <category>指令前缀</category>
        <category>KAPC</category>
        <category>QueueUserAPC</category>
        <category>NtQueueApcThread</category>
        <category>KeInitializeApc</category>
        <category>KeInsertQueueApc</category>
        <category>KiInsertQueueApc</category>
        <category>进程句柄表</category>
        <category>全局句柄表</category>
        <category>消息队列与线程</category>
        <category>Windows线程切换</category>
        <category>KiSwapContext</category>
        <category>SwapContext</category>
        <category>时钟中断</category>
        <category>时间片管理</category>
        <category>线程切换与TSS</category>
        <category>线程切换与FS</category>
        <category>线程切换与线程优先级</category>
        <category>快速调用</category>
        <category>中断调用</category>
        <category>分析ReadProcessMemory</category>
        <category>KiFastSystemCall</category>
        <category>KiIntSystemCall</category>
        <category>重写3环</category>
        <category>文件上传</category>
        <category>隐藏驱动</category>
        <category>IopLoadDriver</category>
        <category>延迟过程调用</category>
        <category>进程挂靠</category>
        <category>跨进程读写内存</category>
        <category>APC</category>
        <category>逆向分析NtReadVirtualMemory</category>
        <category>逆向分析NtWriteVIrtualMemory</category>
        <category>payload</category>
        <category>AD-Attack-Defense</category>
        <category>sysenter指令</category>
        <category>KiFastCallEntry函数</category>
        <category>KiSystemService函数</category>
        <category>Trap_Frame</category>
        <category>web安全</category>
        <category>Pentest</category>
        <item>
            <guid isPermalink="true">https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E4%B8%AD%E6%96%AD%E4%B8%8E%E5%BC%82%E5%B8%B8/</guid>
            <title>保护模式-中断与异常</title>
            <link>https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E4%B8%AD%E6%96%AD%E4%B8%8E%E5%BC%82%E5%B8%B8/</link>
            <category>中断</category>
            <category>异常</category>
            <category>CLI指令</category>
            <category>STI指令</category>
            <category>INT2</category>
            <category>INT8</category>
            <pubDate>Fri, 03 Sep 2021 22:43:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;什么是中断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是中断&#34;&gt;#&lt;/a&gt; 什么是中断&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;中断通常是由 CPU 外部的输入输出设备 (硬件) 所触发的，供外部设备通知&lt;br /&gt;
 CPU “有事情需要处理”，因此又叫中断请求 (Interrupt Request).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中断请求的目的是希望 CPU 暂时停止执行当前正在执行的程序，转去执行&lt;br /&gt;
中断请求所对应的中断处理例程 (中断处理程序在哪有 IDT 表决定)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;80x86 有两条中断请求线：&lt;/p&gt;
&lt;p&gt;非屏蔽中断线，称为 NMI（NonMaskable Interrupt）&lt;/p&gt;
&lt;p&gt;可屏蔽中断线，称为 INTR（Interrupt Require）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假设没有中断这种机制，当一个的程序的代码为死循环时，其他的程序就没有机会执行了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;中断的本质：改变 CPU 的执行路线&lt;/p&gt;
&lt;h2 id=&#34;可屏蔽中断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可屏蔽中断&#34;&gt;#&lt;/a&gt; 可屏蔽中断&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;描述：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在硬件级，可屏蔽中断是由一块专门的芯片来管理的，通常称为中断控制器&lt;br /&gt;
它负责分配中断资源和管理各个中断源发出的中断请求&lt;br /&gt;
为了便于标识各个中断请求，中断管理器通常用 IRQ（Interrupt Request）后面加上数字来表示不同的中断&lt;br /&gt;
比如：在 Windows 中，时钟中断的 IRQ 编号为 0，也就是  &lt;code&gt;IRQ0&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;时钟中断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时钟中断&#34;&gt;#&lt;/a&gt; 时钟中断&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;描述：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大多数操作系统时钟中断在 10-100MS 之间，Windows 系列为 10-20MS&lt;br /&gt;
Windows 时钟中断每隔 10~20MS 会向 CPU 发送一个请求，当 CPU 收到请求时，操作系统就会接管 CPU，指定 CPU 去执行一段代码，操作系统在这段代码里便有机会进行线程的切换。这样，即便一个程序进入死循环，操作系统依然有机会进行线程切换&lt;br /&gt;
当然，操作系统主要并不是通过时钟中断来进行线程切换，而只是有机会进行线程切换，这里只是举个例子。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image001.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;可屏蔽中断如何处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可屏蔽中断如何处理&#34;&gt;#&lt;/a&gt; 可屏蔽中断如何处理？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;描述：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;时钟中断&lt;/strong&gt;的 &lt;strong&gt;IRQ 编号为 0&lt;/strong&gt; ，所在位置为&lt;strong&gt; IDT [0x30]&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IRQ1~IRQ15&lt;/strong&gt; 分别对应&lt;strong&gt; IDT [0x31]~IDT [0x35]&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;image002.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特别说明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、如果自己的程序执行时不希望 CPU 去处理这些中断，可以&lt;br /&gt;
用  &lt;code&gt;CLI&lt;/code&gt;  指令清空 EFLAG 寄存器中的 IF 位&lt;br /&gt;
用  &lt;code&gt;STI&lt;/code&gt;  指令设置 EFLAG 寄存器中的 IF 位&lt;/p&gt;
&lt;p&gt;2、硬件中断与 IDT 表中的对应关系并非固定不变的&lt;br /&gt;
参见：APIC（高级可编程中断控制器）&lt;/p&gt;
&lt;h2 id=&#34;不可屏蔽中断如何处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不可屏蔽中断如何处理&#34;&gt;#&lt;/a&gt; 不可屏蔽中断如何处理？&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;image003.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;特别说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当非可屏蔽中断产生时，CPU 在执行完当前指令后会里面进入中断处理程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;非可屏蔽中断不受 EFLAG 寄存器中 IF 位的影响，一旦发生，CPU 必须处理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;非可屏蔽中断处理程序位于 IDT 表中的 2 号位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;异常&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异常&#34;&gt;#&lt;/a&gt; 异常&lt;/h1&gt;
&lt;p&gt;描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;异常通常是 &lt;strong&gt;CPU 在执行指令时检测到的某些错误&lt;/strong&gt; ，比如除 0、访问无效页面等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;中断与异常的区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;中断&lt;/code&gt; 来自于 &lt;strong&gt;外部设备&lt;/strong&gt; ，是 &lt;strong&gt;中断源&lt;/strong&gt; （比如键盘）发起的，&lt;strong&gt;CPU 是被动的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;异常&lt;/code&gt; 来自于 &lt;strong&gt;CPU 本身&lt;/strong&gt; ，是&lt;strong&gt; CPU 主动产生的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;INT N&lt;/strong&gt; 虽然被称为 “软件中断”，但其&lt;strong&gt;本质是异常&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;EFLAG 的  &lt;code&gt;IF位&lt;/code&gt; 对  &lt;code&gt;INT N&lt;/code&gt;  无效。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;异常处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异常处理&#34;&gt;#&lt;/a&gt; 异常处理&lt;/h2&gt;
&lt;p&gt;描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无论是由&lt;strong&gt;硬件设备触发的中断请求&lt;/strong&gt;还是由 &lt;strong&gt;CPU 产生的异常&lt;/strong&gt; ，处理程序都在  &lt;code&gt;IDT表&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的异常处理程序：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image004.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;页错误&lt;/code&gt; ：当我们访问一个 &lt;strong&gt;线性地址&lt;/strong&gt; ，而这个线性地址指向的&lt;strong&gt;物理页&lt;/strong&gt;是 &lt;strong&gt;无效的&lt;/strong&gt; ，便会触发 CPU 异常，该异常位于 &lt;strong&gt;E 号门&lt;/strong&gt; （IDT [0xE]）&lt;br /&gt;
 &lt;code&gt;段错误&lt;/code&gt; ：一旦&lt;strong&gt;段的运算发生异常&lt;/strong&gt;时（如权限检查），便会走 &lt;strong&gt;D 号门&lt;/strong&gt; （IDT [0xD]）&lt;br /&gt;
 &lt;code&gt;除0错误&lt;/code&gt; ：当&lt;strong&gt;除数为 0&lt;/strong&gt; 时，会触发异常，这时走 &lt;strong&gt;0 号门&lt;/strong&gt; （IDT [0x0]）&lt;br /&gt;
 &lt;code&gt;双重错误&lt;/code&gt; ：假设 &lt;strong&gt;执行一个异常（如页错误）时又产生了一个错误&lt;/strong&gt; ，那么便会触发双重错误，这时走 &lt;strong&gt;8 号门&lt;/strong&gt; （IDT [0x8]）&lt;/p&gt;
&lt;h2 id=&#34;缺页异常&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺页异常&#34;&gt;#&lt;/a&gt; 缺页异常&lt;/h2&gt;
&lt;p&gt;缺页异常的 &lt;strong&gt;产生&lt;/strong&gt; （例举两种）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当 PDE/PTE 的&lt;strong&gt; P=0&lt;/strong&gt; 时会发生缺页异常&lt;/li&gt;
&lt;li&gt;当 PDE/PTE 的&lt;strong&gt;属性为只读但程序试图写入&lt;/strong&gt;时会发生缺页异常&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一旦发生缺页异常，CPU 会执行 IDT 表中的&lt;strong&gt; 0xE 号&lt;/strong&gt;中断处理程序，由操作系统来接管，后面会学习的。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;image005.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;实验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验&#34;&gt;#&lt;/a&gt; 实验&lt;/h1&gt;
&lt;h2 id=&#34;分析idt表中0x2号中断的执行流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析idt表中0x2号中断的执行流程&#34;&gt;#&lt;/a&gt; 分析 IDT 表中 0x2 号中断的执行流程&lt;/h2&gt;
&lt;h2 id=&#34;分析idt表中0x8号中断的执行流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析idt表中0x8号中断的执行流程&#34;&gt;#&lt;/a&gt; 分析 IDT 表中 0x8 号中断的执行流程&lt;/h2&gt;
&lt;h1 id=&#34;reference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt; Reference&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMDI3NjA1NzA=&#34;&gt;https://blog.csdn.net/qq_41988448/article/details/102760570&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
