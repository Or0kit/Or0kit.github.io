{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"任务门\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E4%BB%BB%E5%8A%A1%E9%97%A8/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/Protect-Mode/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F-%E4%BB%BB%E5%8A%A1%E9%97%A8/",
            "title": "保护模式-任务门",
            "date_published": "2021-08-13T06:40:49.000Z",
            "content_html": "<h1 id=\"要点回顾\"><a class=\"anchor\" href=\"#要点回顾\">#</a> 要点回顾：</h1>\n<p>在上一节中讲解了如何通过 CALL、JMP 指令访问任务段</p>\n<p>这一节课主要介绍如何通过任务门去访问任务段</p>\n<p>既然已经可以访问任务段了，那为什么还要有任务门呢？</p>\n<h1 id=\"任务门\"><a class=\"anchor\" href=\"#任务门\">#</a> 任务门</h1>\n<p>IDT 表可以包含 3 种门描述符：</p>\n<ul>\n<li>\n<p>任务门描述符</p>\n</li>\n<li>\n<p>中断门描述符</p>\n</li>\n<li>\n<p>陷阱门描述符</p>\n</li>\n</ul>\n<p>接下来我们学习任务门</p>\n<h2 id=\"任务门描述符\"><a class=\"anchor\" href=\"#任务门描述符\">#</a> 任务门描述符</h2>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>除了 TSS 描述符选择子以外， 其他位都是固定的。<br />\n我们在 <code>8003f048</code>  处设置 TSS 描述符，因此，任务门描述符的值可以确定： <code>0000e500`00480000</code></p>\n<h2 id=\"任务门执行过程\"><a class=\"anchor\" href=\"#任务门执行过程\">#</a> 任务门执行过程：</h2>\n<ol>\n<li>\n<p>INT N</p>\n</li>\n<li>\n<p>查 IDT 表，找到任务门描述符</p>\n</li>\n<li>\n<p>通过任务门描述符，查 GDT 表，找到 TSS 段描述符</p>\n</li>\n<li>\n<p>使用 TSS 段中的值修改 TR 寄存器</p>\n</li>\n<li>\n<p>IRETD 返回</p>\n</li>\n</ol>\n<h2 id=\"实验\"><a class=\"anchor\" href=\"#实验\">#</a> 实验</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>DWORD<span class=\"token operator\">*</span> TSS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DWORD dwOk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>naked<span class=\"token punctuation\">)</span> <span class=\"token function\">TestFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tdwOk <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t__asm<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tiretd</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tDWORD dwCr3<span class=\"token punctuation\">;</span> <span class=\"token comment\">//windbg 获取</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">char</span> esp<span class=\"token punctuation\">[</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 任务切换后的栈</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tTSS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">VirtualAlloc</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">104</span><span class=\"token punctuation\">,</span>MEM_COMMIT<span class=\"token punctuation\">,</span>PAGE_READWRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>TSS <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VirtualAlloc 失败，%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请在windbg执行: eq 8003f048 %02x00e9%02x`%04x0068\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>TSS<span class=\"token operator\">>></span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x000000FF</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>TSS<span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x000000FF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>WORD<span class=\"token punctuation\">)</span>TSS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请在windbg执行: eq 8003f500 0000e500`00480000\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请在windbg中执行!process 0 0，复制进程DirBase的值，并输入.\\nCR3: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dwCr3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Previous Task Link CPU 填充，表示上一个任务的选择子</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ESP0</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SS0</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ESP1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SS1</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ESP2</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SS2</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dwCr3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// CR3 学到页就知道是啥了</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>TestFunc<span class=\"token punctuation\">;</span> <span class=\"token comment\">// EIP</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// EFLAGS</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// EAX</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ECX</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// EDX</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// EBX</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>esp<span class=\"token operator\">+</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// EBP</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ESI</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// EDI</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000008</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// CS </span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000010</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SS </span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// DS</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// FS </span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GS</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// LDT Segment Selector</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tTSS<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x20ac0000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// I/O Map Base Address</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t__asm</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> <span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok: %d\\n\"</span><span class=\"token punctuation\">,</span>dwOk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"int-8-逆向分析\"><a class=\"anchor\" href=\"#int-8-逆向分析\">#</a> INT 8 逆向分析</h2>\n<p>看看操作系统是如何使用任务门的，但因为我太菜了，只能……</p>\n<p><strong>寻找 int 8 的代码</strong></p>\n<p>由 <code>INT 8</code>  查询 IDT 表中索引为 8 的段描述符</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>可以发现是任务们的描述符 <code>00008500`00501198</code></p>\n<p>其中 TSS 的段选择子为 <code>0050</code></p>\n<p>去 GDT 表中查询 TSS 段描述符</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>TSS 段描述符为 <code>80008955`87000068</code></p>\n<p>TSS 在内存中的地址为 <code>0x80558700</code></p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>可以看到 TSS 的结束位: <code>0x000020ac</code></p>\n<p>EIP 为 <code>0x804e08a5</code></p>\n<p>查看 0x804e08a5 处函数的汇编代码</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>在火哥的视频中让逆向图中高亮的代码。</p>\n<pre><code class=\"language-汇编\">804e08a6 648b0d3c000000  mov     ecx,dword ptr fs:[3Ch]\n804e08ad 8d4150          lea     eax,[ecx+50h]\n804e08b0 c6400589        mov     byte ptr [eax+5],89h\n804e08b4 9c              pushfd\n804e08b5 812424ffbfffff  and     dword ptr [esp],0FFFFBFFFh\n804e08bc 9d              popfd\n804e08bd 64a13c000000    mov     eax,dword ptr fs:[0000003Ch]\n804e08c3 8a6857          mov     ch,byte ptr [eax+57h]\n804e08c6 8a4854          mov     cl,byte ptr [eax+54h]\n804e08c9 c1e110          shl     ecx,10h\n804e08cc 668b4852        mov     cx,word ptr [eax+52h]\n804e08d0 64a140000000    mov     eax,dword ptr fs:[00000040h]\n804e08d6 64890d40000000  mov     dword ptr fs:[40h],ecx\n</code></pre>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>这是火哥在视频中分析好的，我截图了。</p>\n<hr />\n<hr />\n<p>今天搜索 FS 寄存器的资料，发现了这里涉及了 FS 寄存器在 R0 和 R3 下的不同。</p>\n<p>具体参见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3B5X3Bhbnl1L2FydGljbGUvZGV0YWlscy80NTAxMTUwNQ==\"> https://blog.csdn.net/py_panyu/article/details/45011505</span> 这篇博客，衷心感谢作者。</p>\n<p>当线程运行在 R0 下时，FS 指向的段是 GDT 中的 0x30 段。该段的长度也为 4K, 基地址为 0xFFDFF000. 该地址指向系统的处理器控制区域（KPCR）. 这个区域中保存这处理器相关的一些重要数据值，如 GDT、IDT 表的值等等.</p>\n<pre><code>kd&gt; dt _kpcr\nnt!_KPCR\n   +0x000 NtTib            : _NT_TIB\n   +0x01c SelfPcr          : Ptr32 _KPCR\n   +0x020 Prcb             : Ptr32 _KPRCB\n   +0x024 Irql             : UChar\n   +0x028 IRR              : Uint4B\n   +0x02c IrrActive        : Uint4B\n   +0x030 IDR              : Uint4B\n   +0x034 KdVersionBlock   : Ptr32 Void\n   +0x038 IDT              : Ptr32 _KIDTENTRY\n   +0x03c GDT              : Ptr32 _KGDTENTRY\n   +0x040 TSS              : Ptr32 _KTSS\n   +0x044 MajorVersion     : Uint2B\n   +0x046 MinorVersion     : Uint2B\n   +0x048 SetMember        : Uint4B\n   +0x04c StallScaleFactor : Uint4B\n   +0x050 DebugActive      : UChar\n   +0x051 Number           : UChar\n   +0x052 Spare0           : UChar\n   +0x053 SecondLevelCacheAssociativity : UChar\n   +0x054 VdmAlert         : Uint4B\n   +0x058 KernelReserved   : [14] Uint4B\n   +0x090 SecondLevelCacheSize : Uint4B\n   +0x094 HalReserved      : [16] Uint4B\n   +0x0d4 InterruptMode    : Uint4B\n   +0x0d8 Spare1           : UChar\n   +0x0dc KernelReserved2  : [17] Uint4B\n   +0x120 PrcbData         : _KPRCB\n</code></pre>\n<p>主要是学习操作系统的思路。编写操作系统的人，厉害 (๑・̀ㅂ・́)و✧</p>\n<h2 id=\"任务切换\"><a class=\"anchor\" href=\"#任务切换\">#</a> 任务切换</h2>\n<p>概述一下任务门进行任务切换的流程：</p>\n<ol>\n<li>\n<p>当中断发生时，处理器用中断号乘以 8（段描述符的大小为 8 个字节）作为索引访问中断描述符表。当它发现这是一个任务门描述符时，就知道应当发起任务切换。</p>\n</li>\n<li>\n<p>取出任务门描述符。</p>\n</li>\n<li>\n<p>从任务门描述符中取出新任务的 TSS 选择子；</p>\n</li>\n<li>\n<p>再用 TSS 选择子访问 GDT，取出新任务的 TSS 描述符</p>\n</li>\n<li>\n<p>到这里就和上一节用 TSS 切换任务一样了……TSS…… 切换寄存器……</p>\n</li>\n</ol>\n<p>最终任务寄存器 TR 指向新任务的 TSS，而处理器开始新任务的执行。</p>\n<p>一旦新任务开始执行，处理器固件会自动将其 TSS 描述符的 B 位置 1，表示该任务状态为忙。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p>任务门 --- 任务切换:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3Mzc1NDI3L2FydGljbGUvZGV0YWlscy84NTA0NjU0Mw==\">https://blog.csdn.net/qq_37375427/article/details/85046543</span><br />\n 任务门<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0t3YW5zeS9hcnRpY2xlL2RldGFpbHMvMTA4ODk2OTg5\"> https://blog.csdn.net/Kwansy/article/details/108896989</span><br />\n 浅谈 FS 段寄存器在用户层和内核层的使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3B5X3Bhbnl1L2FydGljbGUvZGV0YWlscy80NTAxMTUwNQ==\"> https://blog.csdn.net/py_panyu/article/details/45011505</span></p>\n",
            "tags": [
                "任务门"
            ]
        }
    ]
}