{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"导出表\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/WindowsPE/%E5%AF%BC%E5%87%BA%E8%A1%A8/",
            "url": "https://or0kit.github.io/Bin/WindowsPE/%E5%AF%BC%E5%87%BA%E8%A1%A8/",
            "title": "导出表",
            "date_published": "2021-05-07T12:23:07.000Z",
            "content_html": "<h1 id=\"如何定位导出表\"><a class=\"anchor\" href=\"#如何定位导出表\">#</a> 如何定位导出表：</h1>\n<p>数据目录项的第一个结构，就是导出表.</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_IMAGE_DATA_DIRECTORY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    DWORD   VirtualAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD   Size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> IMAGE_DATA_DIRECTORY<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PIMAGE_DATA_DIRECTORY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//VirtualAddress  导出表的 RVA</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//Size 导出表大小</span></pre></td></tr></table></figure><h1 id=\"导出表结构\"><a class=\"anchor\" href=\"#导出表结构\">#</a> 导出表结构</h1>\n<p>上面的结构，只是说明导出表在哪里，有多大，并不是真正的导出表.</p>\n<p>如何在 FileBuffer 中找到这个结构呢？在 VirtualAddress 中存储的是 RVA, 如果想在 FileBuffer 中定位</p>\n<p>必须要先将该 RVA 转换成 FOA.</p>\n<p>真正的导出表结构如下：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<ol>\n<li>由函数名字导出函数地址流程</li>\n</ol>\n<blockquote>\n<p>例如：函数名字为<strong> test</strong>，先查找 AddressOfNames (导出函数名称表)，这里面存储的是<strong>指向</strong>每个拥有名字的函数的函数名字的<strong> RVA</strong>, 如果表中索引为<strong> 2</strong> 的地址指向的是函数名字，那么就会用这个<strong> 2</strong> 查找 AddressOfNameOrdinals (导出函数序号表) 中索引为 2 的值，如果这个值为<strong> 4</strong>，则会在 AddressOfFunctions (导出函数地址表中) 查找索引为<strong> 4</strong> 的值，这个值就是函数地址的 RVA。此过程可逆。</p>\n</blockquote>\n<ol start=\"2\">\n<li>由序号导出函数地址流程</li>\n</ol>\n<blockquote>\n<p>如果这个序号是<strong> 10</strong>，则直接用<strong> 10</strong> 减去<strong> Base</strong> 得到一个值，这个值就是 AddressOfFunctions (导出函数地址表中) 中的索引，其对应的值就是函数地址的 RVA。</p>\n</blockquote>\n<p><strong>导出序号表中的值加上 Base 就是 dll 或其他 PE 文件中的导出序号了。</strong></p>\n<p>其中 Name 指向的字符串是以 00 结尾的。<br />\nExport Table 的偏移量为： <code>e_lfanew+0x078</code> <br />\nNumberOfFunction 的值并不准确，它的计算结果为： <code>最大的导出序号值减去最小的导出序号值然后再加一</code></p>\n<h1 id=\"addressoffunctions说明\"><a class=\"anchor\" href=\"#addressoffunctions说明\">#</a> AddressOfFunctions 说明：</h1>\n<p>该表中元素宽度为 4 个字节</p>\n<p>该表中存储所有导出函数的地址</p>\n<p>该表中个数由 NumberOfFunctions 决定</p>\n<p>该表项中的值是 RVA, 加上 ImageBase 才是函数真正的地址</p>\n<p>定位：</p>\n<p>IMAGE_EXPORT_DIRECTORY-&gt;AddressOfFunctions 中存储的是该表的 RVA 需要先转换成 FOA</p>\n<h1 id=\"addressofnames说明\"><a class=\"anchor\" href=\"#addressofnames说明\">#</a> AddressOfNames 说明：</h1>\n<p>该表中元素宽度为 4 个字节</p>\n<p>该表中存储所有以名字导出函数的名字的 RVA</p>\n<p>该表项中的值是 RVA, 指向函数真正的名称</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"addressofnameordinals\"><a class=\"anchor\" href=\"#addressofnameordinals\">#</a> AddressOfNameOrdinals</h1>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结：</h1>\n<p>为什么要分成 3 张表？</p>\n<p>1、函数导出的个数与函数名的个数未必一样。所以要将函数地址表和函数名称表分开.</p>\n<p>2、函数地址表是不是一定大于函数名称表？</p>\n<p>未必，一个相同的函数地址，可能有多个不同的名字.</p>\n<p>3、如何根据函数的名字获取一个函数的地址？</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>4、如何根据函数的导出序号获取一个函数的地址？</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h1 id=\"记一次查找导出表的过程\"><a class=\"anchor\" href=\"#记一次查找导出表的过程\">#</a> 记一次查找导出表的过程</h1>\n<p>以滴水教程中的 DLL 为例。</p>\n<h2 id=\"查看sectionalignment和filealignment的值\"><a class=\"anchor\" href=\"#查看sectionalignment和filealignment的值\">#</a> 查看 SectionAlignment 和 FileAlignment 的值</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SectionAlignment：           <span class=\"token punctuation\">[</span>地址<span class=\"token punctuation\">(</span>RAW<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token number\">0x00000118</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>长度<span class=\"token operator\">:</span><span class=\"token number\">04</span>h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>偏移量<span class=\"token operator\">:</span>e_lfanew<span class=\"token operator\">+</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>数据<span class=\"token operator\">:</span><span class=\"token number\">0x00001000</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>内存中的节<span class=\"token punctuation\">(</span>块<span class=\"token string\">\"Section\"</span><span class=\"token punctuation\">)</span>的对齐值<span class=\"token punctuation\">,</span>常为<span class=\"token operator\">:</span><span class=\"token number\">0x1000</span>或<span class=\"token number\">0x04.</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>FileAlignment：              <span class=\"token punctuation\">[</span>地址<span class=\"token punctuation\">(</span>RAW<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token number\">0x0000011c</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>长度<span class=\"token operator\">:</span><span class=\"token number\">04</span>h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>偏移量<span class=\"token operator\">:</span>e_lfanew<span class=\"token operator\">+</span><span class=\"token number\">0x3C</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>数据<span class=\"token operator\">:</span><span class=\"token number\">0x00001000</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>文件中的节<span class=\"token punctuation\">(</span>块<span class=\"token string\">\"Section\"</span><span class=\"token punctuation\">)</span>的对齐值<span class=\"token punctuation\">,</span>常为<span class=\"token operator\">:</span><span class=\"token number\">0x1000</span>或<span class=\"token number\">0x200</span>或<span class=\"token number\">0x04.</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>发现都是 <code>0x1000</code> 。</p>\n<h2 id=\"查找导出表\"><a class=\"anchor\" href=\"#查找导出表\">#</a> 查找导出表</h2>\n<p>查找数据目录中第一个结构体的位置</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>成员<span class=\"token punctuation\">]</span>             <span class=\"token punctuation\">[</span>地址<span class=\"token punctuation\">(</span>RAW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\t       <span class=\"token punctuation\">[</span>偏移量<span class=\"token punctuation\">]</span>         <span class=\"token punctuation\">[</span>数据<span class=\"token operator\">:</span>RVA<span class=\"token punctuation\">]</span>       <span class=\"token punctuation\">[</span>大小<span class=\"token punctuation\">]</span>         <span class=\"token punctuation\">[</span>说明<span class=\"token punctuation\">]</span>                   <span class=\"token punctuation\">[</span>结构<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Export Table：              <span class=\"token number\">0x00000158</span>     <span class=\"token punctuation\">[</span>e_lfanew<span class=\"token operator\">+</span><span class=\"token number\">0x078</span><span class=\"token punctuation\">]</span>     <span class=\"token number\">0x0002DF10</span>     <span class=\"token number\">0x00000196</span>     <span class=\"token punctuation\">[</span> 导出表 <span class=\"token punctuation\">]</span>     <span class=\"token punctuation\">[</span>IMAGE_DIRECTORY_ENTRY_EXPORT<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>可以看到导出表的位置为 0x0002DF10，大小为 0x196<br />\n<img data-src=\"image007.png\" alt=\"\" /></p>\n<h2 id=\"分析导出表信息\"><a class=\"anchor\" href=\"#分析导出表信息\">#</a> 分析导出表信息</h2>\n<pre><code>0002DF10:  00 00 00 00 FD F8 94 60 00 00 00 00 60 DF 02 00  .....`....`?.\n0002DF20:  01 00 00 00 04 00 00 00 04 00 00 00 38 DF 02 00  ............8?.\n0002DF30:  48 DF 02 00 58 DF 02 00 14 10 00 00 0F 10 00 00  H?.X?.........\n0002DF40:  0A 10 00 00 05 10 00 00 70 DF 02 00 77 DF 02 00  ........p?.w?.\n0002DF50:  7E DF 02 00 86 DF 02 00 00 00 01 00 02 00 03 00  ~?..?.........\n0002DF60:  32 30 32 31 5F 30 35 5F 30 37 33 2E 64 6C 6C 00  2021_05_073.dll.\n0002DF70:  5F 44 69 76 40 38 00 5F 4D 75 6C 40 38 00 5F 50  _Div@8._Mul@8._P\n0002DF80:  6C 75 73 40 38 00 5F 53 75 62 40 38 00 00 00 00  lus@8._Sub@8....\n0002DF90:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002DFA0:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002DFB0:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002DFC0:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002DFD0:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002DFE0:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002DFF0:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E000:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E010:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E020:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E030:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E040:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E050:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E060:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E070:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E080:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E090:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0002E0A0:  00 00 00 00 00 00                                ......          \n</code></pre>\n<p>数据</p>\n<pre><code>-&gt;Export Table\n   Characteristics:        0x00000000\n   TimeDateStamp:          0x6094F8FD  (GMT: Fri May 07 08:23:25 2021)\n   MajorVersion:           0x0000\n   MinorVersion:           0x0000  -&gt; 0.00\n   Name:                   0x0002DF60  (&quot;2021_05_073.dll&quot;)\n   Base:                   0x00000001\n   NumberOfFunctions:      0x00000004\n   NumberOfNames:          0x00000004\n   AddressOfFunctions:     0x0002DF38\n   AddressOfNames:         0x0002DF48\n   AddressOfNameOrdinals:  0x0002DF58\n\n   Ordinal RVA        Symbol Name\n   ------- ---------- ----------------------------------\n   0x0001  0x00001014 &quot;_Div@8&quot;\n   0x0002  0x0000100F &quot;_Mul@8&quot;\n   0x0003  0x0000100A &quot;_Plus@8&quot;\n   0x0004  0x00001005 &quot;_Sub@8&quot;\n</code></pre>\n",
            "tags": [
                "导出表"
            ]
        }
    ]
}