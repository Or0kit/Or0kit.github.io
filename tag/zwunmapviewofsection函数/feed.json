{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"zwunmapviewofsection函数\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Win32/%E5%8A%A0%E5%AF%86%E5%A3%B3%E7%BB%83%E4%B9%A0%E9%A1%B9%E7%9B%AE/",
            "url": "https://or0kit.github.io/Bin/Win32/%E5%8A%A0%E5%AF%86%E5%A3%B3%E7%BB%83%E4%B9%A0%E9%A1%B9%E7%9B%AE/",
            "title": "加密壳练习项目",
            "date_published": "2021-11-02T02:23:56.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>壳的编写一直以来都被认为是软件安全领域中教为高端的技术，但是实际上编写一个自己的壳并不是多么困难的事情，只要你理解 PE 结构并会写代码，那么写一个壳的过程其实就会变成一系列重复的数据处理工作。</p>\n<p>但是为什么非要自己编写这个看是毫无创意的工具呢？那是因为这会给你带来非常巨大的帮助。<br />\n具体总结如下：</p>\n<ul>\n<li>壳的原理与蠕虫病毒感染的原理基本一致，你可以在这个过程中学到很多东西。</li>\n<li>最重要的一点，你可以将自己的技术附加到壳上，使其具有与你相同的能力。比如免杀。</li>\n</ul>\n<h1 id=\"项目说明\"><a class=\"anchor\" href=\"#项目说明\">#</a> 项目说明</h1>\n<p><strong>傀儡进程加密壳 滴水三期课后作业</strong></p>\n<ul>\n<li>本项目是滴水三期视频的一个课后作业，是使用 <strong>傀儡进程</strong> 方法写的一个壳</li>\n<li>加壳程序的工作步骤如下</li>\n</ul>\n<ol>\n<li>获取 Shell 程序的路径</li>\n<li>获取 src 程序的路径</li>\n<li>将 src 程序读取到内存中，加密</li>\n<li>在 Shell 程序中新增一个节，并将加密后的 src 程序追加到 Shell 程序的新增节中</li>\n<li>加壳过程完毕</li>\n</ol>\n<ul>\n<li>\n<p>壳主体的工作步骤如下</p>\n<ol>\n<li>读取主模块的数据</li>\n<li>解密：得到原来的 PE 文件</li>\n<li>以挂起的形式创建进程：  <code>CreateProcess</code>  ，要创建的进程，就是壳子本身</li>\n<li>获取外壳程序的 Context，后面要用。</li>\n<li>卸载外壳程序的文件镜像 (ZwUnmapViewOfSection)。</li>\n<li>在指定的位置 (src 的 ImageBase) 申请指定大小 (src 的 SizeOfImage) 的内存 (VirtualAllocEx)。</li>\n<li>如果成功，将 Src 的 PE 文件拉伸 复制到该空间中。</li>\n<li>如果申请空间失败，但有重定位表就在任意位置申请 (src 的 SizeOfImage)，然后将 PE 文件拉伸、复制、修复重定位表。</li>\n<li>如果第 6 步申请空间失败，并且还没有重定位表，直接返回：失败。</li>\n<li>修改外壳程序的 Context:</li>\n</ol>\n<ul>\n<li>将 Context 的 ImageBase 改成 Src 的 ImageBase</li>\n<li>将 Context 的 OEP 改成 Src 的 OEP</li>\n</ul>\n<ol start=\"11\">\n<li>设置 Context 并恢复主线程</li>\n<li>终止外壳程序，解壳过程结束。</li>\n</ol>\n</li>\n</ul>\n<hr />\n<h2 id=\"zwunmapviewofsection函数\"><a class=\"anchor\" href=\"#zwunmapviewofsection函数\">#</a> ZwUnmapViewOfSection 函数</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>NTSTATUS   <span class=\"token function\">ZwUnmapViewOfSection</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    IN HANDLE  ProcessHandle<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    IN PVOID  BaseAddress    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>ZwUnmapViewOfSection</code>  这个函数在 wdm.h 里声明，它的功能是卸载进程的内存镜像（Image Buffer），内存镜像是指进程 4GB 虚拟地址空间中从  <code>ImageBase</code>  开始，长度为  <code>SizeOfImage</code>  的内存。</p>\n<p>卸载内存镜像之后，就得到了一个 “干净” 的 4GB 空间，然后我们可以用  <code>VirtualAllocEx</code>  往里面填数据，比如换成其他程序的内存镜像。</p>\n<p>这样做的意义就是我们可以从内存中启动一个程序，而不用涉及磁盘读写，因为常规的 CreateProcess 必须指定程序路径，而利用这种技术可以避免这一点。</p>\n<h1 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h1>\n<p>要加壳的源程序简称：SRC<br />\n 壳称为：Shell</p>\n<h2 id=\"加壳程序\"><a class=\"anchor\" href=\"#加壳程序\">#</a> 加壳程序</h2>\n<p>给 Shell 程序新增一个节，并把 SRC 的二进制数据加密添加到 Shell 程序的新增节中。</p>\n<p>也可以把 Shell 程序所有节合并，或者扩大节……</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>Packer.cpp</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Head.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 获取壳程序的路径与源程序路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">char</span> szShellPath<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">char</span> szSrcPath<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tLPVOID pFileBuffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tPIMAGE_NT_HEADERS32 pNTHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tLPVOID pFileBuffer_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tPIMAGE_DOS_HEADER pDosHeader_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tPIMAGE_NT_HEADERS32 pNTHeader_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tPIMAGE_SECTION_HEADER pSectionHeader_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tDWORD file_size <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tDWORD file_size_src <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tLPVOID pNewFileBuffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">// 加壳后的程序保存的位置</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">char</span> file_path_out<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tFILE<span class=\"token operator\">*</span> fp_out<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]输入Shell程序的路径：\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> szShellPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+]输入将要加壳的程序的路径：\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> szSrcPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token comment\">// 读取要加壳的文件</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tfile_size <span class=\"token operator\">=</span> <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span>szShellPath<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pDosHeader<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pNTHeader<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pSectionHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token comment\">// 读取源文件</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tfile_size_src <span class=\"token operator\">=</span> <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span>szSrcPath<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pFileBuffer_src<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pDosHeader_src<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pNTHeader_src<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pSectionHeader_src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token comment\">// 新增节</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token function\">AddNewSec</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pNewFileBuffer<span class=\"token punctuation\">,</span> pFileBuffer<span class=\"token punctuation\">,</span> pDosHeader<span class=\"token punctuation\">,</span>pNTHeader<span class=\"token punctuation\">,</span> pSectionHeader<span class=\"token punctuation\">,</span>file_size<span class=\"token punctuation\">,</span> file_size_src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token comment\">// 对 pFileBuffer_src 进行加密</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token function\">Encipherment</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pFileBuffer_src<span class=\"token punctuation\">,</span> file_size_src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token comment\">// 复制到后面</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span>pNewFileBuffer <span class=\"token operator\">+</span> file_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tpFileBuffer_src<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tfile_size_src</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>file_path_out<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加壳已完成，请输入要保存的位置：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> file_path_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token comment\">// 写入文件</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tfp_out <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span>file_path_out<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span>fp_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span>pNewFileBuffer<span class=\"token punctuation\">,</span> file_size <span class=\"token operator\">+</span> file_size_src<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> fp_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>Head.h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_CRT_SECURE_NO_WARNINGS</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">EXIT_ERROR</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>                                 </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">do</span>                                                </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#123;</span>                                                 </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\"error in line: %d\\n\"</span><span class=\"token expression\"><span class=\"token punctuation\">,</span> <span class=\"token constant\">__LINE__</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                    </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token expression\"><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>EXIT_FAILURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">MY_ASSERT</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>                         </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token expression\"><span class=\"token keyword\">do</span>                                       </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#123;</span>                                        </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token expression\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                            </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token expression\"><span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\"ASSERTION failed!\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token expression\"><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/// 把 PE 文件读取到内存中</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"file_in\">PE 文件的路径 & lt;/param></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pFileBuffer\"> 返回文件状态的 FileBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pDosHeader\"> 返回 DOS 头 DosHeader&lt;/param></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pNTHeader\"> 返回 NT 头 pNTHeader&lt;/param></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pSectionHeader\"> 返回节表头 pSectionHeader&lt;/param></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">/// &lt;returns>PE 文件的大小 & lt;/returns></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>DWORD <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    IN LPSTR file_in<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    OUT LPVOID <span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    OUT PIMAGE_DOS_HEADER <span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    OUT PIMAGE_NT_HEADERS32 <span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    OUT PIMAGE_SECTION_HEADER <span class=\"token operator\">*</span>pSectionHeader</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">/// 计算对齐，如偏移为 900，对齐为 1000h，返回 1000h</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwOffset\"> 偏移 & lt;/param></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwAlign\"> 对齐 & lt;/param></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 对齐后的值 & lt;/returns></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>DWORD <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>DWORD dwOffset<span class=\"token punctuation\">,</span> DWORD dwAlign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">/// 移动 NT 头</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pBuffer\">PE 文件的 pBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 前移了多少字节 & lt;/returns></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>DWORD <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span>LPVOID pBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">/// 为 PE 文件新增一个节</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pNewFileBuffer\"> 返回新的文件状态的 pNewFileBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pFileBuffer\"> 文件状态的 FileBuffer&lt;/param></span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"file_size\">PE 文件的大小 & lt;/param></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwAddSize\"> 新增节的大小 & lt;/param></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 新增节在 pNewFileBuffer 中的地址 & lt;/returns></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>VOID <span class=\"token function\">AddNewSec</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    OUT LPVOID<span class=\"token operator\">*</span> pNewFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    IN LPVOID pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    IN PIMAGE_DOS_HEADER pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    IN PIMAGE_NT_HEADERS32 pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    IN PIMAGE_SECTION_HEADER pSectionHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    IN DWORD file_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    IN DWORD dwAddSize</pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\">/// 使每个字节与 0xEC 进行异或运算并 + 0xF0</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"pFileBuffer\"> 需要加密的 Buffer&lt;/param></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dwSize\">Buffer 的大小 & lt;/param></span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\">/// &lt;returns > 返回加密后的 Buffer&lt;/returns></span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>VOID <span class=\"token function\">Encipherment</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    IN LPVOID<span class=\"token operator\">*</span> pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    IN DWORD dwSize</pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p Head.cpp</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Head.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DWORD <span class=\"token function\">ReadPEFile</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN LPSTR file_in<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tOUT LPVOID<span class=\"token operator\">*</span> pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tOUT PIMAGE_DOS_HEADER<span class=\"token operator\">*</span> pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tOUT PIMAGE_NT_HEADERS32<span class=\"token operator\">*</span> pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tOUT PIMAGE_SECTION_HEADER<span class=\"token operator\">*</span> pSectionHeader</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tFILE<span class=\"token operator\">*</span> fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tDWORD file_size <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tLPVOID t <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span>file_in<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fp == NULL!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfile_size <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">fseek</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_END</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfile_size <span class=\"token operator\">=</span> <span class=\"token function\">ftell</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">fseek</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEEK_SET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tt <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>file_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> file_size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> t <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fread error or malloc error!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token operator\">*</span>pFileBuffer <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token operator\">*</span>pDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>e_magic <span class=\"token operator\">==</span> IMAGE_DOS_SIGNATURE</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token operator\">*</span>pNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pDosHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>FileHeader<span class=\"token punctuation\">.</span>SizeOfOptionalHeader <span class=\"token operator\">!=</span> <span class=\"token number\">0xe0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is not a 32-bit executable file.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token operator\">*</span>pSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_NT_SIGNATURE<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNTHeader<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>FileHeader<span class=\"token punctuation\">.</span>SizeOfOptionalHeader</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">return</span> file_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>DWORD <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>DWORD dwOffset<span class=\"token punctuation\">,</span> DWORD dwAlign<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">// 如果偏移小于对齐，向上取整</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwOffset <span class=\"token operator\">&lt;=</span> dwAlign<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> dwAlign<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token comment\">// 如果偏移大于对齐且不能除尽，向上取整</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwOffset <span class=\"token operator\">%</span> dwAlign<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>dwOffset <span class=\"token operator\">/</span> dwAlign <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> dwAlign<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">// 如果能除尽，直接返回 offset</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token keyword\">return</span> dwOffset<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\">// 移动 NT 头</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">// 返回值是 前移了多少</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>DWORD <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span>LPVOID pBuffer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tPIMAGE_DOS_HEADER\t\t\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tPIMAGE_NT_HEADERS\t\t\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tPIMAGE_FILE_HEADER\t\t\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tPIMAGE_SECTION_HEADER\t\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tLPVOID\t\tpDst <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tDWORD\t\tdwRet <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tDWORD\t\tdwSize <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tLPVOID\t\tpSrc <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span>pBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\tpDst <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NT 头插入点</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\tdwRet <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pNTHeader <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDst<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回地址减小的值</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\tdwSize <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader <span class=\"token operator\">+</span> \\</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动的字节数</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\tpSrc <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pSrc <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分配内存失败\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pSrc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pNTHeader<span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 保存要复制的数据</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span>pNTHeader<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 清空原数据</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pDst<span class=\"token punctuation\">,</span> pSrc<span class=\"token punctuation\">,</span> dwSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动数据</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\tpDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新 e_lfanew</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token keyword\">return</span> dwRet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>VOID <span class=\"token function\">AddNewSec</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\tOUT LPVOID<span class=\"token operator\">*</span> pNewFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\tIN LPVOID pFileBuffer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tIN PIMAGE_DOS_HEADER pDosHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tIN PIMAGE_NT_HEADERS32 pNTHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\tIN PIMAGE_SECTION_HEADER pSectionHeader<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\tIN DWORD file_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\tIN DWORD dwAddSize</pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\tPIMAGE_FILE_HEADER\t\t\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\tPIMAGE_OPTIONAL_HEADER32\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\tPWORD\t\t\t\t\t\tpNumberOfSections <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\tPIMAGE_SECTION_HEADER\t\tpLastSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\tPIMAGE_SECTION_HEADER\t\tpNewSectionHeader <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t<span class=\"token comment\">// 定义新增的节的名字</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t<span class=\"token keyword\">char</span> g_NameOfNewSectionHeader<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t<span class=\"token comment\">// 申请一个新的 FileBuffer 新增的大小为需要加壳的文件的大小</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t<span class=\"token operator\">*</span>pNewFileBuffer <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>file_size <span class=\"token operator\">+</span> dwAddSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token function\">MY_ASSERT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> file_size <span class=\"token operator\">+</span> dwAddSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">,</span> pFileBuffer<span class=\"token punctuation\">,</span> file_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t<span class=\"token comment\">// 判断节表后的空白区是否足够 80 字节，若不够则移动 NT 头</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pOptionHeader<span class=\"token operator\">-></span>SizeOfHeaders <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>PBYTE<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>pSectionHeader<span class=\"token punctuation\">[</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\tDWORD dwRet <span class=\"token operator\">=</span> <span class=\"token function\">MoveNTHeaderAndSectionHeadersToDosStub</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"节表空间不足，NT头和节表向低地址移动了 %d 字节\\n\"</span><span class=\"token punctuation\">,</span> dwRet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dwRet <span class=\"token operator\">&lt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t\t<span class=\"token function\">EXIT_ERROR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动后仍没有足够的80字节空间插入新节表\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t<span class=\"token comment\">// 更新指针</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\tpDosHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_DOS_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pNewFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>\t\tpNTHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_NT_HEADERS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\tpFileHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pDosHeader <span class=\"token operator\">+</span> pDosHeader<span class=\"token operator\">-></span>e_lfanew <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\tpOptionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_OPTIONAL_HEADER32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pFileHeader <span class=\"token operator\">+</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>IMAGE_FILE_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>\t\tpSectionHeader <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PIMAGE_SECTION_HEADER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>pOptionHeader <span class=\"token operator\">+</span> pFileHeader<span class=\"token operator\">-></span>SizeOfOptionalHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t<span class=\"token comment\">// 在节表最后新增一个节表 并修正新增节表的属性</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\tpNumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pFileHeader<span class=\"token operator\">-></span>NumberOfSections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 节的数量</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\tpLastSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最后一个节表</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>\tpNewSectionHeader <span class=\"token operator\">=</span> pSectionHeader <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>pNumberOfSections<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新节表插入点</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>   <span class=\"token comment\">//1、Name: 名字随便修改，不能超过八个字节。</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Name<span class=\"token punctuation\">,</span> g_NameOfNewSectionHeader<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t<span class=\"token comment\">//2、VirtualSize : 申请的新节空间大小</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize <span class=\"token operator\">=</span> dwAddSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>\t<span class=\"token comment\">//3、VirtualAddress : 等于上一个节的 VirtualAddress + SizeOfRawData。 这个成员指定了这个节在内存哪里展开。所以需要修改。</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">=</span> <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>pLastSectionHeader<span class=\"token operator\">-></span>VirtualAddress <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">,</span>pOptionHeader<span class=\"token operator\">-></span>SectionAlignment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>\t<span class=\"token comment\">//4、SizeOfRawData：节在文件中对齐后的尺寸，可以和 VirtualSize 设置的一样。我们新增的节，自己需要在 PE 文件添加一段节数据，数据的大小按照文件对齐添加，并且填写到这个成员中。</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>SizeOfRawData <span class=\"token operator\">=</span> dwAddSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>\t<span class=\"token comment\">//5、PointerToRawData：等于上一个节的 PointerToRawData + SizeOfRawData。我们指定了内存中从哪里展开节。那么也需要指定这个节在文件中在哪里展开</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">=</span> pLastSectionHeader<span class=\"token operator\">-></span>PointerToRawData <span class=\"token operator\">+</span> pLastSectionHeader<span class=\"token operator\">-></span>SizeOfRawData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>\t<span class=\"token comment\">//6、PointerToRelocation：设置成零</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t<span class=\"token comment\">//7、PointerToLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>PointerToLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>\t<span class=\"token comment\">//8、NumberOfLineRelocations：设置成零</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfRelocations <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>\t<span class=\"token comment\">//9、NumberOfLineNumbers：设置成零</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>NumberOfLinenumbers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>\t<span class=\"token comment\">//10、Characteristics：块属性 </span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>\tpNewSectionHeader<span class=\"token operator\">-></span>Characteristics <span class=\"token operator\">=</span> <span class=\"token number\">0xE00000A0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>\t<span class=\"token comment\">// 修改标准 PE 头中节的数量</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>\tpFileHeader<span class=\"token operator\">-></span>NumberOfSections <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>pNumberOfSections <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>\t<span class=\"token comment\">// 修改 SizeOfImage 的大小</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>\tpOptionHeader<span class=\"token operator\">-></span>SizeOfImage <span class=\"token operator\">+=</span> <span class=\"token function\">Align</span><span class=\"token punctuation\">(</span>pNewSectionHeader<span class=\"token operator\">-></span>Misc<span class=\"token punctuation\">.</span>VirtualSize<span class=\"token punctuation\">,</span> pOptionHeader<span class=\"token operator\">-></span>SectionAlignment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>VOID <span class=\"token function\">Encipherment</span><span class=\"token punctuation\">(</span>IN LPVOID <span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">,</span> IN DWORD dwSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>DWORD i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dwSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>\t\t<span class=\"token comment\">// 注意运算符的优先级</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pFileBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>仅仅是把源程序读取到内存中，并使每个字节与 0x2 进行异或操作再加 0xF0。</p>\n<p>附异或操作：<br />\n即 “两个输入相同时为 0，不同则为 1”！</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">a</th>\n<th style=\"text-align:left\">b</th>\n<th style=\"text-align:left\">a⊕b</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0</td>\n</tr>\n</tbody>\n</table>\n<p>加密方法不是重点，既然是个壳那么就必须要对脱壳进行一定的防范。若只是为了文件免杀……</p>\n<p>把源程序的读取到内存中后，再移动其各种表至壳程序，使得壳程序与源程序紧密关联，若要脱壳则要付出更大的代价。 任晓珲在《黑客免杀攻防》一书中说一个设计到极致的壳其实就是一个 PE 融合程序，如果要将任意两个 PE 文件完全的合二为一，会涉及程序的引导、资源单的 HOOK、数据段的融合以及各个 PE 结构的融合（包括输入表、输出表、重定位表）等。<br />\n总而言之，PE 融合操作就是一种将两个 PE 文件完全拆碎，然后再将其组装为一个新 PE 文件的操作，整个过程涉及的若干操作非常复杂，其技术价值前景也是个问题，若要在此方面花费大量时间研究……</p>\n<h2 id=\"壳程序\"><a class=\"anchor\" href=\"#壳程序\">#</a> 壳程序</h2>\n<pre><code class=\"language-c\">\n</code></pre>\n<pre><code class=\"language-c\">\n</code></pre>\n<pre><code class=\"language-c\">\n</code></pre>\n",
            "tags": [
                "傀儡进程加密壳",
                "ZwUnmapViewOfSection函数"
            ]
        }
    ]
}