{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"消息队列与线程\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-02%E7%AA%97%E5%8F%A3%E4%B8%8E%E7%BA%BF%E7%A8%8B/",
            "url": "https://or0kit.github.io/Bin/Core/WindowsXp/MessageMechanism/%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-02%E7%AA%97%E5%8F%A3%E4%B8%8E%E7%BA%BF%E7%A8%8B/",
            "title": "消息机制-02窗口与线程",
            "date_published": "2022-04-21T07:17:09.000Z",
            "content_html": "<h1 id=\"楔子\"><a class=\"anchor\" href=\"#楔子\">#</a> 楔子</h1>\n<p>在上一节中我们弄清楚了消息队列与线程的关系：</p>\n<p><strong>一个 GUI 线程对应着一个消息队列</strong></p>\n<p>本节要解决的问题：</p>\n<p>1、消息从哪里来？</p>\n<p>2、消息到哪里去？</p>\n<p>3、谁来做这些事情？</p>\n<h1 id=\"消息从哪里来\"><a class=\"anchor\" href=\"#消息从哪里来\">#</a> 消息从哪里来？</h1>\n<p>首先我们编写一个简单的窗口程序：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN HWND hwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN UINT uMsg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tIN WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tIN LPARAM lParam</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> uMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tHINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tHINSTANCE hPrevInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tLPSTR lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">int</span> nShowCmd</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 窗口的类名</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tTCHAR className<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"My First Window\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 创建一个自己的窗口</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tWNDCLASS wndclass <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span>COLOR_MENU<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpfnWndProc <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> className<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token comment\">// 注册</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token function\">RegisterClass</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wndclass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">// 创建窗口</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tclassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tWS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token number\">600</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\thInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hwnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token comment\">// 显示窗口</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token comment\">// 消息循环</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tMSG msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后用 VC6 自带的工具 Spy++ 捕捉消息。</p>\n<p>按以下步骤捕获消息：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>如图我们动一下鼠标键盘就会 产生许多消息。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>接下来用代码演示，程序发送消息：</p>\n<p>一个进程执行以下代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WindowProc</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tIN HWND hwnd<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tIN UINT uMsg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tIN WPARAM wParam<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tIN LPARAM lParam</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>uMsg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">0x401</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">MessageBoxA</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"接收到消息\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"新消息\"</span><span class=\"token punctuation\">,</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> uMsg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">int</span> APIENTRY <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tHINSTANCE hInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tHINSTANCE hPrevInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tLPSTR lpCmdLine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">int</span> nShowCmd</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">// 窗口的类名</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tTCHAR className<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"My First Window\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">// 创建一个自己的窗口</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tWNDCLASS wndclass <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span>COLOR_MENU<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpfnWndProc <span class=\"token operator\">=</span> WindowProc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> className<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\twndclass<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// 注册</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token function\">RegisterClass</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wndclass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token comment\">// 创建窗口</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tclassName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tWS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token number\">600</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\thInstance<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hwnd <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">// 显示窗口</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token comment\">// 消息循环</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tMSG msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>另一个进程执行以下代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">FindWindow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My First Window\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"我的第一个窗口\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> <span class=\"token number\">0x401</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结果：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h1 id=\"消息到哪里去了\"><a class=\"anchor\" href=\"#消息到哪里去了\">#</a> 消息到哪里去了</h1>\n<p><strong>最终去这个消息所对应的那个线程的消息队列。</strong></p>\n<ol>\n<li>当我们使用鼠标某个窗口进行点击与滑动时，都会产生一个消息，消息会进入当前窗口对应线程的消息队列中</li>\n<li>当我们编写程序时，并不会去特地启动两个线程去监控鼠标和键盘，w32k.sys 负责了这个事情</li>\n</ol>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>以下内容参考自 ReactOS 源码：</p>\n<blockquote>\n<p>当初始化  <code>win32k.sys</code>  这个模块时，会调用一个叫做  <code>InitInputImpl</code>  的函数<br />\n这个函数会启动两个线程，分别用来监控鼠标和键盘，这两个线程都是 0 环的线程<br />\n平时我们的电脑遭遇 “死机” 时，常常是屏幕动不了，鼠标还能动，这正式由于鼠标是有一个独立的线程在监控它的行动</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//FROM ReactOS v3.12</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">InitInputImpl</span><span class=\"token punctuation\">(</span>VOID<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   Status <span class=\"token operator\">=</span> <span class=\"token function\">PsCreateSystemThread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>RawInputThreadHandle<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 监控鼠标</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                 THREAD_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                 <span class=\"token operator\">&amp;</span>RawInputThreadId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                 RawInputThreadMain<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">DPRINT1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win32K: Failed to create raw thread.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   Status <span class=\"token operator\">=</span> <span class=\"token function\">PsCreateSystemThread</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>KeyboardThreadHandle<span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">// 监控键盘</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                 THREAD_ALL_ACCESS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                 <span class=\"token operator\">&amp;</span>KeyboardThreadId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                                 KeyboardThreadMain<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                                 <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">NT_SUCCESS</span><span class=\"token punctuation\">(</span>Status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token function\">DPRINT1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win32K: Failed to create keyboard thread.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我在 xp 源码中并未找到。。</p>\n<h1 id=\"如何通过窗口找到消息队列\"><a class=\"anchor\" href=\"#如何通过窗口找到消息队列\">#</a> 如何通过窗口找到消息队列</h1>\n<p>如下图： 我们发现有十几个窗口，当我们在一个窗口上点击的时候，负责鼠标消息的这个线程是如何知道我们点击的是哪一个窗口呢？<br />\n换句话说就是，它是如何通过这个窗口找到对应的线程的呢？</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>我们想解决这些问题，首先要明白窗口是谁画的，窗口在哪里？</p>\n<h2 id=\"窗口是谁画的\"><a class=\"anchor\" href=\"#窗口是谁画的\">#</a> 窗口是谁画的？</h2>\n<p>分析：  <code>CreateWindow</code></p>\n<p>当调用 CreateWindow 时，该函数实际上是一个宏，其 CreateWindowA 实际对应 CreateWindowExA 函数，CreateWindowW 对应 CreateWindowExW 函数。</p>\n<p>在 VS 中查看：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">CreateWindowA</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token expression\"><span class=\"token function\">CreateWindowExA</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">CreateWindowW</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token expression\"><span class=\"token function\">CreateWindowExW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> lpClassName<span class=\"token punctuation\">,</span> lpWindowName<span class=\"token punctuation\">,</span> dwStyle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token expression\">nWidth<span class=\"token punctuation\">,</span> nHeight<span class=\"token punctuation\">,</span> hWndParent<span class=\"token punctuation\">,</span> hMenu<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> lpParam<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">UNICODE</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CreateWindow</span>  <span class=\"token expression\">CreateWindowW</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">CreateWindow</span>  <span class=\"token expression\">CreateWindowA</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// !UNICODE</span></span></pre></td></tr></table></figure><p>在 IDA 中查看:</p>\n<p>发现不管是  <code>CreateWindowExA</code>  还是  <code>CreateWindowExW</code>  都是直接调用了  <code>__CreateWindowEx</code></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>text:77D2E4A9 ; HWND __stdcall CreateWindowExA(DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.text:77D2E4A9                 public _CreateWindowExA@48</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>.text:77D2E4A9 _CreateWindowExA@48 proc near           ; CODE XREF: DefMDIChildProcWorker(x,x,x,x,x)-3EA↓p</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.text:77D2E4A9                                         ; CreateMDIWindowA(x,x,x,x,x,x,x,x,x,x)+27↓p ...</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.text:77D2E4A9</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>.text:77D2E4A9 dwExStyle       &#x3D; dword ptr  8</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>.text:77D2E4A9 lpClassName     &#x3D; dword ptr  0Ch</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>.text:77D2E4A9 lpWindowName    &#x3D; dword ptr  10h</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>.text:77D2E4A9 dwStyle         &#x3D; dword ptr  14h</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>.text:77D2E4A9 X               &#x3D; dword ptr  18h</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>.text:77D2E4A9 Y               &#x3D; dword ptr  1Ch</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>.text:77D2E4A9 nWidth          &#x3D; dword ptr  20h</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>.text:77D2E4A9 nHeight         &#x3D; dword ptr  24h</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>.text:77D2E4A9 hWndParent      &#x3D; dword ptr  28h</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>.text:77D2E4A9 hMenu           &#x3D; dword ptr  2Ch</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>.text:77D2E4A9 hInstance       &#x3D; dword ptr  30h</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>.text:77D2E4A9 lpParam         &#x3D; dword ptr  34h</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>.text:77D2E4A9</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>.text:77D2E4A9                 mov     edi, edi</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>.text:77D2E4AB                 push    ebp</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>.text:77D2E4AC                 mov     ebp, esp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>.text:77D2E4AE                 push    40000001h       ; int</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>.text:77D2E4B3                 push    [ebp+lpParam]   ; int</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>.text:77D2E4B6                 push    [ebp+hInstance] ; int</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>.text:77D2E4B9                 push    [ebp+hMenu]     ; int</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>.text:77D2E4BC                 push    [ebp+hWndParent] ; int</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>.text:77D2E4BF                 push    [ebp+nHeight]   ; int</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>.text:77D2E4C2                 push    [ebp+nWidth]    ; int</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>.text:77D2E4C5                 push    [ebp+Y]         ; int</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>.text:77D2E4C8                 push    [ebp+X]         ; int</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>.text:77D2E4CB                 push    [ebp+dwStyle]   ; int</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>.text:77D2E4CE                 push    [ebp+lpWindowName] ; String</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>.text:77D2E4D1                 push    [ebp+lpClassName] ; MultiByteString</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>.text:77D2E4D4                 push    [ebp+dwExStyle] ; char</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>.text:77D2E4D7                 call    __CreateWindowEx@52 ; _CreateWindowEx(x,x,x,x,x,x,x,x,x,x,x,x,x)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>.text:77D2E4DC                 pop     ebp</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>.text:77D2E4DD                 retn    30h ; &#39;0&#39;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>.text:77D2E4DD _CreateWindowExA@48 endp</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>.text:77D2D0A3 ; HWND __stdcall CreateWindowExW(DWORD dwExStyle, LPCWSTR lpClassName, LPCWSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.text:77D2D0A3                 public _CreateWindowExW@48</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>.text:77D2D0A3 _CreateWindowExW@48 proc near           ; CODE XREF: DefMDIChildProcWorker(x,x,x,x,x):loc_77D30688↓p</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.text:77D2D0A3                                         ; CreateMDIWindowW(x,x,x,x,x,x,x,x,x,x)+27↓p ...</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.text:77D2D0A3</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>.text:77D2D0A3 dwExStyle       &#x3D; dword ptr  8</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>.text:77D2D0A3 lpClassName     &#x3D; dword ptr  0Ch</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>.text:77D2D0A3 lpWindowName    &#x3D; dword ptr  10h</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>.text:77D2D0A3 dwStyle         &#x3D; dword ptr  14h</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>.text:77D2D0A3 X               &#x3D; dword ptr  18h</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>.text:77D2D0A3 Y               &#x3D; dword ptr  1Ch</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>.text:77D2D0A3 nWidth          &#x3D; dword ptr  20h</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>.text:77D2D0A3 nHeight         &#x3D; dword ptr  24h</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>.text:77D2D0A3 hWndParent      &#x3D; dword ptr  28h</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>.text:77D2D0A3 hMenu           &#x3D; dword ptr  2Ch</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>.text:77D2D0A3 hInstance       &#x3D; dword ptr  30h</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>.text:77D2D0A3 lpParam         &#x3D; dword ptr  34h</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>.text:77D2D0A3</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>.text:77D2D0A3                 mov     edi, edi</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>.text:77D2D0A5                 push    ebp</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>.text:77D2D0A6                 mov     ebp, esp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>.text:77D2D0A8                 push    40000000h       ; int</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>.text:77D2D0AD                 push    [ebp+lpParam]   ; int</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>.text:77D2D0B0                 push    [ebp+hInstance] ; int</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>.text:77D2D0B3                 push    [ebp+hMenu]     ; int</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>.text:77D2D0B6                 push    [ebp+hWndParent] ; int</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>.text:77D2D0B9                 push    [ebp+nHeight]   ; int</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>.text:77D2D0BC                 push    [ebp+nWidth]    ; int</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>.text:77D2D0BF                 push    [ebp+Y]         ; int</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>.text:77D2D0C2                 push    [ebp+X]         ; int</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>.text:77D2D0C5                 push    [ebp+dwStyle]   ; int</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>.text:77D2D0C8                 push    [ebp+lpWindowName] ; String</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>.text:77D2D0CB                 push    [ebp+lpClassName] ; MultiByteString</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>.text:77D2D0CE                 push    [ebp+dwExStyle] ; char</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>.text:77D2D0D1                 call    __CreateWindowEx@52 ; _CreateWindowEx(x,x,x,x,x,x,x,x,x,x,x,x,x)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>.text:77D2D0D6                 pop     ebp</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>.text:77D2D0D7                 retn    30h ; &#39;0&#39;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>.text:77D2D0D7 _CreateWindowExW@48 endp</pre></td></tr></table></figure><p>查看  <code>__CreateWindowEx</code> :</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<p>发现其主要调用了  <code>VerNtUserCreateWindowEx</code></p>\n<p>接着查看：</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>发现其主要调用了  <code>NtUserCreateWindowEx</code></p>\n<p>查看  <code>NtUserCreateWindowEx</code>  发现其通过系统调用进 0 环了</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>.text:77D2E37D ; __stdcall NtUserCreateWindowEx(x, x, x, x, x, x, x, x, x, x, x, x, x, x, x)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>.text:77D2E37D _NtUserCreateWindowEx@60 proc near      ; CODE XREF: VerNtUserCreateWindowEx(x,x,x,x,x,x,x,x,x,x,x,x,x)+158↑p</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>.text:77D2E37D                 mov     eax, 1157h</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.text:77D2E382                 mov     edx, 7FFE0300h</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>.text:77D2E387                 call    dword ptr [edx]</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>.text:77D2E389                 retn    3Ch ; &#39;&lt;&#39;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>.text:77D2E389 _NtUserCreateWindowEx@60 endp</pre></td></tr></table></figure><p>所以窗口是 0 环画的。</p>\n<h2 id=\"窗口对象\"><a class=\"anchor\" href=\"#窗口对象\">#</a> 窗口对象</h2>\n<p>窗口在内核同样也有一个对应的结构。</p>\n<p>通过分析 XP 的源码观察  <code>CreateWindow</code>  窗口的创建过程，发现其涉及了好多结构体。</p>\n<p>以下是我在 XP 源码中的发现：<br />\n从此函数开始：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>PTHREADINFO <span class=\"token function\">PtiCurrent</span><span class=\"token punctuation\">(</span>VOID<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">ConnectIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>PTHREADINFO<span class=\"token punctuation\">)</span><span class=\"token function\">NtCurrentTebShared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span>Win32ThreadInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagTHREADINFO</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    W32THREAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//***************************************** begin: USER specific fields</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    PTL             ptl<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// Listhead for thread lock list</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    PPROCESSINFO    ppi<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// process info struct for this thread</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    PQ              pq<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// keyboard and mouse input queue</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    PKL             spklActive<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// active keyboard layout for this thread</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    PCLIENTTHREADINFO pcti<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Info that must be visible from client</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    PDESKTOP        rpdesk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    PDESKTOPINFO    pDeskInfo<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// Desktop info visible to client</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    PCLIENTINFO     pClientInfo<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Client info stored in TEB</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    DWORD           TIF_flags<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// TIF_ flags go here.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    PUNICODE_STRING pstrAppName<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Application module name.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    PSMS            psmsSent<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Most recent SMS this thread has sent</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    PSMS            psmsCurrent<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Received SMS this thread is currently processing</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    PSMS            psmsReceiveList<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// SMSs to be processed</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    LONG            timeLast<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Time and ID of last message</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    ULONG_PTR       idLast<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">int</span>             exitCode<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    HDESK           hdesk<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// Desktop handle</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">int</span>             cPaintsReady<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    UINT            cTimersReady<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    PMENUSTATE      pMenuState<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">union</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        PTDB            ptdb<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Win16Task Schedule data for WOW thread</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        PWINDOWSTATION  pwinsta<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Window station for SYSTEM thread</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    PSVR_INSTANCE_INFO psiiList<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// thread DDEML instance list</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    DWORD           dwExpWinVer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    DWORD           dwCompatFlags<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// The Win 3.1 Compat flags</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    DWORD           dwCompatFlags2<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// new DWORD to extend compat flags for NT5+ features</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    PQ              pqAttach<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// calculation variabled used in</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                                        <span class=\"token comment\">// zzzAttachThreadInput()</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    PTHREADINFO     ptiSibling<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// pointer to sibling thread info</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    PMOVESIZEDATA   pmsd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    DWORD           fsHooks<span class=\"token punctuation\">;</span>                <span class=\"token comment\">// WHF_ Flags for which hooks are installed</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    PHOOK           sphkCurrent<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Hook this thread is currently processing</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    PSBTRACK        pSBTrack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    HANDLE          hEventQueueClient<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    PKEVENT         pEventQueueServer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    LIST_ENTRY      PtiLink<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Link to other threads on desktop</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">int</span>             iCursorLevel<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// keep track of each thread's level</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    POINT           ptLast<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Position of last message</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    PWND            spwndDefaultIme<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Default IME Window for this thread</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    PIMC            spDefaultImc<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Default input context for this thread</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    HKL             hklPrev<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Previous active keyboard layout</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">int</span>             cEnterCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    MLIST           mlPost<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// posted message list.</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    USHORT          fsChangeBitsRemoved<span class=\"token punctuation\">;</span><span class=\"token comment\">// Bits removed during PeekMessage</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    WCHAR           wchInjected<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// character from last VK_PACKET</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    DWORD           fsReserveKeys<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Keys that must be sent to the active</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                                        <span class=\"token comment\">// active console window.</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    PKEVENT        <span class=\"token operator\">*</span>apEvent<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Wait array for xxxPollAndWaitForSingleObject</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    ACCESS_MASK     amdesk<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Granted desktop access</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    UINT            cWindows<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// Number of windows owned by this thread</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    UINT            cVisWindows<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Number of visible windows on this thread</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    PHOOK           aphkStart<span class=\"token punctuation\">[</span>CWINHOOKS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Hooks registered for this thread</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    CLIENTTHREADINFO  cti<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// Use this when no desktop is available</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">GENERIC_INPUT</span></span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    HANDLE          hPrevHidData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">DBG</span></span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    UINT            cNestedCalls<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span> THREADINFO<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中  <code>W32THREAD</code></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// This is the header shared info for W32 threads.  It is followed by the</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// NtUser per thread information.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_W32THREAD</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    PETHREAD        pEThread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ULONG           RefCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    PTL             ptlW32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    KERNEL_PVOID    pgdiDcattr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    KERNEL_PVOID    pgdiBrushAttr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    KERNEL_PVOID    pUMPDObjs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    KERNEL_PVOID    pUMPDHeap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    ULONG           dwEngAcquireCount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    KERNEL_PVOID    pSemTable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    KERNEL_PVOID    pUMPDObj<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token function\">defined</span><span class=\"token punctuation\">(</span>_WIN64<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    KERNEL_PVOID    pProxyPort<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    KERNEL_PVOID    pClientID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span> W32THREAD<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> KPTR_MODIFIER PW32THREAD<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Extended structures for message thunking.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_CREATESTRUCTEX</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    CREATESTRUCT cs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    LARGE_STRING strName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    LARGE_STRING strClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CREATESTRUCTEX<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PCREATESTRUCTEX<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* WM_CREATE/WM_NCCREATE lParam struct */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagCREATESTRUCT</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> FAR<span class=\"token operator\">*</span> lpCreateParams<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    HINSTANCE hInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    HMENU     hMenu<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    HWND      hwndParent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span>       cy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span>       cx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span>       y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span>       x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    LONG      style<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    LPCSTR    lpszName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    LPCSTR    lpszClass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    DWORD     dwExStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span> CREATESTRUCT<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>通过分析  <code>xxxCreateWindowEx</code>  函数，最终发现窗口实例结构：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * sizeof(THROBJHEAD) must be equal to sizeof(PROCOBJHEAD)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * This is to make sure that DESKHEAD fields are always at the same offset.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_THROBJHEAD</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    HEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    PTHREADINFO pti<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span> THROBJHEAD<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> KPTR_MODIFIER PTHROBJHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_THRDESKHEAD</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    THROBJHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    DESKHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span> THRDESKHEAD<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>PTHRDESKHEAD<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">tagWND</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    THRDESKHEAD   head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    WW<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// WOW-USER common fields. Defined in wowuserp.h</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token comment\">// The presence of \"state\" at the start of this structure is</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token comment\">// assumed by the STATEOFFSET macro.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    PWND                 spwndNext<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Handle to the next window</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    PWND                 spwndPrev<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Handle to the previous window</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    PWND                 spwndParent<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Backpointer to the parent window.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    PWND                 spwndChild<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Handle to child</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    PWND                 spwndOwner<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Popup window owner field</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    RECT                 rcWindow<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Window outer rectangle</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    RECT                 rcClient<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Client rectangle</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    WNDPROC_PWND         lpfnWndProc<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Can be WOW address or standard address</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    PCLS                 pcls<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// Pointer to window class</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    KHRGN                hrgnUpdate<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Accumulated paint region</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    PPROPLIST            ppropList<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Pointer to property list</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    PSBINFO              pSBInfo<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Words used for scrolling</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    PMENU                spmenuSys<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Handle to system menu</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    PMENU                spmenu<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Menu handle or ID</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    KHRGN                hrgnClip<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Clipping region for this window</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    LARGE_UNICODE_STRING strName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">int</span>                  cbwndExtra<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Extra bytes in window</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    PWND                 spwndLastActive<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Last active in owner/ownee list</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    KHIMC                hImc<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// Associated input context handle</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    KERNEL_ULONG_PTR     dwUserData<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// Reserved for random application data</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">_ACTIVATION_CONTEXT</span>  <span class=\"token operator\">*</span> KPTR_MODIFIER pActCtx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">LAME_BUTTON</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    KERNEL_PVOID    pStackTrace<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Creation stack trace; used by lame</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                                       <span class=\"token comment\">// button.</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// LAME_BUTTON</span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span> WND<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这个就是窗口在内核对应的结构体</p>\n<h2 id=\"消息进入窗口消息队列的过程\"><a class=\"anchor\" href=\"#消息进入窗口消息队列的过程\">#</a> 消息进入窗口消息队列的过程</h2>\n<ol>\n<li>当使用鼠标在某个窗口上点击时，鼠标监控线程检测到点击的窗口对象</li>\n<li>根据窗口对象成员，找到窗口对应线程</li>\n<li>将消息放入该线程的消息队列中</li>\n</ol>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<ol>\n<li>窗口在 0 环创建</li>\n<li>窗口句柄是全局的</li>\n<li>一个线程可以使用多个窗口，但每个窗口只能属于一个线程</li>\n</ol>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTg4NDQ4L2FydGljbGUvZGV0YWlscy8xMTI4Mjc4MjI=\">https://blog.csdn.net/qq_41988448/article/details/112827822</span></p>\n",
            "tags": [
                "消息队列与线程"
            ]
        }
    ]
}