{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"edit\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Programming/MFC/MFC-03Edit%E7%BC%96%E8%BE%91%E6%A1%86%E6%8E%A7%E4%BB%B6/",
            "url": "https://or0kit.github.io/Programming/MFC/MFC-03Edit%E7%BC%96%E8%BE%91%E6%A1%86%E6%8E%A7%E4%BB%B6/",
            "title": "MFC-03Edit编辑框控件",
            "date_published": "2022-03-20T09:05:37.000Z",
            "content_html": "<h1 id=\"edit控件\"><a class=\"anchor\" href=\"#edit控件\">#</a> Edit 控件</h1>\n<h2 id=\"设置编辑框控件内的文本内容\"><a class=\"anchor\" href=\"#设置编辑框控件内的文本内容\">#</a> 设置编辑框控件内的文本内容</h2>\n<p>这些方法哪一个都可以：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"获取编辑框控件内的文本内容\"><a class=\"anchor\" href=\"#获取编辑框控件内的文本内容\">#</a> 获取编辑框控件内的文本内容</h2>\n<p>这些方法都可以：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h2 id=\"编辑框控件的属性介绍\"><a class=\"anchor\" href=\"#编辑框控件的属性介绍\">#</a> 编辑框控件的属性介绍</h2>\n<p>a、让编辑框文本为只读模式；<br />\nb、让编辑框文本为密码模式；<br />\nd、让编辑框支持多行显示，即：自动换行；<br />\ne、让编辑框显示滚动条；<br />\nf、让编辑框只能接受数字输入；<br />\ng、让编辑框只能输入指定范围的数组；</p>\n<p>以上这些属性都可以在编辑框的属性中设置。</p>\n<p>但如果还有其他方面的限制要求，那只能是利用接下来要讲解的事件通知的方式来处理了。</p>\n<h2 id=\"事件通知\"><a class=\"anchor\" href=\"#事件通知\">#</a> 事件通知</h2>\n<p>先认识两个消息事件。</p>\n<p><code>EN_CHANGE</code>  : 当编辑框中的文本被修改，新的文本显示之 “后” 发送此消息<br />\n <code>EN_UPDATE</code>  : 当编辑框中的文本被修改，新的文本显示之 “前” 发送此消息</p>\n<p>当编辑框内的文本内容发生变化时通知我，响应  <code>EN_CHANGE</code>  事件；</p>\n<p>添加事件处理程序：</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>这是一个非常常用是消息事件，下面我们利用它来实现一些功能。</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使文本框中只能写入 ABC </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>BOOL flag <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>CString str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">GetWindowText</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">GetLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 不等于的话就把文字给替换了</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    flag <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    str<span class=\"token punctuation\">.</span><span class=\"token function\">SetAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  str<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">SetWindowText</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>因为  <code>SetWindowText</code>  函数会触发  <code>EN_CHANGE</code>  消息，所以要加一个判断的标志，判断是否需要替换。</p>\n<h2 id=\"编辑框控件的长度限制\"><a class=\"anchor\" href=\"#编辑框控件的长度限制\">#</a> 编辑框控件的长度限制</h2>\n<p>默认情况下编辑框控件的文本长度有限制，可以调用这个函数获取一下：</p>\n<p><code>UINT nLimitLen = m_Edit.GetLimitText();</code></p>\n<p>看到多少了吧？要解除这个限制呢，或者改成更大一些？</p>\n<p><code>m_Edit.SetLimitText(0);</code></p>\n<h2 id=\"向编辑框的结尾增加数据\"><a class=\"anchor\" href=\"#向编辑框的结尾增加数据\">#</a> 向编辑框的结尾增加数据</h2>\n<p>现在点击添加文本就会添加到已有文本的后面了。</p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<h2 id=\"始终显示最新的数据光标定位到文本结尾\"><a class=\"anchor\" href=\"#始终显示最新的数据光标定位到文本结尾\">#</a> 始终显示最新的数据（光标定位到文本结尾）</h2>\n<p>我们发现向文本框中写入文本时光标一直在最前方，不合逻辑。</p>\n<p>我们可以在每次输入完信息后，让光标定位到结尾。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">SetFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m_Edit2<span class=\"token punctuation\">.</span><span class=\"token function\">SetSel</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在  <code>EN_CHANGE</code>  消息处理函数最后加入以上两行代码就行了。</p>\n<h1 id=\"使用编辑框打开文件资源管理器\"><a class=\"anchor\" href=\"#使用编辑框打开文件资源管理器\">#</a> 使用编辑框打开文件资源管理器</h1>\n<p>这个涉及了  <code>CFileDialog</code>  类。</p>\n<pre><code class=\"language-cpp\">\n</code></pre>\n",
            "tags": [
                "Edit"
            ]
        }
    ]
}