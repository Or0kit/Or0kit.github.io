{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"静态链接库\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Bin/WindowsPE/%E9%9D%99%E6%80%81%E3%80%81%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93%E3%80%81%E5%8F%A5%E6%9F%84/",
            "url": "https://or0kit.github.io/Bin/WindowsPE/%E9%9D%99%E6%80%81%E3%80%81%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93%E3%80%81%E5%8F%A5%E6%9F%84/",
            "title": "静态、动态链接库、句柄",
            "date_published": "2021-05-06T06:23:36.000Z",
            "content_html": "<h1 id=\"库的介绍\"><a class=\"anchor\" href=\"#库的介绍\">#</a> 库的介绍</h1>\n<p>库是写好的现有的，成熟的，可以复用的代码。现实中每个程序都要依赖很多基础的底层库，不可能每个人的代码都从零开始，因此库的存在意义非同寻常。</p>\n<p>本质上来说库是一种可执行代码的二进制形式，可以被操作系统载入内存执行。<br />\n库有两种：静态库（.a、.lib）和动态库（.so、.dll）<br />\nwindows 上对应的是.lib .dll<br />\nlinux 上对应的是.a .so</p>\n<p>超详细内容:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2luZy1scHMvcC83NzU3OTE5Lmh0bWw=\">https://www.cnblogs.com/king-lps/p/7757919.html</span></p>\n<h1 id=\"代码复用的实现\"><a class=\"anchor\" href=\"#代码复用的实现\">#</a> 代码复用的实现</h1>\n<ol>\n<li>\n<p>静态链接库</p>\n</li>\n<li>\n<p>动态链接库</p>\n</li>\n<li>\n<p>使用.def 导出</p>\n</li>\n</ol>\n<h1 id=\"静态链接库\"><a class=\"anchor\" href=\"#静态链接库\">#</a> 静态链接库</h1>\n<p>例子为滴水逆向教程中的。</p>\n<h2 id=\"vc60创建静态链接库\"><a class=\"anchor\" href=\"#vc60创建静态链接库\">#</a> VC6.0 创建静态链接库</h2>\n<ol>\n<li>在 VC6 中创建项目：Win32 Static Library</li>\n</ol>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>在项目中创建两个文件：xxx.h 和 xxx.cpp</li>\n</ol>\n<p>xxx.h 文件：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token operator\">!</span><span class=\"token function\">defined</span><span class=\"token punctuation\">(</span>AFX_TEST_H__DB32E837_3E66_4BE7_B873_C079BC621AF0__INCLUDED_<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">AFX_TEST_H__DB32E837_3E66_4BE7_B873_C079BC621AF0__INCLUDED_</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">_MSC_VER <span class=\"token operator\">></span> <span class=\"token number\">1000</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// _MSC_VER > 1000</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Sub</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Mul</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Div</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr></table></figure><p>xxx.cpp 文件：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">return</span> x<span class=\"token operator\">+</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Sub</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> x<span class=\"token operator\">-</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Mul</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token operator\">*</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">Div</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">return</span> x<span class=\"token operator\">/</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>编译</li>\n</ol>\n<h2 id=\"使用静态链接库\"><a class=\"anchor\" href=\"#使用静态链接库\">#</a> 使用静态链接库</h2>\n<p>方式一：</p>\n<p>将 xxx.h 和 xxx.lib 复制到要使用的项目中</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>在需要使用的文件中包含：#include &quot;xxx.h&quot;</p>\n<p>在需要使用的文件中包含：#pragma comment (lib, &quot;xxx.lib&quot;)</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>方式二：</p>\n<p>将 xxx.h 和 xxx.lib 复制到要使用的项目中</p>\n<p>在需要使用的文件中包含：#include &quot;xxx.h&quot;</p>\n<p>需要让编译器自己 LINK&quot;lib 库&quot;<br />\n<img data-src=\"image005.png\" alt=\"\" /><br />\n<img data-src=\"image006.png\" alt=\"\" /><br />\n<img data-src=\"image007.png\" alt=\"\" /></p>\n<h1 id=\"动态链接库\"><a class=\"anchor\" href=\"#动态链接库\">#</a> 动态链接库</h1>\n<h2 id=\"创建dll\"><a class=\"anchor\" href=\"#创建dll\">#</a> 创建 DLL</h2>\n<ol>\n<li>\n<p>在 VC6 中创建项目：win32 Dynamic-link library</p>\n</li>\n<li>\n<p>源文件中：</p>\n</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __stdcall <span class=\"token function\">Plus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">return</span> x<span class=\"token operator\">+</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> __stdcall <span class=\"token function\">Sub</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> x<span class=\"token operator\">-</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> __stdcall <span class=\"token function\">Mul</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">return</span> x<span class=\"token operator\">*</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">int</span> __stdcall <span class=\"token function\">Div</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">return</span> x<span class=\"token operator\">/</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>头文件中</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">_declspec</span><span class=\"token punctuation\">(</span>dllexport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Plus</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">_declspec</span><span class=\"token punctuation\">(</span>dllexport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Sub</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">_declspec</span><span class=\"token punctuation\">(</span>dllexport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Mul</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">_declspec</span><span class=\"token punctuation\">(</span>dllexport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Div</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>编译</li>\n</ol>\n<p>说明:</p>\n<p>1、extern 表示这是个全局函数，可以供各个其他的函数调用；</p>\n<p>2、&quot;C&quot; 按照 C 语言的方式进行编译、链接； __declspec (dllexport) 告诉编译器此函数为导出函数；__stdcall 是为了保持导出与导入时函数调用规则一致，要么都加，要么都不加。</p>\n<h2 id=\"使用dll\"><a class=\"anchor\" href=\"#使用dll\">#</a> 使用 DLL</h2>\n<h3 id=\"方式一隐式连接\"><a class=\"anchor\" href=\"#方式一隐式连接\">#</a> 方式一：隐式连接</h3>\n<p>步骤 1：将 *.dll  *.lib 放到工程目录下面</p>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<p>步骤 2：将 #pragma comment (lib,&quot;DLL 名.lib&quot;) 添加到调用文件中</p>\n<p>步骤 3：加入函数的声明</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>dllimport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Plus</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>dllimport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Sub</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>dllimport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Mul</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">__declspec</span><span class=\"token punctuation\">(</span>dllimport<span class=\"token punctuation\">)</span> __stdcall <span class=\"token keyword\">int</span> <span class=\"token function\">Div</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>说明：</p>\n<p>__declspec (dllimport) 告诉编译器此函数为导入函数；</p>\n<p>结果：</p>\n<p><img data-src=\"image009.png\" alt=\"\" /></p>\n<h3 id=\"方式二显示连接\"><a class=\"anchor\" href=\"#方式二显示连接\">#</a> 方式二：显示连接</h3>\n<p>步骤 1： // 定义函数指针</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>__stdcall <span class=\"token operator\">*</span>lpPlus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>__stdcall <span class=\"token operator\">*</span>lpSub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>__stdcall <span class=\"token operator\">*</span>lpMul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">(</span>__stdcall <span class=\"token operator\">*</span>lpDiv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>步骤 2：  // 声明函数指针变量</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>lpPlus myPlus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>lpSub mySub<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>lpMul myMul<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>lpDiv myDiv<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>步骤 3：  //\t// 动态加载 dll 到内存中</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HINSTANCE   hModule <span class=\"token operator\">=</span> <span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dll名.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>步骤 4：  // 获取函数地址</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>myPlus <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>lpPlus<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span>hModule<span class=\"token punctuation\">,</span>   <span class=\"token string\">\"函数名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tmySub <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>lpSub<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span>hModule<span class=\"token punctuation\">,</span>   <span class=\"token string\">\"函数名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tmyMul <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>lpMul<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span>hModule<span class=\"token punctuation\">,</span>   <span class=\"token string\">\"函数名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tmyDiv <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>lpDiv<span class=\"token punctuation\">)</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span>hModule<span class=\"token punctuation\">,</span>   <span class=\"token string\">\"函数名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>步骤 5：\t// 调用函数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token function\">myPlus</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token function\">mySub</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token function\">myMul</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> <span class=\"token function\">myDiv</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><span class=\"label danger\">💔注意</span></p>\n<p><mark>关于在 DLL 中的函数名</mark></p>\n<p>其实取决于函数名是否更改的关键在于 两个函数转变字__stdcall 和__cdecl<br />\n 如果你用了__stdcall 那 dll 中的函数就会在函数名前加 &quot;-&quot;, 函数名后加 &quot;@x&quot;<br />\n 而__cdecl 则不会将函数改名，因为__cdecl 是函数缺省的状态，所以只要将<br />\n__stdcall 在你的函数声明中去掉就可以了，更详细的区别可以参阅 msdn 中<br />\n的内容。</p>\n<p>结果：</p>\n<p><img data-src=\"image010.png\" alt=\"\" /></p>\n<h1 id=\"句柄\"><a class=\"anchor\" href=\"#句柄\">#</a> 句柄</h1>\n<p>Handle 是代表系统的内核对象，如文件句柄，线程句柄，进程句柄。</p>\n<p>HMODULE 是代表应用程序载入的模块</p>\n<p>HINSTANCE 在 win32 下与 HMODULE 是相同的东西 Win16 遗留</p>\n<p>HWND 是窗口句柄</p>\n<p>其实就是一个无符号整型 (四个字节),Windows 之所以这样设计有 2 个目的：</p>\n<ol>\n<li>\n<p>可读性更好</p>\n</li>\n<li>\n<p>避免在无意中进行运算</p>\n</li>\n</ol>\n",
            "tags": [
                "静态链接库",
                "动态链接库",
                "句柄"
            ]
        }
    ]
}