{
    "version": "https://jsonfeed.org/version/1",
    "title": "Or0kit • All posts by \"map容器\" tag",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Or0kit.github.io",
    "items": [
        {
            "id": "https://or0kit.github.io/Programming/STL/STL/",
            "url": "https://or0kit.github.io/Programming/STL/STL/",
            "title": "STL",
            "date_published": "2022-04-15T07:35:48.000Z",
            "content_html": "<h1 id=\"stl\"><a class=\"anchor\" href=\"#stl\">#</a> STL</h1>\n<p>C++ 进阶学习 STL。</p>\n<h2 id=\"stl-概述\"><a class=\"anchor\" href=\"#stl-概述\">#</a> STL 概述</h2>\n<h3 id=\"什么是stl\"><a class=\"anchor\" href=\"#什么是stl\">#</a> 什么是 STL</h3>\n<p>STL（Standard Template Library ），即标准模板库，是一个具有工业强度的，高效的 C++ 程序库；它被容纳于 C++ 标准程序库（ C++ Standard Library ）中，是 ANSI/ISO C++ 标准中最新的也是极具革命性的一部分；该库包含了诸多在计算机科学领域里所常用的基本数据结构和基本算法，为广大 C++ 程序员们提供了一个可扩展的应用框架， 高度体现了软件的可复用性。</p>\n<p>STL 是最新的 C++ 标准函数库中的一个子集，这个庞大的子集占据了整个库的大约 80% 的份量。</p>\n<h3 id=\"stl基本组件\"><a class=\"anchor\" href=\"#stl基本组件\">#</a> STL 基本组件</h3>\n<p>STL 主要由容器，迭代器和算法组成。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p><strong>容器：</strong> 可容纳各种数据类型的数据结构；</p>\n<p><strong>迭代器：</strong> 可依次存取容器中元素的东西；</p>\n<p><strong>算法：</strong> 用来操作容器中的元素的函数模版。例如，STL 用 sort () 来对一个 vector 中的数据进行排序。</p>\n<p>举例说明：数组  <code>int array[100]</code>  就是一个容器，而 <code>int*</code>  类型的指针就可以作为迭代器，可以为这个容器编写一个排序算法。</p>\n<h2 id=\"vector容器\"><a class=\"anchor\" href=\"#vector容器\">#</a> Vector 容器</h2>\n<h3 id=\"什么是vector容器\"><a class=\"anchor\" href=\"#什么是vector容器\">#</a> 什么是 Vector 容器</h3>\n<p>Vector（向量）是一个封装了动态大小数组的顺序容器；跟任意其它类型容器一样，它能够存放各种类型的对象；Vector 是用动态数组来实现的。</p>\n<p>在使用 Vector 的时候需要包含头文件和使用命名空间：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Vector 支持随机存取，它有大小（size）和容量（capacity）两个属性，大小（size）就是实际元素的个数，容量（capacity）表示能容纳元素最大的数量，如果插入元素时，元素个数超过容量大小，则需要重新配置内部存储器。</p>\n<h3 id=\"使用vector容器\"><a class=\"anchor\" href=\"#使用vector容器\">#</a> 使用 Vector 容器</h3>\n<h4 id=\"创建容器\"><a class=\"anchor\" href=\"#创建容器\">#</a> 创建容器</h4>\n<h4 id=\"添加元素\"><a class=\"anchor\" href=\"#添加元素\">#</a> 添加元素</h4>\n<h4 id=\"删除元素\"><a class=\"anchor\" href=\"#删除元素\">#</a> 删除元素</h4>\n",
            "tags": [
                "STL",
                "Vector容器",
                "Deque容器",
                "List容器",
                "Set容器",
                "Multiset容器",
                "Map容器",
                "Multimap容器",
                "Stack容器",
                "Queue容器",
                "STL算法",
                "STL迭代器"
            ]
        }
    ]
}